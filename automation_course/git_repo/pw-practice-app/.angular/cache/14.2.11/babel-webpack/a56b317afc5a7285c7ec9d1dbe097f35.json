{"ast":null,"code":"import _objectSpread from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _defineProperty from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _get from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _assertThisInitialized from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport _classCallCheck from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Component, ChangeDetectionStrategy, Injector, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i5 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i4 from '@nebular/theme';\nimport { NB_WINDOW, NbLayoutModule, NbCardModule, NbCheckboxModule, NbAlertModule, NbInputModule, NbButtonModule, NbIconModule } from '@nebular/theme';\nimport { BehaviorSubject, of, Subject } from 'rxjs';\nimport { filter, share, map, switchMap, delay, catchError, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpResponse, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nvar _c0 = [\"*\"];\n\nfunction NbLoginComponent_nb_alert_4_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var error_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(error_r10);\n  }\n}\n\nfunction NbLoginComponent_nb_alert_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 22)(1, \"p\", 23)(2, \"b\");\n    i0.ɵɵtext(3, \"Oh snap!\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ul\", 24);\n    i0.ɵɵtemplate(5, NbLoginComponent_nb_alert_4_li_5_Template, 2, 1, \"li\", 25);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.errors);\n  }\n}\n\nfunction NbLoginComponent_nb_alert_5_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var message_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r12);\n  }\n}\n\nfunction NbLoginComponent_nb_alert_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 27)(1, \"p\", 23)(2, \"b\");\n    i0.ɵɵtext(3, \"Hooray!\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ul\", 24);\n    i0.ɵɵtemplate(5, NbLoginComponent_nb_alert_5_li_5_Template, 2, 1, \"li\", 25);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.messages);\n  }\n}\n\nfunction NbLoginComponent_ng_container_13_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Email is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbLoginComponent_ng_container_13_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Email should be the real one! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbLoginComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbLoginComponent_ng_container_13_p_1_Template, 2, 0, \"p\", 28);\n    i0.ɵɵtemplate(2, NbLoginComponent_ng_container_13_p_2_Template, 2, 0, \"p\", 28);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    var _r3 = i0.ɵɵreference(12);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors.pattern);\n  }\n}\n\nfunction NbLoginComponent_ng_container_22_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Password is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbLoginComponent_ng_container_22_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Password should contain from \", ctx_r16.getConfigValue(\"forms.validation.password.minLength\"), \" to \", ctx_r16.getConfigValue(\"forms.validation.password.maxLength\"), \" characters \");\n  }\n}\n\nfunction NbLoginComponent_ng_container_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbLoginComponent_ng_container_22_p_1_Template, 2, 0, \"p\", 28);\n    i0.ɵɵtemplate(2, NbLoginComponent_ng_container_22_p_2_Template, 2, 2, \"p\", 28);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    var _r5 = i0.ɵɵreference(21);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors == null ? null : _r5.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (_r5.errors == null ? null : _r5.errors.minlength) || (_r5.errors == null ? null : _r5.errors.maxlength));\n  }\n}\n\nfunction NbLoginComponent_nb_checkbox_24_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nb-checkbox\", 30);\n    i0.ɵɵlistener(\"ngModelChange\", function NbLoginComponent_nb_checkbox_24_Template_nb_checkbox_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      var ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.user.rememberMe = $event);\n    });\n    i0.ɵɵtext(1, \"Remember me\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r7.user.rememberMe);\n  }\n}\n\nfunction NbLoginComponent_section_27_ng_container_3_a_1_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nb-icon\", 39);\n  }\n\n  if (rf & 2) {\n    var socialLink_r20 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"icon\", socialLink_r20.icon);\n  }\n}\n\nfunction NbLoginComponent_section_27_ng_container_3_a_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var socialLink_r20 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵtextInterpolate(socialLink_r20.title);\n  }\n}\n\nfunction NbLoginComponent_section_27_ng_container_3_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 36);\n    i0.ɵɵtemplate(1, NbLoginComponent_section_27_ng_container_3_a_1_nb_icon_1_Template, 1, 1, \"nb-icon\", 37);\n    i0.ɵɵtemplate(2, NbLoginComponent_section_27_ng_container_3_a_1_ng_template_2_Template, 1, 1, \"ng-template\", null, 38, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r24 = i0.ɵɵreference(3);\n\n    var socialLink_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵclassProp(\"with-icon\", socialLink_r20.icon);\n    i0.ɵɵproperty(\"routerLink\", socialLink_r20.link);\n    i0.ɵɵattribute(\"target\", socialLink_r20.target)(\"class\", socialLink_r20.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r20.icon)(\"ngIfElse\", _r24);\n  }\n}\n\nfunction NbLoginComponent_section_27_ng_container_3_a_2_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nb-icon\", 39);\n  }\n\n  if (rf & 2) {\n    var socialLink_r20 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"icon\", socialLink_r20.icon);\n  }\n}\n\nfunction NbLoginComponent_section_27_ng_container_3_a_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var socialLink_r20 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵtextInterpolate(socialLink_r20.title);\n  }\n}\n\nfunction NbLoginComponent_section_27_ng_container_3_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\");\n    i0.ɵɵtemplate(1, NbLoginComponent_section_27_ng_container_3_a_2_nb_icon_1_Template, 1, 1, \"nb-icon\", 37);\n    i0.ɵɵtemplate(2, NbLoginComponent_section_27_ng_container_3_a_2_ng_template_2_Template, 1, 1, \"ng-template\", null, 38, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r30 = i0.ɵɵreference(3);\n\n    var socialLink_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵclassProp(\"with-icon\", socialLink_r20.icon);\n    i0.ɵɵattribute(\"href\", socialLink_r20.url, i0.ɵɵsanitizeUrl)(\"target\", socialLink_r20.target)(\"class\", socialLink_r20.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r20.icon)(\"ngIfElse\", _r30);\n  }\n}\n\nfunction NbLoginComponent_section_27_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbLoginComponent_section_27_ng_container_3_a_1_Template, 4, 7, \"a\", 34);\n    i0.ɵɵtemplate(2, NbLoginComponent_section_27_ng_container_3_a_2_Template, 4, 7, \"a\", 35);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var socialLink_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r20.link);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r20.url);\n  }\n}\n\nfunction NbLoginComponent_section_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 31);\n    i0.ɵɵtext(1, \" or enter with: \");\n    i0.ɵɵelementStart(2, \"div\", 32);\n    i0.ɵɵtemplate(3, NbLoginComponent_section_27_ng_container_3_Template, 3, 2, \"ng-container\", 33);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.socialLinks);\n  }\n}\n\nfunction NbRegisterComponent_nb_alert_2_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var error_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(error_r14);\n  }\n}\n\nfunction NbRegisterComponent_nb_alert_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 24)(1, \"p\", 25)(2, \"b\");\n    i0.ɵɵtext(3, \"Oh snap!\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ul\", 26);\n    i0.ɵɵtemplate(5, NbRegisterComponent_nb_alert_2_li_5_Template, 2, 1, \"li\", 27);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.errors);\n  }\n}\n\nfunction NbRegisterComponent_nb_alert_3_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var message_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r16);\n  }\n}\n\nfunction NbRegisterComponent_nb_alert_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 29)(1, \"p\", 25)(2, \"b\");\n    i0.ɵɵtext(3, \"Hooray!\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ul\", 26);\n    i0.ɵɵtemplate(5, NbRegisterComponent_nb_alert_3_li_5_Template, 2, 1, \"li\", 27);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.messages);\n  }\n}\n\nfunction NbRegisterComponent_ng_container_11_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1, \" Full name is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRegisterComponent_ng_container_11_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Full name should contains from \", ctx_r18.getConfigValue(\"forms.validation.fullName.minLength\"), \" to \", ctx_r18.getConfigValue(\"forms.validation.fullName.maxLength\"), \" characters \");\n  }\n}\n\nfunction NbRegisterComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbRegisterComponent_ng_container_11_p_1_Template, 2, 0, \"p\", 30);\n    i0.ɵɵtemplate(2, NbRegisterComponent_ng_container_11_p_2_Template, 2, 2, \"p\", 30);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    var _r3 = i0.ɵɵreference(10);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (_r3.errors == null ? null : _r3.errors.minlength) || (_r3.errors == null ? null : _r3.errors.maxlength));\n  }\n}\n\nfunction NbRegisterComponent_ng_container_17_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1, \" Email is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRegisterComponent_ng_container_17_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1, \" Email should be the real one! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRegisterComponent_ng_container_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbRegisterComponent_ng_container_17_p_1_Template, 2, 0, \"p\", 30);\n    i0.ɵɵtemplate(2, NbRegisterComponent_ng_container_17_p_2_Template, 2, 0, \"p\", 30);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    var _r5 = i0.ɵɵreference(16);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors == null ? null : _r5.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors == null ? null : _r5.errors.pattern);\n  }\n}\n\nfunction NbRegisterComponent_ng_container_23_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1, \" Password is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRegisterComponent_ng_container_23_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Password should contain from \", ctx_r22.getConfigValue(\"forms.validation.password.minLength\"), \" to \", ctx_r22.getConfigValue(\"forms.validation.password.maxLength\"), \" characters \");\n  }\n}\n\nfunction NbRegisterComponent_ng_container_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbRegisterComponent_ng_container_23_p_1_Template, 2, 0, \"p\", 30);\n    i0.ɵɵtemplate(2, NbRegisterComponent_ng_container_23_p_2_Template, 2, 2, \"p\", 30);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    var _r7 = i0.ɵɵreference(22);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r7.errors == null ? null : _r7.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (_r7.errors == null ? null : _r7.errors.minlength) || (_r7.errors == null ? null : _r7.errors.maxlength));\n  }\n}\n\nfunction NbRegisterComponent_ng_container_29_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1, \" Password confirmation is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRegisterComponent_ng_container_29_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1, \" Password does not match the confirm password. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRegisterComponent_ng_container_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbRegisterComponent_ng_container_29_p_1_Template, 2, 0, \"p\", 30);\n    i0.ɵɵtemplate(2, NbRegisterComponent_ng_container_29_p_2_Template, 2, 0, \"p\", 30);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    var _r9 = i0.ɵɵreference(28);\n\n    var _r7 = i0.ɵɵreference(22);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r9.errors == null ? null : _r9.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r7.value != _r9.value && !(_r9.errors == null ? null : _r9.errors.required));\n  }\n}\n\nfunction NbRegisterComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"nb-checkbox\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function NbRegisterComponent_div_30_Template_nb_checkbox_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      var ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.user.terms = $event);\n    });\n    i0.ɵɵtext(2, \" Agree to \");\n    i0.ɵɵelementStart(3, \"a\", 34)(4, \"strong\");\n    i0.ɵɵtext(5, \"Terms & Conditions\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    var ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r11.user.terms)(\"required\", ctx_r11.getConfigValue(\"forms.register.terms\"));\n  }\n}\n\nfunction NbRegisterComponent_section_33_ng_container_3_a_1_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nb-icon\", 43);\n  }\n\n  if (rf & 2) {\n    var socialLink_r28 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"icon\", socialLink_r28.icon);\n  }\n}\n\nfunction NbRegisterComponent_section_33_ng_container_3_a_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var socialLink_r28 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵtextInterpolate(socialLink_r28.title);\n  }\n}\n\nfunction NbRegisterComponent_section_33_ng_container_3_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 40);\n    i0.ɵɵtemplate(1, NbRegisterComponent_section_33_ng_container_3_a_1_nb_icon_1_Template, 1, 1, \"nb-icon\", 41);\n    i0.ɵɵtemplate(2, NbRegisterComponent_section_33_ng_container_3_a_1_ng_template_2_Template, 1, 1, \"ng-template\", null, 42, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r32 = i0.ɵɵreference(3);\n\n    var socialLink_r28 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵclassProp(\"with-icon\", socialLink_r28.icon);\n    i0.ɵɵproperty(\"routerLink\", socialLink_r28.link);\n    i0.ɵɵattribute(\"target\", socialLink_r28.target)(\"class\", socialLink_r28.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r28.icon)(\"ngIfElse\", _r32);\n  }\n}\n\nfunction NbRegisterComponent_section_33_ng_container_3_a_2_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nb-icon\", 43);\n  }\n\n  if (rf & 2) {\n    var socialLink_r28 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"icon\", socialLink_r28.icon);\n  }\n}\n\nfunction NbRegisterComponent_section_33_ng_container_3_a_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var socialLink_r28 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵtextInterpolate(socialLink_r28.title);\n  }\n}\n\nfunction NbRegisterComponent_section_33_ng_container_3_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\");\n    i0.ɵɵtemplate(1, NbRegisterComponent_section_33_ng_container_3_a_2_nb_icon_1_Template, 1, 1, \"nb-icon\", 41);\n    i0.ɵɵtemplate(2, NbRegisterComponent_section_33_ng_container_3_a_2_ng_template_2_Template, 1, 1, \"ng-template\", null, 42, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r38 = i0.ɵɵreference(3);\n\n    var socialLink_r28 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵclassProp(\"with-icon\", socialLink_r28.icon);\n    i0.ɵɵattribute(\"href\", socialLink_r28.url, i0.ɵɵsanitizeUrl)(\"target\", socialLink_r28.target)(\"class\", socialLink_r28.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r28.icon)(\"ngIfElse\", _r38);\n  }\n}\n\nfunction NbRegisterComponent_section_33_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbRegisterComponent_section_33_ng_container_3_a_1_Template, 4, 7, \"a\", 38);\n    i0.ɵɵtemplate(2, NbRegisterComponent_section_33_ng_container_3_a_2_Template, 4, 7, \"a\", 39);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var socialLink_r28 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r28.link);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r28.url);\n  }\n}\n\nfunction NbRegisterComponent_section_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 35);\n    i0.ɵɵtext(1, \" or enter with: \");\n    i0.ɵɵelementStart(2, \"div\", 36);\n    i0.ɵɵtemplate(3, NbRegisterComponent_section_33_ng_container_3_Template, 3, 2, \"ng-container\", 37);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.socialLinks);\n  }\n}\n\nfunction NbRequestPasswordComponent_nb_alert_4_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var error_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(error_r6);\n  }\n}\n\nfunction NbRequestPasswordComponent_nb_alert_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 15)(1, \"p\", 16)(2, \"b\");\n    i0.ɵɵtext(3, \"Oh snap!\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ul\", 17);\n    i0.ɵɵtemplate(5, NbRequestPasswordComponent_nb_alert_4_li_5_Template, 2, 1, \"li\", 18);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.errors);\n  }\n}\n\nfunction NbRequestPasswordComponent_nb_alert_5_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var message_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r8);\n  }\n}\n\nfunction NbRequestPasswordComponent_nb_alert_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 20)(1, \"p\", 16)(2, \"b\");\n    i0.ɵɵtext(3, \"Hooray!\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ul\", 17);\n    i0.ɵɵtemplate(5, NbRequestPasswordComponent_nb_alert_5_li_5_Template, 2, 1, \"li\", 18);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.messages);\n  }\n}\n\nfunction NbRequestPasswordComponent_ng_container_13_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 22);\n    i0.ɵɵtext(1, \" Email is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRequestPasswordComponent_ng_container_13_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 22);\n    i0.ɵɵtext(1, \" Email should be the real one! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRequestPasswordComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbRequestPasswordComponent_ng_container_13_p_1_Template, 2, 0, \"p\", 21);\n    i0.ɵɵtemplate(2, NbRequestPasswordComponent_ng_container_13_p_2_Template, 2, 0, \"p\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    var _r3 = i0.ɵɵreference(12);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors.pattern);\n  }\n}\n\nfunction NbResetPasswordComponent_nb_alert_4_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var error_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(error_r8);\n  }\n}\n\nfunction NbResetPasswordComponent_nb_alert_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 19)(1, \"p\", 20)(2, \"b\");\n    i0.ɵɵtext(3, \"Oh snap!\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ul\", 21);\n    i0.ɵɵtemplate(5, NbResetPasswordComponent_nb_alert_4_li_5_Template, 2, 1, \"li\", 22);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.errors);\n  }\n}\n\nfunction NbResetPasswordComponent_nb_alert_5_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var message_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r10);\n  }\n}\n\nfunction NbResetPasswordComponent_nb_alert_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 24)(1, \"p\", 20)(2, \"b\");\n    i0.ɵɵtext(3, \"Hooray!\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ul\", 21);\n    i0.ɵɵtemplate(5, NbResetPasswordComponent_nb_alert_5_li_5_Template, 2, 1, \"li\", 22);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.messages);\n  }\n}\n\nfunction NbResetPasswordComponent_ng_container_13_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1, \" Password is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbResetPasswordComponent_ng_container_13_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Password should contains from \", ctx_r12.getConfigValue(\"forms.validation.password.minLength\"), \" to \", ctx_r12.getConfigValue(\"forms.validation.password.maxLength\"), \" characters \");\n  }\n}\n\nfunction NbResetPasswordComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbResetPasswordComponent_ng_container_13_p_1_Template, 2, 0, \"p\", 25);\n    i0.ɵɵtemplate(2, NbResetPasswordComponent_ng_container_13_p_2_Template, 2, 2, \"p\", 25);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    var _r3 = i0.ɵɵreference(12);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (_r3.errors == null ? null : _r3.errors.minlength) || (_r3.errors == null ? null : _r3.errors.maxlength));\n  }\n}\n\nfunction NbResetPasswordComponent_ng_container_19_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1, \" Password confirmation is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbResetPasswordComponent_ng_container_19_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1, \" Password does not match the confirm password. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbResetPasswordComponent_ng_container_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbResetPasswordComponent_ng_container_19_p_1_Template, 2, 0, \"p\", 25);\n    i0.ɵɵtemplate(2, NbResetPasswordComponent_ng_container_19_p_2_Template, 2, 0, \"p\", 25);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    var _r5 = i0.ɵɵreference(18);\n\n    var _r3 = i0.ɵɵreference(12);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.invalid && (_r5.errors == null ? null : _r5.errors.required));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.value != _r5.value && !(_r5.errors == null ? null : _r5.errors.required));\n  }\n}\n\nvar _c1 = \"[_nghost-%COMP%]   .form-group[_ngcontent-%COMP%]:last-of-type{margin-bottom:3rem}\";\nvar socialLinks = [];\nvar defaultAuthOptions = {\n  strategies: [],\n  forms: {\n    login: {\n      redirectDelay: 500,\n      strategy: 'email',\n      rememberMe: true,\n      showMessages: {\n        success: true,\n        error: true\n      },\n      socialLinks: socialLinks // social links at the bottom of a page\n\n    },\n    register: {\n      redirectDelay: 500,\n      strategy: 'email',\n      showMessages: {\n        success: true,\n        error: true\n      },\n      terms: true,\n      socialLinks: socialLinks\n    },\n    requestPassword: {\n      redirectDelay: 500,\n      strategy: 'email',\n      showMessages: {\n        success: true,\n        error: true\n      },\n      socialLinks: socialLinks\n    },\n    resetPassword: {\n      redirectDelay: 500,\n      strategy: 'email',\n      showMessages: {\n        success: true,\n        error: true\n      },\n      socialLinks: socialLinks\n    },\n    logout: {\n      redirectDelay: 500,\n      strategy: 'email'\n    },\n    validation: {\n      password: {\n        required: true,\n        minLength: 4,\n        maxLength: 50\n      },\n      email: {\n        required: true\n      },\n      fullName: {\n        required: false,\n        minLength: 4,\n        maxLength: 50\n      }\n    }\n  }\n};\nvar NB_AUTH_OPTIONS = new InjectionToken('Nebular Auth Options');\nvar NB_AUTH_USER_OPTIONS = new InjectionToken('Nebular User Auth Options');\nvar NB_AUTH_STRATEGIES = new InjectionToken('Nebular Auth Strategies');\nvar NB_AUTH_TOKENS = new InjectionToken('Nebular Auth Tokens');\nvar NB_AUTH_INTERCEPTOR_HEADER = new InjectionToken('Nebular Simple Interceptor Header');\nvar NB_AUTH_TOKEN_INTERCEPTOR_FILTER = new InjectionToken('Nebular Interceptor Filter');\n/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\n\nvar deepExtend = function deepExtend() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  if (arguments.length < 1 || typeof arguments[0] !== 'object') {\n    return false;\n  }\n\n  if (arguments.length < 2) {\n    return arguments[0];\n  }\n\n  var target = arguments[0]; // convert arguments to array and cut off target object\n\n  var args = Array.prototype.slice.call(arguments, 1);\n  var val, src;\n  args.forEach(function (obj) {\n    // skip argument if it is array or isn't object\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\n      return;\n    }\n\n    Object.keys(obj).forEach(function (key) {\n      src = target[key]; // source value\n\n      val = obj[key]; // new value\n      // recursion prevention\n\n      if (val === target) {\n        return;\n        /**\n         * if new value isn't object then just overwrite by new value\n         * instead of extending.\n         */\n      } else if (typeof val !== 'object' || val === null) {\n        target[key] = val;\n        return; // just clone arrays (and recursive clone objects inside)\n      } else if (Array.isArray(val)) {\n        target[key] = deepCloneArray(val);\n        return; // custom cloning and overwrite for specific objects\n      } else if (isSpecificValue(val)) {\n        target[key] = cloneSpecificValue(val);\n        return; // overwrite by new value if source isn't object or array\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n        target[key] = deepExtend({}, val);\n        return; // source value and new value is objects both, extending...\n      } else {\n        target[key] = deepExtend(src, val);\n        return;\n      }\n    });\n  });\n  return target;\n};\n\nfunction isSpecificValue(val) {\n  return val instanceof Date || val instanceof RegExp ? true : false;\n}\n\nfunction cloneSpecificValue(val) {\n  if (val instanceof Date) {\n    return new Date(val.getTime());\n  } else if (val instanceof RegExp) {\n    return new RegExp(val);\n  } else {\n    throw new Error('cloneSpecificValue: Unexpected situation');\n  }\n}\n/**\n * Recursive cloning array.\n */\n\n\nfunction deepCloneArray(arr) {\n  var clone = [];\n  arr.forEach(function (item, index) {\n    if (typeof item === 'object' && item !== null) {\n      if (Array.isArray(item)) {\n        clone[index] = deepCloneArray(item);\n      } else if (isSpecificValue(item)) {\n        clone[index] = cloneSpecificValue(item);\n      } else {\n        clone[index] = deepExtend({}, item);\n      }\n    } else {\n      clone[index] = item;\n    }\n  });\n  return clone;\n} // getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\n\n\nfunction getDeepFromObject() {\n  var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var name = arguments.length > 1 ? arguments[1] : undefined;\n  var defaultValue = arguments.length > 2 ? arguments[2] : undefined;\n  var keys = name.split('.'); // clone the object\n\n  var level = deepExtend({}, object || {});\n  keys.forEach(function (k) {\n    if (level && typeof level[k] !== 'undefined') {\n      level = level[k];\n    } else {\n      level = undefined;\n    }\n  });\n  return typeof level === 'undefined' ? defaultValue : level;\n}\n\nfunction urlBase64Decode(str) {\n  var output = str.replace(/-/g, '+').replace(/_/g, '/');\n\n  switch (output.length % 4) {\n    case 0:\n      {\n        break;\n      }\n\n    case 2:\n      {\n        output += '==';\n        break;\n      }\n\n    case 3:\n      {\n        output += '=';\n        break;\n      }\n\n    default:\n      {\n        throw new Error('Illegal base64url string!');\n      }\n  }\n\n  return b64DecodeUnicode(output);\n}\n\nfunction b64decode(str) {\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  var output = '';\n  str = String(str).replace(/=+$/, '');\n\n  if (str.length % 4 === 1) {\n    throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n\n  for ( // initialize result and counters\n  var bc = 0, bs, buffer, idx = 0; // get next character\n  buffer = str.charAt(idx++); // character found in table? initialize bit storage and add its ascii value;\n  ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, // and if not first of each 4 characters,\n  // convert the first 8 bits to one ascii character\n  bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n\n  return output;\n} // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\n\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(Array.prototype.map.call(b64decode(str), function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n}\n\nvar NbAuthToken = /*#__PURE__*/function () {\n  function NbAuthToken() {\n    _classCallCheck(this, NbAuthToken);\n\n    this.payload = null;\n  }\n\n  _createClass(NbAuthToken, [{\n    key: \"getName\",\n    value: function getName() {\n      return this.constructor.NAME;\n    }\n  }, {\n    key: \"getPayload\",\n    value: function getPayload() {\n      return this.payload;\n    }\n  }]);\n\n  return NbAuthToken;\n}();\n\nvar NbAuthTokenNotFoundError = /*#__PURE__*/function (_Error) {\n  _inherits(NbAuthTokenNotFoundError, _Error);\n\n  var _super = _createSuper(NbAuthTokenNotFoundError);\n\n  function NbAuthTokenNotFoundError(message) {\n    var _this;\n\n    _classCallCheck(this, NbAuthTokenNotFoundError);\n\n    _this = _super.call(this, message);\n    Object.setPrototypeOf(_assertThisInitialized(_this), (this instanceof NbAuthTokenNotFoundError ? this.constructor : void 0).prototype);\n    return _this;\n  }\n\n  return _createClass(NbAuthTokenNotFoundError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar NbAuthIllegalTokenError = /*#__PURE__*/function (_Error2) {\n  _inherits(NbAuthIllegalTokenError, _Error2);\n\n  var _super2 = _createSuper(NbAuthIllegalTokenError);\n\n  function NbAuthIllegalTokenError(message) {\n    var _this2;\n\n    _classCallCheck(this, NbAuthIllegalTokenError);\n\n    _this2 = _super2.call(this, message);\n    Object.setPrototypeOf(_assertThisInitialized(_this2), (this instanceof NbAuthIllegalTokenError ? this.constructor : void 0).prototype);\n    return _this2;\n  }\n\n  return _createClass(NbAuthIllegalTokenError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar NbAuthEmptyTokenError = /*#__PURE__*/function (_NbAuthIllegalTokenEr) {\n  _inherits(NbAuthEmptyTokenError, _NbAuthIllegalTokenEr);\n\n  var _super3 = _createSuper(NbAuthEmptyTokenError);\n\n  function NbAuthEmptyTokenError(message) {\n    var _this3;\n\n    _classCallCheck(this, NbAuthEmptyTokenError);\n\n    _this3 = _super3.call(this, message);\n    Object.setPrototypeOf(_assertThisInitialized(_this3), (this instanceof NbAuthEmptyTokenError ? this.constructor : void 0).prototype);\n    return _this3;\n  }\n\n  return _createClass(NbAuthEmptyTokenError);\n}(NbAuthIllegalTokenError);\n\nvar NbAuthIllegalJWTTokenError = /*#__PURE__*/function (_NbAuthIllegalTokenEr2) {\n  _inherits(NbAuthIllegalJWTTokenError, _NbAuthIllegalTokenEr2);\n\n  var _super4 = _createSuper(NbAuthIllegalJWTTokenError);\n\n  function NbAuthIllegalJWTTokenError(message) {\n    var _this4;\n\n    _classCallCheck(this, NbAuthIllegalJWTTokenError);\n\n    _this4 = _super4.call(this, message);\n    Object.setPrototypeOf(_assertThisInitialized(_this4), (this instanceof NbAuthIllegalJWTTokenError ? this.constructor : void 0).prototype);\n    return _this4;\n  }\n\n  return _createClass(NbAuthIllegalJWTTokenError);\n}(NbAuthIllegalTokenError);\n\nfunction nbAuthCreateToken(tokenClass, token, ownerStrategyName, createdAt) {\n  return new tokenClass(token, ownerStrategyName, createdAt);\n}\n\nfunction decodeJwtPayload(payload) {\n  if (payload.length === 0) {\n    throw new NbAuthEmptyTokenError('Cannot extract from an empty payload.');\n  }\n\n  var parts = payload.split('.');\n\n  if (parts.length !== 3) {\n    throw new NbAuthIllegalJWTTokenError(\"The payload \".concat(payload, \" is not valid JWT payload and must consist of three parts.\"));\n  }\n\n  var decoded;\n\n  try {\n    decoded = urlBase64Decode(parts[1]);\n  } catch (e) {\n    throw new NbAuthIllegalJWTTokenError(\"The payload \".concat(payload, \" is not valid JWT payload and cannot be parsed.\"));\n  }\n\n  if (!decoded) {\n    throw new NbAuthIllegalJWTTokenError(\"The payload \".concat(payload, \" is not valid JWT payload and cannot be decoded.\"));\n  }\n\n  return JSON.parse(decoded);\n}\n/**\n * Wrapper for simple (text) token\n */\n\n\nvar NbAuthSimpleToken = /*#__PURE__*/function (_NbAuthToken) {\n  _inherits(NbAuthSimpleToken, _NbAuthToken);\n\n  var _super5 = _createSuper(NbAuthSimpleToken);\n\n  function NbAuthSimpleToken(token, ownerStrategyName, createdAt) {\n    var _this5;\n\n    _classCallCheck(this, NbAuthSimpleToken);\n\n    _this5 = _super5.call(this);\n    _this5.token = token;\n    _this5.ownerStrategyName = ownerStrategyName;\n    _this5.createdAt = createdAt;\n\n    try {\n      _this5.parsePayload();\n    } catch (err) {\n      if (!(err instanceof NbAuthTokenNotFoundError)) {\n        // token is present but has got a problem, including illegal\n        throw err;\n      }\n    }\n\n    _this5.createdAt = _this5.prepareCreatedAt(createdAt);\n    return _this5;\n  }\n\n  _createClass(NbAuthSimpleToken, [{\n    key: \"parsePayload\",\n    value: function parsePayload() {\n      this.payload = null;\n    }\n  }, {\n    key: \"prepareCreatedAt\",\n    value: function prepareCreatedAt(date) {\n      return date ? date : new Date();\n    }\n    /**\n     * Returns the token's creation date\n     * @returns {Date}\n     */\n\n  }, {\n    key: \"getCreatedAt\",\n    value: function getCreatedAt() {\n      return this.createdAt;\n    }\n    /**\n     * Returns the token value\n     * @returns string\n     */\n\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this.token;\n    }\n  }, {\n    key: \"getOwnerStrategyName\",\n    value: function getOwnerStrategyName() {\n      return this.ownerStrategyName;\n    }\n    /**\n     * Is non empty and valid\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return !!this.getValue();\n    }\n    /**\n     * Validate value and convert to string, if value is not valid return empty string\n     * @returns {string}\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return !!this.token ? this.token : '';\n    }\n  }]);\n\n  return NbAuthSimpleToken;\n}(NbAuthToken);\n\nNbAuthSimpleToken.NAME = 'nb:auth:simple:token';\n/**\n * Wrapper for JWT token with additional methods.\n */\n\nvar NbAuthJWTToken = /*#__PURE__*/function (_NbAuthSimpleToken) {\n  _inherits(NbAuthJWTToken, _NbAuthSimpleToken);\n\n  var _super6 = _createSuper(NbAuthJWTToken);\n\n  function NbAuthJWTToken() {\n    _classCallCheck(this, NbAuthJWTToken);\n\n    return _super6.apply(this, arguments);\n  }\n\n  _createClass(NbAuthJWTToken, [{\n    key: \"prepareCreatedAt\",\n    value:\n    /**\n     * for JWT token, the iat (issued at) field of the token payload contains the creation Date\n     */\n    function prepareCreatedAt(date) {\n      var decoded = this.getPayload();\n      return decoded && decoded.iat ? new Date(Number(decoded.iat) * 1000) : _get(_getPrototypeOf(NbAuthJWTToken.prototype), \"prepareCreatedAt\", this).call(this, date);\n    }\n    /**\n     * Returns payload object\n     * @returns any\n     */\n\n  }, {\n    key: \"parsePayload\",\n    value: function parsePayload() {\n      if (!this.token) {\n        throw new NbAuthTokenNotFoundError('Token not found. ');\n      }\n\n      this.payload = decodeJwtPayload(this.token);\n    }\n    /**\n     * Returns expiration date\n     * @returns Date\n     */\n\n  }, {\n    key: \"getTokenExpDate\",\n    value: function getTokenExpDate() {\n      var decoded = this.getPayload();\n\n      if (decoded && !decoded.hasOwnProperty('exp')) {\n        return null;\n      }\n\n      var date = new Date(0);\n      date.setUTCSeconds(decoded.exp); // 'cause jwt token are set in seconds\n\n      return date;\n    }\n    /**\n     * Is data expired\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return _get(_getPrototypeOf(NbAuthJWTToken.prototype), \"isValid\", this).call(this) && (!this.getTokenExpDate() || new Date() < this.getTokenExpDate());\n    }\n  }]);\n\n  return NbAuthJWTToken;\n}(NbAuthSimpleToken);\n\nNbAuthJWTToken.NAME = 'nb:auth:jwt:token';\n\nvar prepareOAuth2Token = function prepareOAuth2Token(data) {\n  if (typeof data === 'string') {\n    try {\n      return JSON.parse(data);\n    } catch (e) {}\n  }\n\n  return data;\n};\n/**\n * Wrapper for OAuth2 token whose access_token is a JWT Token\n */\n\n\nvar NbAuthOAuth2Token = /*#__PURE__*/function (_NbAuthSimpleToken2) {\n  _inherits(NbAuthOAuth2Token, _NbAuthSimpleToken2);\n\n  var _super7 = _createSuper(NbAuthOAuth2Token);\n\n  function NbAuthOAuth2Token() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ownerStrategyName = arguments.length > 1 ? arguments[1] : undefined;\n    var createdAt = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, NbAuthOAuth2Token);\n\n    // we may get it as string when retrieving from a storage\n    return _super7.call(this, prepareOAuth2Token(data), ownerStrategyName, createdAt);\n  }\n  /**\n   * Returns the token value\n   * @returns string\n   */\n\n\n  _createClass(NbAuthOAuth2Token, [{\n    key: \"getValue\",\n    value: function getValue() {\n      return this.token.access_token;\n    }\n    /**\n     * Returns the refresh token\n     * @returns string\n     */\n\n  }, {\n    key: \"getRefreshToken\",\n    value: function getRefreshToken() {\n      return this.token.refresh_token;\n    }\n    /**\n     *  put refreshToken in the token payload\n      * @param refreshToken\n     */\n\n  }, {\n    key: \"setRefreshToken\",\n    value: function setRefreshToken(refreshToken) {\n      this.token.refresh_token = refreshToken;\n    }\n    /**\n     * Parses token payload\n     * @returns any\n     */\n\n  }, {\n    key: \"parsePayload\",\n    value: function parsePayload() {\n      if (!this.token) {\n        throw new NbAuthTokenNotFoundError('Token not found.');\n      } else {\n        if (!Object.keys(this.token).length) {\n          throw new NbAuthEmptyTokenError('Cannot extract payload from an empty token.');\n        }\n      }\n\n      this.payload = this.token;\n    }\n    /**\n     * Returns the token type\n     * @returns string\n     */\n\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return this.token.token_type;\n    }\n    /**\n     * Is data expired\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return _get(_getPrototypeOf(NbAuthOAuth2Token.prototype), \"isValid\", this).call(this) && (!this.getTokenExpDate() || new Date() < this.getTokenExpDate());\n    }\n    /**\n     * Returns expiration date\n     * @returns Date\n     */\n\n  }, {\n    key: \"getTokenExpDate\",\n    value: function getTokenExpDate() {\n      if (!this.token.hasOwnProperty('expires_in')) {\n        return null;\n      }\n\n      return new Date(this.createdAt.getTime() + Number(this.token.expires_in) * 1000);\n    }\n    /**\n     * Convert to string\n     * @returns {string}\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return JSON.stringify(this.token);\n    }\n  }]);\n\n  return NbAuthOAuth2Token;\n}(NbAuthSimpleToken);\n\nNbAuthOAuth2Token.NAME = 'nb:auth:oauth2:token';\n/**\n * Wrapper for OAuth2 token embedding JWT tokens\n */\n\nvar NbAuthOAuth2JWTToken = /*#__PURE__*/function (_NbAuthOAuth2Token) {\n  _inherits(NbAuthOAuth2JWTToken, _NbAuthOAuth2Token);\n\n  var _super8 = _createSuper(NbAuthOAuth2JWTToken);\n\n  function NbAuthOAuth2JWTToken() {\n    _classCallCheck(this, NbAuthOAuth2JWTToken);\n\n    return _super8.apply(this, arguments);\n  }\n\n  _createClass(NbAuthOAuth2JWTToken, [{\n    key: \"parsePayload\",\n    value: function parsePayload() {\n      _get(_getPrototypeOf(NbAuthOAuth2JWTToken.prototype), \"parsePayload\", this).call(this);\n\n      this.parseAccessTokenPayload();\n    }\n  }, {\n    key: \"parseAccessTokenPayload\",\n    value: function parseAccessTokenPayload() {\n      var accessToken = this.getValue();\n\n      if (!accessToken) {\n        throw new NbAuthTokenNotFoundError('access_token key not found.');\n      }\n\n      this.accessTokenPayload = decodeJwtPayload(accessToken);\n    }\n    /**\n     * Returns access token payload\n     * @returns any\n     */\n\n  }, {\n    key: \"getAccessTokenPayload\",\n    value: function getAccessTokenPayload() {\n      return this.accessTokenPayload;\n    }\n    /**\n     * for Oauth2 JWT token, the iat (issued at) field of the access_token payload\n     */\n\n  }, {\n    key: \"prepareCreatedAt\",\n    value: function prepareCreatedAt(date) {\n      var payload = this.accessTokenPayload;\n      return payload && payload.iat ? new Date(Number(payload.iat) * 1000) : _get(_getPrototypeOf(NbAuthOAuth2JWTToken.prototype), \"prepareCreatedAt\", this).call(this, date);\n    }\n    /**\n     * Is token valid\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return this.accessTokenPayload && _get(_getPrototypeOf(NbAuthOAuth2JWTToken.prototype), \"isValid\", this).call(this);\n    }\n    /**\n     * Returns expiration date :\n     * - exp if set,\n     * - super.getExpDate() otherwise\n     * @returns Date\n     */\n\n  }, {\n    key: \"getTokenExpDate\",\n    value: function getTokenExpDate() {\n      if (this.accessTokenPayload && this.accessTokenPayload.hasOwnProperty('exp')) {\n        var date = new Date(0);\n        date.setUTCSeconds(this.accessTokenPayload.exp);\n        return date;\n      } else {\n        return _get(_getPrototypeOf(NbAuthOAuth2JWTToken.prototype), \"getTokenExpDate\", this).call(this);\n      }\n    }\n  }]);\n\n  return NbAuthOAuth2JWTToken;\n}(NbAuthOAuth2Token);\n\nNbAuthOAuth2JWTToken.NAME = 'nb:auth:oauth2:jwt:token';\nvar NB_AUTH_FALLBACK_TOKEN = new InjectionToken('Nebular Auth Options');\n/**\n * Creates a token parcel which could be stored/restored\n */\n\nvar NbAuthTokenParceler = /*#__PURE__*/function () {\n  function NbAuthTokenParceler(fallbackClass, tokenClasses) {\n    _classCallCheck(this, NbAuthTokenParceler);\n\n    this.fallbackClass = fallbackClass;\n    this.tokenClasses = tokenClasses;\n  }\n\n  _createClass(NbAuthTokenParceler, [{\n    key: \"wrap\",\n    value: function wrap(token) {\n      return JSON.stringify({\n        name: token.getName(),\n        ownerStrategyName: token.getOwnerStrategyName(),\n        createdAt: token.getCreatedAt().getTime(),\n        value: token.toString()\n      });\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap(value) {\n      var tokenClass = this.fallbackClass;\n      var tokenValue = '';\n      var tokenOwnerStrategyName = '';\n      var tokenCreatedAt = null;\n      var tokenPack = this.parseTokenPack(value);\n\n      if (tokenPack) {\n        tokenClass = this.getClassByName(tokenPack.name) || this.fallbackClass;\n        tokenValue = tokenPack.value;\n        tokenOwnerStrategyName = tokenPack.ownerStrategyName;\n        tokenCreatedAt = new Date(Number(tokenPack.createdAt));\n      }\n\n      return nbAuthCreateToken(tokenClass, tokenValue, tokenOwnerStrategyName, tokenCreatedAt);\n    } // TODO: this could be moved to a separate token registry\n\n  }, {\n    key: \"getClassByName\",\n    value: function getClassByName(name) {\n      return this.tokenClasses.find(function (tokenClass) {\n        return tokenClass.NAME === name;\n      });\n    }\n  }, {\n    key: \"parseTokenPack\",\n    value: function parseTokenPack(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {}\n\n      return null;\n    }\n  }]);\n\n  return NbAuthTokenParceler;\n}();\n\nNbAuthTokenParceler.ɵfac = function NbAuthTokenParceler_Factory(t) {\n  return new (t || NbAuthTokenParceler)(i0.ɵɵinject(NB_AUTH_FALLBACK_TOKEN), i0.ɵɵinject(NB_AUTH_TOKENS));\n};\n\nNbAuthTokenParceler.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbAuthTokenParceler,\n  factory: NbAuthTokenParceler.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbAuthTokenParceler, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_FALLBACK_TOKEN]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_TOKENS]\n      }]\n    }];\n  }, null);\n})();\n\nvar NbTokenStorage = /*#__PURE__*/_createClass(function NbTokenStorage() {\n  _classCallCheck(this, NbTokenStorage);\n});\n/**\n * Service that uses browser localStorage as a storage.\n *\n * The token storage is provided into auth module the following way:\n * ```ts\n * { provide: NbTokenStorage, useClass: NbTokenLocalStorage },\n * ```\n *\n * If you need to change the storage behaviour or provide your own - just extend your class from basic `NbTokenStorage`\n * or `NbTokenLocalStorage` and provide in your `app.module`:\n * ```ts\n * { provide: NbTokenStorage, useClass: NbTokenCustomStorage },\n * ```\n *\n */\n\n\nvar NbTokenLocalStorage = /*#__PURE__*/function (_NbTokenStorage) {\n  _inherits(NbTokenLocalStorage, _NbTokenStorage);\n\n  var _super9 = _createSuper(NbTokenLocalStorage);\n\n  function NbTokenLocalStorage(parceler) {\n    var _this6;\n\n    _classCallCheck(this, NbTokenLocalStorage);\n\n    _this6 = _super9.call(this);\n    _this6.parceler = parceler;\n    _this6.key = 'auth_app_token';\n    return _this6;\n  }\n  /**\n   * Returns token from localStorage\n   * @returns {NbAuthToken}\n   */\n\n\n  _createClass(NbTokenLocalStorage, [{\n    key: \"get\",\n    value: function get() {\n      var raw = localStorage.getItem(this.key);\n      return this.parceler.unwrap(raw);\n    }\n    /**\n     * Sets token to localStorage\n     * @param {NbAuthToken} token\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(token) {\n      var raw = this.parceler.wrap(token);\n      localStorage.setItem(this.key, raw);\n    }\n    /**\n     * Clears token from localStorage\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      localStorage.removeItem(this.key);\n    }\n  }]);\n\n  return NbTokenLocalStorage;\n}(NbTokenStorage);\n\nNbTokenLocalStorage.ɵfac = function NbTokenLocalStorage_Factory(t) {\n  return new (t || NbTokenLocalStorage)(i0.ɵɵinject(NbAuthTokenParceler));\n};\n\nNbTokenLocalStorage.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbTokenLocalStorage,\n  factory: NbTokenLocalStorage.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbTokenLocalStorage, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NbAuthTokenParceler\n    }];\n  }, null);\n})();\n/**\n * Service that allows you to manage authentication token - get, set, clear and also listen to token changes over time.\n */\n\n\nvar NbTokenService = /*#__PURE__*/function () {\n  function NbTokenService(tokenStorage) {\n    _classCallCheck(this, NbTokenService);\n\n    this.tokenStorage = tokenStorage;\n    this.token$ = new BehaviorSubject(null);\n    this.publishStoredToken();\n  }\n  /**\n   * Publishes token when it changes.\n   * @returns {Observable<NbAuthToken>}\n   */\n\n\n  _createClass(NbTokenService, [{\n    key: \"tokenChange\",\n    value: function tokenChange() {\n      return this.token$.pipe(filter(function (value) {\n        return !!value;\n      }), share());\n    }\n    /**\n     * Sets a token into the storage. This method is used by the NbAuthService automatically.\n     *\n     * @param {NbAuthToken} token\n     * @returns {Observable<any>}\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(token) {\n      this.tokenStorage.set(token);\n      this.publishStoredToken();\n      return of(null);\n    }\n    /**\n     * Returns observable of current token\n     * @returns {Observable<NbAuthToken>}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get() {\n      var token = this.tokenStorage.get();\n      return of(token);\n    }\n    /**\n     * Removes the token and published token value\n     *\n     * @returns {Observable<any>}\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.tokenStorage.clear();\n      this.publishStoredToken();\n      return of(null);\n    }\n  }, {\n    key: \"publishStoredToken\",\n    value: function publishStoredToken() {\n      this.token$.next(this.tokenStorage.get());\n    }\n  }]);\n\n  return NbTokenService;\n}();\n\nNbTokenService.ɵfac = function NbTokenService_Factory(t) {\n  return new (t || NbTokenService)(i0.ɵɵinject(NbTokenStorage));\n};\n\nNbTokenService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbTokenService,\n  factory: NbTokenService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbTokenService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NbTokenStorage\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Common authentication service.\n * Should be used to as an interlayer between UI Components and Auth Strategy.\n */\n\n\nvar NbAuthService = /*#__PURE__*/function () {\n  function NbAuthService(tokenService, strategies) {\n    _classCallCheck(this, NbAuthService);\n\n    this.tokenService = tokenService;\n    this.strategies = strategies;\n  }\n  /**\n   * Retrieves current authenticated token stored\n   * @returns {Observable<any>}\n   */\n\n\n  _createClass(NbAuthService, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return this.tokenService.get();\n    }\n    /**\n     * Returns true if auth token is present in the token storage\n     * @returns {Observable<boolean>}\n     */\n\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return this.getToken().pipe(map(function (token) {\n        return token.isValid();\n      }));\n    }\n    /**\n     * Returns true if valid auth token is present in the token storage.\n     * If not, calls the strategy refreshToken, and returns isAuthenticated() if success, false otherwise\n     * @returns {Observable<boolean>}\n     */\n\n  }, {\n    key: \"isAuthenticatedOrRefresh\",\n    value: function isAuthenticatedOrRefresh() {\n      var _this7 = this;\n\n      return this.getToken().pipe(switchMap(function (token) {\n        if (token.getValue() && !token.isValid()) {\n          return _this7.refreshToken(token.getOwnerStrategyName(), token).pipe(switchMap(function (res) {\n            if (res.isSuccess()) {\n              return _this7.isAuthenticated();\n            } else {\n              return of(false);\n            }\n          }));\n        } else {\n          return of(token.isValid());\n        }\n      }));\n    }\n    /**\n     * Returns tokens stream\n     * @returns {Observable<NbAuthSimpleToken>}\n     */\n\n  }, {\n    key: \"onTokenChange\",\n    value: function onTokenChange() {\n      return this.tokenService.tokenChange();\n    }\n    /**\n     * Returns authentication status stream\n     * @returns {Observable<boolean>}\n     */\n\n  }, {\n    key: \"onAuthenticationChange\",\n    value: function onAuthenticationChange() {\n      return this.onTokenChange().pipe(map(function (token) {\n        return token.isValid();\n      }));\n    }\n    /**\n     * Authenticates with the selected strategy\n     * Stores received token in the token storage\n     *\n     * Example:\n     * authenticate('email', {email: 'email@example.com', password: 'test'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n\n  }, {\n    key: \"authenticate\",\n    value: function authenticate(strategyName, data) {\n      var _this8 = this;\n\n      return this.getStrategy(strategyName).authenticate(data).pipe(switchMap(function (result) {\n        return _this8.processResultToken(result);\n      }));\n    }\n    /**\n     * Registers with the selected strategy\n     * Stores received token in the token storage\n     *\n     * Example:\n     * register('email', {email: 'email@example.com', name: 'Some Name', password: 'test'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n\n  }, {\n    key: \"register\",\n    value: function register(strategyName, data) {\n      var _this9 = this;\n\n      return this.getStrategy(strategyName).register(data).pipe(switchMap(function (result) {\n        return _this9.processResultToken(result);\n      }));\n    }\n    /**\n     * Sign outs with the selected strategy\n     * Removes token from the token storage\n     *\n     * Example:\n     * logout('email')\n     *\n     * @param strategyName\n     * @returns {Observable<NbAuthResult>}\n     */\n\n  }, {\n    key: \"logout\",\n    value: function logout(strategyName) {\n      var _this10 = this;\n\n      return this.getStrategy(strategyName).logout().pipe(switchMap(function (result) {\n        if (result.isSuccess()) {\n          _this10.tokenService.clear().pipe(map(function () {\n            return result;\n          }));\n        }\n\n        return of(result);\n      }));\n    }\n    /**\n     * Sends forgot password request to the selected strategy\n     *\n     * Example:\n     * requestPassword('email', {email: 'email@example.com'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n\n  }, {\n    key: \"requestPassword\",\n    value: function requestPassword(strategyName, data) {\n      return this.getStrategy(strategyName).requestPassword(data);\n    }\n    /**\n     * Tries to reset password with the selected strategy\n     *\n     * Example:\n     * resetPassword('email', {newPassword: 'test'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n\n  }, {\n    key: \"resetPassword\",\n    value: function resetPassword(strategyName, data) {\n      return this.getStrategy(strategyName).resetPassword(data);\n    }\n    /**\n     * Sends a refresh token request\n     * Stores received token in the token storage\n     *\n     * Example:\n     * refreshToken('email', {token: token})\n     *\n     * @param {string} strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n\n  }, {\n    key: \"refreshToken\",\n    value: function refreshToken(strategyName, data) {\n      var _this11 = this;\n\n      return this.getStrategy(strategyName).refreshToken(data).pipe(switchMap(function (result) {\n        return _this11.processResultToken(result);\n      }));\n    }\n    /**\n     * Get registered strategy by name\n     *\n     * Example:\n     * getStrategy('email')\n     *\n     * @param {string} provider\n     * @returns {NbAbstractAuthProvider}\n     */\n\n  }, {\n    key: \"getStrategy\",\n    value: function getStrategy(strategyName) {\n      var found = this.strategies.find(function (strategy) {\n        return strategy.getName() === strategyName;\n      });\n\n      if (!found) {\n        throw new TypeError(\"There is no Auth Strategy registered under '\".concat(strategyName, \"' name\"));\n      }\n\n      return found;\n    }\n  }, {\n    key: \"processResultToken\",\n    value: function processResultToken(result) {\n      if (result.isSuccess() && result.getToken()) {\n        return this.tokenService.set(result.getToken()).pipe(map(function (token) {\n          return result;\n        }));\n      }\n\n      return of(result);\n    }\n  }]);\n\n  return NbAuthService;\n}();\n\nNbAuthService.ɵfac = function NbAuthService_Factory(t) {\n  return new (t || NbAuthService)(i0.ɵɵinject(NbTokenService), i0.ɵɵinject(NB_AUTH_STRATEGIES));\n};\n\nNbAuthService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbAuthService,\n  factory: NbAuthService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbAuthService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NbTokenService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_STRATEGIES]\n      }]\n    }];\n  }, null);\n})();\n\nvar NbAuthStrategy = /*#__PURE__*/function () {\n  function NbAuthStrategy() {\n    _classCallCheck(this, NbAuthStrategy);\n  }\n\n  _createClass(NbAuthStrategy, [{\n    key: \"setOptions\",\n    value: // we should keep this any and validation should be done in `register` method instead\n    // otherwise it won't be possible to pass an empty object\n    function setOptions(options) {\n      this.options = deepExtend({}, this.defaultOptions, options);\n    }\n  }, {\n    key: \"getOption\",\n    value: function getOption(key) {\n      return getDeepFromObject(this.options, key, null);\n    }\n  }, {\n    key: \"createToken\",\n    value: function createToken(value, failWhenInvalidToken) {\n      var token = nbAuthCreateToken(this.getOption('token.class'), value, this.getName()); // At this point, nbAuthCreateToken failed with NbAuthIllegalTokenError which MUST be intercepted by strategies\n      // Or token is created. It MAY be created even if backend did not return any token, in this case it is !Valid\n\n      if (failWhenInvalidToken && !token.isValid()) {\n        // If we require a valid token (i.e. isValid), then we MUST throw NbAuthIllegalTokenError so that the strategies\n        // intercept it\n        throw new NbAuthIllegalTokenError('Token is empty or invalid.');\n      }\n\n      return token;\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return this.getOption('name');\n    }\n  }, {\n    key: \"createFailResponse\",\n    value: function createFailResponse(data) {\n      return new HttpResponse({\n        body: {},\n        status: 401\n      });\n    }\n  }, {\n    key: \"createSuccessResponse\",\n    value: function createSuccessResponse(data) {\n      return new HttpResponse({\n        body: {},\n        status: 200\n      });\n    }\n  }, {\n    key: \"getActionEndpoint\",\n    value: function getActionEndpoint(action) {\n      var actionEndpoint = this.getOption(\"\".concat(action, \".endpoint\"));\n      var baseEndpoint = this.getOption('baseEndpoint');\n      return actionEndpoint ? baseEndpoint + actionEndpoint : '';\n    }\n  }, {\n    key: \"getHeaders\",\n    value: function getHeaders() {\n      var _this$getOption;\n\n      var customHeaders = (_this$getOption = this.getOption('headers')) !== null && _this$getOption !== void 0 ? _this$getOption : {};\n\n      if (customHeaders instanceof HttpHeaders) {\n        return customHeaders;\n      }\n\n      var headers = new HttpHeaders();\n      Object.entries(customHeaders).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        headers = headers.append(key, value);\n      });\n      return headers;\n    }\n  }]);\n\n  return NbAuthStrategy;\n}();\n\nvar NbAuthResult = /*#__PURE__*/function () {\n  // TODO: better pass object\n  function NbAuthResult(success, response, redirect, errors, messages) {\n    var token = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n\n    _classCallCheck(this, NbAuthResult);\n\n    this.success = success;\n    this.response = response;\n    this.redirect = redirect;\n    this.errors = [];\n    this.messages = [];\n    this.errors = this.errors.concat([errors]);\n\n    if (errors instanceof Array) {\n      this.errors = errors;\n    }\n\n    this.messages = this.messages.concat([messages]);\n\n    if (messages instanceof Array) {\n      this.messages = messages;\n    }\n\n    this.token = token;\n  }\n\n  _createClass(NbAuthResult, [{\n    key: \"getResponse\",\n    value: function getResponse() {\n      return this.response;\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      return this.token;\n    }\n  }, {\n    key: \"getRedirect\",\n    value: function getRedirect() {\n      return this.redirect;\n    }\n  }, {\n    key: \"getErrors\",\n    value: function getErrors() {\n      return this.errors.filter(function (val) {\n        return !!val;\n      });\n    }\n  }, {\n    key: \"getMessages\",\n    value: function getMessages() {\n      return this.messages.filter(function (val) {\n        return !!val;\n      });\n    }\n  }, {\n    key: \"isSuccess\",\n    value: function isSuccess() {\n      return this.success;\n    }\n  }, {\n    key: \"isFailure\",\n    value: function isFailure() {\n      return !this.success;\n    }\n  }]);\n\n  return NbAuthResult;\n}();\n\nvar NbAuthStrategyOptions = /*#__PURE__*/_createClass(function NbAuthStrategyOptions() {\n  _classCallCheck(this, NbAuthStrategyOptions);\n});\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nvar NbDummyAuthStrategyOptions = /*#__PURE__*/function (_NbAuthStrategyOption) {\n  _inherits(NbDummyAuthStrategyOptions, _NbAuthStrategyOption);\n\n  var _super10 = _createSuper(NbDummyAuthStrategyOptions);\n\n  function NbDummyAuthStrategyOptions() {\n    var _this12;\n\n    _classCallCheck(this, NbDummyAuthStrategyOptions);\n\n    _this12 = _super10.apply(this, arguments);\n    _this12.token = {\n      class: NbAuthSimpleToken\n    };\n    _this12.delay = 1000;\n    _this12.alwaysFail = false;\n    return _this12;\n  }\n\n  return _createClass(NbDummyAuthStrategyOptions);\n}(NbAuthStrategyOptions);\n\nvar dummyStrategyOptions = new NbDummyAuthStrategyOptions();\n/**\n * Dummy auth strategy. Could be useful for auth setup when backend is not available yet.\n *\n *\n * Strategy settings.\n *\n * ```ts\n * export class NbDummyAuthStrategyOptions extends NbAuthStrategyOptions {\n *   name = 'dummy';\n *   token = {\n *     class: NbAuthSimpleToken,\n *   };\n *   delay? = 1000;\n *   alwaysFail? = false;\n * }\n * ```\n */\n\nvar NbDummyAuthStrategy = /*#__PURE__*/function (_NbAuthStrategy) {\n  _inherits(NbDummyAuthStrategy, _NbAuthStrategy);\n\n  var _super11 = _createSuper(NbDummyAuthStrategy);\n\n  function NbDummyAuthStrategy() {\n    var _this13;\n\n    _classCallCheck(this, NbDummyAuthStrategy);\n\n    _this13 = _super11.apply(this, arguments);\n    _this13.defaultOptions = dummyStrategyOptions;\n    return _this13;\n  }\n\n  _createClass(NbDummyAuthStrategy, [{\n    key: \"authenticate\",\n    value: function authenticate(data) {\n      return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n  }, {\n    key: \"register\",\n    value: function register(data) {\n      return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n  }, {\n    key: \"requestPassword\",\n    value: function requestPassword(data) {\n      return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n  }, {\n    key: \"resetPassword\",\n    value: function resetPassword(data) {\n      return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n  }, {\n    key: \"logout\",\n    value: function logout(data) {\n      return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n  }, {\n    key: \"refreshToken\",\n    value: function refreshToken(data) {\n      return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n  }, {\n    key: \"createDummyResult\",\n    value: function createDummyResult(data) {\n      if (this.getOption('alwaysFail')) {\n        return new NbAuthResult(false, this.createFailResponse(data), null, ['Something went wrong.']);\n      }\n\n      try {\n        var token = this.createToken('test token', true);\n        return new NbAuthResult(true, this.createSuccessResponse(data), '/', [], ['Successfully logged in.'], token);\n      } catch (err) {\n        return new NbAuthResult(false, this.createFailResponse(data), null, [err.message]);\n      }\n    }\n  }], [{\n    key: \"setup\",\n    value: function setup(options) {\n      return [NbDummyAuthStrategy, options];\n    }\n  }]);\n\n  return NbDummyAuthStrategy;\n}(NbAuthStrategy);\n\nNbDummyAuthStrategy.ɵfac = /* @__PURE__ */function () {\n  var ɵNbDummyAuthStrategy_BaseFactory;\n  return function NbDummyAuthStrategy_Factory(t) {\n    return (ɵNbDummyAuthStrategy_BaseFactory || (ɵNbDummyAuthStrategy_BaseFactory = i0.ɵɵgetInheritedFactory(NbDummyAuthStrategy)))(t || NbDummyAuthStrategy);\n  };\n}();\n\nNbDummyAuthStrategy.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbDummyAuthStrategy,\n  factory: NbDummyAuthStrategy.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbDummyAuthStrategy, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nvar NbOAuth2ResponseType;\n\n(function (NbOAuth2ResponseType) {\n  NbOAuth2ResponseType[\"CODE\"] = \"code\";\n  NbOAuth2ResponseType[\"TOKEN\"] = \"token\";\n})(NbOAuth2ResponseType || (NbOAuth2ResponseType = {})); // TODO: client_credentials\n\n\nvar NbOAuth2GrantType;\n\n(function (NbOAuth2GrantType) {\n  NbOAuth2GrantType[\"AUTHORIZATION_CODE\"] = \"authorization_code\";\n  NbOAuth2GrantType[\"PASSWORD\"] = \"password\";\n  NbOAuth2GrantType[\"REFRESH_TOKEN\"] = \"refresh_token\";\n})(NbOAuth2GrantType || (NbOAuth2GrantType = {}));\n\nvar NbOAuth2ClientAuthMethod;\n\n(function (NbOAuth2ClientAuthMethod) {\n  NbOAuth2ClientAuthMethod[\"NONE\"] = \"none\";\n  NbOAuth2ClientAuthMethod[\"BASIC\"] = \"basic\";\n  NbOAuth2ClientAuthMethod[\"REQUEST_BODY\"] = \"request-body\";\n})(NbOAuth2ClientAuthMethod || (NbOAuth2ClientAuthMethod = {}));\n\nvar NbOAuth2AuthStrategyOptions = /*#__PURE__*/function (_NbAuthStrategyOption2) {\n  _inherits(NbOAuth2AuthStrategyOptions, _NbAuthStrategyOption2);\n\n  var _super12 = _createSuper(NbOAuth2AuthStrategyOptions);\n\n  function NbOAuth2AuthStrategyOptions() {\n    var _this14;\n\n    _classCallCheck(this, NbOAuth2AuthStrategyOptions);\n\n    _this14 = _super12.apply(this, arguments);\n    _this14.baseEndpoint = '';\n    _this14.clientId = '';\n    _this14.clientSecret = '';\n    _this14.clientAuthMethod = NbOAuth2ClientAuthMethod.NONE;\n    _this14.redirect = {\n      success: '/',\n      failure: null\n    };\n    _this14.defaultErrors = ['Something went wrong, please try again.'];\n    _this14.defaultMessages = ['You have been successfully authenticated.'];\n    _this14.authorize = {\n      endpoint: 'authorize',\n      responseType: NbOAuth2ResponseType.CODE,\n      requireValidToken: true\n    };\n    _this14.token = {\n      endpoint: 'token',\n      grantType: NbOAuth2GrantType.AUTHORIZATION_CODE,\n      requireValidToken: true,\n      class: NbAuthOAuth2Token\n    };\n    _this14.refresh = {\n      endpoint: 'token',\n      grantType: NbOAuth2GrantType.REFRESH_TOKEN,\n      requireValidToken: true\n    };\n    return _this14;\n  }\n\n  return _createClass(NbOAuth2AuthStrategyOptions);\n}(NbAuthStrategyOptions);\n\nvar auth2StrategyOptions = new NbOAuth2AuthStrategyOptions();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * OAuth2 authentication strategy.\n *\n * Strategy settings:\n *\n * ```ts\n * export enum NbOAuth2ResponseType {\n *   CODE = 'code',\n *   TOKEN = 'token',\n * }\n *\n * export enum NbOAuth2GrantType {\n *   AUTHORIZATION_CODE = 'authorization_code',\n *   PASSWORD = 'password',\n *   REFRESH_TOKEN = 'refresh_token',\n * }\n *\n * export class NbOAuth2AuthStrategyOptions {\n *   name: string;\n *   baseEndpoint?: string = '';\n *   clientId: string = '';\n *   clientSecret: string = '';\n *   clientAuthMethod: string = NbOAuth2ClientAuthMethod.NONE;\n *   redirect?: { success?: string; failure?: string } = {\n *     success: '/',\n *     failure: null,\n *   };\n *   defaultErrors?: any[] = ['Something went wrong, please try again.'];\n *   defaultMessages?: any[] = ['You have been successfully authenticated.'];\n *   authorize?: {\n *     endpoint?: string;\n *     redirectUri?: string;\n *     responseType?: string;\n *     requireValidToken: true,\n *     scope?: string;\n *     state?: string;\n *     params?: { [key: string]: string };\n *   } = {\n *     endpoint: 'authorize',\n *     responseType: NbOAuth2ResponseType.CODE,\n *   };\n *   token?: {\n *     endpoint?: string;\n *     grantType?: string;\n *     requireValidToken: true,\n *     redirectUri?: string;\n *     scope?: string;\n *     class: NbAuthTokenClass,\n *   } = {\n *     endpoint: 'token',\n *     grantType: NbOAuth2GrantType.AUTHORIZATION_CODE,\n *     class: NbAuthOAuth2Token,\n *   };\n *   refresh?: {\n *     endpoint?: string;\n *     grantType?: string;\n *     scope?: string;\n *     requireValidToken: true,\n *   } = {\n *     endpoint: 'token',\n *     grantType: NbOAuth2GrantType.REFRESH_TOKEN,\n *   };\n * }\n * ```\n *\n */\n\nvar NbOAuth2AuthStrategy = /*#__PURE__*/function (_NbAuthStrategy2) {\n  _inherits(NbOAuth2AuthStrategy, _NbAuthStrategy2);\n\n  var _super13 = _createSuper(NbOAuth2AuthStrategy);\n\n  function NbOAuth2AuthStrategy(http, route, window) {\n    var _this15$redirectResul, _this15$redirectResul2;\n\n    var _this15;\n\n    _classCallCheck(this, NbOAuth2AuthStrategy);\n\n    _this15 = _super13.call(this);\n    _this15.http = http;\n    _this15.route = route;\n    _this15.window = window;\n    _this15.redirectResultHandlers = (_this15$redirectResul = {}, _defineProperty(_this15$redirectResul, NbOAuth2ResponseType.CODE, function () {\n      return of(_this15.route.snapshot.queryParams).pipe(switchMap(function (params) {\n        if (params.code) {\n          return _this15.requestToken(params.code);\n        }\n\n        return of(new NbAuthResult(false, params, _this15.getOption('redirect.failure'), _this15.getOption('defaultErrors'), []));\n      }));\n    }), _defineProperty(_this15$redirectResul, NbOAuth2ResponseType.TOKEN, function () {\n      var module = 'authorize';\n\n      var requireValidToken = _this15.getOption(\"\".concat(module, \".requireValidToken\"));\n\n      return of(_this15.route.snapshot.fragment).pipe(map(function (fragment) {\n        return _this15.parseHashAsQueryParams(fragment);\n      }), map(function (params) {\n        if (!params.error) {\n          return new NbAuthResult(true, params, _this15.getOption('redirect.success'), [], _this15.getOption('defaultMessages'), _this15.createToken(params, requireValidToken));\n        }\n\n        return new NbAuthResult(false, params, _this15.getOption('redirect.failure'), _this15.getOption('defaultErrors'), []);\n      }), catchError(function (err) {\n        var errors = [];\n\n        if (err instanceof NbAuthIllegalTokenError) {\n          errors.push(err.message);\n        } else {\n          errors.push('Something went wrong.');\n        }\n\n        return of(new NbAuthResult(false, err, _this15.getOption('redirect.failure'), errors));\n      }));\n    }), _this15$redirectResul);\n    _this15.redirectResults = (_this15$redirectResul2 = {}, _defineProperty(_this15$redirectResul2, NbOAuth2ResponseType.CODE, function () {\n      return of(_this15.route.snapshot.queryParams).pipe(map(function (params) {\n        return !!(params && (params.code || params.error));\n      }));\n    }), _defineProperty(_this15$redirectResul2, NbOAuth2ResponseType.TOKEN, function () {\n      return of(_this15.route.snapshot.fragment).pipe(map(function (fragment) {\n        return _this15.parseHashAsQueryParams(fragment);\n      }), map(function (params) {\n        return !!(params && (params.access_token || params.error));\n      }));\n    }), _this15$redirectResul2);\n    _this15.defaultOptions = auth2StrategyOptions;\n    return _this15;\n  }\n\n  _createClass(NbOAuth2AuthStrategy, [{\n    key: \"responseType\",\n    get: function get() {\n      return this.getOption('authorize.responseType');\n    }\n  }, {\n    key: \"clientAuthMethod\",\n    get: function get() {\n      return this.getOption('clientAuthMethod');\n    }\n  }, {\n    key: \"authenticate\",\n    value: function authenticate(data) {\n      var _this16 = this;\n\n      if (this.getOption('token.grantType') === NbOAuth2GrantType.PASSWORD) {\n        return this.passwordToken(data.email, data.password);\n      } else {\n        return this.isRedirectResult().pipe(switchMap(function (result) {\n          if (!result) {\n            _this16.authorizeRedirect();\n\n            return of(new NbAuthResult(true));\n          }\n\n          return _this16.getAuthorizationResult();\n        }));\n      }\n    }\n  }, {\n    key: \"getAuthorizationResult\",\n    value: function getAuthorizationResult() {\n      var redirectResultHandler = this.redirectResultHandlers[this.responseType];\n\n      if (redirectResultHandler) {\n        return redirectResultHandler.call(this);\n      }\n\n      throw new Error(\"'\".concat(this.responseType, \"' responseType is not supported,\\n                      only 'token' and 'code' are supported now\"));\n    }\n  }, {\n    key: \"refreshToken\",\n    value: function refreshToken(token) {\n      var _this17 = this;\n\n      var module = 'refresh';\n      var url = this.getActionEndpoint(module);\n      var requireValidToken = this.getOption(\"\".concat(module, \".requireValidToken\"));\n      return this.http.post(url, this.buildRefreshRequestData(token), {\n        headers: this.getHeaders()\n      }).pipe(map(function (res) {\n        return new NbAuthResult(true, res, _this17.getOption('redirect.success'), [], _this17.getOption('defaultMessages'), _this17.createRefreshedToken(res, token, requireValidToken));\n      }), catchError(function (res) {\n        return _this17.handleResponseError(res);\n      }));\n    }\n  }, {\n    key: \"passwordToken\",\n    value: function passwordToken(username, password) {\n      var _this18 = this;\n\n      var module = 'token';\n      var url = this.getActionEndpoint(module);\n      var requireValidToken = this.getOption(\"\".concat(module, \".requireValidToken\"));\n      return this.http.post(url, this.buildPasswordRequestData(username, password), {\n        headers: this.getHeaders()\n      }).pipe(map(function (res) {\n        return new NbAuthResult(true, res, _this18.getOption('redirect.success'), [], _this18.getOption('defaultMessages'), _this18.createToken(res, requireValidToken));\n      }), catchError(function (res) {\n        return _this18.handleResponseError(res);\n      }));\n    }\n  }, {\n    key: \"authorizeRedirect\",\n    value: function authorizeRedirect() {\n      this.window.location.href = this.buildRedirectUrl();\n    }\n  }, {\n    key: \"isRedirectResult\",\n    value: function isRedirectResult() {\n      return this.redirectResults[this.responseType].call(this);\n    }\n  }, {\n    key: \"requestToken\",\n    value: function requestToken(code) {\n      var _this19 = this;\n\n      var module = 'token';\n      var url = this.getActionEndpoint(module);\n      var requireValidToken = this.getOption(\"\".concat(module, \".requireValidToken\"));\n      return this.http.post(url, this.buildCodeRequestData(code), {\n        headers: this.getHeaders()\n      }).pipe(map(function (res) {\n        return new NbAuthResult(true, res, _this19.getOption('redirect.success'), [], _this19.getOption('defaultMessages'), _this19.createToken(res, requireValidToken));\n      }), catchError(function (res) {\n        return _this19.handleResponseError(res);\n      }));\n    }\n  }, {\n    key: \"buildCodeRequestData\",\n    value: function buildCodeRequestData(code) {\n      var params = {\n        grant_type: this.getOption('token.grantType'),\n        code: code,\n        redirect_uri: this.getOption('token.redirectUri'),\n        client_id: this.getOption('clientId')\n      };\n      return this.urlEncodeParameters(this.cleanParams(this.addCredentialsToParams(params)));\n    }\n  }, {\n    key: \"buildRefreshRequestData\",\n    value: function buildRefreshRequestData(token) {\n      var params = {\n        grant_type: this.getOption('refresh.grantType'),\n        refresh_token: token.getRefreshToken(),\n        scope: this.getOption('refresh.scope'),\n        client_id: this.getOption('clientId')\n      };\n      return this.urlEncodeParameters(this.cleanParams(this.addCredentialsToParams(params)));\n    }\n  }, {\n    key: \"buildPasswordRequestData\",\n    value: function buildPasswordRequestData(username, password) {\n      var params = {\n        grant_type: this.getOption('token.grantType'),\n        username: username,\n        password: password,\n        scope: this.getOption('token.scope')\n      };\n      return this.urlEncodeParameters(this.cleanParams(this.addCredentialsToParams(params)));\n    }\n  }, {\n    key: \"buildAuthHeader\",\n    value: function buildAuthHeader() {\n      if (this.clientAuthMethod === NbOAuth2ClientAuthMethod.BASIC) {\n        if (this.getOption('clientId') && this.getOption('clientSecret')) {\n          return new HttpHeaders({\n            Authorization: 'Basic ' + btoa(this.getOption('clientId') + ':' + this.getOption('clientSecret'))\n          });\n        } else {\n          throw Error('For basic client authentication method, please provide both clientId & clientSecret.');\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getHeaders\",\n    value: function getHeaders() {\n      var headers = _get(_getPrototypeOf(NbOAuth2AuthStrategy.prototype), \"getHeaders\", this).call(this);\n\n      headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n      var authHeaders = this.buildAuthHeader();\n\n      if (authHeaders === undefined) {\n        return headers;\n      }\n\n      var _iterator = _createForOfIteratorHelper(authHeaders.keys()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var headerKey = _step.value;\n\n          var _iterator2 = _createForOfIteratorHelper(authHeaders.getAll(headerKey)),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var headerValue = _step2.value;\n              headers = headers.append(headerKey, headerValue);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return headers;\n    }\n  }, {\n    key: \"cleanParams\",\n    value: function cleanParams(params) {\n      Object.entries(params).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            key = _ref4[0],\n            val = _ref4[1];\n\n        return !val && delete params[key];\n      });\n      return params;\n    }\n  }, {\n    key: \"addCredentialsToParams\",\n    value: function addCredentialsToParams(params) {\n      if (this.clientAuthMethod === NbOAuth2ClientAuthMethod.REQUEST_BODY) {\n        if (this.getOption('clientId') && this.getOption('clientSecret')) {\n          return _objectSpread(_objectSpread({}, params), {}, {\n            client_id: this.getOption('clientId'),\n            client_secret: this.getOption('clientSecret')\n          });\n        } else {\n          throw Error('For request body client authentication method, please provide both clientId & clientSecret.');\n        }\n      }\n\n      return params;\n    }\n  }, {\n    key: \"handleResponseError\",\n    value: function handleResponseError(res) {\n      var errors = [];\n\n      if (res instanceof HttpErrorResponse) {\n        if (res.error.error_description) {\n          errors.push(res.error.error_description);\n        } else {\n          errors = this.getOption('defaultErrors');\n        }\n      } else if (res instanceof NbAuthIllegalTokenError) {\n        errors.push(res.message);\n      } else {\n        errors.push('Something went wrong.');\n      }\n\n      return of(new NbAuthResult(false, res, this.getOption('redirect.failure'), errors, []));\n    }\n  }, {\n    key: \"buildRedirectUrl\",\n    value: function buildRedirectUrl() {\n      var params = _objectSpread({\n        response_type: this.getOption('authorize.responseType'),\n        client_id: this.getOption('clientId'),\n        redirect_uri: this.getOption('authorize.redirectUri'),\n        scope: this.getOption('authorize.scope'),\n        state: this.getOption('authorize.state')\n      }, this.getOption('authorize.params'));\n\n      var endpoint = this.getActionEndpoint('authorize');\n      var query = this.urlEncodeParameters(this.cleanParams(params));\n      return \"\".concat(endpoint, \"?\").concat(query);\n    }\n  }, {\n    key: \"parseHashAsQueryParams\",\n    value: function parseHashAsQueryParams(hash) {\n      return hash ? hash.split('&').reduce(function (acc, part) {\n        var item = part.split('=');\n        acc[item[0]] = decodeURIComponent(item[1]);\n        return acc;\n      }, {}) : {};\n    }\n  }, {\n    key: \"urlEncodeParameters\",\n    value: function urlEncodeParameters(params) {\n      return Object.keys(params).map(function (k) {\n        return \"\".concat(encodeURIComponent(k), \"=\").concat(encodeURIComponent(params[k]));\n      }).join('&');\n    }\n  }, {\n    key: \"createRefreshedToken\",\n    value: function createRefreshedToken(res, existingToken, requireValidToken) {\n      var refreshedToken = this.createToken(res, requireValidToken);\n\n      if (!refreshedToken.getRefreshToken() && existingToken.getRefreshToken()) {\n        refreshedToken.setRefreshToken(existingToken.getRefreshToken());\n      }\n\n      return refreshedToken;\n    }\n  }, {\n    key: \"register\",\n    value: function register(data) {\n      throw new Error('`register` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n    }\n  }, {\n    key: \"requestPassword\",\n    value: function requestPassword(data) {\n      throw new Error('`requestPassword` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n    }\n  }, {\n    key: \"resetPassword\",\n    value: function resetPassword() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      throw new Error('`resetPassword` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      return of(new NbAuthResult(true));\n    }\n  }], [{\n    key: \"setup\",\n    value: function setup(options) {\n      return [NbOAuth2AuthStrategy, options];\n    }\n  }]);\n\n  return NbOAuth2AuthStrategy;\n}(NbAuthStrategy);\n\nNbOAuth2AuthStrategy.ɵfac = function NbOAuth2AuthStrategy_Factory(t) {\n  return new (t || NbOAuth2AuthStrategy)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ActivatedRoute), i0.ɵɵinject(NB_WINDOW));\n};\n\nNbOAuth2AuthStrategy.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbOAuth2AuthStrategy,\n  factory: NbOAuth2AuthStrategy.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbOAuth2AuthStrategy, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: i2.ActivatedRoute\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_WINDOW]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nvar NbPasswordAuthStrategyOptions = /*#__PURE__*/function (_NbAuthStrategyOption3) {\n  _inherits(NbPasswordAuthStrategyOptions, _NbAuthStrategyOption3);\n\n  var _super14 = _createSuper(NbPasswordAuthStrategyOptions);\n\n  function NbPasswordAuthStrategyOptions() {\n    var _this20;\n\n    _classCallCheck(this, NbPasswordAuthStrategyOptions);\n\n    _this20 = _super14.apply(this, arguments);\n    _this20.baseEndpoint = '/api/auth/';\n    _this20.login = {\n      alwaysFail: false,\n      endpoint: 'login',\n      method: 'post',\n      requireValidToken: true,\n      redirect: {\n        success: '/',\n        failure: null\n      },\n      defaultErrors: ['Login/Email combination is not correct, please try again.'],\n      defaultMessages: ['You have been successfully logged in.']\n    };\n    _this20.register = {\n      alwaysFail: false,\n      endpoint: 'register',\n      method: 'post',\n      requireValidToken: true,\n      redirect: {\n        success: '/',\n        failure: null\n      },\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['You have been successfully registered.']\n    };\n    _this20.requestPass = {\n      endpoint: 'request-pass',\n      method: 'post',\n      redirect: {\n        success: '/',\n        failure: null\n      },\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['Reset password instructions have been sent to your email.']\n    };\n    _this20.resetPass = {\n      endpoint: 'reset-pass',\n      method: 'put',\n      redirect: {\n        success: '/',\n        failure: null\n      },\n      resetPasswordTokenKey: 'reset_password_token',\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['Your password has been successfully changed.']\n    };\n    _this20.logout = {\n      alwaysFail: false,\n      endpoint: 'logout',\n      method: 'delete',\n      redirect: {\n        success: '/',\n        failure: null\n      },\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['You have been successfully logged out.']\n    };\n    _this20.refreshToken = {\n      endpoint: 'refresh-token',\n      method: 'post',\n      requireValidToken: true,\n      redirect: {\n        success: null,\n        failure: null\n      },\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['Your token has been successfully refreshed.']\n    };\n    _this20.token = {\n      class: NbAuthSimpleToken,\n      key: 'data.token',\n      getter: function getter(module, res, options) {\n        return getDeepFromObject(res.body, options.token.key);\n      }\n    };\n    _this20.errors = {\n      key: 'data.errors',\n      getter: function getter(module, res, options) {\n        return getDeepFromObject(res.error, options.errors.key, options[module].defaultErrors);\n      }\n    };\n    _this20.messages = {\n      key: 'data.messages',\n      getter: function getter(module, res, options) {\n        return getDeepFromObject(res.body, options.messages.key, options[module].defaultMessages);\n      }\n    };\n    return _this20;\n  }\n\n  return _createClass(NbPasswordAuthStrategyOptions);\n}(NbAuthStrategyOptions);\n\nvar passwordStrategyOptions = new NbPasswordAuthStrategyOptions();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * The most common authentication provider for email/password strategy.\n *\n * Strategy settings. Note, there is no need to copy over the whole object to change the settings you need.\n * Also, this.getOption call won't work outside of the default options declaration\n * (which is inside of the `NbPasswordAuthStrategy` class), so you have to replace it with a custom helper function\n * if you need it.\n *\n * ```ts\n *export class NbPasswordAuthStrategyOptions extends NbAuthStrategyOptions {\n *  name: string;\n *  baseEndpoint? = '/api/auth/';\n *  login?: boolean | NbPasswordStrategyModule = {\n *    alwaysFail: false,\n *    endpoint: 'login',\n *    method: 'post',\n *    requireValidToken: true,\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Login/Email combination is not correct, please try again.'],\n *    defaultMessages: ['You have been successfully logged in.'],\n *  };\n *  register?: boolean | NbPasswordStrategyModule = {\n *    alwaysFail: false,\n *    endpoint: 'register',\n *    method: 'post',\n *    requireValidToken: true,\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully registered.'],\n *  };\n *  requestPass?: boolean | NbPasswordStrategyModule = {\n *    endpoint: 'request-pass',\n *    method: 'post',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Reset password instructions have been sent to your email.'],\n *  };\n *  resetPass?: boolean | NbPasswordStrategyReset = {\n *    endpoint: 'reset-pass',\n *    method: 'put',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    resetPasswordTokenKey: 'reset_password_token',\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your password has been successfully changed.'],\n *  };\n *  logout?: boolean | NbPasswordStrategyReset = {\n *    alwaysFail: false,\n *    endpoint: 'logout',\n *    method: 'delete',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully logged out.'],\n *  };\n *  refreshToken?: boolean | NbPasswordStrategyModule = {\n *    endpoint: 'refresh-token',\n *    method: 'post',\n *    requireValidToken: true,\n *    redirect: {\n *      success: null,\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your token has been successfully refreshed.'],\n *  };\n *  token?: NbPasswordStrategyToken = {\n *    class: NbAuthSimpleToken,\n *    key: 'data.token',\n *    getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.body,\n *      options.token.key,\n *    ),\n *  };\n *  errors?: NbPasswordStrategyMessage = {\n *    key: 'data.errors',\n *    getter: (module: string, res: HttpErrorResponse, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.error,\n *      options.errors.key,\n *      options[module].defaultErrors,\n *    ),\n *  };\n *  messages?: NbPasswordStrategyMessage = {\n *    key: 'data.messages',\n *    getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.body,\n *      options.messages.key,\n *      options[module].defaultMessages,\n *    ),\n *  };\n *  validation?: {\n *    password?: {\n *      required?: boolean;\n *      minLength?: number | null;\n *      maxLength?: number | null;\n *      regexp?: string | null;\n *    };\n *    email?: {\n *      required?: boolean;\n *      regexp?: string | null;\n *    };\n *    fullName?: {\n *      required?: boolean;\n *      minLength?: number | null;\n *      maxLength?: number | null;\n *      regexp?: string | null;\n *    };\n *  };\n *}\n * ```\n */\n\nvar NbPasswordAuthStrategy = /*#__PURE__*/function (_NbAuthStrategy3) {\n  _inherits(NbPasswordAuthStrategy, _NbAuthStrategy3);\n\n  var _super15 = _createSuper(NbPasswordAuthStrategy);\n\n  function NbPasswordAuthStrategy(http, route) {\n    var _this21;\n\n    _classCallCheck(this, NbPasswordAuthStrategy);\n\n    _this21 = _super15.call(this);\n    _this21.http = http;\n    _this21.route = route;\n    _this21.defaultOptions = passwordStrategyOptions;\n    return _this21;\n  }\n\n  _createClass(NbPasswordAuthStrategy, [{\n    key: \"authenticate\",\n    value: function authenticate(data) {\n      var _this22 = this;\n\n      var module = 'login';\n      var method = this.getOption(\"\".concat(module, \".method\"));\n      var url = this.getActionEndpoint(module);\n      var requireValidToken = this.getOption(\"\".concat(module, \".requireValidToken\"));\n      return this.http.request(method, url, {\n        body: data,\n        observe: 'response',\n        headers: this.getHeaders()\n      }).pipe(map(function (res) {\n        if (_this22.getOption(\"\".concat(module, \".alwaysFail\"))) {\n          throw _this22.createFailResponse(data);\n        }\n\n        return res;\n      }), map(function (res) {\n        return new NbAuthResult(true, res, _this22.getOption(\"\".concat(module, \".redirect.success\")), [], _this22.getOption('messages.getter')(module, res, _this22.options), _this22.createToken(_this22.getOption('token.getter')(module, res, _this22.options), requireValidToken));\n      }), catchError(function (res) {\n        return _this22.handleResponseError(res, module);\n      }));\n    }\n  }, {\n    key: \"register\",\n    value: function register(data) {\n      var _this23 = this;\n\n      var module = 'register';\n      var method = this.getOption(\"\".concat(module, \".method\"));\n      var url = this.getActionEndpoint(module);\n      var requireValidToken = this.getOption(\"\".concat(module, \".requireValidToken\"));\n      return this.http.request(method, url, {\n        body: data,\n        observe: 'response',\n        headers: this.getHeaders()\n      }).pipe(map(function (res) {\n        if (_this23.getOption(\"\".concat(module, \".alwaysFail\"))) {\n          throw _this23.createFailResponse(data);\n        }\n\n        return res;\n      }), map(function (res) {\n        return new NbAuthResult(true, res, _this23.getOption(\"\".concat(module, \".redirect.success\")), [], _this23.getOption('messages.getter')(module, res, _this23.options), _this23.createToken(_this23.getOption('token.getter')('login', res, _this23.options), requireValidToken));\n      }), catchError(function (res) {\n        return _this23.handleResponseError(res, module);\n      }));\n    }\n  }, {\n    key: \"requestPassword\",\n    value: function requestPassword(data) {\n      var _this24 = this;\n\n      var module = 'requestPass';\n      var method = this.getOption(\"\".concat(module, \".method\"));\n      var url = this.getActionEndpoint(module);\n      return this.http.request(method, url, {\n        body: data,\n        observe: 'response',\n        headers: this.getHeaders()\n      }).pipe(map(function (res) {\n        if (_this24.getOption(\"\".concat(module, \".alwaysFail\"))) {\n          throw _this24.createFailResponse();\n        }\n\n        return res;\n      }), map(function (res) {\n        return new NbAuthResult(true, res, _this24.getOption(\"\".concat(module, \".redirect.success\")), [], _this24.getOption('messages.getter')(module, res, _this24.options));\n      }), catchError(function (res) {\n        return _this24.handleResponseError(res, module);\n      }));\n    }\n  }, {\n    key: \"resetPassword\",\n    value: function resetPassword() {\n      var _this25 = this;\n\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var module = 'resetPass';\n      var method = this.getOption(\"\".concat(module, \".method\"));\n      var url = this.getActionEndpoint(module);\n      var tokenKey = this.getOption(\"\".concat(module, \".resetPasswordTokenKey\"));\n      data[tokenKey] = this.route.snapshot.queryParams[tokenKey];\n      return this.http.request(method, url, {\n        body: data,\n        observe: 'response',\n        headers: this.getHeaders()\n      }).pipe(map(function (res) {\n        if (_this25.getOption(\"\".concat(module, \".alwaysFail\"))) {\n          throw _this25.createFailResponse();\n        }\n\n        return res;\n      }), map(function (res) {\n        return new NbAuthResult(true, res, _this25.getOption(\"\".concat(module, \".redirect.success\")), [], _this25.getOption('messages.getter')(module, res, _this25.options));\n      }), catchError(function (res) {\n        return _this25.handleResponseError(res, module);\n      }));\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      var _this26 = this;\n\n      var module = 'logout';\n      var method = this.getOption(\"\".concat(module, \".method\"));\n      var url = this.getActionEndpoint(module);\n      return of({}).pipe(switchMap(function (res) {\n        if (!url) {\n          return of(res);\n        }\n\n        return _this26.http.request(method, url, {\n          observe: 'response',\n          headers: _this26.getHeaders()\n        });\n      }), map(function (res) {\n        if (_this26.getOption(\"\".concat(module, \".alwaysFail\"))) {\n          throw _this26.createFailResponse();\n        }\n\n        return res;\n      }), map(function (res) {\n        return new NbAuthResult(true, res, _this26.getOption(\"\".concat(module, \".redirect.success\")), [], _this26.getOption('messages.getter')(module, res, _this26.options));\n      }), catchError(function (res) {\n        return _this26.handleResponseError(res, module);\n      }));\n    }\n  }, {\n    key: \"refreshToken\",\n    value: function refreshToken(data) {\n      var _this27 = this;\n\n      var module = 'refreshToken';\n      var method = this.getOption(\"\".concat(module, \".method\"));\n      var url = this.getActionEndpoint(module);\n      var requireValidToken = this.getOption(\"\".concat(module, \".requireValidToken\"));\n      return this.http.request(method, url, {\n        body: data,\n        observe: 'response',\n        headers: this.getHeaders()\n      }).pipe(map(function (res) {\n        if (_this27.getOption(\"\".concat(module, \".alwaysFail\"))) {\n          throw _this27.createFailResponse(data);\n        }\n\n        return res;\n      }), map(function (res) {\n        return new NbAuthResult(true, res, _this27.getOption(\"\".concat(module, \".redirect.success\")), [], _this27.getOption('messages.getter')(module, res, _this27.options), _this27.createToken(_this27.getOption('token.getter')(module, res, _this27.options), requireValidToken));\n      }), catchError(function (res) {\n        return _this27.handleResponseError(res, module);\n      }));\n    }\n  }, {\n    key: \"handleResponseError\",\n    value: function handleResponseError(res, module) {\n      var errors = [];\n\n      if (res instanceof HttpErrorResponse) {\n        errors = this.getOption('errors.getter')(module, res, this.options);\n      } else if (res instanceof NbAuthIllegalTokenError) {\n        errors.push(res.message);\n      } else {\n        errors.push('Something went wrong.');\n      }\n\n      return of(new NbAuthResult(false, res, this.getOption(\"\".concat(module, \".redirect.failure\")), errors));\n    }\n  }], [{\n    key: \"setup\",\n    value: function setup(options) {\n      return [NbPasswordAuthStrategy, options];\n    }\n  }]);\n\n  return NbPasswordAuthStrategy;\n}(NbAuthStrategy);\n\nNbPasswordAuthStrategy.ɵfac = function NbPasswordAuthStrategy_Factory(t) {\n  return new (t || NbPasswordAuthStrategy)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ActivatedRoute));\n};\n\nNbPasswordAuthStrategy.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbPasswordAuthStrategy,\n  factory: NbPasswordAuthStrategy.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbPasswordAuthStrategy, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: i2.ActivatedRoute\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nvar NbAuthBlockComponent = /*#__PURE__*/_createClass(function NbAuthBlockComponent() {\n  _classCallCheck(this, NbAuthBlockComponent);\n});\n\nNbAuthBlockComponent.ɵfac = function NbAuthBlockComponent_Factory(t) {\n  return new (t || NbAuthBlockComponent)();\n};\n\nNbAuthBlockComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NbAuthBlockComponent,\n  selectors: [[\"nb-auth-block\"]],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NbAuthBlockComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  styles: [\"[_nghost-%COMP%]{display:block;width:100%;max-width:35rem}[_nghost-%COMP%]     form{width:100%}[_nghost-%COMP%]     .label{display:block;margin-bottom:.5rem}[_nghost-%COMP%]     .forgot-password{text-decoration:none;margin-bottom:.5rem}[_nghost-%COMP%]     .caption{margin-top:.5rem}[_nghost-%COMP%]     .alert{text-align:center}[_nghost-%COMP%]     .title{margin-top:0;margin-bottom:.75rem;text-align:center}[_nghost-%COMP%]     .sub-title{margin-bottom:2rem;text-align:center}[_nghost-%COMP%]     .form-control-group{margin-bottom:2rem}[_nghost-%COMP%]     .form-control-group.accept-group{display:flex;justify-content:space-between;margin:2rem 0}[_nghost-%COMP%]     .label-with-link{display:flex;justify-content:space-between}[_nghost-%COMP%]     .links{text-align:center;margin-top:1.75rem}[_nghost-%COMP%]     .links .socials{margin-top:1.5rem}[_nghost-%COMP%]     .links .socials a{margin:0 1rem;text-decoration:none;vertical-align:middle}[_nghost-%COMP%]     .links .socials a.with-icon{font-size:2rem}[_nghost-%COMP%]     .another-action{margin-top:2rem;text-align:center}[_nghost-%COMP%]     .sign-in-or-up{margin-top:2rem;display:flex;justify-content:space-between}[_nghost-%COMP%]     nb-alert .alert-title, [_nghost-%COMP%]     nb-alert .alert-message{margin:0 0 .5rem}[_nghost-%COMP%]     nb-alert .alert-message-list{list-style-type:none;padding:0;margin:0}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbAuthBlockComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nb-auth-block',\n      template: \"\\n    <ng-content></ng-content>\\n  \",\n      styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host{display:block;width:100%;max-width:35rem}:host ::ng-deep form{width:100%}:host ::ng-deep .label{display:block;margin-bottom:.5rem}:host ::ng-deep .forgot-password{text-decoration:none;margin-bottom:.5rem}:host ::ng-deep .caption{margin-top:.5rem}:host ::ng-deep .alert{text-align:center}:host ::ng-deep .title{margin-top:0;margin-bottom:.75rem;text-align:center}:host ::ng-deep .sub-title{margin-bottom:2rem;text-align:center}:host ::ng-deep .form-control-group{margin-bottom:2rem}:host ::ng-deep .form-control-group.accept-group{display:flex;justify-content:space-between;margin:2rem 0}:host ::ng-deep .label-with-link{display:flex;justify-content:space-between}:host ::ng-deep .links{text-align:center;margin-top:1.75rem}:host ::ng-deep .links .socials{margin-top:1.5rem}:host ::ng-deep .links .socials a{margin:0 1rem;text-decoration:none;vertical-align:middle}:host ::ng-deep .links .socials a.with-icon{font-size:2rem}:host ::ng-deep .another-action{margin-top:2rem;text-align:center}:host ::ng-deep .sign-in-or-up{margin-top:2rem;display:flex;justify-content:space-between}:host ::ng-deep nb-alert .alert-title,:host ::ng-deep nb-alert .alert-message{margin:0 0 .5rem}:host ::ng-deep nb-alert .alert-message-list{list-style-type:none;padding:0;margin:0}\\n\"]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nvar NbAuthComponent = /*#__PURE__*/function () {\n  // showcase of how to use the onAuthenticationChange method\n  function NbAuthComponent(auth, location) {\n    var _this28 = this;\n\n    _classCallCheck(this, NbAuthComponent);\n\n    this.auth = auth;\n    this.location = location;\n    this.destroy$ = new Subject();\n    this.authenticated = false;\n    this.token = '';\n    this.subscription = auth.onAuthenticationChange().pipe(takeUntil(this.destroy$)).subscribe(function (authenticated) {\n      _this28.authenticated = authenticated;\n    });\n  }\n\n  _createClass(NbAuthComponent, [{\n    key: \"back\",\n    value: function back() {\n      this.location.back();\n      return false;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NbAuthComponent;\n}();\n\nNbAuthComponent.ɵfac = function NbAuthComponent_Factory(t) {\n  return new (t || NbAuthComponent)(i0.ɵɵdirectiveInject(NbAuthService), i0.ɵɵdirectiveInject(i3.Location));\n};\n\nNbAuthComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NbAuthComponent,\n  selectors: [[\"nb-auth\"]],\n  decls: 10,\n  vars: 0,\n  consts: [[1, \"navigation\"], [\"href\", \"#\", \"aria-label\", \"Back\", 1, \"link\", \"back-link\", 3, \"click\"], [\"icon\", \"arrow-back\"]],\n  template: function NbAuthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nb-layout\")(1, \"nb-layout-column\")(2, \"nb-card\")(3, \"nb-card-header\")(4, \"nav\", 0)(5, \"a\", 1);\n      i0.ɵɵlistener(\"click\", function NbAuthComponent_Template_a_click_5_listener() {\n        return ctx.back();\n      });\n      i0.ɵɵelement(6, \"nb-icon\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"nb-card-body\")(8, \"nb-auth-block\");\n      i0.ɵɵelement(9, \"router-outlet\");\n      i0.ɵɵelementEnd()()()()();\n    }\n  },\n  dependencies: [i4.NbLayoutComponent, i4.NbLayoutColumnComponent, i4.NbCardComponent, i4.NbCardBodyComponent, i4.NbCardHeaderComponent, i2.RouterOutlet, i4.NbIconComponent, NbAuthBlockComponent],\n  styles: [\".visually-hidden[_ngcontent-%COMP%]{position:absolute!important;height:1px;width:1px;overflow:hidden;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px)}.cdk-overlay-container[_ngcontent-%COMP%], .cdk-global-overlay-wrapper[_ngcontent-%COMP%]{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container[_ngcontent-%COMP%]{position:fixed;z-index:1000}.cdk-overlay-container[_ngcontent-%COMP%]:empty{display:none}.cdk-global-overlay-wrapper[_ngcontent-%COMP%]{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane[_ngcontent-%COMP%]{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop[_ngcontent-%COMP%]{position:absolute;inset:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing[_ngcontent-%COMP%]{opacity:1}.cdk-high-contrast-active[_ngcontent-%COMP%]   .cdk-overlay-backdrop.cdk-overlay-backdrop-showing[_ngcontent-%COMP%]{opacity:.6}.cdk-overlay-dark-backdrop[_ngcontent-%COMP%]{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop[_ngcontent-%COMP%]{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing[_ngcontent-%COMP%]{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation[_ngcontent-%COMP%]{transition:none}.cdk-overlay-connected-position-bounding-box[_ngcontent-%COMP%]{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock[_ngcontent-%COMP%]{position:fixed;width:100%;overflow-y:scroll}.nb-global-scrollblock[_ngcontent-%COMP%]{position:static;width:auto;overflow:hidden}html[_ngcontent-%COMP%]{box-sizing:border-box}*[_ngcontent-%COMP%], *[_ngcontent-%COMP%]:before, *[_ngcontent-%COMP%]:after{box-sizing:inherit}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{margin:0;padding:0}html[_ngcontent-%COMP%]{line-height:1.15;-webkit-text-size-adjust:100%}body[_ngcontent-%COMP%]{margin:0}h1[_ngcontent-%COMP%]{font-size:2em;margin:.67em 0}hr[_ngcontent-%COMP%]{box-sizing:content-box;height:0;overflow:visible}pre[_ngcontent-%COMP%]{font-family:monospace,monospace;font-size:1em}a[_ngcontent-%COMP%]{background-color:transparent}abbr[title][_ngcontent-%COMP%]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b[_ngcontent-%COMP%], strong[_ngcontent-%COMP%]{font-weight:bolder}code[_ngcontent-%COMP%], kbd[_ngcontent-%COMP%], samp[_ngcontent-%COMP%]{font-family:monospace,monospace;font-size:1em}small[_ngcontent-%COMP%]{font-size:80%}sub[_ngcontent-%COMP%], sup[_ngcontent-%COMP%]{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub[_ngcontent-%COMP%]{bottom:-.25em}sup[_ngcontent-%COMP%]{top:-.5em}img[_ngcontent-%COMP%]{border-style:none}button[_ngcontent-%COMP%], input[_ngcontent-%COMP%], optgroup[_ngcontent-%COMP%], select[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button[_ngcontent-%COMP%], input[_ngcontent-%COMP%]{overflow:visible}button[_ngcontent-%COMP%], select[_ngcontent-%COMP%]{text-transform:none}button[_ngcontent-%COMP%], [type=button][_ngcontent-%COMP%], [type=reset][_ngcontent-%COMP%], [type=submit][_ngcontent-%COMP%]{-webkit-appearance:button}button[_ngcontent-%COMP%]::-moz-focus-inner, [type=button][_ngcontent-%COMP%]::-moz-focus-inner, [type=reset][_ngcontent-%COMP%]::-moz-focus-inner, [type=submit][_ngcontent-%COMP%]::-moz-focus-inner{border-style:none;padding:0}button[_ngcontent-%COMP%]:-moz-focusring, [type=button][_ngcontent-%COMP%]:-moz-focusring, [type=reset][_ngcontent-%COMP%]:-moz-focusring, [type=submit][_ngcontent-%COMP%]:-moz-focusring{outline:1px dotted ButtonText}fieldset[_ngcontent-%COMP%]{padding:.35em .75em .625em}legend[_ngcontent-%COMP%]{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress[_ngcontent-%COMP%]{vertical-align:baseline}textarea[_ngcontent-%COMP%]{overflow:auto}[type=checkbox][_ngcontent-%COMP%], [type=radio][_ngcontent-%COMP%]{box-sizing:border-box;padding:0}[type=number][_ngcontent-%COMP%]::-webkit-inner-spin-button, [type=number][_ngcontent-%COMP%]::-webkit-outer-spin-button{height:auto}[type=search][_ngcontent-%COMP%]{-webkit-appearance:textfield;outline-offset:-2px}[type=search][_ngcontent-%COMP%]::-webkit-search-decoration{-webkit-appearance:none}[_ngcontent-%COMP%]::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details[_ngcontent-%COMP%]{display:block}summary[_ngcontent-%COMP%]{display:list-item}template[_ngcontent-%COMP%]{display:none}[hidden][_ngcontent-%COMP%]{display:none}[_nghost-%COMP%]   nb-card[_ngcontent-%COMP%]{margin:0;height:calc(100vh - 5rem)}[_nghost-%COMP%]   .navigation[_ngcontent-%COMP%]   .link[_ngcontent-%COMP%]{display:inline-block;text-decoration:none}[_nghost-%COMP%]   .navigation[_ngcontent-%COMP%]   .link[_ngcontent-%COMP%]   nb-icon[_ngcontent-%COMP%]{font-size:2rem;vertical-align:middle}[_nghost-%COMP%]   .links[_ngcontent-%COMP%]   nb-icon[_ngcontent-%COMP%]{font-size:2.5rem}[_nghost-%COMP%]   nb-card-body[_ngcontent-%COMP%]{display:flex;width:100%}[_nghost-%COMP%]   nb-auth-block[_ngcontent-%COMP%]{margin:auto}@media (max-width: 767.98px){[_nghost-%COMP%]   nb-card[_ngcontent-%COMP%]{border-radius:0;height:100vh}}[_nghost-%COMP%]     nb-layout .layout .layout-container .content .columns nb-layout-column{padding:2.5rem}@media (max-width: 767.98px){[_nghost-%COMP%]     nb-layout .layout .layout-container .content .columns nb-layout-column{padding:0}}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbAuthComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nb-auth',\n      template: \"\\n    <nb-layout>\\n      <nb-layout-column>\\n        <nb-card>\\n          <nb-card-header>\\n            <nav class=\\\"navigation\\\">\\n              <a href=\\\"#\\\" (click)=\\\"back()\\\" class=\\\"link back-link\\\" aria-label=\\\"Back\\\">\\n                <nb-icon icon=\\\"arrow-back\\\"></nb-icon>\\n              </a>\\n            </nav>\\n          </nb-card-header>\\n          <nb-card-body>\\n            <nb-auth-block>\\n              <router-outlet></router-outlet>\\n            </nb-auth-block>\\n          </nb-card-body>\\n        </nb-card>\\n      </nb-layout-column>\\n    </nb-layout>\\n  \",\n      styles: [\"/*!\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */.visually-hidden{position:absolute!important;height:1px;width:1px;overflow:hidden;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px)}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;inset:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}.nb-global-scrollblock{position:static;width:auto;overflow:hidden}/*\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n *//*!\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */html{box-sizing:border-box}*,*:before,*:after{box-sizing:inherit}html,body{margin:0;padding:0}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host nb-card{margin:0;height:calc(100vh - 5rem)}:host .navigation .link{display:inline-block;text-decoration:none}:host .navigation .link nb-icon{font-size:2rem;vertical-align:middle}:host .links nb-icon{font-size:2.5rem}:host nb-card-body{display:flex;width:100%}:host nb-auth-block{margin:auto}@media (max-width: 767.98px){:host nb-card{border-radius:0;height:100vh}}:host ::ng-deep nb-layout .layout .layout-container .content .columns nb-layout-column{padding:2.5rem}@media (max-width: 767.98px){:host ::ng-deep nb-layout .layout .layout-container .content .columns nb-layout-column{padding:0}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NbAuthService\n    }, {\n      type: i3.Location\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nvar NbLoginComponent = /*#__PURE__*/function () {\n  function NbLoginComponent(service) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var cd = arguments.length > 2 ? arguments[2] : undefined;\n    var router = arguments.length > 3 ? arguments[3] : undefined;\n\n    _classCallCheck(this, NbLoginComponent);\n\n    this.service = service;\n    this.options = options;\n    this.cd = cd;\n    this.router = router;\n    this.redirectDelay = 0;\n    this.showMessages = {};\n    this.strategy = '';\n    this.errors = [];\n    this.messages = [];\n    this.user = {};\n    this.submitted = false;\n    this.socialLinks = [];\n    this.rememberMe = false;\n    this.redirectDelay = this.getConfigValue('forms.login.redirectDelay');\n    this.showMessages = this.getConfigValue('forms.login.showMessages');\n    this.strategy = this.getConfigValue('forms.login.strategy');\n    this.socialLinks = this.getConfigValue('forms.login.socialLinks');\n    this.rememberMe = this.getConfigValue('forms.login.rememberMe');\n  }\n\n  _createClass(NbLoginComponent, [{\n    key: \"login\",\n    value: function login() {\n      var _this29 = this;\n\n      this.errors = [];\n      this.messages = [];\n      this.submitted = true;\n      this.service.authenticate(this.strategy, this.user).subscribe(function (result) {\n        _this29.submitted = false;\n\n        if (result.isSuccess()) {\n          _this29.messages = result.getMessages();\n        } else {\n          _this29.errors = result.getErrors();\n        }\n\n        var redirect = result.getRedirect();\n\n        if (redirect) {\n          setTimeout(function () {\n            return _this29.router.navigateByUrl(redirect);\n          }, _this29.redirectDelay);\n        }\n\n        _this29.cd.detectChanges();\n      });\n    }\n  }, {\n    key: \"getConfigValue\",\n    value: function getConfigValue(key) {\n      return getDeepFromObject(this.options, key, null);\n    }\n  }]);\n\n  return NbLoginComponent;\n}();\n\nNbLoginComponent.ɵfac = function NbLoginComponent_Factory(t) {\n  return new (t || NbLoginComponent)(i0.ɵɵdirectiveInject(NbAuthService), i0.ɵɵdirectiveInject(NB_AUTH_OPTIONS), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nNbLoginComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NbLoginComponent,\n  selectors: [[\"nb-login\"]],\n  decls: 32,\n  vars: 19,\n  consts: [[\"id\", \"title\", 1, \"title\"], [1, \"sub-title\"], [\"outline\", \"danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"outline\", \"success\", \"role\", \"alert\", 4, \"ngIf\"], [\"aria-labelledby\", \"title\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form-control-group\"], [\"for\", \"input-email\", 1, \"label\"], [\"nbInput\", \"\", \"fullWidth\", \"\", \"name\", \"email\", \"id\", \"input-email\", \"pattern\", \".+@.+\\\\..+\", \"placeholder\", \"Email address\", \"fieldSize\", \"large\", \"autofocus\", \"\", 3, \"ngModel\", \"status\", \"required\", \"ngModelChange\"], [\"email\", \"ngModel\"], [4, \"ngIf\"], [1, \"label-with-link\"], [\"for\", \"input-password\", 1, \"label\"], [\"routerLink\", \"../request-password\", 1, \"forgot-password\", \"caption-2\"], [\"nbInput\", \"\", \"fullWidth\", \"\", \"name\", \"password\", \"type\", \"password\", \"id\", \"input-password\", \"placeholder\", \"Password\", \"fieldSize\", \"large\", 3, \"ngModel\", \"status\", \"required\", \"minlength\", \"maxlength\", \"ngModelChange\"], [\"password\", \"ngModel\"], [1, \"form-control-group\", \"accept-group\"], [\"name\", \"rememberMe\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"nbButton\", \"\", \"fullWidth\", \"\", \"status\", \"primary\", \"size\", \"large\", 3, \"disabled\"], [\"class\", \"links\", \"aria-label\", \"Social sign in\", 4, \"ngIf\"], [\"aria-label\", \"Register\", 1, \"another-action\"], [\"routerLink\", \"../register\", 1, \"text-link\"], [\"outline\", \"danger\", \"role\", \"alert\"], [1, \"alert-title\"], [1, \"alert-message-list\"], [\"class\", \"alert-message\", 4, \"ngFor\", \"ngForOf\"], [1, \"alert-message\"], [\"outline\", \"success\", \"role\", \"alert\"], [\"class\", \"caption status-danger\", 4, \"ngIf\"], [1, \"caption\", \"status-danger\"], [\"name\", \"rememberMe\", 3, \"ngModel\", \"ngModelChange\"], [\"aria-label\", \"Social sign in\", 1, \"links\"], [1, \"socials\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\", \"with-icon\", 4, \"ngIf\"], [3, \"with-icon\", 4, \"ngIf\"], [3, \"routerLink\"], [3, \"icon\", 4, \"ngIf\", \"ngIfElse\"], [\"title\", \"\"], [3, \"icon\"]],\n  template: function NbLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\", 1);\n      i0.ɵɵtext(3, \"Hello! Log in with your email.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, NbLoginComponent_nb_alert_4_Template, 6, 1, \"nb-alert\", 2);\n      i0.ɵɵtemplate(5, NbLoginComponent_nb_alert_5_Template, 6, 1, \"nb-alert\", 3);\n      i0.ɵɵelementStart(6, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function NbLoginComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Email address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function NbLoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, NbLoginComponent_ng_container_13_Template, 3, 2, \"ng-container\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 6)(15, \"span\", 11)(16, \"label\", 12);\n      i0.ɵɵtext(17, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"a\", 13);\n      i0.ɵɵtext(19, \"Forgot Password?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"input\", 14, 15);\n      i0.ɵɵlistener(\"ngModelChange\", function NbLoginComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, NbLoginComponent_ng_container_22_Template, 3, 2, \"ng-container\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 16);\n      i0.ɵɵtemplate(24, NbLoginComponent_nb_checkbox_24_Template, 2, 1, \"nb-checkbox\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"button\", 18);\n      i0.ɵɵtext(26, \" Log In \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(27, NbLoginComponent_section_27_Template, 4, 1, \"section\", 19);\n      i0.ɵɵelementStart(28, \"section\", 20);\n      i0.ɵɵtext(29, \" Don't have an account? \");\n      i0.ɵɵelementStart(30, \"a\", 21);\n      i0.ɵɵtext(31, \"Register\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      var _r2 = i0.ɵɵreference(7);\n\n      var _r3 = i0.ɵɵreference(12);\n\n      var _r5 = i0.ɵɵreference(21);\n\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.error && (ctx.errors == null ? null : ctx.errors.length) && !ctx.submitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.success && (ctx.messages == null ? null : ctx.messages.length) && !ctx.submitted);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email)(\"status\", _r3.dirty ? _r3.invalid ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.email.required\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r3.invalid && _r3.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r3.touched);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password)(\"status\", _r5.dirty ? _r5.invalid ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.password.required\"))(\"minlength\", ctx.getConfigValue(\"forms.validation.password.minLength\"))(\"maxlength\", ctx.getConfigValue(\"forms.validation.password.maxLength\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r5.invalid && _r5.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r5.invalid && _r5.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.rememberMe);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"btn-pulse\", ctx.submitted);\n      i0.ɵɵproperty(\"disabled\", ctx.submitted || !_r2.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.socialLinks && ctx.socialLinks.length > 0);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.NbCheckboxComponent, i4.NbAlertComponent, i4.NbInputDirective, i4.NbButtonComponent, i2.RouterLinkWithHref, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.MinLengthValidator, i5.MaxLengthValidator, i5.PatternValidator, i5.NgModel, i5.NgForm, i4.NbIconComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbLoginComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nb-login',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Login</h1>\\n<p class=\\\"sub-title\\\">Hello! Log in with your email.</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"login()\\\" #form=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Email address:</label>\\n    <input nbInput\\n           fullWidth\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           name=\\\"email\\\"\\n           id=\\\"input-email\\\"\\n           pattern=\\\".+@.+\\\\..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           fieldSize=\\\"large\\\"\\n           autofocus\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <span class=\\\"label-with-link\\\">\\n      <label class=\\\"label\\\" for=\\\"input-password\\\">Password:</label>\\n      <a class=\\\"forgot-password caption-2\\\" routerLink=\\\"../request-password\\\">Forgot Password?</a>\\n    </span>\\n    <input nbInput\\n           fullWidth\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           name=\\\"password\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           placeholder=\\\"Password\\\"\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched \\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contain\\n        from {{ getConfigValue('forms.validation.password.minLength') }}\\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group accept-group\\\">\\n    <nb-checkbox name=\\\"rememberMe\\\" [(ngModel)]=\\\"user.rememberMe\\\" *ngIf=\\\"rememberMe\\\">Remember me</nb-checkbox>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !form.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Log In\\n  </button>\\n</form>\\n\\n<section *ngIf=\\\"socialLinks && socialLinks.length > 0\\\" class=\\\"links\\\" aria-label=\\\"Social sign in\\\">\\n  or enter with:\\n  <div class=\\\"socials\\\">\\n    <ng-container *ngFor=\\\"let socialLink of socialLinks\\\">\\n      <a *ngIf=\\\"socialLink.link\\\"\\n         [routerLink]=\\\"socialLink.link\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n      <a *ngIf=\\\"socialLink.url\\\"\\n         [attr.href]=\\\"socialLink.url\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n    </ng-container>\\n  </div>\\n</section>\\n\\n<section class=\\\"another-action\\\" aria-label=\\\"Register\\\">\\n  Don't have an account? <a class=\\\"text-link\\\" routerLink=\\\"../register\\\">Register</a>\\n</section>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: NbAuthService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_OPTIONS]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Router\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nvar NbRegisterComponent = /*#__PURE__*/function () {\n  function NbRegisterComponent(service) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var cd = arguments.length > 2 ? arguments[2] : undefined;\n    var router = arguments.length > 3 ? arguments[3] : undefined;\n\n    _classCallCheck(this, NbRegisterComponent);\n\n    this.service = service;\n    this.options = options;\n    this.cd = cd;\n    this.router = router;\n    this.redirectDelay = 0;\n    this.showMessages = {};\n    this.strategy = '';\n    this.submitted = false;\n    this.errors = [];\n    this.messages = [];\n    this.user = {};\n    this.socialLinks = [];\n    this.redirectDelay = this.getConfigValue('forms.register.redirectDelay');\n    this.showMessages = this.getConfigValue('forms.register.showMessages');\n    this.strategy = this.getConfigValue('forms.register.strategy');\n    this.socialLinks = this.getConfigValue('forms.login.socialLinks');\n  }\n\n  _createClass(NbRegisterComponent, [{\n    key: \"register\",\n    value: function register() {\n      var _this30 = this;\n\n      this.errors = this.messages = [];\n      this.submitted = true;\n      this.service.register(this.strategy, this.user).subscribe(function (result) {\n        _this30.submitted = false;\n\n        if (result.isSuccess()) {\n          _this30.messages = result.getMessages();\n        } else {\n          _this30.errors = result.getErrors();\n        }\n\n        var redirect = result.getRedirect();\n\n        if (redirect) {\n          setTimeout(function () {\n            return _this30.router.navigateByUrl(redirect);\n          }, _this30.redirectDelay);\n        }\n\n        _this30.cd.detectChanges();\n      });\n    }\n  }, {\n    key: \"getConfigValue\",\n    value: function getConfigValue(key) {\n      return getDeepFromObject(this.options, key, null);\n    }\n  }]);\n\n  return NbRegisterComponent;\n}();\n\nNbRegisterComponent.ɵfac = function NbRegisterComponent_Factory(t) {\n  return new (t || NbRegisterComponent)(i0.ɵɵdirectiveInject(NbAuthService), i0.ɵɵdirectiveInject(NB_AUTH_OPTIONS), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nNbRegisterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NbRegisterComponent,\n  selectors: [[\"nb-register\"]],\n  decls: 38,\n  vars: 31,\n  consts: [[\"id\", \"title\", 1, \"title\"], [\"outline\", \"danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"outline\", \"success\", \"role\", \"alert\", 4, \"ngIf\"], [\"aria-labelledby\", \"title\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form-control-group\"], [\"for\", \"input-name\", 1, \"label\"], [\"nbInput\", \"\", \"id\", \"input-name\", \"name\", \"fullName\", \"placeholder\", \"Full name\", \"autofocus\", \"\", \"fullWidth\", \"\", \"fieldSize\", \"large\", 3, \"ngModel\", \"status\", \"required\", \"minlength\", \"maxlength\", \"ngModelChange\"], [\"fullName\", \"ngModel\"], [4, \"ngIf\"], [\"for\", \"input-email\", 1, \"label\"], [\"nbInput\", \"\", \"id\", \"input-email\", \"name\", \"email\", \"pattern\", \".+@.+..+\", \"placeholder\", \"Email address\", \"fullWidth\", \"\", \"fieldSize\", \"large\", 3, \"ngModel\", \"status\", \"required\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"for\", \"input-password\", 1, \"label\"], [\"nbInput\", \"\", \"type\", \"password\", \"id\", \"input-password\", \"name\", \"password\", \"placeholder\", \"Password\", \"fullWidth\", \"\", \"fieldSize\", \"large\", 3, \"ngModel\", \"status\", \"required\", \"minlength\", \"maxlength\", \"ngModelChange\"], [\"password\", \"ngModel\"], [\"for\", \"input-re-password\", 1, \"label\"], [\"nbInput\", \"\", \"type\", \"password\", \"id\", \"input-re-password\", \"name\", \"rePass\", \"placeholder\", \"Confirm Password\", \"fullWidth\", \"\", \"fieldSize\", \"large\", 3, \"ngModel\", \"status\", \"required\", \"ngModelChange\"], [\"rePass\", \"ngModel\"], [\"class\", \"form-control-group accept-group\", 4, \"ngIf\"], [\"nbButton\", \"\", \"fullWidth\", \"\", \"status\", \"primary\", \"size\", \"large\", 3, \"disabled\"], [\"class\", \"links\", \"aria-label\", \"Social sign in\", 4, \"ngIf\"], [\"aria-label\", \"Sign in\", 1, \"another-action\"], [\"routerLink\", \"../login\", 1, \"text-link\"], [\"outline\", \"danger\", \"role\", \"alert\"], [1, \"alert-title\"], [1, \"alert-message-list\"], [\"class\", \"alert-message\", 4, \"ngFor\", \"ngForOf\"], [1, \"alert-message\"], [\"outline\", \"success\", \"role\", \"alert\"], [\"class\", \"caption status-danger\", 4, \"ngIf\"], [1, \"caption\", \"status-danger\"], [1, \"form-control-group\", \"accept-group\"], [\"name\", \"terms\", 3, \"ngModel\", \"required\", \"ngModelChange\"], [\"href\", \"#\", \"target\", \"_blank\"], [\"aria-label\", \"Social sign in\", 1, \"links\"], [1, \"socials\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\", \"with-icon\", 4, \"ngIf\"], [3, \"with-icon\", 4, \"ngIf\"], [3, \"routerLink\"], [3, \"icon\", 4, \"ngIf\", \"ngIfElse\"], [\"title\", \"\"], [3, \"icon\"]],\n  template: function NbRegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, NbRegisterComponent_nb_alert_2_Template, 6, 1, \"nb-alert\", 1);\n      i0.ɵɵtemplate(3, NbRegisterComponent_nb_alert_3_Template, 6, 1, \"nb-alert\", 2);\n      i0.ɵɵelementStart(4, \"form\", 3, 4);\n      i0.ɵɵlistener(\"ngSubmit\", function NbRegisterComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Full name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 7, 8);\n      i0.ɵɵlistener(\"ngModelChange\", function NbRegisterComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.user.fullName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, NbRegisterComponent_ng_container_11_Template, 3, 2, \"ng-container\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 10);\n      i0.ɵɵtext(14, \"Email address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 11, 12);\n      i0.ɵɵlistener(\"ngModelChange\", function NbRegisterComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, NbRegisterComponent_ng_container_17_Template, 3, 2, \"ng-container\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 5)(19, \"label\", 13);\n      i0.ɵɵtext(20, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 14, 15);\n      i0.ɵɵlistener(\"ngModelChange\", function NbRegisterComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(23, NbRegisterComponent_ng_container_23_Template, 3, 2, \"ng-container\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 5)(25, \"label\", 16);\n      i0.ɵɵtext(26, \"Repeat password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"input\", 17, 18);\n      i0.ɵɵlistener(\"ngModelChange\", function NbRegisterComponent_Template_input_ngModelChange_27_listener($event) {\n        return ctx.user.confirmPassword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(29, NbRegisterComponent_ng_container_29_Template, 3, 2, \"ng-container\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(30, NbRegisterComponent_div_30_Template, 6, 2, \"div\", 19);\n      i0.ɵɵelementStart(31, \"button\", 20);\n      i0.ɵɵtext(32, \" Register \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(33, NbRegisterComponent_section_33_Template, 4, 1, \"section\", 21);\n      i0.ɵɵelementStart(34, \"section\", 22);\n      i0.ɵɵtext(35, \" Already have an account? \");\n      i0.ɵɵelementStart(36, \"a\", 23);\n      i0.ɵɵtext(37, \"Log in\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      var _r2 = i0.ɵɵreference(5);\n\n      var _r3 = i0.ɵɵreference(10);\n\n      var _r5 = i0.ɵɵreference(16);\n\n      var _r7 = i0.ɵɵreference(22);\n\n      var _r9 = i0.ɵɵreference(28);\n\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.error && (ctx.errors == null ? null : ctx.errors.length) && !ctx.submitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.success && (ctx.messages == null ? null : ctx.messages.length) && !ctx.submitted);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.fullName)(\"status\", _r3.dirty ? _r3.invalid ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.fullName.required\"))(\"minlength\", ctx.getConfigValue(\"forms.validation.fullName.minLength\"))(\"maxlength\", ctx.getConfigValue(\"forms.validation.fullName.maxLength\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r3.invalid && _r3.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r3.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email)(\"status\", _r5.dirty ? _r5.invalid ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.email.required\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r5.invalid && _r5.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r5.invalid && _r5.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password)(\"status\", _r7.dirty ? _r7.invalid ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.password.required\"))(\"minlength\", ctx.getConfigValue(\"forms.validation.password.minLength\"))(\"maxlength\", ctx.getConfigValue(\"forms.validation.password.maxLength\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r7.invalid && _r7.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r7.invalid && _r7.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.confirmPassword)(\"status\", _r9.dirty ? _r9.invalid || _r7.value != _r9.value ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.password.required\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r9.invalid && _r9.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r9.invalid && _r9.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.getConfigValue(\"forms.register.terms\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"btn-pulse\", ctx.submitted);\n      i0.ɵɵproperty(\"disabled\", ctx.submitted || !_r2.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.socialLinks && ctx.socialLinks.length > 0);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.NbCheckboxComponent, i4.NbAlertComponent, i4.NbInputDirective, i4.NbButtonComponent, i2.RouterLinkWithHref, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.MinLengthValidator, i5.MaxLengthValidator, i5.PatternValidator, i5.NgModel, i5.NgForm, i4.NbIconComponent],\n  styles: [\"[_nghost-%COMP%]   .title[_ngcontent-%COMP%]{margin-bottom:2rem}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbRegisterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nb-register',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Register</h1>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"register()\\\" #form=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-name\\\">Full name:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.fullName\\\"\\n           #fullName=\\\"ngModel\\\"\\n           id=\\\"input-name\\\"\\n           name=\\\"fullName\\\"\\n           placeholder=\\\"Full name\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"fullName.dirty ? (fullName.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.fullName.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.fullName.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.fullName.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"fullName.invalid && fullName.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"fullName.invalid && fullName.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"fullName.errors?.required\\\">\\n        Full name is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"fullName.errors?.minlength || fullName.errors?.maxlength\\\">\\n        Full name should contains\\n        from {{getConfigValue('forms.validation.fullName.minLength')}}\\n        to {{getConfigValue('forms.validation.fullName.maxLength')}}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Email address:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           id=\\\"input-email\\\"\\n           name=\\\"email\\\"\\n           pattern=\\\".+@.+..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-password\\\">Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           name=\\\"password\\\"\\n           placeholder=\\\"Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contain\\n        from {{ getConfigValue('forms.validation.password.minLength') }}\\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-re-password\\\">Repeat password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.confirmPassword\\\"\\n           #rePass=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-re-password\\\"\\n           name=\\\"rePass\\\"\\n           placeholder=\\\"Confirm Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"rePass.dirty ? (rePass.invalid || password.value != rePass.value  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [attr.aria-invalid]=\\\"rePass.invalid && rePass.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"rePass.invalid && rePass.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"rePass.errors?.required\\\">\\n        Password confirmation is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.value != rePass.value && !rePass.errors?.required\\\">\\n        Password does not match the confirm password.\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group accept-group\\\" *ngIf=\\\"getConfigValue('forms.register.terms')\\\">\\n    <nb-checkbox name=\\\"terms\\\" [(ngModel)]=\\\"user.terms\\\" [required]=\\\"getConfigValue('forms.register.terms')\\\">\\n      Agree to <a href=\\\"#\\\" target=\\\"_blank\\\"><strong>Terms & Conditions</strong></a>\\n    </nb-checkbox>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !form.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Register\\n  </button>\\n</form>\\n\\n<section *ngIf=\\\"socialLinks && socialLinks.length > 0\\\" class=\\\"links\\\" aria-label=\\\"Social sign in\\\">\\n  or enter with:\\n  <div class=\\\"socials\\\">\\n    <ng-container *ngFor=\\\"let socialLink of socialLinks\\\">\\n      <a *ngIf=\\\"socialLink.link\\\"\\n         [routerLink]=\\\"socialLink.link\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n      <a *ngIf=\\\"socialLink.url\\\"\\n         [attr.href]=\\\"socialLink.url\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n    </ng-container>\\n  </div>\\n</section>\\n\\n<section class=\\\"another-action\\\" aria-label=\\\"Sign in\\\">\\n  Already have an account? <a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Log in</a>\\n</section>\\n\",\n      styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .title{margin-bottom:2rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NbAuthService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_OPTIONS]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Router\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nvar NbLogoutComponent = /*#__PURE__*/function () {\n  function NbLogoutComponent(service) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var router = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, NbLogoutComponent);\n\n    this.service = service;\n    this.options = options;\n    this.router = router;\n    this.redirectDelay = 0;\n    this.strategy = '';\n    this.redirectDelay = this.getConfigValue('forms.logout.redirectDelay');\n    this.strategy = this.getConfigValue('forms.logout.strategy');\n  }\n\n  _createClass(NbLogoutComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.logout(this.strategy);\n    }\n  }, {\n    key: \"logout\",\n    value: function logout(strategy) {\n      var _this31 = this;\n\n      this.service.logout(strategy).subscribe(function (result) {\n        var redirect = result.getRedirect();\n\n        if (redirect) {\n          setTimeout(function () {\n            return _this31.router.navigateByUrl(redirect);\n          }, _this31.redirectDelay);\n        }\n      });\n    }\n  }, {\n    key: \"getConfigValue\",\n    value: function getConfigValue(key) {\n      return getDeepFromObject(this.options, key, null);\n    }\n  }]);\n\n  return NbLogoutComponent;\n}();\n\nNbLogoutComponent.ɵfac = function NbLogoutComponent_Factory(t) {\n  return new (t || NbLogoutComponent)(i0.ɵɵdirectiveInject(NbAuthService), i0.ɵɵdirectiveInject(NB_AUTH_OPTIONS), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nNbLogoutComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NbLogoutComponent,\n  selectors: [[\"nb-logout\"]],\n  decls: 2,\n  vars: 0,\n  template: function NbLogoutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1, \"Logging out, please wait...\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbLogoutComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nb-logout',\n      template: \"<div>Logging out, please wait...</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: NbAuthService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_OPTIONS]\n      }]\n    }, {\n      type: i2.Router\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nvar NbRequestPasswordComponent = /*#__PURE__*/function () {\n  function NbRequestPasswordComponent(service) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var cd = arguments.length > 2 ? arguments[2] : undefined;\n    var router = arguments.length > 3 ? arguments[3] : undefined;\n\n    _classCallCheck(this, NbRequestPasswordComponent);\n\n    this.service = service;\n    this.options = options;\n    this.cd = cd;\n    this.router = router;\n    this.redirectDelay = 0;\n    this.showMessages = {};\n    this.strategy = '';\n    this.submitted = false;\n    this.errors = [];\n    this.messages = [];\n    this.user = {};\n    this.redirectDelay = this.getConfigValue('forms.requestPassword.redirectDelay');\n    this.showMessages = this.getConfigValue('forms.requestPassword.showMessages');\n    this.strategy = this.getConfigValue('forms.requestPassword.strategy');\n  }\n\n  _createClass(NbRequestPasswordComponent, [{\n    key: \"requestPass\",\n    value: function requestPass() {\n      var _this32 = this;\n\n      this.errors = this.messages = [];\n      this.submitted = true;\n      this.service.requestPassword(this.strategy, this.user).subscribe(function (result) {\n        _this32.submitted = false;\n\n        if (result.isSuccess()) {\n          _this32.messages = result.getMessages();\n        } else {\n          _this32.errors = result.getErrors();\n        }\n\n        var redirect = result.getRedirect();\n\n        if (redirect) {\n          setTimeout(function () {\n            return _this32.router.navigateByUrl(redirect);\n          }, _this32.redirectDelay);\n        }\n\n        _this32.cd.detectChanges();\n      });\n    }\n  }, {\n    key: \"getConfigValue\",\n    value: function getConfigValue(key) {\n      return getDeepFromObject(this.options, key, null);\n    }\n  }]);\n\n  return NbRequestPasswordComponent;\n}();\n\nNbRequestPasswordComponent.ɵfac = function NbRequestPasswordComponent_Factory(t) {\n  return new (t || NbRequestPasswordComponent)(i0.ɵɵdirectiveInject(NbAuthService), i0.ɵɵdirectiveInject(NB_AUTH_OPTIONS), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nNbRequestPasswordComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NbRequestPasswordComponent,\n  selectors: [[\"nb-request-password-page\"]],\n  decls: 23,\n  vars: 10,\n  consts: [[\"id\", \"title\", 1, \"title\"], [1, \"sub-title\"], [\"outline\", \"danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"outline\", \"success\", \"role\", \"alert\", 4, \"ngIf\"], [\"aria-labelledby\", \"title\", 3, \"ngSubmit\"], [\"requestPassForm\", \"ngForm\"], [1, \"form-control-group\"], [\"for\", \"input-email\", 1, \"label\"], [\"nbInput\", \"\", \"id\", \"input-email\", \"name\", \"email\", \"pattern\", \".+@.+\\\\..+\", \"placeholder\", \"Email address\", \"autofocus\", \"\", \"fullWidth\", \"\", \"fieldSize\", \"large\", 3, \"ngModel\", \"status\", \"required\", \"ngModelChange\"], [\"email\", \"ngModel\"], [4, \"ngIf\"], [\"nbButton\", \"\", \"fullWidth\", \"\", \"status\", \"primary\", \"size\", \"large\", 3, \"disabled\"], [\"aria-label\", \"Sign in or sign up\", 1, \"sign-in-or-up\"], [\"routerLink\", \"../login\", 1, \"text-link\"], [\"routerLink\", \"../register\", 1, \"text-link\"], [\"outline\", \"danger\", \"role\", \"alert\"], [1, \"alert-title\"], [1, \"alert-message-list\"], [\"class\", \"alert-message\", 4, \"ngFor\", \"ngForOf\"], [1, \"alert-message\"], [\"outline\", \"success\", \"role\", \"alert\"], [\"class\", \"caption status-danger\", 4, \"ngIf\"], [1, \"caption\", \"status-danger\"]],\n  template: function NbRequestPasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Forgot Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\", 1);\n      i0.ɵɵtext(3, \"Enter your email address and we\\u2019ll send a link to reset your password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, NbRequestPasswordComponent_nb_alert_4_Template, 6, 1, \"nb-alert\", 2);\n      i0.ɵɵtemplate(5, NbRequestPasswordComponent_nb_alert_5_Template, 6, 1, \"nb-alert\", 3);\n      i0.ɵɵelementStart(6, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function NbRequestPasswordComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.requestPass();\n      });\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Enter your email address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function NbRequestPasswordComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, NbRequestPasswordComponent_ng_container_13_Template, 3, 2, \"ng-container\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 11);\n      i0.ɵɵtext(15, \" Request password \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"section\", 12)(17, \"p\")(18, \"a\", 13);\n      i0.ɵɵtext(19, \"Back to Log In\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"p\")(21, \"a\", 14);\n      i0.ɵɵtext(22, \"Register\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      var _r2 = i0.ɵɵreference(7);\n\n      var _r3 = i0.ɵɵreference(12);\n\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.error && (ctx.errors == null ? null : ctx.errors.length) && !ctx.submitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.success && (ctx.messages == null ? null : ctx.messages.length) && !ctx.submitted);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email)(\"status\", _r3.dirty ? _r3.invalid ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.email.required\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r3.invalid && _r3.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r3.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"btn-pulse\", ctx.submitted);\n      i0.ɵɵproperty(\"disabled\", ctx.submitted || !_r2.valid);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.NbAlertComponent, i4.NbInputDirective, i4.NbButtonComponent, i2.RouterLinkWithHref, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.PatternValidator, i5.NgModel, i5.NgForm],\n  styles: [\"[_nghost-%COMP%]   .form-group[_ngcontent-%COMP%]:last-of-type{margin-bottom:3rem}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbRequestPasswordComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nb-request-password-page',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Forgot Password</h1>\\n<p class=\\\"sub-title\\\">Enter your email address and we\\u2019ll send a link to reset your password</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"requestPass()\\\" #requestPassForm=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Enter your email address:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           id=\\\"input-email\\\"\\n           name=\\\"email\\\"\\n           pattern=\\\".+@.+\\\\..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !requestPassForm.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Request password\\n  </button>\\n</form>\\n\\n<section class=\\\"sign-in-or-up\\\" aria-label=\\\"Sign in or sign up\\\">\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Back to Log In</a></p>\\n  <p><a routerLink=\\\"../register\\\" class=\\\"text-link\\\">Register</a></p>\\n</section>\\n\",\n      styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .form-group:last-of-type{margin-bottom:3rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NbAuthService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_OPTIONS]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Router\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nvar NbResetPasswordComponent = /*#__PURE__*/function () {\n  function NbResetPasswordComponent(service) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var cd = arguments.length > 2 ? arguments[2] : undefined;\n    var router = arguments.length > 3 ? arguments[3] : undefined;\n\n    _classCallCheck(this, NbResetPasswordComponent);\n\n    this.service = service;\n    this.options = options;\n    this.cd = cd;\n    this.router = router;\n    this.redirectDelay = 0;\n    this.showMessages = {};\n    this.strategy = '';\n    this.submitted = false;\n    this.errors = [];\n    this.messages = [];\n    this.user = {};\n    this.redirectDelay = this.getConfigValue('forms.resetPassword.redirectDelay');\n    this.showMessages = this.getConfigValue('forms.resetPassword.showMessages');\n    this.strategy = this.getConfigValue('forms.resetPassword.strategy');\n  }\n\n  _createClass(NbResetPasswordComponent, [{\n    key: \"resetPass\",\n    value: function resetPass() {\n      var _this33 = this;\n\n      this.errors = this.messages = [];\n      this.submitted = true;\n      this.service.resetPassword(this.strategy, this.user).subscribe(function (result) {\n        _this33.submitted = false;\n\n        if (result.isSuccess()) {\n          _this33.messages = result.getMessages();\n        } else {\n          _this33.errors = result.getErrors();\n        }\n\n        var redirect = result.getRedirect();\n\n        if (redirect) {\n          setTimeout(function () {\n            return _this33.router.navigateByUrl(redirect);\n          }, _this33.redirectDelay);\n        }\n\n        _this33.cd.detectChanges();\n      });\n    }\n  }, {\n    key: \"getConfigValue\",\n    value: function getConfigValue(key) {\n      return getDeepFromObject(this.options, key, null);\n    }\n  }]);\n\n  return NbResetPasswordComponent;\n}();\n\nNbResetPasswordComponent.ɵfac = function NbResetPasswordComponent_Factory(t) {\n  return new (t || NbResetPasswordComponent)(i0.ɵɵdirectiveInject(NbAuthService), i0.ɵɵdirectiveInject(NB_AUTH_OPTIONS), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nNbResetPasswordComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NbResetPasswordComponent,\n  selectors: [[\"nb-reset-password-page\"]],\n  decls: 29,\n  vars: 17,\n  consts: [[\"id\", \"title\", 1, \"title\"], [1, \"sub-title\"], [\"outline\", \"danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"outline\", \"success\", \"role\", \"alert\", 4, \"ngIf\"], [\"aria-labelledby\", \"title\", 3, \"ngSubmit\"], [\"resetPassForm\", \"ngForm\"], [1, \"form-control-group\"], [\"for\", \"input-password\", 1, \"label\"], [\"nbInput\", \"\", \"type\", \"password\", \"id\", \"input-password\", \"name\", \"password\", \"placeholder\", \"New Password\", \"autofocus\", \"\", \"fullWidth\", \"\", \"fieldSize\", \"large\", 1, \"first\", 3, \"ngModel\", \"status\", \"required\", \"minlength\", \"maxlength\", \"ngModelChange\"], [\"password\", \"ngModel\"], [4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"input-re-password\", 1, \"label\"], [\"nbInput\", \"\", \"id\", \"input-re-password\", \"name\", \"rePass\", \"type\", \"password\", \"placeholder\", \"Confirm Password\", \"fullWidth\", \"\", \"fieldSize\", \"large\", 1, \"last\", 3, \"ngModel\", \"status\", \"required\", \"ngModelChange\"], [\"rePass\", \"ngModel\"], [\"nbButton\", \"\", \"status\", \"primary\", \"fullWidth\", \"\", \"size\", \"large\", 3, \"disabled\"], [\"aria-label\", \"Sign in or sign up\", 1, \"sign-in-or-up\"], [\"routerLink\", \"../login\", 1, \"text-link\"], [\"routerLink\", \"../register\", 1, \"text-link\"], [\"outline\", \"danger\", \"role\", \"alert\"], [1, \"alert-title\"], [1, \"alert-message-list\"], [\"class\", \"alert-message\", 4, \"ngFor\", \"ngForOf\"], [1, \"alert-message\"], [\"outline\", \"success\", \"role\", \"alert\"], [\"class\", \"caption status-danger\", 4, \"ngIf\"], [1, \"caption\", \"status-danger\"]],\n  template: function NbResetPasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Change password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\", 1);\n      i0.ɵɵtext(3, \"Please set a new password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, NbResetPasswordComponent_nb_alert_4_Template, 6, 1, \"nb-alert\", 2);\n      i0.ɵɵtemplate(5, NbResetPasswordComponent_nb_alert_5_Template, 6, 1, \"nb-alert\", 3);\n      i0.ɵɵelementStart(6, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function NbResetPasswordComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.resetPass();\n      });\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"New Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function NbResetPasswordComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, NbResetPasswordComponent_ng_container_13_Template, 3, 2, \"ng-container\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 11)(15, \"label\", 12);\n      i0.ɵɵtext(16, \"Confirm Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 13, 14);\n      i0.ɵɵlistener(\"ngModelChange\", function NbResetPasswordComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.user.confirmPassword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, NbResetPasswordComponent_ng_container_19_Template, 3, 2, \"ng-container\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 15);\n      i0.ɵɵtext(21, \" Change password \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"section\", 16)(23, \"p\")(24, \"a\", 17);\n      i0.ɵɵtext(25, \"Back to Log In\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"p\")(27, \"a\", 18);\n      i0.ɵɵtext(28, \"Register\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      var _r2 = i0.ɵɵreference(7);\n\n      var _r3 = i0.ɵɵreference(12);\n\n      var _r5 = i0.ɵɵreference(18);\n\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.error && (ctx.errors == null ? null : ctx.errors.length) && !ctx.submitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.success && (ctx.messages == null ? null : ctx.messages.length) && !ctx.submitted);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password)(\"status\", _r3.dirty ? _r3.invalid ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.password.required\"))(\"minlength\", ctx.getConfigValue(\"forms.validation.password.minLength\"))(\"maxlength\", ctx.getConfigValue(\"forms.validation.password.maxLength\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r3.invalid && _r3.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r3.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.confirmPassword)(\"status\", _r5.touched ? _r5.invalid || _r3.value != _r5.value ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.password.required\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r5.invalid && _r5.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r5.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"btn-pulse\", ctx.submitted);\n      i0.ɵɵproperty(\"disabled\", ctx.submitted || !_r2.valid);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.NbAlertComponent, i4.NbInputDirective, i4.NbButtonComponent, i2.RouterLinkWithHref, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.MinLengthValidator, i5.MaxLengthValidator, i5.NgModel, i5.NgForm],\n  styles: [_c1],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbResetPasswordComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nb-reset-password-page',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Change password</h1>\\n<p class=\\\"sub-title\\\">Please set a new password</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"resetPass()\\\" #resetPassForm=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-password\\\">New Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           name=\\\"password\\\"\\n           class=\\\"first\\\"\\n           placeholder=\\\"New Password\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contains\\n        from {{getConfigValue('forms.validation.password.minLength')}}\\n        to {{getConfigValue('forms.validation.password.maxLength')}}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-re-password\\\">Confirm Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.confirmPassword\\\"\\n           #rePass=\\\"ngModel\\\"\\n           id=\\\"input-re-password\\\"\\n           name=\\\"rePass\\\"\\n           type=\\\"password\\\"\\n           class=\\\"last\\\"\\n           placeholder=\\\"Confirm Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"rePass.touched\\n               ? (rePass.invalid || password.value != rePass.value ? 'danger' : 'success')\\n               : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [attr.aria-invalid]=\\\"rePass.invalid && rePass.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"rePass.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"rePass.invalid && rePass.errors?.required\\\">\\n        Password confirmation is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.value != rePass.value && !rePass.errors?.required\\\">\\n        Password does not match the confirm password.\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <button nbButton\\n          status=\\\"primary\\\"\\n          fullWidth\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !resetPassForm.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Change password\\n  </button>\\n</form>\\n\\n<section class=\\\"sign-in-or-up\\\" aria-label=\\\"Sign in or sign up\\\">\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Back to Log In</a></p>\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../register\\\">Register</a></p>\\n</section>\\n\",\n      styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .form-group:last-of-type{margin-bottom:3rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NbAuthService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_OPTIONS]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Router\n    }];\n  }, null);\n})();\n\nfunction nbStrategiesFactory(options, injector) {\n  var strategies = [];\n  options.strategies.forEach(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        strategyClass = _ref6[0],\n        strategyOptions = _ref6[1];\n\n    var strategy = injector.get(strategyClass);\n    strategy.setOptions(strategyOptions);\n    strategies.push(strategy);\n  });\n  return strategies;\n}\n\nfunction nbTokensFactory(strategies) {\n  var tokens = [];\n  strategies.forEach(function (strategy) {\n    tokens.push(strategy.getOption('token.class'));\n  });\n  return tokens;\n}\n\nfunction nbOptionsFactory(options) {\n  return deepExtend(defaultAuthOptions, options);\n}\n\nfunction nbNoOpInterceptorFilter(req) {\n  return true;\n}\n\nvar NbAuthModule = /*#__PURE__*/function () {\n  function NbAuthModule() {\n    _classCallCheck(this, NbAuthModule);\n  }\n\n  _createClass(NbAuthModule, null, [{\n    key: \"forRoot\",\n    value: function forRoot(nbAuthOptions) {\n      return {\n        ngModule: NbAuthModule,\n        providers: [{\n          provide: NB_AUTH_USER_OPTIONS,\n          useValue: nbAuthOptions\n        }, {\n          provide: NB_AUTH_OPTIONS,\n          useFactory: nbOptionsFactory,\n          deps: [NB_AUTH_USER_OPTIONS]\n        }, {\n          provide: NB_AUTH_STRATEGIES,\n          useFactory: nbStrategiesFactory,\n          deps: [NB_AUTH_OPTIONS, Injector]\n        }, {\n          provide: NB_AUTH_TOKENS,\n          useFactory: nbTokensFactory,\n          deps: [NB_AUTH_STRATEGIES]\n        }, {\n          provide: NB_AUTH_FALLBACK_TOKEN,\n          useValue: NbAuthSimpleToken\n        }, {\n          provide: NB_AUTH_INTERCEPTOR_HEADER,\n          useValue: 'Authorization'\n        }, {\n          provide: NB_AUTH_TOKEN_INTERCEPTOR_FILTER,\n          useValue: nbNoOpInterceptorFilter\n        }, {\n          provide: NbTokenStorage,\n          useClass: NbTokenLocalStorage\n        }, NbAuthTokenParceler, NbAuthService, NbTokenService, NbDummyAuthStrategy, NbPasswordAuthStrategy, NbOAuth2AuthStrategy]\n      };\n    }\n  }]);\n\n  return NbAuthModule;\n}();\n\nNbAuthModule.ɵfac = function NbAuthModule_Factory(t) {\n  return new (t || NbAuthModule)();\n};\n\nNbAuthModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NbAuthModule\n});\nNbAuthModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, NbLayoutModule, NbCardModule, NbCheckboxModule, NbAlertModule, NbInputModule, NbButtonModule, RouterModule, FormsModule, NbIconModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbAuthModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NbLayoutModule, NbCardModule, NbCheckboxModule, NbAlertModule, NbInputModule, NbButtonModule, RouterModule, FormsModule, NbIconModule],\n      declarations: [NbAuthComponent, NbAuthBlockComponent, NbLoginComponent, NbRegisterComponent, NbRequestPasswordComponent, NbResetPasswordComponent, NbLogoutComponent],\n      exports: [NbAuthComponent, NbAuthBlockComponent, NbLoginComponent, NbRegisterComponent, NbRequestPasswordComponent, NbResetPasswordComponent, NbLogoutComponent]\n    }]\n  }], null, null);\n})();\n\nvar routes = [{\n  path: 'auth',\n  component: NbAuthComponent,\n  children: [{\n    path: '',\n    component: NbLoginComponent\n  }, {\n    path: 'login',\n    component: NbLoginComponent\n  }, {\n    path: 'register',\n    component: NbRegisterComponent\n  }, {\n    path: 'logout',\n    component: NbLogoutComponent\n  }, {\n    path: 'request-password',\n    component: NbRequestPasswordComponent\n  }, {\n    path: 'reset-password',\n    component: NbResetPasswordComponent\n  }]\n}];\n\nvar NbAuthJWTInterceptor = /*#__PURE__*/function () {\n  function NbAuthJWTInterceptor(injector, filter) {\n    _classCallCheck(this, NbAuthJWTInterceptor);\n\n    this.injector = injector;\n    this.filter = filter;\n  }\n\n  _createClass(NbAuthJWTInterceptor, [{\n    key: \"intercept\",\n    value: function intercept(req, next) {\n      var _this34 = this;\n\n      // do not intercept request whose urls are filtered by the injected filter\n      if (!this.filter(req)) {\n        return this.authService.isAuthenticatedOrRefresh().pipe(switchMap(function (authenticated) {\n          if (authenticated) {\n            return _this34.authService.getToken().pipe(switchMap(function (token) {\n              var JWT = \"Bearer \".concat(token.getValue());\n              req = req.clone({\n                setHeaders: {\n                  Authorization: JWT\n                }\n              });\n              return next.handle(req);\n            }));\n          } else {\n            // Request is sent to server without authentication so that the client code\n            // receives the 401/403 error and can act as desired ('session expired', redirect to login, aso)\n            return next.handle(req);\n          }\n        }));\n      } else {\n        return next.handle(req);\n      }\n    }\n  }, {\n    key: \"authService\",\n    get: function get() {\n      return this.injector.get(NbAuthService);\n    }\n  }]);\n\n  return NbAuthJWTInterceptor;\n}();\n\nNbAuthJWTInterceptor.ɵfac = function NbAuthJWTInterceptor_Factory(t) {\n  return new (t || NbAuthJWTInterceptor)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(NB_AUTH_TOKEN_INTERCEPTOR_FILTER));\n};\n\nNbAuthJWTInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbAuthJWTInterceptor,\n  factory: NbAuthJWTInterceptor.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbAuthJWTInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_TOKEN_INTERCEPTOR_FILTER]\n      }]\n    }];\n  }, null);\n})();\n\nvar NbAuthSimpleInterceptor = /*#__PURE__*/function () {\n  function NbAuthSimpleInterceptor(injector) {\n    var headerName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Authorization';\n\n    _classCallCheck(this, NbAuthSimpleInterceptor);\n\n    this.injector = injector;\n    this.headerName = headerName;\n  }\n\n  _createClass(NbAuthSimpleInterceptor, [{\n    key: \"intercept\",\n    value: function intercept(req, next) {\n      var _this35 = this;\n\n      return this.authService.getToken().pipe(switchMap(function (token) {\n        if (token && token.getValue()) {\n          req = req.clone({\n            setHeaders: _defineProperty({}, _this35.headerName, token.getValue())\n          });\n        }\n\n        return next.handle(req);\n      }));\n    }\n  }, {\n    key: \"authService\",\n    get: function get() {\n      return this.injector.get(NbAuthService);\n    }\n  }]);\n\n  return NbAuthSimpleInterceptor;\n}();\n\nNbAuthSimpleInterceptor.ɵfac = function NbAuthSimpleInterceptor_Factory(t) {\n  return new (t || NbAuthSimpleInterceptor)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(NB_AUTH_INTERCEPTOR_HEADER));\n};\n\nNbAuthSimpleInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbAuthSimpleInterceptor,\n  factory: NbAuthSimpleInterceptor.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbAuthSimpleInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_INTERCEPTOR_HEADER]\n      }]\n    }];\n  }, null);\n})();\n\nvar NbUser = /*#__PURE__*/_createClass(function NbUser(id, email, password, rememberMe, terms, confirmPassword, fullName) {\n  _classCallCheck(this, NbUser);\n\n  this.id = id;\n  this.email = email;\n  this.password = password;\n  this.rememberMe = rememberMe;\n  this.terms = terms;\n  this.confirmPassword = confirmPassword;\n  this.fullName = fullName;\n});\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NB_AUTH_FALLBACK_TOKEN, NB_AUTH_INTERCEPTOR_HEADER, NB_AUTH_OPTIONS, NB_AUTH_STRATEGIES, NB_AUTH_TOKENS, NB_AUTH_TOKEN_INTERCEPTOR_FILTER, NB_AUTH_USER_OPTIONS, NbAuthBlockComponent, NbAuthComponent, NbAuthEmptyTokenError, NbAuthIllegalJWTTokenError, NbAuthIllegalTokenError, NbAuthJWTInterceptor, NbAuthJWTToken, NbAuthModule, NbAuthOAuth2JWTToken, NbAuthOAuth2Token, NbAuthResult, NbAuthService, NbAuthSimpleInterceptor, NbAuthSimpleToken, NbAuthStrategy, NbAuthStrategyOptions, NbAuthToken, NbAuthTokenNotFoundError, NbAuthTokenParceler, NbDummyAuthStrategy, NbDummyAuthStrategyOptions, NbLoginComponent, NbLogoutComponent, NbOAuth2AuthStrategy, NbOAuth2AuthStrategyOptions, NbOAuth2ClientAuthMethod, NbOAuth2GrantType, NbOAuth2ResponseType, NbPasswordAuthStrategy, NbPasswordAuthStrategyOptions, NbRegisterComponent, NbRequestPasswordComponent, NbResetPasswordComponent, NbTokenLocalStorage, NbTokenService, NbTokenStorage, NbUser, auth2StrategyOptions, b64DecodeUnicode, b64decode, decodeJwtPayload, deepExtend, defaultAuthOptions, dummyStrategyOptions, getDeepFromObject, nbAuthCreateToken, nbNoOpInterceptorFilter, nbOptionsFactory, nbStrategiesFactory, nbTokensFactory, passwordStrategyOptions, routes, urlBase64Decode };","map":{"version":3,"names":["i0","InjectionToken","Injectable","Inject","Component","ChangeDetectionStrategy","Injector","NgModule","i3","CommonModule","i2","RouterModule","i5","FormsModule","i4","NB_WINDOW","NbLayoutModule","NbCardModule","NbCheckboxModule","NbAlertModule","NbInputModule","NbButtonModule","NbIconModule","BehaviorSubject","of","Subject","filter","share","map","switchMap","delay","catchError","takeUntil","i1","HttpResponse","HttpHeaders","HttpErrorResponse","socialLinks","defaultAuthOptions","strategies","forms","login","redirectDelay","strategy","rememberMe","showMessages","success","error","register","terms","requestPassword","resetPassword","logout","validation","password","required","minLength","maxLength","email","fullName","NB_AUTH_OPTIONS","NB_AUTH_USER_OPTIONS","NB_AUTH_STRATEGIES","NB_AUTH_TOKENS","NB_AUTH_INTERCEPTOR_HEADER","NB_AUTH_TOKEN_INTERCEPTOR_FILTER","deepExtend","objects","arguments","length","target","args","Array","prototype","slice","call","val","src","forEach","obj","isArray","Object","keys","key","deepCloneArray","isSpecificValue","cloneSpecificValue","Date","RegExp","getTime","Error","arr","clone","item","index","getDeepFromObject","object","name","defaultValue","split","level","k","undefined","urlBase64Decode","str","output","replace","b64DecodeUnicode","b64decode","chars","String","bc","bs","buffer","idx","charAt","fromCharCode","indexOf","decodeURIComponent","c","charCodeAt","toString","join","NbAuthToken","payload","constructor","NAME","NbAuthTokenNotFoundError","message","setPrototypeOf","NbAuthIllegalTokenError","NbAuthEmptyTokenError","NbAuthIllegalJWTTokenError","nbAuthCreateToken","tokenClass","token","ownerStrategyName","createdAt","decodeJwtPayload","parts","decoded","e","JSON","parse","NbAuthSimpleToken","parsePayload","err","prepareCreatedAt","date","getValue","NbAuthJWTToken","getPayload","iat","Number","hasOwnProperty","setUTCSeconds","exp","getTokenExpDate","prepareOAuth2Token","data","NbAuthOAuth2Token","access_token","refresh_token","refreshToken","token_type","expires_in","stringify","NbAuthOAuth2JWTToken","parseAccessTokenPayload","accessToken","accessTokenPayload","NB_AUTH_FALLBACK_TOKEN","NbAuthTokenParceler","fallbackClass","tokenClasses","getName","getOwnerStrategyName","getCreatedAt","value","tokenValue","tokenOwnerStrategyName","tokenCreatedAt","tokenPack","parseTokenPack","getClassByName","find","ɵfac","ɵprov","type","decorators","NbTokenStorage","NbTokenLocalStorage","parceler","raw","localStorage","getItem","unwrap","wrap","setItem","removeItem","NbTokenService","tokenStorage","token$","publishStoredToken","pipe","set","get","clear","next","NbAuthService","tokenService","getToken","isValid","res","isSuccess","isAuthenticated","tokenChange","onTokenChange","strategyName","getStrategy","authenticate","result","processResultToken","found","TypeError","NbAuthStrategy","options","defaultOptions","failWhenInvalidToken","getOption","body","status","action","actionEndpoint","baseEndpoint","customHeaders","headers","entries","append","NbAuthResult","response","redirect","errors","messages","concat","NbAuthStrategyOptions","NbDummyAuthStrategyOptions","class","alwaysFail","dummyStrategyOptions","NbDummyAuthStrategy","createDummyResult","createFailResponse","createToken","createSuccessResponse","NbOAuth2ResponseType","NbOAuth2GrantType","NbOAuth2ClientAuthMethod","NbOAuth2AuthStrategyOptions","clientId","clientSecret","clientAuthMethod","NONE","failure","defaultErrors","defaultMessages","authorize","endpoint","responseType","CODE","requireValidToken","grantType","AUTHORIZATION_CODE","refresh","REFRESH_TOKEN","auth2StrategyOptions","NbOAuth2AuthStrategy","http","route","window","redirectResultHandlers","snapshot","queryParams","params","code","requestToken","TOKEN","module","fragment","parseHashAsQueryParams","push","redirectResults","PASSWORD","passwordToken","isRedirectResult","authorizeRedirect","getAuthorizationResult","redirectResultHandler","url","getActionEndpoint","post","buildRefreshRequestData","getHeaders","createRefreshedToken","handleResponseError","username","buildPasswordRequestData","location","href","buildRedirectUrl","buildCodeRequestData","grant_type","redirect_uri","client_id","urlEncodeParameters","cleanParams","addCredentialsToParams","getRefreshToken","scope","BASIC","Authorization","btoa","authHeaders","buildAuthHeader","headerKey","getAll","headerValue","REQUEST_BODY","client_secret","error_description","response_type","state","query","hash","reduce","acc","part","encodeURIComponent","existingToken","refreshedToken","setRefreshToken","HttpClient","ActivatedRoute","NbPasswordAuthStrategyOptions","method","requestPass","resetPass","resetPasswordTokenKey","getter","passwordStrategyOptions","NbPasswordAuthStrategy","request","observe","tokenKey","NbAuthBlockComponent","ɵcmp","selector","template","styles","NbAuthComponent","auth","destroy$","authenticated","subscription","onAuthenticationChange","subscribe","back","complete","Location","NbLayoutComponent","NbLayoutColumnComponent","NbCardComponent","NbCardBodyComponent","NbCardHeaderComponent","RouterOutlet","NbIconComponent","NbLoginComponent","service","cd","router","user","submitted","getConfigValue","getMessages","getErrors","getRedirect","setTimeout","navigateByUrl","detectChanges","ChangeDetectorRef","Router","NgForOf","NgIf","NbCheckboxComponent","NbAlertComponent","NbInputDirective","NbButtonComponent","RouterLinkWithHref","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MinLengthValidator","MaxLengthValidator","PatternValidator","NgModel","NgForm","changeDetection","OnPush","NbRegisterComponent","NbLogoutComponent","NbRequestPasswordComponent","NbResetPasswordComponent","nbStrategiesFactory","injector","strategyClass","strategyOptions","setOptions","nbTokensFactory","tokens","nbOptionsFactory","nbNoOpInterceptorFilter","req","NbAuthModule","nbAuthOptions","ngModule","providers","provide","useValue","useFactory","deps","useClass","ɵmod","ɵinj","imports","declarations","exports","routes","path","component","children","NbAuthJWTInterceptor","authService","isAuthenticatedOrRefresh","JWT","setHeaders","handle","NbAuthSimpleInterceptor","headerName","NbUser","id","confirmPassword"],"sources":["C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@nebular/auth/fesm2020/nebular-auth.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Component, ChangeDetectionStrategy, Injector, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i5 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i4 from '@nebular/theme';\nimport { NB_WINDOW, NbLayoutModule, NbCardModule, NbCheckboxModule, NbAlertModule, NbInputModule, NbButtonModule, NbIconModule } from '@nebular/theme';\nimport { BehaviorSubject, of, Subject } from 'rxjs';\nimport { filter, share, map, switchMap, delay, catchError, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpResponse, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\nconst socialLinks = [];\nconst defaultAuthOptions = {\n    strategies: [],\n    forms: {\n        login: {\n            redirectDelay: 500,\n            strategy: 'email',\n            rememberMe: true,\n            showMessages: {\n                success: true,\n                error: true,\n            },\n            socialLinks: socialLinks, // social links at the bottom of a page\n        },\n        register: {\n            redirectDelay: 500,\n            strategy: 'email',\n            showMessages: {\n                success: true,\n                error: true,\n            },\n            terms: true,\n            socialLinks: socialLinks,\n        },\n        requestPassword: {\n            redirectDelay: 500,\n            strategy: 'email',\n            showMessages: {\n                success: true,\n                error: true,\n            },\n            socialLinks: socialLinks,\n        },\n        resetPassword: {\n            redirectDelay: 500,\n            strategy: 'email',\n            showMessages: {\n                success: true,\n                error: true,\n            },\n            socialLinks: socialLinks,\n        },\n        logout: {\n            redirectDelay: 500,\n            strategy: 'email',\n        },\n        validation: {\n            password: {\n                required: true,\n                minLength: 4,\n                maxLength: 50,\n            },\n            email: {\n                required: true,\n            },\n            fullName: {\n                required: false,\n                minLength: 4,\n                maxLength: 50,\n            },\n        },\n    },\n};\nconst NB_AUTH_OPTIONS = new InjectionToken('Nebular Auth Options');\nconst NB_AUTH_USER_OPTIONS = new InjectionToken('Nebular User Auth Options');\nconst NB_AUTH_STRATEGIES = new InjectionToken('Nebular Auth Strategies');\nconst NB_AUTH_TOKENS = new InjectionToken('Nebular Auth Tokens');\nconst NB_AUTH_INTERCEPTOR_HEADER = new InjectionToken('Nebular Simple Interceptor Header');\nconst NB_AUTH_TOKEN_INTERCEPTOR_FILTER = new InjectionToken('Nebular Interceptor Filter');\n\n/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nconst deepExtend = function (...objects) {\n    if (arguments.length < 1 || typeof arguments[0] !== 'object') {\n        return false;\n    }\n    if (arguments.length < 2) {\n        return arguments[0];\n    }\n    const target = arguments[0];\n    // convert arguments to array and cut off target object\n    const args = Array.prototype.slice.call(arguments, 1);\n    let val, src;\n    args.forEach(function (obj) {\n        // skip argument if it is array or isn't object\n        if (typeof obj !== 'object' || Array.isArray(obj)) {\n            return;\n        }\n        Object.keys(obj).forEach(function (key) {\n            src = target[key]; // source value\n            val = obj[key]; // new value\n            // recursion prevention\n            if (val === target) {\n                return;\n                /**\n                 * if new value isn't object then just overwrite by new value\n                 * instead of extending.\n                 */\n            }\n            else if (typeof val !== 'object' || val === null) {\n                target[key] = val;\n                return;\n                // just clone arrays (and recursive clone objects inside)\n            }\n            else if (Array.isArray(val)) {\n                target[key] = deepCloneArray(val);\n                return;\n                // custom cloning and overwrite for specific objects\n            }\n            else if (isSpecificValue(val)) {\n                target[key] = cloneSpecificValue(val);\n                return;\n                // overwrite by new value if source isn't object or array\n            }\n            else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n                target[key] = deepExtend({}, val);\n                return;\n                // source value and new value is objects both, extending...\n            }\n            else {\n                target[key] = deepExtend(src, val);\n                return;\n            }\n        });\n    });\n    return target;\n};\nfunction isSpecificValue(val) {\n    return (val instanceof Date\n        || val instanceof RegExp) ? true : false;\n}\nfunction cloneSpecificValue(val) {\n    if (val instanceof Date) {\n        return new Date(val.getTime());\n    }\n    else if (val instanceof RegExp) {\n        return new RegExp(val);\n    }\n    else {\n        throw new Error('cloneSpecificValue: Unexpected situation');\n    }\n}\n/**\n * Recursive cloning array.\n */\nfunction deepCloneArray(arr) {\n    const clone = [];\n    arr.forEach(function (item, index) {\n        if (typeof item === 'object' && item !== null) {\n            if (Array.isArray(item)) {\n                clone[index] = deepCloneArray(item);\n            }\n            else if (isSpecificValue(item)) {\n                clone[index] = cloneSpecificValue(item);\n            }\n            else {\n                clone[index] = deepExtend({}, item);\n            }\n        }\n        else {\n            clone[index] = item;\n        }\n    });\n    return clone;\n}\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\nfunction getDeepFromObject(object = {}, name, defaultValue) {\n    const keys = name.split('.');\n    // clone the object\n    let level = deepExtend({}, object || {});\n    keys.forEach((k) => {\n        if (level && typeof level[k] !== 'undefined') {\n            level = level[k];\n        }\n        else {\n            level = undefined;\n        }\n    });\n    return typeof level === 'undefined' ? defaultValue : level;\n}\nfunction urlBase64Decode(str) {\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\n    switch (output.length % 4) {\n        case 0: {\n            break;\n        }\n        case 2: {\n            output += '==';\n            break;\n        }\n        case 3: {\n            output += '=';\n            break;\n        }\n        default: {\n            throw new Error('Illegal base64url string!');\n        }\n    }\n    return b64DecodeUnicode(output);\n}\nfunction b64decode(str) {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let output = '';\n    str = String(str).replace(/=+$/, '');\n    if (str.length % 4 === 1) {\n        throw new Error(`'atob' failed: The string to be decoded is not correctly encoded.`);\n    }\n    for (\n    // initialize result and counters\n    let bc = 0, bs, buffer, idx = 0; \n    // get next character\n    buffer = str.charAt(idx++); \n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n// https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(Array.prototype.map.call(b64decode(str), (c) => {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n}\n\nclass NbAuthToken {\n    constructor() {\n        this.payload = null;\n    }\n    getName() {\n        return this.constructor.NAME;\n    }\n    getPayload() {\n        return this.payload;\n    }\n}\nclass NbAuthTokenNotFoundError extends Error {\n    constructor(message) {\n        super(message);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nclass NbAuthIllegalTokenError extends Error {\n    constructor(message) {\n        super(message);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nclass NbAuthEmptyTokenError extends NbAuthIllegalTokenError {\n    constructor(message) {\n        super(message);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nclass NbAuthIllegalJWTTokenError extends NbAuthIllegalTokenError {\n    constructor(message) {\n        super(message);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nfunction nbAuthCreateToken(tokenClass, token, ownerStrategyName, createdAt) {\n    return new tokenClass(token, ownerStrategyName, createdAt);\n}\nfunction decodeJwtPayload(payload) {\n    if (payload.length === 0) {\n        throw new NbAuthEmptyTokenError('Cannot extract from an empty payload.');\n    }\n    const parts = payload.split('.');\n    if (parts.length !== 3) {\n        throw new NbAuthIllegalJWTTokenError(`The payload ${payload} is not valid JWT payload and must consist of three parts.`);\n    }\n    let decoded;\n    try {\n        decoded = urlBase64Decode(parts[1]);\n    }\n    catch (e) {\n        throw new NbAuthIllegalJWTTokenError(`The payload ${payload} is not valid JWT payload and cannot be parsed.`);\n    }\n    if (!decoded) {\n        throw new NbAuthIllegalJWTTokenError(`The payload ${payload} is not valid JWT payload and cannot be decoded.`);\n    }\n    return JSON.parse(decoded);\n}\n/**\n * Wrapper for simple (text) token\n */\nclass NbAuthSimpleToken extends NbAuthToken {\n    constructor(token, ownerStrategyName, createdAt) {\n        super();\n        this.token = token;\n        this.ownerStrategyName = ownerStrategyName;\n        this.createdAt = createdAt;\n        try {\n            this.parsePayload();\n        }\n        catch (err) {\n            if (!(err instanceof NbAuthTokenNotFoundError)) {\n                // token is present but has got a problem, including illegal\n                throw err;\n            }\n        }\n        this.createdAt = this.prepareCreatedAt(createdAt);\n    }\n    parsePayload() {\n        this.payload = null;\n    }\n    prepareCreatedAt(date) {\n        return date ? date : new Date();\n    }\n    /**\n     * Returns the token's creation date\n     * @returns {Date}\n     */\n    getCreatedAt() {\n        return this.createdAt;\n    }\n    /**\n     * Returns the token value\n     * @returns string\n     */\n    getValue() {\n        return this.token;\n    }\n    getOwnerStrategyName() {\n        return this.ownerStrategyName;\n    }\n    /**\n     * Is non empty and valid\n     * @returns {boolean}\n     */\n    isValid() {\n        return !!this.getValue();\n    }\n    /**\n     * Validate value and convert to string, if value is not valid return empty string\n     * @returns {string}\n     */\n    toString() {\n        return !!this.token ? this.token : '';\n    }\n}\nNbAuthSimpleToken.NAME = 'nb:auth:simple:token';\n/**\n * Wrapper for JWT token with additional methods.\n */\nclass NbAuthJWTToken extends NbAuthSimpleToken {\n    /**\n     * for JWT token, the iat (issued at) field of the token payload contains the creation Date\n     */\n    prepareCreatedAt(date) {\n        const decoded = this.getPayload();\n        return decoded && decoded.iat ? new Date(Number(decoded.iat) * 1000) : super.prepareCreatedAt(date);\n    }\n    /**\n     * Returns payload object\n     * @returns any\n     */\n    parsePayload() {\n        if (!this.token) {\n            throw new NbAuthTokenNotFoundError('Token not found. ');\n        }\n        this.payload = decodeJwtPayload(this.token);\n    }\n    /**\n     * Returns expiration date\n     * @returns Date\n     */\n    getTokenExpDate() {\n        const decoded = this.getPayload();\n        if (decoded && !decoded.hasOwnProperty('exp')) {\n            return null;\n        }\n        const date = new Date(0);\n        date.setUTCSeconds(decoded.exp); // 'cause jwt token are set in seconds\n        return date;\n    }\n    /**\n     * Is data expired\n     * @returns {boolean}\n     */\n    isValid() {\n        return super.isValid() && (!this.getTokenExpDate() || new Date() < this.getTokenExpDate());\n    }\n}\nNbAuthJWTToken.NAME = 'nb:auth:jwt:token';\nconst prepareOAuth2Token = (data) => {\n    if (typeof data === 'string') {\n        try {\n            return JSON.parse(data);\n        }\n        catch (e) { }\n    }\n    return data;\n};\n/**\n * Wrapper for OAuth2 token whose access_token is a JWT Token\n */\nclass NbAuthOAuth2Token extends NbAuthSimpleToken {\n    constructor(data = {}, ownerStrategyName, createdAt) {\n        // we may get it as string when retrieving from a storage\n        super(prepareOAuth2Token(data), ownerStrategyName, createdAt);\n    }\n    /**\n     * Returns the token value\n     * @returns string\n     */\n    getValue() {\n        return this.token.access_token;\n    }\n    /**\n     * Returns the refresh token\n     * @returns string\n     */\n    getRefreshToken() {\n        return this.token.refresh_token;\n    }\n    /**\n     *  put refreshToken in the token payload\n      * @param refreshToken\n     */\n    setRefreshToken(refreshToken) {\n        this.token.refresh_token = refreshToken;\n    }\n    /**\n     * Parses token payload\n     * @returns any\n     */\n    parsePayload() {\n        if (!this.token) {\n            throw new NbAuthTokenNotFoundError('Token not found.');\n        }\n        else {\n            if (!Object.keys(this.token).length) {\n                throw new NbAuthEmptyTokenError('Cannot extract payload from an empty token.');\n            }\n        }\n        this.payload = this.token;\n    }\n    /**\n     * Returns the token type\n     * @returns string\n     */\n    getType() {\n        return this.token.token_type;\n    }\n    /**\n     * Is data expired\n     * @returns {boolean}\n     */\n    isValid() {\n        return super.isValid() && (!this.getTokenExpDate() || new Date() < this.getTokenExpDate());\n    }\n    /**\n     * Returns expiration date\n     * @returns Date\n     */\n    getTokenExpDate() {\n        if (!this.token.hasOwnProperty('expires_in')) {\n            return null;\n        }\n        return new Date(this.createdAt.getTime() + Number(this.token.expires_in) * 1000);\n    }\n    /**\n     * Convert to string\n     * @returns {string}\n     */\n    toString() {\n        return JSON.stringify(this.token);\n    }\n}\nNbAuthOAuth2Token.NAME = 'nb:auth:oauth2:token';\n/**\n * Wrapper for OAuth2 token embedding JWT tokens\n */\nclass NbAuthOAuth2JWTToken extends NbAuthOAuth2Token {\n    parsePayload() {\n        super.parsePayload();\n        this.parseAccessTokenPayload();\n    }\n    parseAccessTokenPayload() {\n        const accessToken = this.getValue();\n        if (!accessToken) {\n            throw new NbAuthTokenNotFoundError('access_token key not found.');\n        }\n        this.accessTokenPayload = decodeJwtPayload(accessToken);\n    }\n    /**\n     * Returns access token payload\n     * @returns any\n     */\n    getAccessTokenPayload() {\n        return this.accessTokenPayload;\n    }\n    /**\n     * for Oauth2 JWT token, the iat (issued at) field of the access_token payload\n     */\n    prepareCreatedAt(date) {\n        const payload = this.accessTokenPayload;\n        return payload && payload.iat ? new Date(Number(payload.iat) * 1000) : super.prepareCreatedAt(date);\n    }\n    /**\n     * Is token valid\n     * @returns {boolean}\n     */\n    isValid() {\n        return this.accessTokenPayload && super.isValid();\n    }\n    /**\n     * Returns expiration date :\n     * - exp if set,\n     * - super.getExpDate() otherwise\n     * @returns Date\n     */\n    getTokenExpDate() {\n        if (this.accessTokenPayload && this.accessTokenPayload.hasOwnProperty('exp')) {\n            const date = new Date(0);\n            date.setUTCSeconds(this.accessTokenPayload.exp);\n            return date;\n        }\n        else {\n            return super.getTokenExpDate();\n        }\n    }\n}\nNbAuthOAuth2JWTToken.NAME = 'nb:auth:oauth2:jwt:token';\n\nconst NB_AUTH_FALLBACK_TOKEN = new InjectionToken('Nebular Auth Options');\n/**\n * Creates a token parcel which could be stored/restored\n */\nclass NbAuthTokenParceler {\n    constructor(fallbackClass, tokenClasses) {\n        this.fallbackClass = fallbackClass;\n        this.tokenClasses = tokenClasses;\n    }\n    wrap(token) {\n        return JSON.stringify({\n            name: token.getName(),\n            ownerStrategyName: token.getOwnerStrategyName(),\n            createdAt: token.getCreatedAt().getTime(),\n            value: token.toString(),\n        });\n    }\n    unwrap(value) {\n        let tokenClass = this.fallbackClass;\n        let tokenValue = '';\n        let tokenOwnerStrategyName = '';\n        let tokenCreatedAt = null;\n        const tokenPack = this.parseTokenPack(value);\n        if (tokenPack) {\n            tokenClass = this.getClassByName(tokenPack.name) || this.fallbackClass;\n            tokenValue = tokenPack.value;\n            tokenOwnerStrategyName = tokenPack.ownerStrategyName;\n            tokenCreatedAt = new Date(Number(tokenPack.createdAt));\n        }\n        return nbAuthCreateToken(tokenClass, tokenValue, tokenOwnerStrategyName, tokenCreatedAt);\n    }\n    // TODO: this could be moved to a separate token registry\n    getClassByName(name) {\n        return this.tokenClasses.find((tokenClass) => tokenClass.NAME === name);\n    }\n    parseTokenPack(value) {\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) { }\n        return null;\n    }\n}\nNbAuthTokenParceler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthTokenParceler, deps: [{ token: NB_AUTH_FALLBACK_TOKEN }, { token: NB_AUTH_TOKENS }], target: i0.ɵɵFactoryTarget.Injectable });\nNbAuthTokenParceler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthTokenParceler });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthTokenParceler, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_FALLBACK_TOKEN]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_TOKENS]\n                }] }]; } });\n\nclass NbTokenStorage {\n}\n/**\n * Service that uses browser localStorage as a storage.\n *\n * The token storage is provided into auth module the following way:\n * ```ts\n * { provide: NbTokenStorage, useClass: NbTokenLocalStorage },\n * ```\n *\n * If you need to change the storage behaviour or provide your own - just extend your class from basic `NbTokenStorage`\n * or `NbTokenLocalStorage` and provide in your `app.module`:\n * ```ts\n * { provide: NbTokenStorage, useClass: NbTokenCustomStorage },\n * ```\n *\n */\nclass NbTokenLocalStorage extends NbTokenStorage {\n    constructor(parceler) {\n        super();\n        this.parceler = parceler;\n        this.key = 'auth_app_token';\n    }\n    /**\n     * Returns token from localStorage\n     * @returns {NbAuthToken}\n     */\n    get() {\n        const raw = localStorage.getItem(this.key);\n        return this.parceler.unwrap(raw);\n    }\n    /**\n     * Sets token to localStorage\n     * @param {NbAuthToken} token\n     */\n    set(token) {\n        const raw = this.parceler.wrap(token);\n        localStorage.setItem(this.key, raw);\n    }\n    /**\n     * Clears token from localStorage\n     */\n    clear() {\n        localStorage.removeItem(this.key);\n    }\n}\nNbTokenLocalStorage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbTokenLocalStorage, deps: [{ token: NbAuthTokenParceler }], target: i0.ɵɵFactoryTarget.Injectable });\nNbTokenLocalStorage.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbTokenLocalStorage });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbTokenLocalStorage, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: NbAuthTokenParceler }]; } });\n\n/**\n * Service that allows you to manage authentication token - get, set, clear and also listen to token changes over time.\n */\nclass NbTokenService {\n    constructor(tokenStorage) {\n        this.tokenStorage = tokenStorage;\n        this.token$ = new BehaviorSubject(null);\n        this.publishStoredToken();\n    }\n    /**\n     * Publishes token when it changes.\n     * @returns {Observable<NbAuthToken>}\n     */\n    tokenChange() {\n        return this.token$\n            .pipe(filter(value => !!value), share());\n    }\n    /**\n     * Sets a token into the storage. This method is used by the NbAuthService automatically.\n     *\n     * @param {NbAuthToken} token\n     * @returns {Observable<any>}\n     */\n    set(token) {\n        this.tokenStorage.set(token);\n        this.publishStoredToken();\n        return of(null);\n    }\n    /**\n     * Returns observable of current token\n     * @returns {Observable<NbAuthToken>}\n     */\n    get() {\n        const token = this.tokenStorage.get();\n        return of(token);\n    }\n    /**\n     * Removes the token and published token value\n     *\n     * @returns {Observable<any>}\n     */\n    clear() {\n        this.tokenStorage.clear();\n        this.publishStoredToken();\n        return of(null);\n    }\n    publishStoredToken() {\n        this.token$.next(this.tokenStorage.get());\n    }\n}\nNbTokenService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbTokenService, deps: [{ token: NbTokenStorage }], target: i0.ɵɵFactoryTarget.Injectable });\nNbTokenService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbTokenService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbTokenService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: NbTokenStorage }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n/**\n * Common authentication service.\n * Should be used to as an interlayer between UI Components and Auth Strategy.\n */\nclass NbAuthService {\n    constructor(tokenService, strategies) {\n        this.tokenService = tokenService;\n        this.strategies = strategies;\n    }\n    /**\n     * Retrieves current authenticated token stored\n     * @returns {Observable<any>}\n     */\n    getToken() {\n        return this.tokenService.get();\n    }\n    /**\n     * Returns true if auth token is present in the token storage\n     * @returns {Observable<boolean>}\n     */\n    isAuthenticated() {\n        return this.getToken()\n            .pipe(map((token) => token.isValid()));\n    }\n    /**\n     * Returns true if valid auth token is present in the token storage.\n     * If not, calls the strategy refreshToken, and returns isAuthenticated() if success, false otherwise\n     * @returns {Observable<boolean>}\n     */\n    isAuthenticatedOrRefresh() {\n        return this.getToken()\n            .pipe(switchMap(token => {\n            if (token.getValue() && !token.isValid()) {\n                return this.refreshToken(token.getOwnerStrategyName(), token)\n                    .pipe(switchMap(res => {\n                    if (res.isSuccess()) {\n                        return this.isAuthenticated();\n                    }\n                    else {\n                        return of(false);\n                    }\n                }));\n            }\n            else {\n                return of(token.isValid());\n            }\n        }));\n    }\n    /**\n     * Returns tokens stream\n     * @returns {Observable<NbAuthSimpleToken>}\n     */\n    onTokenChange() {\n        return this.tokenService.tokenChange();\n    }\n    /**\n     * Returns authentication status stream\n     * @returns {Observable<boolean>}\n     */\n    onAuthenticationChange() {\n        return this.onTokenChange()\n            .pipe(map((token) => token.isValid()));\n    }\n    /**\n     * Authenticates with the selected strategy\n     * Stores received token in the token storage\n     *\n     * Example:\n     * authenticate('email', {email: 'email@example.com', password: 'test'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n    authenticate(strategyName, data) {\n        return this.getStrategy(strategyName).authenticate(data)\n            .pipe(switchMap((result) => {\n            return this.processResultToken(result);\n        }));\n    }\n    /**\n     * Registers with the selected strategy\n     * Stores received token in the token storage\n     *\n     * Example:\n     * register('email', {email: 'email@example.com', name: 'Some Name', password: 'test'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n    register(strategyName, data) {\n        return this.getStrategy(strategyName).register(data)\n            .pipe(switchMap((result) => {\n            return this.processResultToken(result);\n        }));\n    }\n    /**\n     * Sign outs with the selected strategy\n     * Removes token from the token storage\n     *\n     * Example:\n     * logout('email')\n     *\n     * @param strategyName\n     * @returns {Observable<NbAuthResult>}\n     */\n    logout(strategyName) {\n        return this.getStrategy(strategyName).logout()\n            .pipe(switchMap((result) => {\n            if (result.isSuccess()) {\n                this.tokenService.clear()\n                    .pipe(map(() => result));\n            }\n            return of(result);\n        }));\n    }\n    /**\n     * Sends forgot password request to the selected strategy\n     *\n     * Example:\n     * requestPassword('email', {email: 'email@example.com'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n    requestPassword(strategyName, data) {\n        return this.getStrategy(strategyName).requestPassword(data);\n    }\n    /**\n     * Tries to reset password with the selected strategy\n     *\n     * Example:\n     * resetPassword('email', {newPassword: 'test'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n    resetPassword(strategyName, data) {\n        return this.getStrategy(strategyName).resetPassword(data);\n    }\n    /**\n     * Sends a refresh token request\n     * Stores received token in the token storage\n     *\n     * Example:\n     * refreshToken('email', {token: token})\n     *\n     * @param {string} strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n    refreshToken(strategyName, data) {\n        return this.getStrategy(strategyName).refreshToken(data)\n            .pipe(switchMap((result) => {\n            return this.processResultToken(result);\n        }));\n    }\n    /**\n     * Get registered strategy by name\n     *\n     * Example:\n     * getStrategy('email')\n     *\n     * @param {string} provider\n     * @returns {NbAbstractAuthProvider}\n     */\n    getStrategy(strategyName) {\n        const found = this.strategies.find((strategy) => strategy.getName() === strategyName);\n        if (!found) {\n            throw new TypeError(`There is no Auth Strategy registered under '${strategyName}' name`);\n        }\n        return found;\n    }\n    processResultToken(result) {\n        if (result.isSuccess() && result.getToken()) {\n            return this.tokenService.set(result.getToken())\n                .pipe(map((token) => {\n                return result;\n            }));\n        }\n        return of(result);\n    }\n}\nNbAuthService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthService, deps: [{ token: NbTokenService }, { token: NB_AUTH_STRATEGIES }], target: i0.ɵɵFactoryTarget.Injectable });\nNbAuthService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: NbTokenService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_STRATEGIES]\n                }] }]; } });\n\nclass NbAuthStrategy {\n    // we should keep this any and validation should be done in `register` method instead\n    // otherwise it won't be possible to pass an empty object\n    setOptions(options) {\n        this.options = deepExtend({}, this.defaultOptions, options);\n    }\n    getOption(key) {\n        return getDeepFromObject(this.options, key, null);\n    }\n    createToken(value, failWhenInvalidToken) {\n        const token = nbAuthCreateToken(this.getOption('token.class'), value, this.getName());\n        // At this point, nbAuthCreateToken failed with NbAuthIllegalTokenError which MUST be intercepted by strategies\n        // Or token is created. It MAY be created even if backend did not return any token, in this case it is !Valid\n        if (failWhenInvalidToken && !token.isValid()) {\n            // If we require a valid token (i.e. isValid), then we MUST throw NbAuthIllegalTokenError so that the strategies\n            // intercept it\n            throw new NbAuthIllegalTokenError('Token is empty or invalid.');\n        }\n        return token;\n    }\n    getName() {\n        return this.getOption('name');\n    }\n    createFailResponse(data) {\n        return new HttpResponse({ body: {}, status: 401 });\n    }\n    createSuccessResponse(data) {\n        return new HttpResponse({ body: {}, status: 200 });\n    }\n    getActionEndpoint(action) {\n        const actionEndpoint = this.getOption(`${action}.endpoint`);\n        const baseEndpoint = this.getOption('baseEndpoint');\n        return actionEndpoint ? baseEndpoint + actionEndpoint : '';\n    }\n    getHeaders() {\n        const customHeaders = this.getOption('headers') ?? {};\n        if (customHeaders instanceof HttpHeaders) {\n            return customHeaders;\n        }\n        let headers = new HttpHeaders();\n        Object.entries(customHeaders).forEach(([key, value]) => {\n            headers = headers.append(key, value);\n        });\n        return headers;\n    }\n}\n\nclass NbAuthResult {\n    // TODO: better pass object\n    constructor(success, response, redirect, errors, messages, token = null) {\n        this.success = success;\n        this.response = response;\n        this.redirect = redirect;\n        this.errors = [];\n        this.messages = [];\n        this.errors = this.errors.concat([errors]);\n        if (errors instanceof Array) {\n            this.errors = errors;\n        }\n        this.messages = this.messages.concat([messages]);\n        if (messages instanceof Array) {\n            this.messages = messages;\n        }\n        this.token = token;\n    }\n    getResponse() {\n        return this.response;\n    }\n    getToken() {\n        return this.token;\n    }\n    getRedirect() {\n        return this.redirect;\n    }\n    getErrors() {\n        return this.errors.filter(val => !!val);\n    }\n    getMessages() {\n        return this.messages.filter(val => !!val);\n    }\n    isSuccess() {\n        return this.success;\n    }\n    isFailure() {\n        return !this.success;\n    }\n}\n\nclass NbAuthStrategyOptions {\n}\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbDummyAuthStrategyOptions extends NbAuthStrategyOptions {\n    constructor() {\n        super(...arguments);\n        this.token = {\n            class: NbAuthSimpleToken,\n        };\n        this.delay = 1000;\n        this.alwaysFail = false;\n    }\n}\nconst dummyStrategyOptions = new NbDummyAuthStrategyOptions();\n\n/**\n * Dummy auth strategy. Could be useful for auth setup when backend is not available yet.\n *\n *\n * Strategy settings.\n *\n * ```ts\n * export class NbDummyAuthStrategyOptions extends NbAuthStrategyOptions {\n *   name = 'dummy';\n *   token = {\n *     class: NbAuthSimpleToken,\n *   };\n *   delay? = 1000;\n *   alwaysFail? = false;\n * }\n * ```\n */\nclass NbDummyAuthStrategy extends NbAuthStrategy {\n    constructor() {\n        super(...arguments);\n        this.defaultOptions = dummyStrategyOptions;\n    }\n    static setup(options) {\n        return [NbDummyAuthStrategy, options];\n    }\n    authenticate(data) {\n        return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n    register(data) {\n        return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n    requestPassword(data) {\n        return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n    resetPassword(data) {\n        return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n    logout(data) {\n        return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n    refreshToken(data) {\n        return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n    createDummyResult(data) {\n        if (this.getOption('alwaysFail')) {\n            return new NbAuthResult(false, this.createFailResponse(data), null, ['Something went wrong.']);\n        }\n        try {\n            const token = this.createToken('test token', true);\n            return new NbAuthResult(true, this.createSuccessResponse(data), '/', [], ['Successfully logged in.'], token);\n        }\n        catch (err) {\n            return new NbAuthResult(false, this.createFailResponse(data), null, [err.message]);\n        }\n    }\n}\nNbDummyAuthStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbDummyAuthStrategy, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNbDummyAuthStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbDummyAuthStrategy });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbDummyAuthStrategy, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nvar NbOAuth2ResponseType;\n(function (NbOAuth2ResponseType) {\n    NbOAuth2ResponseType[\"CODE\"] = \"code\";\n    NbOAuth2ResponseType[\"TOKEN\"] = \"token\";\n})(NbOAuth2ResponseType || (NbOAuth2ResponseType = {}));\n// TODO: client_credentials\nvar NbOAuth2GrantType;\n(function (NbOAuth2GrantType) {\n    NbOAuth2GrantType[\"AUTHORIZATION_CODE\"] = \"authorization_code\";\n    NbOAuth2GrantType[\"PASSWORD\"] = \"password\";\n    NbOAuth2GrantType[\"REFRESH_TOKEN\"] = \"refresh_token\";\n})(NbOAuth2GrantType || (NbOAuth2GrantType = {}));\nvar NbOAuth2ClientAuthMethod;\n(function (NbOAuth2ClientAuthMethod) {\n    NbOAuth2ClientAuthMethod[\"NONE\"] = \"none\";\n    NbOAuth2ClientAuthMethod[\"BASIC\"] = \"basic\";\n    NbOAuth2ClientAuthMethod[\"REQUEST_BODY\"] = \"request-body\";\n})(NbOAuth2ClientAuthMethod || (NbOAuth2ClientAuthMethod = {}));\nclass NbOAuth2AuthStrategyOptions extends NbAuthStrategyOptions {\n    constructor() {\n        super(...arguments);\n        this.baseEndpoint = '';\n        this.clientId = '';\n        this.clientSecret = '';\n        this.clientAuthMethod = NbOAuth2ClientAuthMethod.NONE;\n        this.redirect = {\n            success: '/',\n            failure: null,\n        };\n        this.defaultErrors = ['Something went wrong, please try again.'];\n        this.defaultMessages = ['You have been successfully authenticated.'];\n        this.authorize = {\n            endpoint: 'authorize',\n            responseType: NbOAuth2ResponseType.CODE,\n            requireValidToken: true,\n        };\n        this.token = {\n            endpoint: 'token',\n            grantType: NbOAuth2GrantType.AUTHORIZATION_CODE,\n            requireValidToken: true,\n            class: NbAuthOAuth2Token,\n        };\n        this.refresh = {\n            endpoint: 'token',\n            grantType: NbOAuth2GrantType.REFRESH_TOKEN,\n            requireValidToken: true,\n        };\n    }\n}\nconst auth2StrategyOptions = new NbOAuth2AuthStrategyOptions();\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n/**\n * OAuth2 authentication strategy.\n *\n * Strategy settings:\n *\n * ```ts\n * export enum NbOAuth2ResponseType {\n *   CODE = 'code',\n *   TOKEN = 'token',\n * }\n *\n * export enum NbOAuth2GrantType {\n *   AUTHORIZATION_CODE = 'authorization_code',\n *   PASSWORD = 'password',\n *   REFRESH_TOKEN = 'refresh_token',\n * }\n *\n * export class NbOAuth2AuthStrategyOptions {\n *   name: string;\n *   baseEndpoint?: string = '';\n *   clientId: string = '';\n *   clientSecret: string = '';\n *   clientAuthMethod: string = NbOAuth2ClientAuthMethod.NONE;\n *   redirect?: { success?: string; failure?: string } = {\n *     success: '/',\n *     failure: null,\n *   };\n *   defaultErrors?: any[] = ['Something went wrong, please try again.'];\n *   defaultMessages?: any[] = ['You have been successfully authenticated.'];\n *   authorize?: {\n *     endpoint?: string;\n *     redirectUri?: string;\n *     responseType?: string;\n *     requireValidToken: true,\n *     scope?: string;\n *     state?: string;\n *     params?: { [key: string]: string };\n *   } = {\n *     endpoint: 'authorize',\n *     responseType: NbOAuth2ResponseType.CODE,\n *   };\n *   token?: {\n *     endpoint?: string;\n *     grantType?: string;\n *     requireValidToken: true,\n *     redirectUri?: string;\n *     scope?: string;\n *     class: NbAuthTokenClass,\n *   } = {\n *     endpoint: 'token',\n *     grantType: NbOAuth2GrantType.AUTHORIZATION_CODE,\n *     class: NbAuthOAuth2Token,\n *   };\n *   refresh?: {\n *     endpoint?: string;\n *     grantType?: string;\n *     scope?: string;\n *     requireValidToken: true,\n *   } = {\n *     endpoint: 'token',\n *     grantType: NbOAuth2GrantType.REFRESH_TOKEN,\n *   };\n * }\n * ```\n *\n */\nclass NbOAuth2AuthStrategy extends NbAuthStrategy {\n    constructor(http, route, window) {\n        super();\n        this.http = http;\n        this.route = route;\n        this.window = window;\n        this.redirectResultHandlers = {\n            [NbOAuth2ResponseType.CODE]: () => {\n                return of(this.route.snapshot.queryParams).pipe(switchMap((params) => {\n                    if (params.code) {\n                        return this.requestToken(params.code);\n                    }\n                    return of(new NbAuthResult(false, params, this.getOption('redirect.failure'), this.getOption('defaultErrors'), []));\n                }));\n            },\n            [NbOAuth2ResponseType.TOKEN]: () => {\n                const module = 'authorize';\n                const requireValidToken = this.getOption(`${module}.requireValidToken`);\n                return of(this.route.snapshot.fragment).pipe(map((fragment) => this.parseHashAsQueryParams(fragment)), map((params) => {\n                    if (!params.error) {\n                        return new NbAuthResult(true, params, this.getOption('redirect.success'), [], this.getOption('defaultMessages'), this.createToken(params, requireValidToken));\n                    }\n                    return new NbAuthResult(false, params, this.getOption('redirect.failure'), this.getOption('defaultErrors'), []);\n                }), catchError((err) => {\n                    const errors = [];\n                    if (err instanceof NbAuthIllegalTokenError) {\n                        errors.push(err.message);\n                    }\n                    else {\n                        errors.push('Something went wrong.');\n                    }\n                    return of(new NbAuthResult(false, err, this.getOption('redirect.failure'), errors));\n                }));\n            },\n        };\n        this.redirectResults = {\n            [NbOAuth2ResponseType.CODE]: () => {\n                return of(this.route.snapshot.queryParams).pipe(map((params) => !!(params && (params.code || params.error))));\n            },\n            [NbOAuth2ResponseType.TOKEN]: () => {\n                return of(this.route.snapshot.fragment).pipe(map((fragment) => this.parseHashAsQueryParams(fragment)), map((params) => !!(params && (params.access_token || params.error))));\n            },\n        };\n        this.defaultOptions = auth2StrategyOptions;\n    }\n    static setup(options) {\n        return [NbOAuth2AuthStrategy, options];\n    }\n    get responseType() {\n        return this.getOption('authorize.responseType');\n    }\n    get clientAuthMethod() {\n        return this.getOption('clientAuthMethod');\n    }\n    authenticate(data) {\n        if (this.getOption('token.grantType') === NbOAuth2GrantType.PASSWORD) {\n            return this.passwordToken(data.email, data.password);\n        }\n        else {\n            return this.isRedirectResult().pipe(switchMap((result) => {\n                if (!result) {\n                    this.authorizeRedirect();\n                    return of(new NbAuthResult(true));\n                }\n                return this.getAuthorizationResult();\n            }));\n        }\n    }\n    getAuthorizationResult() {\n        const redirectResultHandler = this.redirectResultHandlers[this.responseType];\n        if (redirectResultHandler) {\n            return redirectResultHandler.call(this);\n        }\n        throw new Error(`'${this.responseType}' responseType is not supported,\n                      only 'token' and 'code' are supported now`);\n    }\n    refreshToken(token) {\n        const module = 'refresh';\n        const url = this.getActionEndpoint(module);\n        const requireValidToken = this.getOption(`${module}.requireValidToken`);\n        return this.http.post(url, this.buildRefreshRequestData(token), { headers: this.getHeaders() }).pipe(map((res) => {\n            return new NbAuthResult(true, res, this.getOption('redirect.success'), [], this.getOption('defaultMessages'), this.createRefreshedToken(res, token, requireValidToken));\n        }), catchError((res) => this.handleResponseError(res)));\n    }\n    passwordToken(username, password) {\n        const module = 'token';\n        const url = this.getActionEndpoint(module);\n        const requireValidToken = this.getOption(`${module}.requireValidToken`);\n        return this.http.post(url, this.buildPasswordRequestData(username, password), { headers: this.getHeaders() }).pipe(map((res) => {\n            return new NbAuthResult(true, res, this.getOption('redirect.success'), [], this.getOption('defaultMessages'), this.createToken(res, requireValidToken));\n        }), catchError((res) => this.handleResponseError(res)));\n    }\n    authorizeRedirect() {\n        this.window.location.href = this.buildRedirectUrl();\n    }\n    isRedirectResult() {\n        return this.redirectResults[this.responseType].call(this);\n    }\n    requestToken(code) {\n        const module = 'token';\n        const url = this.getActionEndpoint(module);\n        const requireValidToken = this.getOption(`${module}.requireValidToken`);\n        return this.http.post(url, this.buildCodeRequestData(code), { headers: this.getHeaders() }).pipe(map((res) => {\n            return new NbAuthResult(true, res, this.getOption('redirect.success'), [], this.getOption('defaultMessages'), this.createToken(res, requireValidToken));\n        }), catchError((res) => this.handleResponseError(res)));\n    }\n    buildCodeRequestData(code) {\n        const params = {\n            grant_type: this.getOption('token.grantType'),\n            code: code,\n            redirect_uri: this.getOption('token.redirectUri'),\n            client_id: this.getOption('clientId'),\n        };\n        return this.urlEncodeParameters(this.cleanParams(this.addCredentialsToParams(params)));\n    }\n    buildRefreshRequestData(token) {\n        const params = {\n            grant_type: this.getOption('refresh.grantType'),\n            refresh_token: token.getRefreshToken(),\n            scope: this.getOption('refresh.scope'),\n            client_id: this.getOption('clientId'),\n        };\n        return this.urlEncodeParameters(this.cleanParams(this.addCredentialsToParams(params)));\n    }\n    buildPasswordRequestData(username, password) {\n        const params = {\n            grant_type: this.getOption('token.grantType'),\n            username: username,\n            password: password,\n            scope: this.getOption('token.scope'),\n        };\n        return this.urlEncodeParameters(this.cleanParams(this.addCredentialsToParams(params)));\n    }\n    buildAuthHeader() {\n        if (this.clientAuthMethod === NbOAuth2ClientAuthMethod.BASIC) {\n            if (this.getOption('clientId') && this.getOption('clientSecret')) {\n                return new HttpHeaders({\n                    Authorization: 'Basic ' + btoa(this.getOption('clientId') + ':' + this.getOption('clientSecret')),\n                });\n            }\n            else {\n                throw Error('For basic client authentication method, please provide both clientId & clientSecret.');\n            }\n        }\n        return undefined;\n    }\n    getHeaders() {\n        let headers = super.getHeaders();\n        headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        const authHeaders = this.buildAuthHeader();\n        if (authHeaders === undefined) {\n            return headers;\n        }\n        for (const headerKey of authHeaders.keys()) {\n            for (const headerValue of authHeaders.getAll(headerKey)) {\n                headers = headers.append(headerKey, headerValue);\n            }\n        }\n        return headers;\n    }\n    cleanParams(params) {\n        Object.entries(params).forEach(([key, val]) => !val && delete params[key]);\n        return params;\n    }\n    addCredentialsToParams(params) {\n        if (this.clientAuthMethod === NbOAuth2ClientAuthMethod.REQUEST_BODY) {\n            if (this.getOption('clientId') && this.getOption('clientSecret')) {\n                return {\n                    ...params,\n                    client_id: this.getOption('clientId'),\n                    client_secret: this.getOption('clientSecret'),\n                };\n            }\n            else {\n                throw Error('For request body client authentication method, please provide both clientId & clientSecret.');\n            }\n        }\n        return params;\n    }\n    handleResponseError(res) {\n        let errors = [];\n        if (res instanceof HttpErrorResponse) {\n            if (res.error.error_description) {\n                errors.push(res.error.error_description);\n            }\n            else {\n                errors = this.getOption('defaultErrors');\n            }\n        }\n        else if (res instanceof NbAuthIllegalTokenError) {\n            errors.push(res.message);\n        }\n        else {\n            errors.push('Something went wrong.');\n        }\n        return of(new NbAuthResult(false, res, this.getOption('redirect.failure'), errors, []));\n    }\n    buildRedirectUrl() {\n        const params = {\n            response_type: this.getOption('authorize.responseType'),\n            client_id: this.getOption('clientId'),\n            redirect_uri: this.getOption('authorize.redirectUri'),\n            scope: this.getOption('authorize.scope'),\n            state: this.getOption('authorize.state'),\n            ...this.getOption('authorize.params'),\n        };\n        const endpoint = this.getActionEndpoint('authorize');\n        const query = this.urlEncodeParameters(this.cleanParams(params));\n        return `${endpoint}?${query}`;\n    }\n    parseHashAsQueryParams(hash) {\n        return hash\n            ? hash.split('&').reduce((acc, part) => {\n                const item = part.split('=');\n                acc[item[0]] = decodeURIComponent(item[1]);\n                return acc;\n            }, {})\n            : {};\n    }\n    urlEncodeParameters(params) {\n        return Object.keys(params)\n            .map((k) => {\n            return `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`;\n        })\n            .join('&');\n    }\n    createRefreshedToken(res, existingToken, requireValidToken) {\n        const refreshedToken = this.createToken(res, requireValidToken);\n        if (!refreshedToken.getRefreshToken() && existingToken.getRefreshToken()) {\n            refreshedToken.setRefreshToken(existingToken.getRefreshToken());\n        }\n        return refreshedToken;\n    }\n    register(data) {\n        throw new Error('`register` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n    }\n    requestPassword(data) {\n        throw new Error('`requestPassword` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n    }\n    resetPassword(data = {}) {\n        throw new Error('`resetPassword` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n    }\n    logout() {\n        return of(new NbAuthResult(true));\n    }\n}\nNbOAuth2AuthStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbOAuth2AuthStrategy, deps: [{ token: i1.HttpClient }, { token: i2.ActivatedRoute }, { token: NB_WINDOW }], target: i0.ɵɵFactoryTarget.Injectable });\nNbOAuth2AuthStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbOAuth2AuthStrategy });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbOAuth2AuthStrategy, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: i2.ActivatedRoute }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_WINDOW]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbPasswordAuthStrategyOptions extends NbAuthStrategyOptions {\n    constructor() {\n        super(...arguments);\n        this.baseEndpoint = '/api/auth/';\n        this.login = {\n            alwaysFail: false,\n            endpoint: 'login',\n            method: 'post',\n            requireValidToken: true,\n            redirect: {\n                success: '/',\n                failure: null,\n            },\n            defaultErrors: ['Login/Email combination is not correct, please try again.'],\n            defaultMessages: ['You have been successfully logged in.'],\n        };\n        this.register = {\n            alwaysFail: false,\n            endpoint: 'register',\n            method: 'post',\n            requireValidToken: true,\n            redirect: {\n                success: '/',\n                failure: null,\n            },\n            defaultErrors: ['Something went wrong, please try again.'],\n            defaultMessages: ['You have been successfully registered.'],\n        };\n        this.requestPass = {\n            endpoint: 'request-pass',\n            method: 'post',\n            redirect: {\n                success: '/',\n                failure: null,\n            },\n            defaultErrors: ['Something went wrong, please try again.'],\n            defaultMessages: ['Reset password instructions have been sent to your email.'],\n        };\n        this.resetPass = {\n            endpoint: 'reset-pass',\n            method: 'put',\n            redirect: {\n                success: '/',\n                failure: null,\n            },\n            resetPasswordTokenKey: 'reset_password_token',\n            defaultErrors: ['Something went wrong, please try again.'],\n            defaultMessages: ['Your password has been successfully changed.'],\n        };\n        this.logout = {\n            alwaysFail: false,\n            endpoint: 'logout',\n            method: 'delete',\n            redirect: {\n                success: '/',\n                failure: null,\n            },\n            defaultErrors: ['Something went wrong, please try again.'],\n            defaultMessages: ['You have been successfully logged out.'],\n        };\n        this.refreshToken = {\n            endpoint: 'refresh-token',\n            method: 'post',\n            requireValidToken: true,\n            redirect: {\n                success: null,\n                failure: null,\n            },\n            defaultErrors: ['Something went wrong, please try again.'],\n            defaultMessages: ['Your token has been successfully refreshed.'],\n        };\n        this.token = {\n            class: NbAuthSimpleToken,\n            key: 'data.token',\n            getter: (module, res, options) => getDeepFromObject(res.body, options.token.key),\n        };\n        this.errors = {\n            key: 'data.errors',\n            getter: (module, res, options) => getDeepFromObject(res.error, options.errors.key, options[module].defaultErrors),\n        };\n        this.messages = {\n            key: 'data.messages',\n            getter: (module, res, options) => getDeepFromObject(res.body, options.messages.key, options[module].defaultMessages),\n        };\n    }\n}\nconst passwordStrategyOptions = new NbPasswordAuthStrategyOptions();\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n/**\n * The most common authentication provider for email/password strategy.\n *\n * Strategy settings. Note, there is no need to copy over the whole object to change the settings you need.\n * Also, this.getOption call won't work outside of the default options declaration\n * (which is inside of the `NbPasswordAuthStrategy` class), so you have to replace it with a custom helper function\n * if you need it.\n *\n * ```ts\n *export class NbPasswordAuthStrategyOptions extends NbAuthStrategyOptions {\n *  name: string;\n *  baseEndpoint? = '/api/auth/';\n *  login?: boolean | NbPasswordStrategyModule = {\n *    alwaysFail: false,\n *    endpoint: 'login',\n *    method: 'post',\n *    requireValidToken: true,\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Login/Email combination is not correct, please try again.'],\n *    defaultMessages: ['You have been successfully logged in.'],\n *  };\n *  register?: boolean | NbPasswordStrategyModule = {\n *    alwaysFail: false,\n *    endpoint: 'register',\n *    method: 'post',\n *    requireValidToken: true,\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully registered.'],\n *  };\n *  requestPass?: boolean | NbPasswordStrategyModule = {\n *    endpoint: 'request-pass',\n *    method: 'post',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Reset password instructions have been sent to your email.'],\n *  };\n *  resetPass?: boolean | NbPasswordStrategyReset = {\n *    endpoint: 'reset-pass',\n *    method: 'put',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    resetPasswordTokenKey: 'reset_password_token',\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your password has been successfully changed.'],\n *  };\n *  logout?: boolean | NbPasswordStrategyReset = {\n *    alwaysFail: false,\n *    endpoint: 'logout',\n *    method: 'delete',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully logged out.'],\n *  };\n *  refreshToken?: boolean | NbPasswordStrategyModule = {\n *    endpoint: 'refresh-token',\n *    method: 'post',\n *    requireValidToken: true,\n *    redirect: {\n *      success: null,\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your token has been successfully refreshed.'],\n *  };\n *  token?: NbPasswordStrategyToken = {\n *    class: NbAuthSimpleToken,\n *    key: 'data.token',\n *    getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.body,\n *      options.token.key,\n *    ),\n *  };\n *  errors?: NbPasswordStrategyMessage = {\n *    key: 'data.errors',\n *    getter: (module: string, res: HttpErrorResponse, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.error,\n *      options.errors.key,\n *      options[module].defaultErrors,\n *    ),\n *  };\n *  messages?: NbPasswordStrategyMessage = {\n *    key: 'data.messages',\n *    getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.body,\n *      options.messages.key,\n *      options[module].defaultMessages,\n *    ),\n *  };\n *  validation?: {\n *    password?: {\n *      required?: boolean;\n *      minLength?: number | null;\n *      maxLength?: number | null;\n *      regexp?: string | null;\n *    };\n *    email?: {\n *      required?: boolean;\n *      regexp?: string | null;\n *    };\n *    fullName?: {\n *      required?: boolean;\n *      minLength?: number | null;\n *      maxLength?: number | null;\n *      regexp?: string | null;\n *    };\n *  };\n *}\n * ```\n */\nclass NbPasswordAuthStrategy extends NbAuthStrategy {\n    constructor(http, route) {\n        super();\n        this.http = http;\n        this.route = route;\n        this.defaultOptions = passwordStrategyOptions;\n    }\n    static setup(options) {\n        return [NbPasswordAuthStrategy, options];\n    }\n    authenticate(data) {\n        const module = 'login';\n        const method = this.getOption(`${module}.method`);\n        const url = this.getActionEndpoint(module);\n        const requireValidToken = this.getOption(`${module}.requireValidToken`);\n        return this.http.request(method, url, { body: data, observe: 'response', headers: this.getHeaders() }).pipe(map((res) => {\n            if (this.getOption(`${module}.alwaysFail`)) {\n                throw this.createFailResponse(data);\n            }\n            return res;\n        }), map((res) => {\n            return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options), this.createToken(this.getOption('token.getter')(module, res, this.options), requireValidToken));\n        }), catchError((res) => {\n            return this.handleResponseError(res, module);\n        }));\n    }\n    register(data) {\n        const module = 'register';\n        const method = this.getOption(`${module}.method`);\n        const url = this.getActionEndpoint(module);\n        const requireValidToken = this.getOption(`${module}.requireValidToken`);\n        return this.http.request(method, url, { body: data, observe: 'response', headers: this.getHeaders() }).pipe(map((res) => {\n            if (this.getOption(`${module}.alwaysFail`)) {\n                throw this.createFailResponse(data);\n            }\n            return res;\n        }), map((res) => {\n            return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options), this.createToken(this.getOption('token.getter')('login', res, this.options), requireValidToken));\n        }), catchError((res) => {\n            return this.handleResponseError(res, module);\n        }));\n    }\n    requestPassword(data) {\n        const module = 'requestPass';\n        const method = this.getOption(`${module}.method`);\n        const url = this.getActionEndpoint(module);\n        return this.http.request(method, url, { body: data, observe: 'response', headers: this.getHeaders() }).pipe(map((res) => {\n            if (this.getOption(`${module}.alwaysFail`)) {\n                throw this.createFailResponse();\n            }\n            return res;\n        }), map((res) => {\n            return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options));\n        }), catchError((res) => {\n            return this.handleResponseError(res, module);\n        }));\n    }\n    resetPassword(data = {}) {\n        const module = 'resetPass';\n        const method = this.getOption(`${module}.method`);\n        const url = this.getActionEndpoint(module);\n        const tokenKey = this.getOption(`${module}.resetPasswordTokenKey`);\n        data[tokenKey] = this.route.snapshot.queryParams[tokenKey];\n        return this.http.request(method, url, { body: data, observe: 'response', headers: this.getHeaders() }).pipe(map((res) => {\n            if (this.getOption(`${module}.alwaysFail`)) {\n                throw this.createFailResponse();\n            }\n            return res;\n        }), map((res) => {\n            return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options));\n        }), catchError((res) => {\n            return this.handleResponseError(res, module);\n        }));\n    }\n    logout() {\n        const module = 'logout';\n        const method = this.getOption(`${module}.method`);\n        const url = this.getActionEndpoint(module);\n        return of({}).pipe(switchMap((res) => {\n            if (!url) {\n                return of(res);\n            }\n            return this.http.request(method, url, { observe: 'response', headers: this.getHeaders() });\n        }), map((res) => {\n            if (this.getOption(`${module}.alwaysFail`)) {\n                throw this.createFailResponse();\n            }\n            return res;\n        }), map((res) => {\n            return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options));\n        }), catchError((res) => {\n            return this.handleResponseError(res, module);\n        }));\n    }\n    refreshToken(data) {\n        const module = 'refreshToken';\n        const method = this.getOption(`${module}.method`);\n        const url = this.getActionEndpoint(module);\n        const requireValidToken = this.getOption(`${module}.requireValidToken`);\n        return this.http.request(method, url, { body: data, observe: 'response', headers: this.getHeaders() }).pipe(map((res) => {\n            if (this.getOption(`${module}.alwaysFail`)) {\n                throw this.createFailResponse(data);\n            }\n            return res;\n        }), map((res) => {\n            return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options), this.createToken(this.getOption('token.getter')(module, res, this.options), requireValidToken));\n        }), catchError((res) => {\n            return this.handleResponseError(res, module);\n        }));\n    }\n    handleResponseError(res, module) {\n        let errors = [];\n        if (res instanceof HttpErrorResponse) {\n            errors = this.getOption('errors.getter')(module, res, this.options);\n        }\n        else if (res instanceof NbAuthIllegalTokenError) {\n            errors.push(res.message);\n        }\n        else {\n            errors.push('Something went wrong.');\n        }\n        return of(new NbAuthResult(false, res, this.getOption(`${module}.redirect.failure`), errors));\n    }\n}\nNbPasswordAuthStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbPasswordAuthStrategy, deps: [{ token: i1.HttpClient }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Injectable });\nNbPasswordAuthStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbPasswordAuthStrategy });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbPasswordAuthStrategy, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: i2.ActivatedRoute }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbAuthBlockComponent {\n}\nNbAuthBlockComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNbAuthBlockComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: NbAuthBlockComponent, selector: \"nb-auth-block\", ngImport: i0, template: `\n    <ng-content></ng-content>\n  `, isInline: true, styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host{display:block;width:100%;max-width:35rem}:host ::ng-deep form{width:100%}:host ::ng-deep .label{display:block;margin-bottom:.5rem}:host ::ng-deep .forgot-password{text-decoration:none;margin-bottom:.5rem}:host ::ng-deep .caption{margin-top:.5rem}:host ::ng-deep .alert{text-align:center}:host ::ng-deep .title{margin-top:0;margin-bottom:.75rem;text-align:center}:host ::ng-deep .sub-title{margin-bottom:2rem;text-align:center}:host ::ng-deep .form-control-group{margin-bottom:2rem}:host ::ng-deep .form-control-group.accept-group{display:flex;justify-content:space-between;margin:2rem 0}:host ::ng-deep .label-with-link{display:flex;justify-content:space-between}:host ::ng-deep .links{text-align:center;margin-top:1.75rem}:host ::ng-deep .links .socials{margin-top:1.5rem}:host ::ng-deep .links .socials a{margin:0 1rem;text-decoration:none;vertical-align:middle}:host ::ng-deep .links .socials a.with-icon{font-size:2rem}:host ::ng-deep .another-action{margin-top:2rem;text-align:center}:host ::ng-deep .sign-in-or-up{margin-top:2rem;display:flex;justify-content:space-between}:host ::ng-deep nb-alert .alert-title,:host ::ng-deep nb-alert .alert-message{margin:0 0 .5rem}:host ::ng-deep nb-alert .alert-message-list{list-style-type:none;padding:0;margin:0}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nb-auth-block', template: `\n    <ng-content></ng-content>\n  `, styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host{display:block;width:100%;max-width:35rem}:host ::ng-deep form{width:100%}:host ::ng-deep .label{display:block;margin-bottom:.5rem}:host ::ng-deep .forgot-password{text-decoration:none;margin-bottom:.5rem}:host ::ng-deep .caption{margin-top:.5rem}:host ::ng-deep .alert{text-align:center}:host ::ng-deep .title{margin-top:0;margin-bottom:.75rem;text-align:center}:host ::ng-deep .sub-title{margin-bottom:2rem;text-align:center}:host ::ng-deep .form-control-group{margin-bottom:2rem}:host ::ng-deep .form-control-group.accept-group{display:flex;justify-content:space-between;margin:2rem 0}:host ::ng-deep .label-with-link{display:flex;justify-content:space-between}:host ::ng-deep .links{text-align:center;margin-top:1.75rem}:host ::ng-deep .links .socials{margin-top:1.5rem}:host ::ng-deep .links .socials a{margin:0 1rem;text-decoration:none;vertical-align:middle}:host ::ng-deep .links .socials a.with-icon{font-size:2rem}:host ::ng-deep .another-action{margin-top:2rem;text-align:center}:host ::ng-deep .sign-in-or-up{margin-top:2rem;display:flex;justify-content:space-between}:host ::ng-deep nb-alert .alert-title,:host ::ng-deep nb-alert .alert-message{margin:0 0 .5rem}:host ::ng-deep nb-alert .alert-message-list{list-style-type:none;padding:0;margin:0}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbAuthComponent {\n    // showcase of how to use the onAuthenticationChange method\n    constructor(auth, location) {\n        this.auth = auth;\n        this.location = location;\n        this.destroy$ = new Subject();\n        this.authenticated = false;\n        this.token = '';\n        this.subscription = auth.onAuthenticationChange()\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((authenticated) => {\n            this.authenticated = authenticated;\n        });\n    }\n    back() {\n        this.location.back();\n        return false;\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNbAuthComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthComponent, deps: [{ token: NbAuthService }, { token: i3.Location }], target: i0.ɵɵFactoryTarget.Component });\nNbAuthComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: NbAuthComponent, selector: \"nb-auth\", ngImport: i0, template: `\n    <nb-layout>\n      <nb-layout-column>\n        <nb-card>\n          <nb-card-header>\n            <nav class=\"navigation\">\n              <a href=\"#\" (click)=\"back()\" class=\"link back-link\" aria-label=\"Back\">\n                <nb-icon icon=\"arrow-back\"></nb-icon>\n              </a>\n            </nav>\n          </nb-card-header>\n          <nb-card-body>\n            <nb-auth-block>\n              <router-outlet></router-outlet>\n            </nb-auth-block>\n          </nb-card-body>\n        </nb-card>\n      </nb-layout-column>\n    </nb-layout>\n  `, isInline: true, styles: [\"/*!\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */.visually-hidden{position:absolute!important;height:1px;width:1px;overflow:hidden;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px)}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;inset:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}.nb-global-scrollblock{position:static;width:auto;overflow:hidden}/*\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n *//*!\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */html{box-sizing:border-box}*,*:before,*:after{box-sizing:inherit}html,body{margin:0;padding:0}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host nb-card{margin:0;height:calc(100vh - 5rem)}:host .navigation .link{display:inline-block;text-decoration:none}:host .navigation .link nb-icon{font-size:2rem;vertical-align:middle}:host .links nb-icon{font-size:2.5rem}:host nb-card-body{display:flex;width:100%}:host nb-auth-block{margin:auto}@media (max-width: 767.98px){:host nb-card{border-radius:0;height:100vh}}:host ::ng-deep nb-layout .layout .layout-container .content .columns nb-layout-column{padding:2.5rem}@media (max-width: 767.98px){:host ::ng-deep nb-layout .layout .layout-container .content .columns nb-layout-column{padding:0}}\\n\"], dependencies: [{ kind: \"component\", type: i4.NbLayoutComponent, selector: \"nb-layout\", inputs: [\"center\", \"windowMode\", \"withScroll\", \"restoreScrollTop\"] }, { kind: \"component\", type: i4.NbLayoutColumnComponent, selector: \"nb-layout-column\", inputs: [\"left\", \"start\"] }, { kind: \"component\", type: i4.NbCardComponent, selector: \"nb-card\", inputs: [\"size\", \"status\", \"accent\"] }, { kind: \"component\", type: i4.NbCardBodyComponent, selector: \"nb-card-body\" }, { kind: \"component\", type: i4.NbCardHeaderComponent, selector: \"nb-card-header\" }, { kind: \"directive\", type: i2.RouterOutlet, selector: \"router-outlet\", outputs: [\"activate\", \"deactivate\", \"attach\", \"detach\"], exportAs: [\"outlet\"] }, { kind: \"component\", type: i4.NbIconComponent, selector: \"nb-icon\", inputs: [\"icon\", \"pack\", \"options\", \"status\", \"config\"] }, { kind: \"component\", type: NbAuthBlockComponent, selector: \"nb-auth-block\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nb-auth', template: `\n    <nb-layout>\n      <nb-layout-column>\n        <nb-card>\n          <nb-card-header>\n            <nav class=\"navigation\">\n              <a href=\"#\" (click)=\"back()\" class=\"link back-link\" aria-label=\"Back\">\n                <nb-icon icon=\"arrow-back\"></nb-icon>\n              </a>\n            </nav>\n          </nb-card-header>\n          <nb-card-body>\n            <nb-auth-block>\n              <router-outlet></router-outlet>\n            </nb-auth-block>\n          </nb-card-body>\n        </nb-card>\n      </nb-layout-column>\n    </nb-layout>\n  `, styles: [\"/*!\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */.visually-hidden{position:absolute!important;height:1px;width:1px;overflow:hidden;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px)}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;inset:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}.nb-global-scrollblock{position:static;width:auto;overflow:hidden}/*\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n *//*!\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */html{box-sizing:border-box}*,*:before,*:after{box-sizing:inherit}html,body{margin:0;padding:0}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host nb-card{margin:0;height:calc(100vh - 5rem)}:host .navigation .link{display:inline-block;text-decoration:none}:host .navigation .link nb-icon{font-size:2rem;vertical-align:middle}:host .links nb-icon{font-size:2.5rem}:host nb-card-body{display:flex;width:100%}:host nb-auth-block{margin:auto}@media (max-width: 767.98px){:host nb-card{border-radius:0;height:100vh}}:host ::ng-deep nb-layout .layout .layout-container .content .columns nb-layout-column{padding:2.5rem}@media (max-width: 767.98px){:host ::ng-deep nb-layout .layout .layout-container .content .columns nb-layout-column{padding:0}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NbAuthService }, { type: i3.Location }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbLoginComponent {\n    constructor(service, options = {}, cd, router) {\n        this.service = service;\n        this.options = options;\n        this.cd = cd;\n        this.router = router;\n        this.redirectDelay = 0;\n        this.showMessages = {};\n        this.strategy = '';\n        this.errors = [];\n        this.messages = [];\n        this.user = {};\n        this.submitted = false;\n        this.socialLinks = [];\n        this.rememberMe = false;\n        this.redirectDelay = this.getConfigValue('forms.login.redirectDelay');\n        this.showMessages = this.getConfigValue('forms.login.showMessages');\n        this.strategy = this.getConfigValue('forms.login.strategy');\n        this.socialLinks = this.getConfigValue('forms.login.socialLinks');\n        this.rememberMe = this.getConfigValue('forms.login.rememberMe');\n    }\n    login() {\n        this.errors = [];\n        this.messages = [];\n        this.submitted = true;\n        this.service.authenticate(this.strategy, this.user).subscribe((result) => {\n            this.submitted = false;\n            if (result.isSuccess()) {\n                this.messages = result.getMessages();\n            }\n            else {\n                this.errors = result.getErrors();\n            }\n            const redirect = result.getRedirect();\n            if (redirect) {\n                setTimeout(() => {\n                    return this.router.navigateByUrl(redirect);\n                }, this.redirectDelay);\n            }\n            this.cd.detectChanges();\n        });\n    }\n    getConfigValue(key) {\n        return getDeepFromObject(this.options, key, null);\n    }\n}\nNbLoginComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbLoginComponent, deps: [{ token: NbAuthService }, { token: NB_AUTH_OPTIONS }, { token: i0.ChangeDetectorRef }, { token: i2.Router }], target: i0.ɵɵFactoryTarget.Component });\nNbLoginComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: NbLoginComponent, selector: \"nb-login\", ngImport: i0, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Login</h1>\\n<p class=\\\"sub-title\\\">Hello! Log in with your email.</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"login()\\\" #form=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Email address:</label>\\n    <input nbInput\\n           fullWidth\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           name=\\\"email\\\"\\n           id=\\\"input-email\\\"\\n           pattern=\\\".+@.+\\\\..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           fieldSize=\\\"large\\\"\\n           autofocus\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <span class=\\\"label-with-link\\\">\\n      <label class=\\\"label\\\" for=\\\"input-password\\\">Password:</label>\\n      <a class=\\\"forgot-password caption-2\\\" routerLink=\\\"../request-password\\\">Forgot Password?</a>\\n    </span>\\n    <input nbInput\\n           fullWidth\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           name=\\\"password\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           placeholder=\\\"Password\\\"\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched \\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contain\\n        from {{ getConfigValue('forms.validation.password.minLength') }}\\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group accept-group\\\">\\n    <nb-checkbox name=\\\"rememberMe\\\" [(ngModel)]=\\\"user.rememberMe\\\" *ngIf=\\\"rememberMe\\\">Remember me</nb-checkbox>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !form.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Log In\\n  </button>\\n</form>\\n\\n<section *ngIf=\\\"socialLinks && socialLinks.length > 0\\\" class=\\\"links\\\" aria-label=\\\"Social sign in\\\">\\n  or enter with:\\n  <div class=\\\"socials\\\">\\n    <ng-container *ngFor=\\\"let socialLink of socialLinks\\\">\\n      <a *ngIf=\\\"socialLink.link\\\"\\n         [routerLink]=\\\"socialLink.link\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n      <a *ngIf=\\\"socialLink.url\\\"\\n         [attr.href]=\\\"socialLink.url\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n    </ng-container>\\n  </div>\\n</section>\\n\\n<section class=\\\"another-action\\\" aria-label=\\\"Register\\\">\\n  Don't have an account? <a class=\\\"text-link\\\" routerLink=\\\"../register\\\">Register</a>\\n</section>\\n\", dependencies: [{ kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i4.NbCheckboxComponent, selector: \"nb-checkbox\", inputs: [\"checked\", \"disabled\", \"status\", \"indeterminate\"], outputs: [\"checkedChange\"] }, { kind: \"component\", type: i4.NbAlertComponent, selector: \"nb-alert\", inputs: [\"size\", \"status\", \"accent\", \"outline\", \"closable\"], outputs: [\"close\"] }, { kind: \"directive\", type: i4.NbInputDirective, selector: \"input[nbInput],textarea[nbInput]\", inputs: [\"fieldSize\", \"status\", \"shape\", \"fullWidth\"] }, { kind: \"component\", type: i4.NbButtonComponent, selector: \"button[nbButton],a[nbButton],input[type=\\\"button\\\"][nbButton],input[type=\\\"submit\\\"][nbButton]\", inputs: [\"hero\"] }, { kind: \"directive\", type: i2.RouterLinkWithHref, selector: \"a[routerLink],area[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"directive\", type: i5.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i5.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i5.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i5.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i5.MinLengthValidator, selector: \"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]\", inputs: [\"minlength\"] }, { kind: \"directive\", type: i5.MaxLengthValidator, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: [\"maxlength\"] }, { kind: \"directive\", type: i5.PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: [\"pattern\"] }, { kind: \"directive\", type: i5.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i5.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"component\", type: i4.NbIconComponent, selector: \"nb-icon\", inputs: [\"icon\", \"pack\", \"options\", \"status\", \"config\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbLoginComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nb-login', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Login</h1>\\n<p class=\\\"sub-title\\\">Hello! Log in with your email.</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"login()\\\" #form=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Email address:</label>\\n    <input nbInput\\n           fullWidth\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           name=\\\"email\\\"\\n           id=\\\"input-email\\\"\\n           pattern=\\\".+@.+\\\\..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           fieldSize=\\\"large\\\"\\n           autofocus\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <span class=\\\"label-with-link\\\">\\n      <label class=\\\"label\\\" for=\\\"input-password\\\">Password:</label>\\n      <a class=\\\"forgot-password caption-2\\\" routerLink=\\\"../request-password\\\">Forgot Password?</a>\\n    </span>\\n    <input nbInput\\n           fullWidth\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           name=\\\"password\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           placeholder=\\\"Password\\\"\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched \\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contain\\n        from {{ getConfigValue('forms.validation.password.minLength') }}\\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group accept-group\\\">\\n    <nb-checkbox name=\\\"rememberMe\\\" [(ngModel)]=\\\"user.rememberMe\\\" *ngIf=\\\"rememberMe\\\">Remember me</nb-checkbox>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !form.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Log In\\n  </button>\\n</form>\\n\\n<section *ngIf=\\\"socialLinks && socialLinks.length > 0\\\" class=\\\"links\\\" aria-label=\\\"Social sign in\\\">\\n  or enter with:\\n  <div class=\\\"socials\\\">\\n    <ng-container *ngFor=\\\"let socialLink of socialLinks\\\">\\n      <a *ngIf=\\\"socialLink.link\\\"\\n         [routerLink]=\\\"socialLink.link\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n      <a *ngIf=\\\"socialLink.url\\\"\\n         [attr.href]=\\\"socialLink.url\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n    </ng-container>\\n  </div>\\n</section>\\n\\n<section class=\\\"another-action\\\" aria-label=\\\"Register\\\">\\n  Don't have an account? <a class=\\\"text-link\\\" routerLink=\\\"../register\\\">Register</a>\\n</section>\\n\" }]\n        }], ctorParameters: function () { return [{ type: NbAuthService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i2.Router }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbRegisterComponent {\n    constructor(service, options = {}, cd, router) {\n        this.service = service;\n        this.options = options;\n        this.cd = cd;\n        this.router = router;\n        this.redirectDelay = 0;\n        this.showMessages = {};\n        this.strategy = '';\n        this.submitted = false;\n        this.errors = [];\n        this.messages = [];\n        this.user = {};\n        this.socialLinks = [];\n        this.redirectDelay = this.getConfigValue('forms.register.redirectDelay');\n        this.showMessages = this.getConfigValue('forms.register.showMessages');\n        this.strategy = this.getConfigValue('forms.register.strategy');\n        this.socialLinks = this.getConfigValue('forms.login.socialLinks');\n    }\n    register() {\n        this.errors = this.messages = [];\n        this.submitted = true;\n        this.service.register(this.strategy, this.user).subscribe((result) => {\n            this.submitted = false;\n            if (result.isSuccess()) {\n                this.messages = result.getMessages();\n            }\n            else {\n                this.errors = result.getErrors();\n            }\n            const redirect = result.getRedirect();\n            if (redirect) {\n                setTimeout(() => {\n                    return this.router.navigateByUrl(redirect);\n                }, this.redirectDelay);\n            }\n            this.cd.detectChanges();\n        });\n    }\n    getConfigValue(key) {\n        return getDeepFromObject(this.options, key, null);\n    }\n}\nNbRegisterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbRegisterComponent, deps: [{ token: NbAuthService }, { token: NB_AUTH_OPTIONS }, { token: i0.ChangeDetectorRef }, { token: i2.Router }], target: i0.ɵɵFactoryTarget.Component });\nNbRegisterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: NbRegisterComponent, selector: \"nb-register\", ngImport: i0, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Register</h1>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"register()\\\" #form=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-name\\\">Full name:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.fullName\\\"\\n           #fullName=\\\"ngModel\\\"\\n           id=\\\"input-name\\\"\\n           name=\\\"fullName\\\"\\n           placeholder=\\\"Full name\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"fullName.dirty ? (fullName.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.fullName.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.fullName.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.fullName.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"fullName.invalid && fullName.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"fullName.invalid && fullName.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"fullName.errors?.required\\\">\\n        Full name is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"fullName.errors?.minlength || fullName.errors?.maxlength\\\">\\n        Full name should contains\\n        from {{getConfigValue('forms.validation.fullName.minLength')}}\\n        to {{getConfigValue('forms.validation.fullName.maxLength')}}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Email address:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           id=\\\"input-email\\\"\\n           name=\\\"email\\\"\\n           pattern=\\\".+@.+..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-password\\\">Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           name=\\\"password\\\"\\n           placeholder=\\\"Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contain\\n        from {{ getConfigValue('forms.validation.password.minLength') }}\\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-re-password\\\">Repeat password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.confirmPassword\\\"\\n           #rePass=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-re-password\\\"\\n           name=\\\"rePass\\\"\\n           placeholder=\\\"Confirm Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"rePass.dirty ? (rePass.invalid || password.value != rePass.value  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [attr.aria-invalid]=\\\"rePass.invalid && rePass.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"rePass.invalid && rePass.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"rePass.errors?.required\\\">\\n        Password confirmation is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.value != rePass.value && !rePass.errors?.required\\\">\\n        Password does not match the confirm password.\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group accept-group\\\" *ngIf=\\\"getConfigValue('forms.register.terms')\\\">\\n    <nb-checkbox name=\\\"terms\\\" [(ngModel)]=\\\"user.terms\\\" [required]=\\\"getConfigValue('forms.register.terms')\\\">\\n      Agree to <a href=\\\"#\\\" target=\\\"_blank\\\"><strong>Terms & Conditions</strong></a>\\n    </nb-checkbox>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !form.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Register\\n  </button>\\n</form>\\n\\n<section *ngIf=\\\"socialLinks && socialLinks.length > 0\\\" class=\\\"links\\\" aria-label=\\\"Social sign in\\\">\\n  or enter with:\\n  <div class=\\\"socials\\\">\\n    <ng-container *ngFor=\\\"let socialLink of socialLinks\\\">\\n      <a *ngIf=\\\"socialLink.link\\\"\\n         [routerLink]=\\\"socialLink.link\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n      <a *ngIf=\\\"socialLink.url\\\"\\n         [attr.href]=\\\"socialLink.url\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n    </ng-container>\\n  </div>\\n</section>\\n\\n<section class=\\\"another-action\\\" aria-label=\\\"Sign in\\\">\\n  Already have an account? <a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Log in</a>\\n</section>\\n\", styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .title{margin-bottom:2rem}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i4.NbCheckboxComponent, selector: \"nb-checkbox\", inputs: [\"checked\", \"disabled\", \"status\", \"indeterminate\"], outputs: [\"checkedChange\"] }, { kind: \"component\", type: i4.NbAlertComponent, selector: \"nb-alert\", inputs: [\"size\", \"status\", \"accent\", \"outline\", \"closable\"], outputs: [\"close\"] }, { kind: \"directive\", type: i4.NbInputDirective, selector: \"input[nbInput],textarea[nbInput]\", inputs: [\"fieldSize\", \"status\", \"shape\", \"fullWidth\"] }, { kind: \"component\", type: i4.NbButtonComponent, selector: \"button[nbButton],a[nbButton],input[type=\\\"button\\\"][nbButton],input[type=\\\"submit\\\"][nbButton]\", inputs: [\"hero\"] }, { kind: \"directive\", type: i2.RouterLinkWithHref, selector: \"a[routerLink],area[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"directive\", type: i5.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i5.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i5.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i5.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i5.MinLengthValidator, selector: \"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]\", inputs: [\"minlength\"] }, { kind: \"directive\", type: i5.MaxLengthValidator, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: [\"maxlength\"] }, { kind: \"directive\", type: i5.PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: [\"pattern\"] }, { kind: \"directive\", type: i5.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i5.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"component\", type: i4.NbIconComponent, selector: \"nb-icon\", inputs: [\"icon\", \"pack\", \"options\", \"status\", \"config\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbRegisterComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nb-register', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Register</h1>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"register()\\\" #form=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-name\\\">Full name:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.fullName\\\"\\n           #fullName=\\\"ngModel\\\"\\n           id=\\\"input-name\\\"\\n           name=\\\"fullName\\\"\\n           placeholder=\\\"Full name\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"fullName.dirty ? (fullName.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.fullName.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.fullName.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.fullName.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"fullName.invalid && fullName.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"fullName.invalid && fullName.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"fullName.errors?.required\\\">\\n        Full name is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"fullName.errors?.minlength || fullName.errors?.maxlength\\\">\\n        Full name should contains\\n        from {{getConfigValue('forms.validation.fullName.minLength')}}\\n        to {{getConfigValue('forms.validation.fullName.maxLength')}}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Email address:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           id=\\\"input-email\\\"\\n           name=\\\"email\\\"\\n           pattern=\\\".+@.+..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-password\\\">Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           name=\\\"password\\\"\\n           placeholder=\\\"Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contain\\n        from {{ getConfigValue('forms.validation.password.minLength') }}\\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-re-password\\\">Repeat password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.confirmPassword\\\"\\n           #rePass=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-re-password\\\"\\n           name=\\\"rePass\\\"\\n           placeholder=\\\"Confirm Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"rePass.dirty ? (rePass.invalid || password.value != rePass.value  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [attr.aria-invalid]=\\\"rePass.invalid && rePass.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"rePass.invalid && rePass.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"rePass.errors?.required\\\">\\n        Password confirmation is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.value != rePass.value && !rePass.errors?.required\\\">\\n        Password does not match the confirm password.\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group accept-group\\\" *ngIf=\\\"getConfigValue('forms.register.terms')\\\">\\n    <nb-checkbox name=\\\"terms\\\" [(ngModel)]=\\\"user.terms\\\" [required]=\\\"getConfigValue('forms.register.terms')\\\">\\n      Agree to <a href=\\\"#\\\" target=\\\"_blank\\\"><strong>Terms & Conditions</strong></a>\\n    </nb-checkbox>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !form.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Register\\n  </button>\\n</form>\\n\\n<section *ngIf=\\\"socialLinks && socialLinks.length > 0\\\" class=\\\"links\\\" aria-label=\\\"Social sign in\\\">\\n  or enter with:\\n  <div class=\\\"socials\\\">\\n    <ng-container *ngFor=\\\"let socialLink of socialLinks\\\">\\n      <a *ngIf=\\\"socialLink.link\\\"\\n         [routerLink]=\\\"socialLink.link\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n      <a *ngIf=\\\"socialLink.url\\\"\\n         [attr.href]=\\\"socialLink.url\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n    </ng-container>\\n  </div>\\n</section>\\n\\n<section class=\\\"another-action\\\" aria-label=\\\"Sign in\\\">\\n  Already have an account? <a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Log in</a>\\n</section>\\n\", styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .title{margin-bottom:2rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NbAuthService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i2.Router }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbLogoutComponent {\n    constructor(service, options = {}, router) {\n        this.service = service;\n        this.options = options;\n        this.router = router;\n        this.redirectDelay = 0;\n        this.strategy = '';\n        this.redirectDelay = this.getConfigValue('forms.logout.redirectDelay');\n        this.strategy = this.getConfigValue('forms.logout.strategy');\n    }\n    ngOnInit() {\n        this.logout(this.strategy);\n    }\n    logout(strategy) {\n        this.service.logout(strategy).subscribe((result) => {\n            const redirect = result.getRedirect();\n            if (redirect) {\n                setTimeout(() => {\n                    return this.router.navigateByUrl(redirect);\n                }, this.redirectDelay);\n            }\n        });\n    }\n    getConfigValue(key) {\n        return getDeepFromObject(this.options, key, null);\n    }\n}\nNbLogoutComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbLogoutComponent, deps: [{ token: NbAuthService }, { token: NB_AUTH_OPTIONS }, { token: i2.Router }], target: i0.ɵɵFactoryTarget.Component });\nNbLogoutComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: NbLogoutComponent, selector: \"nb-logout\", ngImport: i0, template: \"<div>Logging out, please wait...</div>\\n\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbLogoutComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nb-logout', template: \"<div>Logging out, please wait...</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: NbAuthService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_OPTIONS]\n                }] }, { type: i2.Router }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbRequestPasswordComponent {\n    constructor(service, options = {}, cd, router) {\n        this.service = service;\n        this.options = options;\n        this.cd = cd;\n        this.router = router;\n        this.redirectDelay = 0;\n        this.showMessages = {};\n        this.strategy = '';\n        this.submitted = false;\n        this.errors = [];\n        this.messages = [];\n        this.user = {};\n        this.redirectDelay = this.getConfigValue('forms.requestPassword.redirectDelay');\n        this.showMessages = this.getConfigValue('forms.requestPassword.showMessages');\n        this.strategy = this.getConfigValue('forms.requestPassword.strategy');\n    }\n    requestPass() {\n        this.errors = this.messages = [];\n        this.submitted = true;\n        this.service.requestPassword(this.strategy, this.user).subscribe((result) => {\n            this.submitted = false;\n            if (result.isSuccess()) {\n                this.messages = result.getMessages();\n            }\n            else {\n                this.errors = result.getErrors();\n            }\n            const redirect = result.getRedirect();\n            if (redirect) {\n                setTimeout(() => {\n                    return this.router.navigateByUrl(redirect);\n                }, this.redirectDelay);\n            }\n            this.cd.detectChanges();\n        });\n    }\n    getConfigValue(key) {\n        return getDeepFromObject(this.options, key, null);\n    }\n}\nNbRequestPasswordComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbRequestPasswordComponent, deps: [{ token: NbAuthService }, { token: NB_AUTH_OPTIONS }, { token: i0.ChangeDetectorRef }, { token: i2.Router }], target: i0.ɵɵFactoryTarget.Component });\nNbRequestPasswordComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: NbRequestPasswordComponent, selector: \"nb-request-password-page\", ngImport: i0, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Forgot Password</h1>\\n<p class=\\\"sub-title\\\">Enter your email address and we\\u2019ll send a link to reset your password</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"requestPass()\\\" #requestPassForm=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Enter your email address:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           id=\\\"input-email\\\"\\n           name=\\\"email\\\"\\n           pattern=\\\".+@.+\\\\..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !requestPassForm.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Request password\\n  </button>\\n</form>\\n\\n<section class=\\\"sign-in-or-up\\\" aria-label=\\\"Sign in or sign up\\\">\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Back to Log In</a></p>\\n  <p><a routerLink=\\\"../register\\\" class=\\\"text-link\\\">Register</a></p>\\n</section>\\n\", styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .form-group:last-of-type{margin-bottom:3rem}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i4.NbAlertComponent, selector: \"nb-alert\", inputs: [\"size\", \"status\", \"accent\", \"outline\", \"closable\"], outputs: [\"close\"] }, { kind: \"directive\", type: i4.NbInputDirective, selector: \"input[nbInput],textarea[nbInput]\", inputs: [\"fieldSize\", \"status\", \"shape\", \"fullWidth\"] }, { kind: \"component\", type: i4.NbButtonComponent, selector: \"button[nbButton],a[nbButton],input[type=\\\"button\\\"][nbButton],input[type=\\\"submit\\\"][nbButton]\", inputs: [\"hero\"] }, { kind: \"directive\", type: i2.RouterLinkWithHref, selector: \"a[routerLink],area[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"directive\", type: i5.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i5.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i5.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i5.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i5.PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: [\"pattern\"] }, { kind: \"directive\", type: i5.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i5.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbRequestPasswordComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nb-request-password-page', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Forgot Password</h1>\\n<p class=\\\"sub-title\\\">Enter your email address and we\\u2019ll send a link to reset your password</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"requestPass()\\\" #requestPassForm=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Enter your email address:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           id=\\\"input-email\\\"\\n           name=\\\"email\\\"\\n           pattern=\\\".+@.+\\\\..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !requestPassForm.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Request password\\n  </button>\\n</form>\\n\\n<section class=\\\"sign-in-or-up\\\" aria-label=\\\"Sign in or sign up\\\">\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Back to Log In</a></p>\\n  <p><a routerLink=\\\"../register\\\" class=\\\"text-link\\\">Register</a></p>\\n</section>\\n\", styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .form-group:last-of-type{margin-bottom:3rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NbAuthService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i2.Router }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbResetPasswordComponent {\n    constructor(service, options = {}, cd, router) {\n        this.service = service;\n        this.options = options;\n        this.cd = cd;\n        this.router = router;\n        this.redirectDelay = 0;\n        this.showMessages = {};\n        this.strategy = '';\n        this.submitted = false;\n        this.errors = [];\n        this.messages = [];\n        this.user = {};\n        this.redirectDelay = this.getConfigValue('forms.resetPassword.redirectDelay');\n        this.showMessages = this.getConfigValue('forms.resetPassword.showMessages');\n        this.strategy = this.getConfigValue('forms.resetPassword.strategy');\n    }\n    resetPass() {\n        this.errors = this.messages = [];\n        this.submitted = true;\n        this.service.resetPassword(this.strategy, this.user).subscribe((result) => {\n            this.submitted = false;\n            if (result.isSuccess()) {\n                this.messages = result.getMessages();\n            }\n            else {\n                this.errors = result.getErrors();\n            }\n            const redirect = result.getRedirect();\n            if (redirect) {\n                setTimeout(() => {\n                    return this.router.navigateByUrl(redirect);\n                }, this.redirectDelay);\n            }\n            this.cd.detectChanges();\n        });\n    }\n    getConfigValue(key) {\n        return getDeepFromObject(this.options, key, null);\n    }\n}\nNbResetPasswordComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbResetPasswordComponent, deps: [{ token: NbAuthService }, { token: NB_AUTH_OPTIONS }, { token: i0.ChangeDetectorRef }, { token: i2.Router }], target: i0.ɵɵFactoryTarget.Component });\nNbResetPasswordComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: NbResetPasswordComponent, selector: \"nb-reset-password-page\", ngImport: i0, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Change password</h1>\\n<p class=\\\"sub-title\\\">Please set a new password</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"resetPass()\\\" #resetPassForm=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-password\\\">New Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           name=\\\"password\\\"\\n           class=\\\"first\\\"\\n           placeholder=\\\"New Password\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contains\\n        from {{getConfigValue('forms.validation.password.minLength')}}\\n        to {{getConfigValue('forms.validation.password.maxLength')}}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-re-password\\\">Confirm Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.confirmPassword\\\"\\n           #rePass=\\\"ngModel\\\"\\n           id=\\\"input-re-password\\\"\\n           name=\\\"rePass\\\"\\n           type=\\\"password\\\"\\n           class=\\\"last\\\"\\n           placeholder=\\\"Confirm Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"rePass.touched\\n               ? (rePass.invalid || password.value != rePass.value ? 'danger' : 'success')\\n               : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [attr.aria-invalid]=\\\"rePass.invalid && rePass.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"rePass.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"rePass.invalid && rePass.errors?.required\\\">\\n        Password confirmation is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.value != rePass.value && !rePass.errors?.required\\\">\\n        Password does not match the confirm password.\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <button nbButton\\n          status=\\\"primary\\\"\\n          fullWidth\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !resetPassForm.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Change password\\n  </button>\\n</form>\\n\\n<section class=\\\"sign-in-or-up\\\" aria-label=\\\"Sign in or sign up\\\">\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Back to Log In</a></p>\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../register\\\">Register</a></p>\\n</section>\\n\", styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .form-group:last-of-type{margin-bottom:3rem}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i4.NbAlertComponent, selector: \"nb-alert\", inputs: [\"size\", \"status\", \"accent\", \"outline\", \"closable\"], outputs: [\"close\"] }, { kind: \"directive\", type: i4.NbInputDirective, selector: \"input[nbInput],textarea[nbInput]\", inputs: [\"fieldSize\", \"status\", \"shape\", \"fullWidth\"] }, { kind: \"component\", type: i4.NbButtonComponent, selector: \"button[nbButton],a[nbButton],input[type=\\\"button\\\"][nbButton],input[type=\\\"submit\\\"][nbButton]\", inputs: [\"hero\"] }, { kind: \"directive\", type: i2.RouterLinkWithHref, selector: \"a[routerLink],area[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"directive\", type: i5.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i5.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i5.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i5.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i5.MinLengthValidator, selector: \"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]\", inputs: [\"minlength\"] }, { kind: \"directive\", type: i5.MaxLengthValidator, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: [\"maxlength\"] }, { kind: \"directive\", type: i5.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i5.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbResetPasswordComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nb-reset-password-page', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Change password</h1>\\n<p class=\\\"sub-title\\\">Please set a new password</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"resetPass()\\\" #resetPassForm=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-password\\\">New Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           name=\\\"password\\\"\\n           class=\\\"first\\\"\\n           placeholder=\\\"New Password\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contains\\n        from {{getConfigValue('forms.validation.password.minLength')}}\\n        to {{getConfigValue('forms.validation.password.maxLength')}}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-re-password\\\">Confirm Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.confirmPassword\\\"\\n           #rePass=\\\"ngModel\\\"\\n           id=\\\"input-re-password\\\"\\n           name=\\\"rePass\\\"\\n           type=\\\"password\\\"\\n           class=\\\"last\\\"\\n           placeholder=\\\"Confirm Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"rePass.touched\\n               ? (rePass.invalid || password.value != rePass.value ? 'danger' : 'success')\\n               : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [attr.aria-invalid]=\\\"rePass.invalid && rePass.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"rePass.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"rePass.invalid && rePass.errors?.required\\\">\\n        Password confirmation is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.value != rePass.value && !rePass.errors?.required\\\">\\n        Password does not match the confirm password.\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <button nbButton\\n          status=\\\"primary\\\"\\n          fullWidth\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !resetPassForm.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Change password\\n  </button>\\n</form>\\n\\n<section class=\\\"sign-in-or-up\\\" aria-label=\\\"Sign in or sign up\\\">\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Back to Log In</a></p>\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../register\\\">Register</a></p>\\n</section>\\n\", styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .form-group:last-of-type{margin-bottom:3rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NbAuthService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i2.Router }]; } });\n\nfunction nbStrategiesFactory(options, injector) {\n    const strategies = [];\n    options.strategies\n        .forEach(([strategyClass, strategyOptions]) => {\n        const strategy = injector.get(strategyClass);\n        strategy.setOptions(strategyOptions);\n        strategies.push(strategy);\n    });\n    return strategies;\n}\nfunction nbTokensFactory(strategies) {\n    const tokens = [];\n    strategies\n        .forEach((strategy) => {\n        tokens.push(strategy.getOption('token.class'));\n    });\n    return tokens;\n}\nfunction nbOptionsFactory(options) {\n    return deepExtend(defaultAuthOptions, options);\n}\nfunction nbNoOpInterceptorFilter(req) {\n    return true;\n}\nclass NbAuthModule {\n    static forRoot(nbAuthOptions) {\n        return {\n            ngModule: NbAuthModule,\n            providers: [\n                { provide: NB_AUTH_USER_OPTIONS, useValue: nbAuthOptions },\n                { provide: NB_AUTH_OPTIONS, useFactory: nbOptionsFactory, deps: [NB_AUTH_USER_OPTIONS] },\n                { provide: NB_AUTH_STRATEGIES, useFactory: nbStrategiesFactory, deps: [NB_AUTH_OPTIONS, Injector] },\n                { provide: NB_AUTH_TOKENS, useFactory: nbTokensFactory, deps: [NB_AUTH_STRATEGIES] },\n                { provide: NB_AUTH_FALLBACK_TOKEN, useValue: NbAuthSimpleToken },\n                { provide: NB_AUTH_INTERCEPTOR_HEADER, useValue: 'Authorization' },\n                { provide: NB_AUTH_TOKEN_INTERCEPTOR_FILTER, useValue: nbNoOpInterceptorFilter },\n                { provide: NbTokenStorage, useClass: NbTokenLocalStorage },\n                NbAuthTokenParceler,\n                NbAuthService,\n                NbTokenService,\n                NbDummyAuthStrategy,\n                NbPasswordAuthStrategy,\n                NbOAuth2AuthStrategy,\n            ],\n        };\n    }\n}\nNbAuthModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNbAuthModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthModule, declarations: [NbAuthComponent,\n        NbAuthBlockComponent,\n        NbLoginComponent,\n        NbRegisterComponent,\n        NbRequestPasswordComponent,\n        NbResetPasswordComponent,\n        NbLogoutComponent], imports: [CommonModule,\n        NbLayoutModule,\n        NbCardModule,\n        NbCheckboxModule,\n        NbAlertModule,\n        NbInputModule,\n        NbButtonModule,\n        RouterModule,\n        FormsModule,\n        NbIconModule], exports: [NbAuthComponent,\n        NbAuthBlockComponent,\n        NbLoginComponent,\n        NbRegisterComponent,\n        NbRequestPasswordComponent,\n        NbResetPasswordComponent,\n        NbLogoutComponent] });\nNbAuthModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthModule, imports: [CommonModule,\n        NbLayoutModule,\n        NbCardModule,\n        NbCheckboxModule,\n        NbAlertModule,\n        NbInputModule,\n        NbButtonModule,\n        RouterModule,\n        FormsModule,\n        NbIconModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        NbLayoutModule,\n                        NbCardModule,\n                        NbCheckboxModule,\n                        NbAlertModule,\n                        NbInputModule,\n                        NbButtonModule,\n                        RouterModule,\n                        FormsModule,\n                        NbIconModule,\n                    ],\n                    declarations: [\n                        NbAuthComponent,\n                        NbAuthBlockComponent,\n                        NbLoginComponent,\n                        NbRegisterComponent,\n                        NbRequestPasswordComponent,\n                        NbResetPasswordComponent,\n                        NbLogoutComponent,\n                    ],\n                    exports: [\n                        NbAuthComponent,\n                        NbAuthBlockComponent,\n                        NbLoginComponent,\n                        NbRegisterComponent,\n                        NbRequestPasswordComponent,\n                        NbResetPasswordComponent,\n                        NbLogoutComponent,\n                    ],\n                }]\n        }] });\n\nconst routes = [\n    {\n        path: 'auth',\n        component: NbAuthComponent,\n        children: [\n            {\n                path: '',\n                component: NbLoginComponent,\n            },\n            {\n                path: 'login',\n                component: NbLoginComponent,\n            },\n            {\n                path: 'register',\n                component: NbRegisterComponent,\n            },\n            {\n                path: 'logout',\n                component: NbLogoutComponent,\n            },\n            {\n                path: 'request-password',\n                component: NbRequestPasswordComponent,\n            },\n            {\n                path: 'reset-password',\n                component: NbResetPasswordComponent,\n            },\n        ],\n    },\n];\n\nclass NbAuthJWTInterceptor {\n    constructor(injector, filter) {\n        this.injector = injector;\n        this.filter = filter;\n    }\n    intercept(req, next) {\n        // do not intercept request whose urls are filtered by the injected filter\n        if (!this.filter(req)) {\n            return this.authService.isAuthenticatedOrRefresh()\n                .pipe(switchMap(authenticated => {\n                if (authenticated) {\n                    return this.authService.getToken().pipe(switchMap((token) => {\n                        const JWT = `Bearer ${token.getValue()}`;\n                        req = req.clone({\n                            setHeaders: {\n                                Authorization: JWT,\n                            },\n                        });\n                        return next.handle(req);\n                    }));\n                }\n                else {\n                    // Request is sent to server without authentication so that the client code\n                    // receives the 401/403 error and can act as desired ('session expired', redirect to login, aso)\n                    return next.handle(req);\n                }\n            }));\n        }\n        else {\n            return next.handle(req);\n        }\n    }\n    get authService() {\n        return this.injector.get(NbAuthService);\n    }\n}\nNbAuthJWTInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthJWTInterceptor, deps: [{ token: i0.Injector }, { token: NB_AUTH_TOKEN_INTERCEPTOR_FILTER }], target: i0.ɵɵFactoryTarget.Injectable });\nNbAuthJWTInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthJWTInterceptor });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthJWTInterceptor, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_TOKEN_INTERCEPTOR_FILTER]\n                }] }]; } });\n\nclass NbAuthSimpleInterceptor {\n    constructor(injector, headerName = 'Authorization') {\n        this.injector = injector;\n        this.headerName = headerName;\n    }\n    intercept(req, next) {\n        return this.authService.getToken().pipe(switchMap((token) => {\n            if (token && token.getValue()) {\n                req = req.clone({\n                    setHeaders: {\n                        [this.headerName]: token.getValue(),\n                    },\n                });\n            }\n            return next.handle(req);\n        }));\n    }\n    get authService() {\n        return this.injector.get(NbAuthService);\n    }\n}\nNbAuthSimpleInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthSimpleInterceptor, deps: [{ token: i0.Injector }, { token: NB_AUTH_INTERCEPTOR_HEADER }], target: i0.ɵɵFactoryTarget.Injectable });\nNbAuthSimpleInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthSimpleInterceptor });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NbAuthSimpleInterceptor, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_INTERCEPTOR_HEADER]\n                }] }]; } });\n\nclass NbUser {\n    constructor(id, email, password, rememberMe, terms, confirmPassword, fullName) {\n        this.id = id;\n        this.email = email;\n        this.password = password;\n        this.rememberMe = rememberMe;\n        this.terms = terms;\n        this.confirmPassword = confirmPassword;\n        this.fullName = fullName;\n    }\n}\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NB_AUTH_FALLBACK_TOKEN, NB_AUTH_INTERCEPTOR_HEADER, NB_AUTH_OPTIONS, NB_AUTH_STRATEGIES, NB_AUTH_TOKENS, NB_AUTH_TOKEN_INTERCEPTOR_FILTER, NB_AUTH_USER_OPTIONS, NbAuthBlockComponent, NbAuthComponent, NbAuthEmptyTokenError, NbAuthIllegalJWTTokenError, NbAuthIllegalTokenError, NbAuthJWTInterceptor, NbAuthJWTToken, NbAuthModule, NbAuthOAuth2JWTToken, NbAuthOAuth2Token, NbAuthResult, NbAuthService, NbAuthSimpleInterceptor, NbAuthSimpleToken, NbAuthStrategy, NbAuthStrategyOptions, NbAuthToken, NbAuthTokenNotFoundError, NbAuthTokenParceler, NbDummyAuthStrategy, NbDummyAuthStrategyOptions, NbLoginComponent, NbLogoutComponent, NbOAuth2AuthStrategy, NbOAuth2AuthStrategyOptions, NbOAuth2ClientAuthMethod, NbOAuth2GrantType, NbOAuth2ResponseType, NbPasswordAuthStrategy, NbPasswordAuthStrategyOptions, NbRegisterComponent, NbRequestPasswordComponent, NbResetPasswordComponent, NbTokenLocalStorage, NbTokenService, NbTokenStorage, NbUser, auth2StrategyOptions, b64DecodeUnicode, b64decode, decodeJwtPayload, deepExtend, defaultAuthOptions, dummyStrategyOptions, getDeepFromObject, nbAuthCreateToken, nbNoOpInterceptorFilter, nbOptionsFactory, nbStrategiesFactory, nbTokensFactory, passwordStrategyOptions, routes, urlBase64Decode };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}