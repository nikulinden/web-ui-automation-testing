{"ast":null,"code":"import _defineProperty from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _get from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _toConsumableArray from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _inherits from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _createForOfIteratorHelper from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, ViewEncapsulation, Inject, Input, ViewChild, HostBinding, HostListener, Injectable, ChangeDetectionStrategy, EventEmitter, Output, Directive, NgModule, ContentChild } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { select } from 'd3-selection';\nimport { brushX } from 'd3-brush';\nimport { scaleTime, scaleLinear, scalePoint, scaleOrdinal, scaleQuantile, scaleBand } from 'd3-scale';\nimport { area, curveLinear, line, arc, lineRadial, curveCardinalClosed, pie } from 'd3-shape';\nimport { range, min, max, quantile } from 'd3-array';\nimport { interpolate } from 'd3-interpolate';\nimport { easeSinInOut } from 'd3-ease';\nimport rfdc from 'rfdc';\nimport { format } from 'd3-format';\nimport * as d3_color from 'd3-color';\nimport { treemap, stratify } from 'd3-hierarchy';\nimport { timeFormat } from 'd3-time-format';\n/**\n * Throttle a function\n *\n */\n\nvar _c0 = [\"caretElm\"];\n\nfunction TooltipContentComponent_span_4_ng_template_1_Template(rf, ctx) {}\n\nvar _c1 = function _c1(a0) {\n  return {\n    model: a0\n  };\n};\n\nfunction TooltipContentComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, TooltipContentComponent_span_4_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r1.context));\n  }\n}\n\nfunction TooltipContentComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.title, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction LegendComponent_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"header\", 4)(1, \"span\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\n\nfunction LegendComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 6)(1, \"ngx-charts-legend-entry\", 7);\n    i0.ɵɵlistener(\"select\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      var ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.labelClick.emit($event));\n    })(\"activate\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activate($event));\n    })(\"deactivate\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var entry_r2 = ctx.$implicit;\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", entry_r2.label)(\"formattedLabel\", entry_r2.formattedLabel)(\"color\", entry_r2.color)(\"isActive\", ctx_r1.isActive(entry_r2));\n  }\n}\n\nfunction ChartComponent_ngx_charts_scale_legend_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelement(0, \"ngx-charts-scale-legend\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"horizontal\", ctx_r0.legendOptions && ctx_r0.legendOptions.position === ctx_r0.LegendPosition.Below)(\"valueRange\", ctx_r0.legendOptions.domain)(\"colors\", ctx_r0.legendOptions.colors)(\"height\", ctx_r0.view[1])(\"width\", ctx_r0.legendWidth);\n  }\n}\n\nfunction ChartComponent_ngx_charts_legend_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"ngx-charts-legend\", 5);\n    i0.ɵɵlistener(\"labelClick\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.legendLabelClick.emit($event));\n    })(\"labelActivate\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelActivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.legendLabelActivate.emit($event));\n    })(\"labelDeactivate\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelDeactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.legendLabelDeactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"horizontal\", ctx_r1.legendOptions && ctx_r1.legendOptions.position === ctx_r1.LegendPosition.Below)(\"data\", ctx_r1.legendOptions.domain)(\"title\", ctx_r1.legendOptions.title)(\"colors\", ctx_r1.legendOptions.colors)(\"height\", ctx_r1.view[1])(\"width\", ctx_r1.legendWidth)(\"activeEntries\", ctx_r1.activeEntries);\n  }\n}\n\nvar _c2 = [\"*\"];\nvar _c3 = [\"ngx-charts-axis-label\", \"\"];\nvar _c4 = [\"ticksel\"];\nvar _c5 = [\"ngx-charts-x-axis-ticks\", \"\"];\n\nfunction XAxisTicksComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3)(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 4);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var tick_r3 = ctx.$implicit;\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.tickTransform(tick_r3));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.tickFormat(tick_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"font-size\", \"12px\");\n    i0.ɵɵattribute(\"text-anchor\", ctx_r1.textAnchor)(\"transform\", ctx_r1.textTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.tickTrim(ctx_r1.tickFormat(tick_r3)), \" \");\n  }\n}\n\nfunction XAxisTicksComponent__svg_g_3__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"line\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r5.gridLineTransform());\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", -ctx_r5.gridLineHeight);\n  }\n}\n\nfunction XAxisTicksComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, XAxisTicksComponent__svg_g_3__svg_g_1_Template, 2, 2, \"g\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tick_r4 = ctx.$implicit;\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r2.tickTransform(tick_r4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showGridLines);\n  }\n}\n\nvar _c6 = [\"ngx-charts-x-axis\", \"\"];\n\nfunction XAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"dimensionsChanged\", function XAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.emitTicksHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"trimTicks\", ctx_r0.trimTicks)(\"rotateTicks\", ctx_r0.rotateTicks)(\"maxTickLength\", ctx_r0.maxTickLength)(\"tickFormatting\", ctx_r0.tickFormatting)(\"tickArguments\", ctx_r0.tickArguments)(\"tickStroke\", ctx_r0.tickStroke)(\"scale\", ctx_r0.xScale)(\"orient\", ctx_r0.xOrient)(\"showGridLines\", ctx_r0.showGridLines)(\"gridLineHeight\", ctx_r0.dims.height)(\"width\", ctx_r0.dims.width)(\"tickValues\", ctx_r0.ticks);\n  }\n}\n\nfunction XAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.labelText)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.orientation.Bottom)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\n\nvar _c7 = [\"ngx-charts-y-axis-ticks\", \"\"];\n\nfunction YAxisTicksComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4)(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var tick_r5 = ctx.$implicit;\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transform(tick_r5));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.tickFormat(tick_r5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"font-size\", \"12px\");\n    i0.ɵɵattribute(\"dy\", ctx_r1.dy)(\"x\", ctx_r1.x1)(\"y\", ctx_r1.y1)(\"text-anchor\", ctx_r1.textAnchor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.tickTrim(ctx_r1.tickFormat(tick_r5)), \" \");\n  }\n}\n\nfunction YAxisTicksComponent__svg_path_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 6);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"d\", ctx_r2.referenceAreaPath)(\"transform\", ctx_r2.gridLineTransform());\n  }\n}\n\nfunction YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 9);\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"x2\", ctx_r8.gridLineWidth);\n  }\n}\n\nfunction YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 9);\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"x2\", -ctx_r9.gridLineWidth);\n  }\n}\n\nfunction YAxisTicksComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template, 1, 1, \"line\", 8);\n    i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template, 1, 1, \"line\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r7.gridLineTransform());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.orient === ctx_r7.Orientation.Left);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.orient === ctx_r7.Orientation.Right);\n  }\n}\n\nfunction YAxisTicksComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_4__svg_g_1_Template, 3, 3, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tick_r6 = ctx.$implicit;\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r3.transform(tick_r6));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.showGridLines);\n  }\n}\n\nfunction YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 11);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var refLine_r10 = i0.ɵɵnextContext(2).$implicit;\n    var ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r12.tickTrim(ctx_r12.tickFormat(refLine_r10.value)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"dy\", ctx_r12.dy)(\"y\", -6)(\"x\", ctx_r12.gridLineWidth)(\"text-anchor\", ctx_r12.textAnchor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", refLine_r10.name, \" \");\n  }\n}\n\nfunction YAxisTicksComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"line\", 10);\n    i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template, 5, 6, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var refLine_r10 = i0.ɵɵnextContext().$implicit;\n    var ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r11.transform(refLine_r10.value));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"x2\", ctx_r11.gridLineWidth)(\"transform\", ctx_r11.gridLineTransform());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.showRefLabels);\n  }\n}\n\nfunction YAxisTicksComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_5__svg_g_1_Template, 3, 4, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showRefLines);\n  }\n}\n\nvar _c8 = [\"ngx-charts-y-axis\", \"\"];\n\nfunction YAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"dimensionsChanged\", function YAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.emitTicksWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"trimTicks\", ctx_r0.trimTicks)(\"maxTickLength\", ctx_r0.maxTickLength)(\"tickFormatting\", ctx_r0.tickFormatting)(\"tickArguments\", ctx_r0.tickArguments)(\"tickValues\", ctx_r0.ticks)(\"tickStroke\", ctx_r0.tickStroke)(\"scale\", ctx_r0.yScale)(\"orient\", ctx_r0.yOrient)(\"showGridLines\", ctx_r0.showGridLines)(\"gridLineWidth\", ctx_r0.dims.width)(\"referenceLines\", ctx_r0.referenceLines)(\"showRefLines\", ctx_r0.showRefLines)(\"showRefLabels\", ctx_r0.showRefLabels)(\"height\", ctx_r0.dims.height);\n  }\n}\n\nfunction YAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.labelText)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.yOrient)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\n\nvar _c9 = [\"ngx-charts-svg-linear-gradient\", \"\"];\n\nfunction SvgLinearGradientComponent__svg_stop_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"stop\");\n  }\n\n  if (rf & 2) {\n    var stop_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"stop-color\", stop_r1.color)(\"stop-opacity\", stop_r1.opacity);\n    i0.ɵɵattribute(\"offset\", stop_r1.offset + \"%\");\n  }\n}\n\nvar _c10 = [\"ngx-charts-circle\", \"\"];\nvar _c11 = [\"ngx-charts-circle-series\", \"\"];\n\nfunction CircleSeriesComponent__svg_g_0__svg_rect_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"x\", ctx_r1.circle.cx - ctx_r1.circle.radius)(\"y\", ctx_r1.circle.cy)(\"width\", ctx_r1.circle.radius * 2)(\"height\", ctx_r1.circle.height)(\"fill\", ctx_r1.gradientFill);\n  }\n}\n\nfunction CircleSeriesComponent__svg_g_0__svg_rect_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"x\", ctx_r2.circle.cx - ctx_r2.circle.radius)(\"y\", ctx_r2.circle.cy)(\"width\", ctx_r2.circle.radius * 2)(\"height\", ctx_r2.circle.height)(\"fill\", ctx_r2.gradientFill);\n  }\n}\n\nvar _c12 = function _c12(a0) {\n  return {\n    name: a0\n  };\n};\n\nfunction CircleSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"defs\");\n    i0.ɵɵelement(2, \"g\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, CircleSeriesComponent__svg_g_0__svg_rect_3_Template, 1, 6, \"rect\", 2);\n    i0.ɵɵtemplate(4, CircleSeriesComponent__svg_g_0__svg_rect_4_Template, 1, 5, \"rect\", 2);\n    i0.ɵɵelementStart(5, \"g\", 3);\n    i0.ɵɵlistener(\"select\", function CircleSeriesComponent__svg_g_0_Template__svg_g_select_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      var ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onClick(ctx_r3.circle.data));\n    })(\"activate\", function CircleSeriesComponent__svg_g_0_Template__svg_g_activate_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activateCircle());\n    })(\"deactivate\", function CircleSeriesComponent__svg_g_0_Template__svg_g_deactivate_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivateCircle());\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.circle.gradientStops);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isSSR && ctx_r0.barVisible && ctx_r0.type === \"standard\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSSR && ctx_r0.barVisible && ctx_r0.type === \"standard\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"active\", ctx_r0.isActive(i0.ɵɵpureFunction1(20, _c12, ctx_r0.circle.seriesName)));\n    i0.ɵɵproperty(\"cx\", ctx_r0.circle.cx)(\"cy\", ctx_r0.circle.cy)(\"r\", ctx_r0.circle.radius)(\"fill\", ctx_r0.circle.color)(\"pointerEvents\", ctx_r0.circle.value === 0 ? \"none\" : \"all\")(\"data\", ctx_r0.circle.value)(\"classNames\", ctx_r0.circle.classNames)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.getTooltipText(ctx_r0.circle))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", ctx_r0.circle.data);\n  }\n}\n\nvar _c13 = [\"ngx-charts-grid-panel\", \"\"];\nvar _c14 = [\"ngx-charts-grid-panel-series\", \"\"];\n\nfunction GridPanelSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 1);\n  }\n\n  if (rf & 2) {\n    var gridPanel_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"grid-panel\", true)(\"odd\", gridPanel_r1.class === \"odd\")(\"even\", gridPanel_r1.class === \"even\");\n    i0.ɵɵproperty(\"height\", gridPanel_r1.height)(\"width\", gridPanel_r1.width)(\"x\", gridPanel_r1.x)(\"y\", gridPanel_r1.y);\n  }\n}\n\nvar _c15 = [\"ngx-charts-svg-radial-gradient\", \"\"];\n\nfunction SvgRadialGradientComponent__svg_stop_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"stop\");\n  }\n\n  if (rf & 2) {\n    var stop_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"stop-color\", stop_r1.color)(\"stop-opacity\", stop_r1.opacity);\n    i0.ɵɵattribute(\"offset\", stop_r1.offset + \"%\");\n  }\n}\n\nvar _c16 = [\"ngx-charts-area\", \"\"];\n\nfunction AreaComponent__svg_defs_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\n\nvar _c17 = [\"ngx-charts-count-up\", \"\"];\nvar _c18 = [\"tooltipAnchor\"];\nvar _c19 = [\"ngx-charts-tooltip-area\", \"\"];\n\nfunction TooltipArea__svg_ng_template_2__xhtml_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"span\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tooltipItem_r5 = ctx.$implicit;\n    var ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", tooltipItem_r5.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.getToolTipText(tooltipItem_r5), \" \");\n  }\n}\n\nfunction TooltipArea__svg_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, TooltipArea__svg_ng_template_2__xhtml_div_1_Template, 3, 3, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var model_r3 = ctx.model;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", model_r3);\n  }\n}\n\nvar _c20 = [\"ngx-charts-timeline\", \"\"];\n\nfunction AdvancedLegendComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", ctx_r0.roundedTotal)(\"valueFormatting\", ctx_r0.valueFormatting);\n  }\n}\n\nfunction AdvancedLegendComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.valueFormatting ? ctx_r1.valueFormatting(ctx_r1.roundedTotal) : ctx_r1.defaultValueFormatting(ctx_r1.roundedTotal), \" \");\n  }\n}\n\nfunction AdvancedLegendComponent_div_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n\n  if (rf & 2) {\n    var legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", legendItem_r3._value)(\"valueFormatting\", ctx_r4.valueFormatting);\n  }\n}\n\nfunction AdvancedLegendComponent_div_7_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    var ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.valueFormatting ? ctx_r5.valueFormatting(legendItem_r3.value) : ctx_r5.defaultValueFormatting(legendItem_r3.value), \" \");\n  }\n}\n\nfunction AdvancedLegendComponent_div_7_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 18);\n  }\n\n  if (rf & 2) {\n    var legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"countTo\", legendItem_r3.percentage)(\"countSuffix\", \"%\");\n  }\n}\n\nfunction AdvancedLegendComponent_div_7_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", legendItem_r3.percentage.toLocaleString(), \"%\");\n  }\n}\n\nfunction AdvancedLegendComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵlistener(\"mouseenter\", function AdvancedLegendComponent_div_7_Template_div_mouseenter_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r13);\n      var legendItem_r3 = restoredCtx.$implicit;\n      var ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.activate.emit(legendItem_r3.data));\n    })(\"mouseleave\", function AdvancedLegendComponent_div_7_Template_div_mouseleave_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r13);\n      var legendItem_r3 = restoredCtx.$implicit;\n      var ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.deactivate.emit(legendItem_r3.data));\n    })(\"click\", function AdvancedLegendComponent_div_7_Template_div_click_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r13);\n      var legendItem_r3 = restoredCtx.$implicit;\n      var ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.select.emit(legendItem_r3.data));\n    });\n    i0.ɵɵelement(1, \"div\", 10);\n    i0.ɵɵtemplate(2, AdvancedLegendComponent_div_7_div_2_Template, 1, 2, \"div\", 11);\n    i0.ɵɵtemplate(3, AdvancedLegendComponent_div_7_div_3_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementStart(4, \"div\", 13);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AdvancedLegendComponent_div_7_div_6_Template, 1, 2, \"div\", 14);\n    i0.ɵɵtemplate(7, AdvancedLegendComponent_div_7_div_7_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var legendItem_r3 = ctx.$implicit;\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"border-left-color\", legendItem_r3.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.animations);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(legendItem_r3.displayLabel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.animations);\n  }\n}\n\nvar _c21 = [\"ngx-charts-area-series\", \"\"];\nvar _c22 = [\"tooltipTemplate\"];\nvar _c23 = [\"seriesTooltipTemplate\"];\n\nfunction AreaChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction AreaChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction AreaChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var series_r9 = ctx.$implicit;\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"baseValue\", ctx_r2.baseValue)(\"colors\", ctx_r2.colors)(\"data\", series_r9)(\"activeEntries\", ctx_r2.activeEntries)(\"scaleType\", ctx_r2.scaleType)(\"gradient\", ctx_r2.gradient)(\"curve\", ctx_r2.curve)(\"animations\", ctx_r2.animations);\n  }\n}\n\nfunction AreaChartComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r13);\n      var series_r11 = restoredCtx.$implicit;\n      var ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onClick($event, series_r11));\n    })(\"activate\", function AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      var ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onActivate($event));\n    })(\"deactivate\", function AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      var ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var series_r11 = ctx.$implicit;\n    var ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"activeEntries\", ctx_r10.activeEntries)(\"data\", series_r11)(\"scaleType\", ctx_r10.scaleType)(\"visibleValue\", ctx_r10.hoveredVertical)(\"tooltipDisabled\", ctx_r10.tooltipDisabled)(\"tooltipTemplate\", ctx_r10.tooltipTemplate);\n  }\n}\n\nfunction AreaChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartComponent__svg_g_9_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      var ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartComponent__svg_g_9_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      var ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartComponent__svg_g_9__svg_g_2_Template, 2, 9, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r3.dims)(\"xSet\", ctx_r3.xSet)(\"xScale\", ctx_r3.xScale)(\"yScale\", ctx_r3.yScale)(\"results\", ctx_r3.results)(\"colors\", ctx_r3.colors)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipTemplate\", ctx_r3.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results);\n  }\n}\n\nfunction AreaChartComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var series_r20 = ctx.$implicit;\n    var ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r19.timelineXScale)(\"yScale\", ctx_r19.timelineYScale)(\"baseValue\", ctx_r19.baseValue)(\"colors\", ctx_r19.colors)(\"data\", series_r20)(\"scaleType\", ctx_r19.scaleType)(\"gradient\", ctx_r19.gradient)(\"curve\", ctx_r19.curve)(\"animations\", ctx_r19.animations);\n  }\n}\n\nvar _c24 = function _c24(a0, a1) {\n  return [a0, a1];\n};\n\nfunction AreaChartComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 14);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      var ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r4.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r4.timelineWidth, ctx_r4.height))(\"height\", ctx_r4.timelineHeight)(\"scheme\", ctx_r4.scheme)(\"customColors\", ctx_r4.customColors)(\"legend\", ctx_r4.legend)(\"scaleType\", ctx_r4.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r4.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\n\nfunction AreaChartNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartNormalizedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction AreaChartNormalizedComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartNormalizedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction AreaChartNormalizedComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var series_r9 = ctx.$implicit;\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"colors\", ctx_r2.colors)(\"data\", series_r9)(\"scaleType\", ctx_r2.scaleType)(\"activeEntries\", ctx_r2.activeEntries)(\"gradient\", ctx_r2.gradient)(\"normalized\", true)(\"curve\", ctx_r2.curve)(\"animations\", ctx_r2.animations);\n  }\n}\n\nfunction AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r13);\n      var series_r11 = restoredCtx.$implicit;\n      var ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onClick($event, series_r11));\n    })(\"activate\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      var ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onActivate($event));\n    })(\"deactivate\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      var ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var series_r11 = ctx.$implicit;\n    var ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r10.seriesType.Stacked)(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"activeEntries\", ctx_r10.activeEntries)(\"data\", series_r11)(\"scaleType\", ctx_r10.scaleType)(\"visibleValue\", ctx_r10.hoveredVertical)(\"tooltipDisabled\", ctx_r10.tooltipDisabled)(\"tooltipTemplate\", ctx_r10.tooltipTemplate);\n  }\n}\n\nfunction AreaChartNormalizedComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartNormalizedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      var ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartNormalizedComponent__svg_g_9_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      var ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template, 2, 10, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r3.dims)(\"xSet\", ctx_r3.xSet)(\"xScale\", ctx_r3.xScale)(\"yScale\", ctx_r3.yScale)(\"results\", ctx_r3.results)(\"colors\", ctx_r3.colors)(\"showPercentage\", true)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipTemplate\", ctx_r3.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results);\n  }\n}\n\nfunction AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var series_r20 = ctx.$implicit;\n    var ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r19.timelineXScale)(\"yScale\", ctx_r19.timelineYScale)(\"colors\", ctx_r19.colors)(\"data\", series_r20)(\"scaleType\", ctx_r19.scaleType)(\"gradient\", ctx_r19.gradient)(\"normalized\", true)(\"curve\", ctx_r19.curve)(\"animations\", ctx_r19.animations);\n  }\n}\n\nfunction AreaChartNormalizedComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 14);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartNormalizedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      var ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r4.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r4.timelineWidth, ctx_r4.height))(\"height\", ctx_r4.timelineHeight)(\"scheme\", ctx_r4.scheme)(\"customColors\", ctx_r4.customColors)(\"legend\", ctx_r4.legend)(\"scaleType\", ctx_r4.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r4.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\n\nvar _c25 = \".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\";\n\nfunction AreaChartStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartStackedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction AreaChartStackedComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartStackedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      var ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction AreaChartStackedComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var series_r9 = ctx.$implicit;\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"colors\", ctx_r2.colors)(\"data\", series_r9)(\"scaleType\", ctx_r2.scaleType)(\"gradient\", ctx_r2.gradient)(\"activeEntries\", ctx_r2.activeEntries)(\"stacked\", true)(\"curve\", ctx_r2.curve)(\"animations\", ctx_r2.animations);\n  }\n}\n\nfunction AreaChartStackedComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 12);\n    i0.ɵɵlistener(\"select\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r13);\n      var series_r11 = restoredCtx.$implicit;\n      var ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onClick($event, series_r11));\n    })(\"activate\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      var ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onActivate($event));\n    })(\"deactivate\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      var ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var series_r11 = ctx.$implicit;\n    var ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r10.seriesType.Stacked)(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"activeEntries\", ctx_r10.activeEntries)(\"data\", series_r11)(\"scaleType\", ctx_r10.scaleType)(\"visibleValue\", ctx_r10.hoveredVertical)(\"tooltipDisabled\", ctx_r10.tooltipDisabled)(\"tooltipTemplate\", ctx_r10.tooltipTemplate);\n  }\n}\n\nfunction AreaChartStackedComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartStackedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      var ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartStackedComponent__svg_g_9_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      var ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartStackedComponent__svg_g_9__svg_g_2_Template, 2, 10, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r3.dims)(\"xSet\", ctx_r3.xSet)(\"xScale\", ctx_r3.xScale)(\"yScale\", ctx_r3.yScale)(\"results\", ctx_r3.results)(\"colors\", ctx_r3.colors)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipTemplate\", ctx_r3.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nfunction AreaChartStackedComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var series_r20 = ctx.$implicit;\n    var ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r19.timelineXScale)(\"yScale\", ctx_r19.timelineYScale)(\"colors\", ctx_r19.colors)(\"data\", series_r20)(\"scaleType\", ctx_r19.scaleType)(\"gradient\", ctx_r19.gradient)(\"stacked\", true)(\"curve\", ctx_r19.curve)(\"animations\", ctx_r19.animations);\n  }\n}\n\nfunction AreaChartStackedComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 13);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartStackedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      var ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartStackedComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r4.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r4.timelineWidth, ctx_r4.height))(\"height\", ctx_r4.timelineHeight)(\"scheme\", ctx_r4.scheme)(\"customColors\", ctx_r4.customColors)(\"legend\", ctx_r4.legend)(\"scaleType\", ctx_r4.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r4.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\n\nvar _c26 = [\"ngx-charts-bar\", \"\"];\n\nfunction BarComponent__svg_defs_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.orientation)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\n\nvar _c27 = [\"ngx-charts-bar-label\", \"\"];\nvar _c28 = [\"ngx-charts-series-horizontal\", \"\"];\n\nfunction SeriesHorizontal__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesHorizontal__svg_g_0_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      var ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.click($event));\n    })(\"activate\", function SeriesHorizontal__svg_g_0_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activate.emit($event));\n    })(\"deactivate\", function SeriesHorizontal__svg_g_0_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var bar_r2 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"width\", bar_r2.width)(\"height\", bar_r2.height)(\"x\", bar_r2.x)(\"y\", bar_r2.y)(\"fill\", bar_r2.color)(\"stops\", bar_r2.gradientStops)(\"data\", bar_r2.data)(\"orientation\", ctx_r0.barOrientation.Horizontal)(\"roundEdges\", bar_r2.roundEdges)(\"gradient\", ctx_r0.gradient)(\"isActive\", ctx_r0.isActive(bar_r2.data))(\"ariaLabel\", bar_r2.ariaLabel)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.tooltipPlacement)(\"tooltipType\", ctx_r0.tooltipType)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : bar_r2.tooltipText)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", bar_r2.data)(\"noBarWhenZero\", ctx_r0.noBarWhenZero);\n  }\n}\n\nfunction SeriesHorizontal__svg_g_1__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵlistener(\"dimensionsChanged\", function SeriesHorizontal__svg_g_1__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r11);\n      var i_r9 = restoredCtx.index;\n      var ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.dataLabelWidthChanged.emit({\n        size: $event,\n        index: i_r9\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var b_r8 = ctx.$implicit;\n    var ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"barX\", b_r8.x)(\"barY\", b_r8.y)(\"barWidth\", b_r8.width)(\"barHeight\", b_r8.height)(\"value\", b_r8.total)(\"valueFormatting\", ctx_r7.dataLabelFormatting)(\"orientation\", ctx_r7.barOrientation.Horizontal);\n  }\n}\n\nfunction SeriesHorizontal__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesHorizontal__svg_g_1__svg_g_1_Template, 1, 7, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.barsForDataLabels)(\"ngForTrackBy\", ctx_r1.trackDataLabelBy);\n  }\n}\n\nfunction BarHorizontalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction BarHorizontalComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative);\n  }\n}\n\nfunction BarHorizontal2DComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontal2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.valueScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction BarHorizontal2DComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontal2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.groupScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative);\n  }\n}\n\nfunction BarHorizontal2DComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelWidthChanged\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var index_r10 = restoredCtx.index;\n      var ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxWidthChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var group_r9 = ctx.$implicit;\n    var ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r8.valueScale)(\"activeEntries\", ctx_r8.activeEntries)(\"yScale\", ctx_r8.innerScale)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"roundEdges\", ctx_r8.roundEdges)(\"animations\", ctx_r8.animations)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\n\nfunction BarHorizontal2DComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontal2DComponent__svg_g_5__svg_g_1_Template, 2, 17, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction BarHorizontal2DComponent__svg_g_6__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var group_r17 = restoredCtx.$implicit;\n      var ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var group_r17 = restoredCtx.$implicit;\n      var ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var group_r17 = restoredCtx.$implicit;\n      var ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelWidthChanged\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var index_r18 = restoredCtx.index;\n      var ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxWidthChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var group_r17 = ctx.$implicit;\n    var ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r16.valueScale)(\"activeEntries\", ctx_r16.activeEntries)(\"yScale\", ctx_r16.innerScale)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"seriesName\", group_r17.name)(\"roundEdges\", ctx_r16.roundEdges)(\"animations\", ctx_r16.animations)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n  }\n}\n\nfunction BarHorizontal2DComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontal2DComponent__svg_g_6__svg_g_1_Template, 2, 16, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nfunction BarHorizontalNormalizedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction BarHorizontalNormalizedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r11);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onClick($event, group_r9));\n    })(\"activate\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r11);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onActivate($event, group_r9));\n    })(\"deactivate\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r11);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event, group_r9));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var group_r9 = ctx.$implicit;\n    var ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Normalized)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"activeEntries\", ctx_r8.activeEntries)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\n\nfunction BarHorizontalNormalizedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template, 2, 15, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r17);\n      var group_r15 = restoredCtx.$implicit;\n      var ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event, group_r15));\n    })(\"activate\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r17);\n      var group_r15 = restoredCtx.$implicit;\n      var ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event, group_r15));\n    })(\"deactivate\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r17);\n      var group_r15 = restoredCtx.$implicit;\n      var ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event, group_r15));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var group_r15 = ctx.$implicit;\n    var ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r14.groupTransform(group_r15));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r14.barChartType.Normalized)(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"activeEntries\", ctx_r14.activeEntries)(\"colors\", ctx_r14.colors)(\"series\", group_r15.series)(\"dims\", ctx_r14.dims)(\"gradient\", ctx_r14.gradient)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate)(\"seriesName\", group_r15.name)(\"animations\", ctx_r14.animations)(\"noBarWhenZero\", ctx_r14.noBarWhenZero);\n  }\n}\n\nfunction BarHorizontalNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template, 2, 14, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nfunction BarHorizontalStackedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction BarHorizontalStackedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative);\n  }\n}\n\nfunction BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelWidthChanged\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var index_r10 = restoredCtx.index;\n      var ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxWidthChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var group_r9 = ctx.$implicit;\n    var ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Stacked)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"activeEntries\", ctx_r8.activeEntries)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\n\nfunction BarHorizontalStackedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template, 2, 17, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var group_r17 = restoredCtx.$implicit;\n      var ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var group_r17 = restoredCtx.$implicit;\n      var ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var group_r17 = restoredCtx.$implicit;\n      var ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelWidthChanged\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var index_r18 = restoredCtx.index;\n      var ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxWidthChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var group_r17 = ctx.$implicit;\n    var ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r16.barChartType.Stacked)(\"xScale\", ctx_r16.xScale)(\"yScale\", ctx_r16.yScale)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"activeEntries\", ctx_r16.activeEntries)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"seriesName\", group_r17.name)(\"animations\", ctx_r16.animations)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n  }\n}\n\nfunction BarHorizontalStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template, 2, 16, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nvar _c29 = [\"ngx-charts-series-vertical\", \"\"];\n\nfunction SeriesVerticalComponent__svg_g_0__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.onClick($event));\n    })(\"activate\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.activate.emit($event));\n    })(\"deactivate\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var bar_r4 = ctx.$implicit;\n    var ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"@.disabled\", !ctx_r3.animations)(\"width\", bar_r4.width)(\"height\", bar_r4.height)(\"x\", bar_r4.x)(\"y\", bar_r4.y)(\"fill\", bar_r4.color)(\"stops\", bar_r4.gradientStops)(\"data\", bar_r4.data)(\"orientation\", ctx_r3.barOrientation.Vertical)(\"roundEdges\", bar_r4.roundEdges)(\"gradient\", ctx_r3.gradient)(\"ariaLabel\", bar_r4.ariaLabel)(\"isActive\", ctx_r3.isActive(bar_r4.data))(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipPlacement\", ctx_r3.tooltipPlacement)(\"tooltipType\", ctx_r3.tooltipType)(\"tooltipTitle\", ctx_r3.tooltipTemplate ? undefined : bar_r4.tooltipText)(\"tooltipTemplate\", ctx_r3.tooltipTemplate)(\"tooltipContext\", bar_r4.data)(\"noBarWhenZero\", ctx_r3.noBarWhenZero)(\"animations\", ctx_r3.animations);\n  }\n}\n\nfunction SeriesVerticalComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_0__svg_g_1_Template, 1, 22, \"g\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.bars)(\"ngForTrackBy\", ctx_r0.trackBy);\n  }\n}\n\nfunction SeriesVerticalComponent__svg_g_1__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      var ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event));\n    })(\"activate\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      var ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.activate.emit($event));\n    })(\"deactivate\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      var ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var bar_r10 = ctx.$implicit;\n    var ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"width\", bar_r10.width)(\"height\", bar_r10.height)(\"x\", bar_r10.x)(\"y\", bar_r10.y)(\"fill\", bar_r10.color)(\"stops\", bar_r10.gradientStops)(\"data\", bar_r10.data)(\"orientation\", ctx_r9.barOrientation.Vertical)(\"roundEdges\", bar_r10.roundEdges)(\"gradient\", ctx_r9.gradient)(\"ariaLabel\", bar_r10.ariaLabel)(\"isActive\", ctx_r9.isActive(bar_r10.data))(\"tooltipDisabled\", ctx_r9.tooltipDisabled)(\"tooltipPlacement\", ctx_r9.tooltipPlacement)(\"tooltipType\", ctx_r9.tooltipType)(\"tooltipTitle\", ctx_r9.tooltipTemplate ? undefined : bar_r10.tooltipText)(\"tooltipTemplate\", ctx_r9.tooltipTemplate)(\"tooltipContext\", bar_r10.data)(\"noBarWhenZero\", ctx_r9.noBarWhenZero)(\"animations\", ctx_r9.animations);\n  }\n}\n\nfunction SeriesVerticalComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_1__svg_g_1_Template, 1, 20, \"g\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.bars)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\n\nfunction SeriesVerticalComponent__svg_g_2__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵlistener(\"dimensionsChanged\", function SeriesVerticalComponent__svg_g_2__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r19);\n      var i_r17 = restoredCtx.index;\n      var ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.dataLabelHeightChanged.emit({\n        size: $event,\n        index: i_r17\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var b_r16 = ctx.$implicit;\n    var ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"barX\", b_r16.x)(\"barY\", b_r16.y)(\"barWidth\", b_r16.width)(\"barHeight\", b_r16.height)(\"value\", b_r16.total)(\"valueFormatting\", ctx_r15.dataLabelFormatting)(\"orientation\", ctx_r15.barOrientation.Vertical);\n  }\n}\n\nfunction SeriesVerticalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_2__svg_g_1_Template, 1, 7, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.barsForDataLabels)(\"ngForTrackBy\", ctx_r2.trackDataLabelBy);\n  }\n}\n\nfunction BarVerticalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative);\n  }\n}\n\nfunction BarVerticalComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction BarVertical2DComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVertical2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.groupScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative);\n  }\n}\n\nfunction BarVertical2DComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVertical2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.valueScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction BarVertical2DComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelHeightChanged\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var index_r10 = restoredCtx.index;\n      var ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxHeightChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var group_r9 = ctx.$implicit;\n    var ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"activeEntries\", ctx_r8.activeEntries)(\"xScale\", ctx_r8.innerScale)(\"yScale\", ctx_r8.valueScale)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"seriesName\", group_r9.name)(\"roundEdges\", ctx_r8.roundEdges)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n  }\n}\n\nfunction BarVertical2DComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVertical2DComponent__svg_g_5__svg_g_1_Template, 1, 17, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction BarVertical2DComponent__svg_g_6__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var group_r17 = restoredCtx.$implicit;\n      var ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var group_r17 = restoredCtx.$implicit;\n      var ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var group_r17 = restoredCtx.$implicit;\n      var ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelHeightChanged\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var index_r18 = restoredCtx.index;\n      var ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxHeightChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var group_r17 = ctx.$implicit;\n    var ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"activeEntries\", ctx_r16.activeEntries)(\"xScale\", ctx_r16.innerScale)(\"yScale\", ctx_r16.valueScale)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"seriesName\", group_r17.name)(\"roundEdges\", ctx_r16.roundEdges)(\"animations\", ctx_r16.animations)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n  }\n}\n\nfunction BarVertical2DComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVertical2DComponent__svg_g_6__svg_g_1_Template, 1, 16, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nfunction BarVerticalNormalizedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction BarVerticalNormalizedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r11);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onClick($event, group_r9));\n    })(\"activate\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r11);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onActivate($event, group_r9));\n    })(\"deactivate\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r11);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event, group_r9));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var group_r9 = ctx.$implicit;\n    var ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Normalized)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"activeEntries\", ctx_r8.activeEntries)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\n\nfunction BarVerticalNormalizedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template, 2, 15, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r17);\n      var group_r15 = restoredCtx.$implicit;\n      var ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event, group_r15));\n    })(\"activate\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r17);\n      var group_r15 = restoredCtx.$implicit;\n      var ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event, group_r15));\n    })(\"deactivate\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r17);\n      var group_r15 = restoredCtx.$implicit;\n      var ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event, group_r15));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var group_r15 = ctx.$implicit;\n    var ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r14.groupTransform(group_r15));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r14.barChartType.Normalized)(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"activeEntries\", ctx_r14.activeEntries)(\"colors\", ctx_r14.colors)(\"series\", group_r15.series)(\"dims\", ctx_r14.dims)(\"gradient\", ctx_r14.gradient)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate)(\"seriesName\", group_r15.name)(\"animations\", ctx_r14.animations)(\"noBarWhenZero\", ctx_r14.noBarWhenZero);\n  }\n}\n\nfunction BarVerticalNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template, 2, 14, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nfunction BarVerticalStackedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative);\n  }\n}\n\nfunction BarVerticalStackedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction BarVerticalStackedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var group_r9 = restoredCtx.$implicit;\n      var ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelHeightChanged\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r12);\n      var index_r10 = restoredCtx.index;\n      var ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxHeightChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var group_r9 = ctx.$implicit;\n    var ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Stacked)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"activeEntries\", ctx_r8.activeEntries)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\n\nfunction BarVerticalStackedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalStackedComponent__svg_g_4__svg_g_1_Template, 2, 17, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction BarVerticalStackedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var group_r17 = restoredCtx.$implicit;\n      var ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var group_r17 = restoredCtx.$implicit;\n      var ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var group_r17 = restoredCtx.$implicit;\n      var ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelHeightChanged\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r20);\n      var index_r18 = restoredCtx.index;\n      var ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxHeightChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var group_r17 = ctx.$implicit;\n    var ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r16.barChartType.Stacked)(\"xScale\", ctx_r16.xScale)(\"yScale\", ctx_r16.yScale)(\"activeEntries\", ctx_r16.activeEntries)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"seriesName\", group_r17.name)(\"animations\", ctx_r16.animations)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n  }\n}\n\nfunction BarVerticalStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalStackedComponent__svg_g_5__svg_g_1_Template, 2, 16, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nvar _c30 = [\"ngx-charts-box\", \"\"];\n\nfunction BoxComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.BarOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\n\nfunction BoxComponent__svg_line_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 6);\n  }\n\n  if (rf & 2) {\n    var line_r2 = ctx.$implicit;\n    var i_r3 = ctx.index;\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"hidden\", ctx_r1.hideBar);\n    i0.ɵɵattribute(\"x1\", line_r2.v1.x)(\"y1\", line_r2.v1.y)(\"x2\", line_r2.v2.x)(\"y2\", line_r2.v2.y)(\"stroke\", ctx_r1.strokeColor)(\"stroke-width\", i_r3 === 2 ? ctx_r1.medianLineWidth : ctx_r1.whiskerStrokeWidth)(\"mask\", i_r3 ? undefined : ctx_r1.maskLine);\n  }\n}\n\nvar _c31 = [\"ngx-charts-box-series\", \"\"];\n\nfunction BoxChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 5);\n    i0.ɵɵlistener(\"activate\", function BoxChartComponent__svg_g_5_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onActivate($event));\n    })(\"deactivate\", function BoxChartComponent__svg_g_5_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onDeactivate($event));\n    })(\"select\", function BoxChartComponent__svg_g_5_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onClick($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var result_r1 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"yScale\", ctx_r0.yScale)(\"colors\", ctx_r0.colors)(\"roundEdges\", ctx_r0.roundEdges)(\"strokeColor\", ctx_r0.strokeColor)(\"strokeWidth\", ctx_r0.strokeWidth)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"series\", result_r1)(\"dims\", ctx_r0.dims)(\"animations\", ctx_r0.animations)(\"gradient\", ctx_r0.gradient);\n  }\n}\n\nvar _c32 = [\"ngx-charts-bubble-series\", \"\"];\n\nfunction BubbleSeriesComponent__svg_g_0__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_select_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      var circle_r1 = i0.ɵɵnextContext().$implicit;\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick(circle_r1.data));\n    })(\"activate\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_activate_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      var circle_r1 = i0.ɵɵnextContext().$implicit;\n      var ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.activateCircle(circle_r1));\n    })(\"deactivate\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_deactivate_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      var circle_r1 = i0.ɵɵnextContext().$implicit;\n      var ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.deactivateCircle(circle_r1));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var circle_r1 = i0.ɵɵnextContext().$implicit;\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", circle_r1.opacity);\n    i0.ɵɵclassProp(\"active\", circle_r1.isActive);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"cx\", 0)(\"cy\", 0)(\"r\", circle_r1.radius)(\"fill\", circle_r1.color)(\"pointerEvents\", \"all\")(\"data\", circle_r1.value)(\"classNames\", circle_r1.classNames)(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipPlacement\", ctx_r2.placementTypes.Top)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipTitle\", ctx_r2.tooltipTemplate ? undefined : ctx_r2.getTooltipText(circle_r1))(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", circle_r1.data);\n  }\n}\n\nfunction BubbleSeriesComponent__svg_g_0__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_select_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      var circle_r1 = i0.ɵɵnextContext().$implicit;\n      var ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onClick(circle_r1.data));\n    })(\"activate\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_activate_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      var circle_r1 = i0.ɵɵnextContext().$implicit;\n      var ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.activateCircle(circle_r1));\n    })(\"deactivate\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_deactivate_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      var circle_r1 = i0.ɵɵnextContext().$implicit;\n      var ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.deactivateCircle(circle_r1));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var circle_r1 = i0.ɵɵnextContext().$implicit;\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", circle_r1.opacity);\n    i0.ɵɵclassProp(\"active\", circle_r1.isActive);\n    i0.ɵɵproperty(\"cx\", 0)(\"cy\", 0)(\"r\", circle_r1.radius)(\"fill\", circle_r1.color)(\"pointerEvents\", \"all\")(\"data\", circle_r1.value)(\"classNames\", circle_r1.classNames)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipPlacement\", ctx_r3.placementTypes.Top)(\"tooltipType\", ctx_r3.styleTypes.tooltip)(\"tooltipTitle\", ctx_r3.tooltipTemplate ? undefined : ctx_r3.getTooltipText(circle_r1))(\"tooltipTemplate\", ctx_r3.tooltipTemplate)(\"tooltipContext\", circle_r1.data);\n  }\n}\n\nfunction BubbleSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\");\n    i0.ɵɵtemplate(2, BubbleSeriesComponent__svg_g_0__svg_g_2_Template, 1, 18, \"g\", 1);\n    i0.ɵɵtemplate(3, BubbleSeriesComponent__svg_g_0__svg_g_3_Template, 1, 17, \"g\", 1);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var circle_r1 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"transform\", circle_r1.transform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isSSR);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSSR);\n  }\n}\n\nfunction BubbleChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BubbleChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showGridLines\", ctx_r0.showGridLines)(\"dims\", ctx_r0.dims)(\"xScale\", ctx_r0.xScale)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction BubbleChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BubbleChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showGridLines\", ctx_r1.showGridLines)(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction BubbleChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r11);\n      var series_r9 = restoredCtx.$implicit;\n      var ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onClick($event, series_r9));\n    })(\"activate\", function BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      var ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onActivate($event));\n    })(\"deactivate\", function BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      var ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var series_r9 = ctx.$implicit;\n    var ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"rScale\", ctx_r8.rScale)(\"xScaleType\", ctx_r8.xScaleType)(\"yScaleType\", ctx_r8.yScaleType)(\"xAxisLabel\", ctx_r8.xAxisLabel)(\"yAxisLabel\", ctx_r8.yAxisLabel)(\"colors\", ctx_r8.colors)(\"data\", series_r9)(\"activeEntries\", ctx_r8.activeEntries)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate);\n  }\n}\n\nfunction BubbleChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BubbleChartComponent__svg_g_8__svg_g_1_Template, 2, 13, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"clip-path\", ctx_r2.clipPath);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.data)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction BubbleChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r17);\n      var series_r15 = restoredCtx.$implicit;\n      var ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event, series_r15));\n    })(\"activate\", function BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      var ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event));\n    })(\"deactivate\", function BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      var ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var series_r15 = ctx.$implicit;\n    var ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"rScale\", ctx_r14.rScale)(\"xScaleType\", ctx_r14.xScaleType)(\"yScaleType\", ctx_r14.yScaleType)(\"xAxisLabel\", ctx_r14.xAxisLabel)(\"yAxisLabel\", ctx_r14.yAxisLabel)(\"colors\", ctx_r14.colors)(\"data\", series_r15)(\"activeEntries\", ctx_r14.activeEntries)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate);\n  }\n}\n\nfunction BubbleChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BubbleChartComponent__svg_g_9__svg_g_1_Template, 2, 12, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"clip-path\", ctx_r3.clipPath);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.data)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nvar _c33 = [\"ngx-charts-heat-map-cell\", \"\"];\n\nfunction HeatMapCellComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\n\nvar _c34 = [\"ngx-charts-heat-map-cell-series\", \"\"];\n\nvar _c35 = function _c35(a0, a1, a2) {\n  return {\n    series: a0,\n    name: a1,\n    value: a2\n  };\n};\n\nfunction HeatCellSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 1);\n    i0.ɵɵlistener(\"select\", function HeatCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r3);\n      var c_r1 = restoredCtx.$implicit;\n      var ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick(c_r1.cell));\n    })(\"activate\", function HeatCellSeriesComponent__svg_g_0_Template__svg_g_activate_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r3);\n      var c_r1 = restoredCtx.$implicit;\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.activate.emit(c_r1.cell));\n    })(\"deactivate\", function HeatCellSeriesComponent__svg_g_0_Template__svg_g_deactivate_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r3);\n      var c_r1 = restoredCtx.$implicit;\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deactivate.emit(c_r1.cell));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var c_r1 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"x\", c_r1.x)(\"y\", c_r1.y)(\"width\", c_r1.width)(\"height\", c_r1.height)(\"fill\", c_r1.fill)(\"data\", c_r1.data)(\"gradient\", ctx_r0.gradient)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.tooltipText(c_r1))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", i0.ɵɵpureFunction3(14, _c35, c_r1.series, c_r1.label, c_r1.data));\n  }\n}\n\nfunction HeatMapComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function HeatMapComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      var ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction HeatMapComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function HeatMapComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction HeatMapComponent__svg_rect_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\");\n  }\n\n  if (rf & 2) {\n    var rect_r7 = ctx.$implicit;\n    i0.ɵɵattribute(\"x\", rect_r7.x)(\"y\", rect_r7.y)(\"rx\", rect_r7.rx)(\"width\", rect_r7.width)(\"height\", rect_r7.height)(\"fill\", rect_r7.fill);\n  }\n}\n\nvar _c36 = [\"ngx-charts-line\", \"\"];\n\nfunction LineComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"path\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"d\", ctx_r0.initialPath)(\"fill\", ctx_r0.fill)(\"stroke\", ctx_r0.stroke);\n  }\n}\n\nfunction LineComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"path\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", ctx_r1.initialPath)(\"fill\", ctx_r1.fill)(\"stroke\", ctx_r1.stroke);\n  }\n}\n\nvar _c37 = [\"ngx-charts-line-series\", \"\"];\n\nfunction LineSeriesComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\n\nfunction LineSeriesComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", ctx_r1.isActive(ctx_r1.data))(\"inactive\", ctx_r1.isInactive(ctx_r1.data));\n    i0.ɵɵproperty(\"data\", ctx_r1.data)(\"path\", ctx_r1.outerPath)(\"fill\", ctx_r1.hasGradient ? ctx_r1.gradientUrl : ctx_r1.colors.getColor(ctx_r1.data.name))(\"opacity\", ctx_r1.rangeFillOpacity)(\"animations\", ctx_r1.animations);\n  }\n}\n\nfunction LineChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function LineChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction LineChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function LineChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      var ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"referenceLines\", ctx_r1.referenceLines)(\"showRefLines\", ctx_r1.showRefLines)(\"showRefLabels\", ctx_r1.showRefLabels);\n  }\n}\n\nfunction LineChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var series_r11 = ctx.$implicit;\n    var ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"data\", series_r11)(\"activeEntries\", ctx_r10.activeEntries)(\"scaleType\", ctx_r10.scaleType)(\"curve\", ctx_r10.curve)(\"rangeFillOpacity\", ctx_r10.rangeFillOpacity)(\"hasRange\", ctx_r10.hasRange)(\"animations\", ctx_r10.animations);\n  }\n}\n\nfunction LineChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_8__svg_g_1_Template, 2, 11, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction LineChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var series_r13 = ctx.$implicit;\n    var ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r12.xScale)(\"yScale\", ctx_r12.yScale)(\"colors\", ctx_r12.colors)(\"data\", series_r13)(\"activeEntries\", ctx_r12.activeEntries)(\"scaleType\", ctx_r12.scaleType)(\"curve\", ctx_r12.curve)(\"rangeFillOpacity\", ctx_r12.rangeFillOpacity)(\"hasRange\", ctx_r12.hasRange)(\"animations\", ctx_r12.animations);\n  }\n}\n\nfunction LineChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_9__svg_g_1_Template, 2, 10, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nfunction LineChartComponent__svg_g_10__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 14);\n    i0.ɵɵlistener(\"select\", function LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      var ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event));\n    })(\"activate\", function LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      var ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event));\n    })(\"deactivate\", function LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      var ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var series_r15 = ctx.$implicit;\n    var ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"colors\", ctx_r14.colors)(\"data\", series_r15)(\"scaleType\", ctx_r14.scaleType)(\"visibleValue\", ctx_r14.hoveredVertical)(\"activeEntries\", ctx_r14.activeEntries)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate);\n  }\n}\n\nfunction LineChartComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 11);\n    i0.ɵɵlistener(\"mouseleave\", function LineChartComponent__svg_g_10_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      var ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 12);\n    i0.ɵɵlistener(\"hover\", function LineChartComponent__svg_g_10_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      var ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, LineChartComponent__svg_g_10__svg_g_2_Template, 2, 9, \"g\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r4.dims)(\"xSet\", ctx_r4.xSet)(\"xScale\", ctx_r4.xScale)(\"yScale\", ctx_r4.yScale)(\"results\", ctx_r4.results)(\"colors\", ctx_r4.colors)(\"tooltipDisabled\", ctx_r4.tooltipDisabled)(\"tooltipTemplate\", ctx_r4.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results);\n  }\n}\n\nfunction LineChartComponent__svg_g_11__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var series_r24 = ctx.$implicit;\n    var ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r23.timelineXScale)(\"yScale\", ctx_r23.timelineYScale)(\"colors\", ctx_r23.colors)(\"data\", series_r24)(\"scaleType\", ctx_r23.scaleType)(\"curve\", ctx_r23.curve)(\"hasRange\", ctx_r23.hasRange)(\"animations\", ctx_r23.animations);\n  }\n}\n\nfunction LineChartComponent__svg_g_11_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 15);\n    i0.ɵɵlistener(\"onDomainChange\", function LineChartComponent__svg_g_11_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      var ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_11__svg_g_1_Template, 2, 8, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r5.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r5.timelineWidth, ctx_r5.height))(\"height\", ctx_r5.timelineHeight)(\"scheme\", ctx_r5.scheme)(\"customColors\", ctx_r5.customColors)(\"scaleType\", ctx_r5.scaleType)(\"legend\", ctx_r5.legend);\n    i0.ɵɵattribute(\"transform\", ctx_r5.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.results)(\"ngForTrackBy\", ctx_r5.trackBy);\n  }\n}\n\nvar _c38 = [\"ngx-charts-pie-label\", \"\"];\nvar _c39 = [\"ngx-charts-polar-series\", \"\"];\n\nfunction PolarSeriesComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r0.seriesColor)(\"name\", ctx_r0.gradientId)(\"startOpacity\", 0.25)(\"endOpacity\", 1)(\"stops\", ctx_r0.gradientStops);\n  }\n}\n\nfunction PolarSeriesComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"select\", function PolarSeriesComponent__svg_g_4_Template__svg_g_select_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r4);\n      var circle_r2 = restoredCtx.$implicit;\n      var ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.select.emit(circle_r2.data));\n    })(\"activate\", function PolarSeriesComponent__svg_g_4_Template__svg_g_activate_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r4);\n      var circle_r2 = restoredCtx.$implicit;\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activate.emit({\n        name: circle_r2.data.series\n      }));\n    })(\"deactivate\", function PolarSeriesComponent__svg_g_4_Template__svg_g_deactivate_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r4);\n      var circle_r2 = restoredCtx.$implicit;\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivate.emit({\n        name: circle_r2.data.series\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var circle_r2 = ctx.$implicit;\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", ctx_r1.inactive ? 0.2 : 1);\n    i0.ɵɵproperty(\"cx\", circle_r2.cx)(\"cy\", circle_r2.cy)(\"r\", ctx_r1.circleRadius)(\"fill\", circle_r2.color)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.placementTypes.Top)(\"tooltipType\", ctx_r1.styleTypes.tooltip)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : ctx_r1.tooltipText(circle_r2))(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", circle_r2.data);\n  }\n}\n\nfunction PolarChartComponent__svg_g_4__svg_circle_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"circle\", 7);\n  }\n\n  if (rf & 2) {\n    var r_r7 = ctx.$implicit;\n    i0.ɵɵattribute(\"r\", r_r7);\n  }\n}\n\nfunction PolarChartComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_4__svg_circle_1_Template, 1, 1, \"circle\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.radiusTicks);\n  }\n}\n\nfunction PolarChartComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 9);\n  }\n\n  if (rf & 2) {\n    var tick_r9 = ctx.$implicit;\n    var ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"data\", tick_r9)(\"radius\", ctx_r8.outerRadius)(\"label\", tick_r9.label)(\"max\", ctx_r8.outerRadius)(\"value\", ctx_r8.showGridLines ? 1 : ctx_r8.outerRadius)(\"explodeSlices\", true)(\"animations\", ctx_r8.animations)(\"labelTrim\", ctx_r8.labelTrim)(\"labelTrimSize\", ctx_r8.labelTrimSize);\n  }\n}\n\nfunction PolarChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_5__svg_g_1_Template, 1, 9, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.thetaTicks);\n  }\n}\n\nfunction PolarChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"dimensionsChanged\", function PolarChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      var ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r2.yAxisScale)(\"dims\", ctx_r2.yAxisDims)(\"showGridLines\", ctx_r2.showGridLines)(\"showLabel\", ctx_r2.showYAxisLabel)(\"labelText\", ctx_r2.yAxisLabel)(\"trimTicks\", ctx_r2.trimYAxisTicks)(\"maxTickLength\", ctx_r2.maxYAxisTickLength)(\"tickFormatting\", ctx_r2.yAxisTickFormatting);\n    i0.ɵɵattribute(\"transform\", ctx_r2.transformYAxis);\n  }\n}\n\nfunction PolarChartComponent__svg_g_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 11);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r3.xAxisLabel)(\"offset\", ctx_r3.labelOffset)(\"orient\", ctx_r3.orientation.Bottom)(\"height\", ctx_r3.dims.height)(\"width\", ctx_r3.dims.width);\n  }\n}\n\nfunction PolarChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      var ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onClick($event));\n    })(\"activate\", function PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      var ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onActivate($event));\n    })(\"deactivate\", function PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      var ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var series_r13 = ctx.$implicit;\n    var ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"gradient\", ctx_r12.gradient)(\"xScale\", ctx_r12.xScale)(\"yScale\", ctx_r12.yScale)(\"colors\", ctx_r12.colors)(\"data\", series_r13)(\"activeEntries\", ctx_r12.activeEntries)(\"scaleType\", ctx_r12.scaleType)(\"curve\", ctx_r12.curve)(\"rangeFillOpacity\", ctx_r12.rangeFillOpacity)(\"animations\", ctx_r12.animations)(\"tooltipDisabled\", ctx_r12.tooltipDisabled)(\"tooltipTemplate\", ctx_r12.tooltipTemplate);\n  }\n}\n\nfunction PolarChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_8__svg_g_1_Template, 2, 13, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r4.transformPlot);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\n\nfunction PolarChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      var ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.onClick($event));\n    })(\"activate\", function PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      var ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onActivate($event));\n    })(\"deactivate\", function PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      var ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var series_r19 = ctx.$implicit;\n    var ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"gradient\", ctx_r18.gradient)(\"xScale\", ctx_r18.xScale)(\"yScale\", ctx_r18.yScale)(\"colors\", ctx_r18.colors)(\"data\", series_r19)(\"activeEntries\", ctx_r18.activeEntries)(\"scaleType\", ctx_r18.scaleType)(\"curve\", ctx_r18.curve)(\"rangeFillOpacity\", ctx_r18.rangeFillOpacity)(\"animations\", ctx_r18.animations)(\"tooltipDisabled\", ctx_r18.tooltipDisabled)(\"tooltipTemplate\", ctx_r18.tooltipTemplate);\n  }\n}\n\nfunction PolarChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_9__svg_g_1_Template, 2, 12, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r5.transformPlot);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.results)(\"ngForTrackBy\", ctx_r5.trackBy);\n  }\n}\n\nvar _c40 = [\"ngx-charts-pie-arc\", \"\"];\n\nfunction PieArcComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"color\", ctx_r0.fill)(\"name\", ctx_r0.radialGradientId)(\"startOpacity\", ctx_r0.startOpacity);\n  }\n}\n\nvar _c41 = [\"ngx-charts-pie-series\", \"\"];\n\nfunction PieSeriesComponent__svg_g_0__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n\n  if (rf & 2) {\n    var arc_r1 = i0.ɵɵnextContext().$implicit;\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", arc_r1)(\"radius\", ctx_r2.outerRadius)(\"color\", ctx_r2.color(arc_r1))(\"label\", ctx_r2.labelText(arc_r1))(\"labelTrim\", ctx_r2.trimLabels)(\"labelTrimSize\", ctx_r2.maxLabelLength)(\"max\", ctx_r2.max)(\"value\", arc_r1.value)(\"explodeSlices\", ctx_r2.explodeSlices)(\"animations\", ctx_r2.animations);\n  }\n}\n\nfunction PieSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PieSeriesComponent__svg_g_0__svg_g_1_Template, 1, 10, \"g\", 1);\n    i0.ɵɵelementStart(2, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function PieSeriesComponent__svg_g_0_Template__svg_g_select_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick($event));\n    })(\"activate\", function PieSeriesComponent__svg_g_0_Template__svg_g_activate_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.activate.emit($event));\n    })(\"deactivate\", function PieSeriesComponent__svg_g_0_Template__svg_g_deactivate_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deactivate.emit($event));\n    })(\"dblclick\", function PieSeriesComponent__svg_g_0_Template__svg_g_dblclick_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.dblclick.emit($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var arc_r1 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.labelVisible(arc_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"startAngle\", arc_r1.startAngle)(\"endAngle\", arc_r1.endAngle)(\"innerRadius\", ctx_r0.innerRadius)(\"outerRadius\", ctx_r0.outerRadius)(\"fill\", ctx_r0.color(arc_r1))(\"value\", arc_r1.data.value)(\"gradient\", ctx_r0.gradient)(\"data\", arc_r1.data)(\"max\", ctx_r0.max)(\"explodeSlices\", ctx_r0.explodeSlices)(\"isActive\", ctx_r0.isActive(arc_r1.data))(\"animate\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.getTooltipTitle(arc_r1))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", arc_r1.data);\n  }\n}\n\nvar _c42 = \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\";\nvar _c43 = [\"ngx-charts-pie-grid-series\", \"\"];\n\nfunction PieGridSeriesComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function PieGridSeriesComponent__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick($event));\n    })(\"activate\", function PieGridSeriesComponent__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.activate.emit($event));\n    })(\"deactivate\", function PieGridSeriesComponent__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var arc_r1 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"startAngle\", arc_r1.startAngle)(\"endAngle\", arc_r1.endAngle)(\"innerRadius\", ctx_r0.innerRadius)(\"outerRadius\", ctx_r0.outerRadius)(\"fill\", ctx_r0.color(arc_r1))(\"value\", arc_r1.data.value)(\"data\", arc_r1.data)(\"gradient\", false)(\"pointerEvents\", arc_r1.pointerEvents)(\"animate\", arc_r1.animate);\n    i0.ɵɵattribute(\"class\", arc_r1.class);\n  }\n}\n\nfunction PieGridComponent__svg_g_2__svg_text_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"text\", 10);\n  }\n\n  if (rf & 2) {\n    var series_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"countTo\", series_r1.percent)(\"countSuffix\", \"%\");\n  }\n}\n\nfunction PieGridComponent__svg_g_2__svg_text_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var series_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", series_r1.percent.toLocaleString(), \" \");\n  }\n}\n\nfunction PieGridComponent__svg_g_2__svg_text_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"text\", 12);\n  }\n\n  if (rf & 2) {\n    var series_r1 = i0.ɵɵnextContext().$implicit;\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", series_r1.total)(\"countPrefix\", ctx_r4.label + \": \");\n    i0.ɵɵattribute(\"y\", series_r1.outerRadius);\n  }\n}\n\nfunction PieGridComponent__svg_g_2__svg_text_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var series_r1 = i0.ɵɵnextContext().$implicit;\n    var ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"y\", series_r1.outerRadius);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r5.label, \": \", series_r1.total.toLocaleString(), \" \");\n  }\n}\n\nvar _c44 = function _c44(a0) {\n  return {\n    data: a0\n  };\n};\n\nfunction PieGridComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3)(1, \"g\", 4);\n    i0.ɵɵlistener(\"select\", function PieGridComponent__svg_g_2_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      var ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onClick($event));\n    })(\"activate\", function PieGridComponent__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      var ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onActivate($event));\n    })(\"deactivate\", function PieGridComponent__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      var ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, PieGridComponent__svg_g_2__svg_text_2_Template, 1, 2, \"text\", 5);\n    i0.ɵɵtemplate(3, PieGridComponent__svg_g_2__svg_text_3_Template, 2, 1, \"text\", 6);\n    i0.ɵɵelementStart(4, \"text\", 7);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, PieGridComponent__svg_g_2__svg_text_6_Template, 1, 3, \"text\", 8);\n    i0.ɵɵtemplate(7, PieGridComponent__svg_g_2__svg_text_7_Template, 2, 3, \"text\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var series_r1 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", series_r1.transform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"colors\", series_r1.colors)(\"data\", series_r1.data)(\"innerRadius\", series_r1.innerRadius)(\"outerRadius\", series_r1.outerRadius)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.tooltipText(i0.ɵɵpureFunction1(17, _c44, series_r1)))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", series_r1.data[0].data);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", series_r1.label, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n  }\n}\n\nvar _c45 = [\"textEl\"];\nvar _c46 = [\"ngx-charts-card\", \"\"];\n\nfunction CardComponent__svg_path_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 7);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"fill\", ctx_r0.bandColor)(\"transform\", ctx_r0.transformBand)(\"d\", ctx_r0.bandPath);\n  }\n}\n\nvar _c47 = [\"ngx-charts-card-series\", \"\"];\n\nfunction CardSeriesComponent__svg_rect_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 2);\n  }\n\n  if (rf & 2) {\n    var c_r2 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"fill\", ctx_r0.emptyColor);\n    i0.ɵɵattribute(\"x\", c_r2.x)(\"y\", c_r2.y)(\"width\", c_r2.width)(\"height\", c_r2.height);\n  }\n}\n\nfunction CardSeriesComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3);\n    i0.ɵɵlistener(\"select\", function CardSeriesComponent__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var c_r3 = ctx.$implicit;\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"x\", c_r3.x)(\"y\", c_r3.y)(\"width\", c_r3.width)(\"height\", c_r3.height)(\"color\", c_r3.color)(\"bandColor\", c_r3.bandColor)(\"textColor\", c_r3.textColor)(\"data\", c_r3.data)(\"label\", c_r3.label)(\"medianSize\", ctx_r1.medianSize)(\"valueFormatting\", ctx_r1.valueFormatting)(\"labelFormatting\", ctx_r1.labelFormatting)(\"animations\", ctx_r1.animations);\n  }\n}\n\nvar _c48 = [\"ngx-charts-tree-map-cell\", \"\"];\n\nfunction TreeMapCellComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.orientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\n\nfunction TreeMapCellComponent__svg_foreignObject_3__xhtml_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"countTo\", ctx_r2.value)(\"valueFormatting\", ctx_r2.valueFormatting);\n  }\n}\n\nfunction TreeMapCellComponent__svg_foreignObject_3__xhtml_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.formattedValue, \" \");\n  }\n}\n\nfunction TreeMapCellComponent__svg_foreignObject_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"foreignObject\", 4);\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵelement(2, \"span\", 5)(3, \"br\");\n    i0.ɵɵtemplate(4, TreeMapCellComponent__svg_foreignObject_3__xhtml_span_4_Template, 1, 2, \"span\", 6);\n    i0.ɵɵtemplate(5, TreeMapCellComponent__svg_foreignObject_3__xhtml_span_5_Template, 2, 1, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"pointer-events\", \"none\");\n    i0.ɵɵattribute(\"x\", ctx_r1.x)(\"y\", ctx_r1.y)(\"width\", ctx_r1.width)(\"height\", ctx_r1.height);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"color\", ctx_r1.getTextColor())(\"height\", ctx_r1.height + \"px\")(\"width\", ctx_r1.width + \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.formattedLabel, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.animations);\n  }\n}\n\nvar _c49 = [\"ngx-charts-tree-map-cell-series\", \"\"];\n\nfunction TreeMapCellSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 1);\n    i0.ɵɵlistener(\"select\", function TreeMapCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var c_r1 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", c_r1.data)(\"x\", c_r1.x)(\"y\", c_r1.y)(\"width\", c_r1.width)(\"height\", c_r1.height)(\"fill\", c_r1.fill)(\"label\", c_r1.label)(\"value\", c_r1.value)(\"valueFormatting\", ctx_r0.valueFormatting)(\"labelFormatting\", ctx_r0.labelFormatting)(\"gradient\", ctx_r0.gradient)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.getTooltipText(c_r1))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", c_r1.data);\n  }\n}\n\nvar _c50 = [\"valueTextEl\"];\nvar _c51 = [\"unitsTextEl\"];\n\nfunction LinearGaugeComponent__svg_line_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 10);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r0.transformLine)(\"stroke\", ctx_r0.colors.getColor(ctx_r0.units));\n  }\n}\n\nfunction LinearGaugeComponent__svg_line_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 11);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transformLine)(\"stroke\", ctx_r1.colors.getColor(ctx_r1.units));\n  }\n}\n\nvar _c52 = function _c52() {\n  return {};\n};\n\nvar _c53 = [\"ngx-charts-gauge-arc\", \"\"];\nvar _c54 = [\"ngx-charts-gauge-axis\", \"\"];\n\nfunction GaugeAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵelement(1, \"path\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tick_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", tick_r3.line);\n  }\n}\n\nfunction GaugeAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2)(1, \"text\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var tick_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"text-anchor\", tick_r4.textAnchor);\n    i0.ɵɵattribute(\"transform\", tick_r4.textTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tick_r4.text, \" \");\n  }\n}\n\nfunction GaugeAxisComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵelement(1, \"path\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tick_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", tick_r5.line);\n  }\n}\n\nfunction GaugeComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 5);\n    i0.ɵɵlistener(\"select\", function GaugeComponent__svg_g_2_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick($event));\n    })(\"activate\", function GaugeComponent__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onActivate($event));\n    })(\"deactivate\", function GaugeComponent__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      var ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var arc_r3 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r0.rotation);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"backgroundArc\", arc_r3.backgroundArc)(\"valueArc\", arc_r3.valueArc)(\"cornerRadius\", ctx_r0.cornerRadius)(\"colors\", ctx_r0.colors)(\"isActive\", ctx_r0.isActive(arc_r3.valueArc.data))(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"valueFormatting\", ctx_r0.valueFormatting)(\"animations\", ctx_r0.animations);\n  }\n}\n\nfunction GaugeComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 6);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bigSegments\", ctx_r1.bigSegments)(\"smallSegments\", ctx_r1.smallSegments)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"radius\", ctx_r1.outerRadius)(\"angleSpan\", ctx_r1.angleSpan)(\"valueScale\", ctx_r1.valueScale)(\"startAngle\", ctx_r1.startAngle)(\"tickFormatting\", ctx_r1.axisTickFormatting);\n  }\n}\n\nfunction GaugeComponent__svg_text_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 7, 8)(2, \"tspan\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"tspan\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n    i0.ɵɵattribute(\"transform\", ctx_r2.textTransform);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.displayValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.units);\n  }\n}\n\nfunction throttle(func, wait, options) {\n  options = options || {};\n  var context;\n  var args;\n  var result;\n  var timeout = null;\n  var previous = 0;\n\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n\n  return function () {\n    var now = +new Date();\n\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n\n    var remaining = wait - (now - previous);\n    context = this; // eslint-disable-next-line prefer-rest-params\n\n    args = arguments;\n\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\n\n\nfunction throttleable(duration, options) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n        return this[key];\n      }\n    };\n  };\n}\n\nvar PlacementTypes;\n\n(function (PlacementTypes) {\n  PlacementTypes[\"Top\"] = \"top\";\n  PlacementTypes[\"Bottom\"] = \"bottom\";\n  PlacementTypes[\"Left\"] = \"left\";\n  PlacementTypes[\"Right\"] = \"right\";\n  PlacementTypes[\"Center\"] = \"center\";\n})(PlacementTypes || (PlacementTypes = {}));\n\nvar caretOffset = 7;\n\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === PlacementTypes.Top) {\n    return elDimensions.top - caretOffset;\n  }\n\n  if (alignment === PlacementTypes.Bottom) {\n    return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n  }\n\n  if (alignment === PlacementTypes.Center) {\n    return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n  }\n\n  return undefined;\n}\n\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === PlacementTypes.Left) {\n    return elDimensions.left - caretOffset;\n  }\n\n  if (alignment === PlacementTypes.Right) {\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n  }\n\n  if (alignment === PlacementTypes.Center) {\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n  }\n\n  return undefined;\n}\n/**\n * Position helper for the popover directive.\n *\n * @export\n */\n\n\nvar PositionHelper = /*#__PURE__*/function () {\n  function PositionHelper() {\n    _classCallCheck(this, PositionHelper);\n  }\n\n  _createClass(PositionHelper, null, [{\n    key: \"calculateVerticalAlignment\",\n    value:\n    /**\n     * Calculate vertical alignment position\n     *\n     * @memberOf PositionHelper\n     */\n    function calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n      var result = verticalPosition(elDimensions, popoverDimensions, alignment);\n\n      if (result + popoverDimensions.height > window.innerHeight) {\n        result = window.innerHeight - popoverDimensions.height;\n      }\n\n      return result;\n    }\n    /**\n     * Calculate vertical caret position\n     *\n     * @memberOf PositionHelper\n     */\n\n  }, {\n    key: \"calculateVerticalCaret\",\n    value: function calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n      var result;\n\n      if (alignment === PlacementTypes.Top) {\n        result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n      }\n\n      if (alignment === PlacementTypes.Bottom) {\n        result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n      }\n\n      if (alignment === PlacementTypes.Center) {\n        result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n      }\n\n      var popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n\n      if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n        result += popoverPosition + popoverDimensions.height - window.innerHeight;\n      }\n\n      return result;\n    }\n    /**\n     * Calculate horz alignment position\n     *\n     * @memberOf PositionHelper\n     */\n\n  }, {\n    key: \"calculateHorizontalAlignment\",\n    value: function calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n      var result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n\n      if (result + popoverDimensions.width > window.innerWidth) {\n        result = window.innerWidth - popoverDimensions.width;\n      }\n\n      return result;\n    }\n    /**\n     * Calculate horz caret position\n     *\n     * @memberOf PositionHelper\n     */\n\n  }, {\n    key: \"calculateHorizontalCaret\",\n    value: function calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n      var result;\n\n      if (alignment === PlacementTypes.Left) {\n        result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n      }\n\n      if (alignment === PlacementTypes.Right) {\n        result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n      }\n\n      if (alignment === PlacementTypes.Center) {\n        result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n      }\n\n      var popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n\n      if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n        result += popoverPosition + popoverDimensions.width - window.innerWidth;\n      }\n\n      return result;\n    }\n    /**\n     * Checks if the element's position should be flipped\n     *\n     * @memberOf PositionHelper\n     */\n\n  }, {\n    key: \"shouldFlip\",\n    value: function shouldFlip(elDimensions, popoverDimensions, placement, spacing) {\n      var flip = false;\n\n      if (placement === PlacementTypes.Right) {\n        if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n          flip = true;\n        }\n      }\n\n      if (placement === PlacementTypes.Left) {\n        if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n          flip = true;\n        }\n      }\n\n      if (placement === PlacementTypes.Top) {\n        if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n          flip = true;\n        }\n      }\n\n      if (placement === PlacementTypes.Bottom) {\n        if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n          flip = true;\n        }\n      }\n\n      return flip;\n    }\n    /**\n     * Position caret\n     *\n     * @memberOf PositionHelper\n     */\n\n  }, {\n    key: \"positionCaret\",\n    value: function positionCaret(placement, elmDim, hostDim, caretDimensions, alignment) {\n      var top = 0;\n      var left = 0;\n\n      if (placement === PlacementTypes.Right) {\n        left = -7;\n        top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n      } else if (placement === PlacementTypes.Left) {\n        left = elmDim.width;\n        top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n      } else if (placement === PlacementTypes.Top) {\n        top = elmDim.height;\n        left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n      } else if (placement === PlacementTypes.Bottom) {\n        top = -7;\n        left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n      }\n\n      return {\n        top: top,\n        left: left\n      };\n    }\n    /**\n     * Position content\n     *\n     * @memberOf PositionHelper\n     */\n\n  }, {\n    key: \"positionContent\",\n    value: function positionContent(placement, elmDim, hostDim, spacing, alignment) {\n      var top = 0;\n      var left = 0;\n\n      if (placement === PlacementTypes.Right) {\n        left = hostDim.left + hostDim.width + spacing;\n        top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n      } else if (placement === PlacementTypes.Left) {\n        left = hostDim.left - elmDim.width - spacing;\n        top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n      } else if (placement === PlacementTypes.Top) {\n        top = hostDim.top - elmDim.height - spacing;\n        left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n      } else if (placement === PlacementTypes.Bottom) {\n        top = hostDim.top + hostDim.height + spacing;\n        left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n      }\n\n      return {\n        top: top,\n        left: left\n      };\n    }\n    /**\n     * Determine placement based on flip\n     *\n     * @memberOf PositionHelper\n     */\n\n  }, {\n    key: \"determinePlacement\",\n    value: function determinePlacement(placement, elmDim, hostDim, spacing) {\n      var shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n\n      if (shouldFlip) {\n        if (placement === PlacementTypes.Right) {\n          return PlacementTypes.Left;\n        } else if (placement === PlacementTypes.Left) {\n          return PlacementTypes.Right;\n        } else if (placement === PlacementTypes.Top) {\n          return PlacementTypes.Bottom;\n        } else if (placement === PlacementTypes.Bottom) {\n          return PlacementTypes.Top;\n        }\n      }\n\n      return placement;\n    }\n  }]);\n\n  return PositionHelper;\n}();\n\nvar TooltipContentComponent = /*#__PURE__*/function () {\n  function TooltipContentComponent(element, renderer, platformId) {\n    _classCallCheck(this, TooltipContentComponent);\n\n    this.element = element;\n    this.renderer = renderer;\n    this.platformId = platformId;\n  }\n\n  _createClass(TooltipContentComponent, [{\n    key: \"cssClasses\",\n    get: function get() {\n      var clz = 'ngx-charts-tooltip-content';\n      clz += \" position-\".concat(this.placement);\n      clz += \" type-\".concat(this.type);\n      clz += \" \".concat(this.cssClass);\n      return clz;\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      setTimeout(this.position.bind(this));\n    }\n  }, {\n    key: \"position\",\n    value: function position() {\n      var _this = this;\n\n      if (!isPlatformBrowser(this.platformId)) {\n        return;\n      }\n\n      var nativeElm = this.element.nativeElement;\n      var hostDim = this.host.nativeElement.getBoundingClientRect(); // if no dims were found, never show\n\n      if (!hostDim.height && !hostDim.width) return;\n      var elmDim = nativeElm.getBoundingClientRect();\n      this.checkFlip(hostDim, elmDim);\n      this.positionContent(nativeElm, hostDim, elmDim);\n\n      if (this.showCaret) {\n        this.positionCaret(hostDim, elmDim);\n      } // animate its entry\n\n\n      setTimeout(function () {\n        return _this.renderer.addClass(nativeElm, 'animate');\n      }, 1);\n    }\n  }, {\n    key: \"positionContent\",\n    value: function positionContent(nativeElm, hostDim, elmDim) {\n      var _PositionHelper$posit = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment),\n          top = _PositionHelper$posit.top,\n          left = _PositionHelper$posit.left;\n\n      this.renderer.setStyle(nativeElm, 'top', \"\".concat(top, \"px\"));\n      this.renderer.setStyle(nativeElm, 'left', \"\".concat(left, \"px\"));\n    }\n  }, {\n    key: \"positionCaret\",\n    value: function positionCaret(hostDim, elmDim) {\n      var caretElm = this.caretElm.nativeElement;\n      var caretDimensions = caretElm.getBoundingClientRect();\n\n      var _PositionHelper$posit2 = PositionHelper.positionCaret(this.placement, elmDim, hostDim, caretDimensions, this.alignment),\n          top = _PositionHelper$posit2.top,\n          left = _PositionHelper$posit2.left;\n\n      this.renderer.setStyle(caretElm, 'top', \"\".concat(top, \"px\"));\n      this.renderer.setStyle(caretElm, 'left', \"\".concat(left, \"px\"));\n    }\n  }, {\n    key: \"checkFlip\",\n    value: function checkFlip(hostDim, elmDim) {\n      this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n    }\n  }, {\n    key: \"onWindowResize\",\n    value: function onWindowResize() {\n      this.position();\n    }\n  }]);\n\n  return TooltipContentComponent;\n}();\n\nTooltipContentComponent.ɵfac = function TooltipContentComponent_Factory(t) {\n  return new (t || TooltipContentComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nTooltipContentComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TooltipContentComponent,\n  selectors: [[\"ngx-tooltip-content\"]],\n  viewQuery: function TooltipContentComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.caretElm = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function TooltipContentComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function TooltipContentComponent_resize_HostBindingHandler() {\n        return ctx.onWindowResize();\n      }, false, i0.ɵɵresolveWindow);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.cssClasses);\n    }\n  },\n  inputs: {\n    host: \"host\",\n    showCaret: \"showCaret\",\n    type: \"type\",\n    placement: \"placement\",\n    alignment: \"alignment\",\n    spacing: \"spacing\",\n    cssClass: \"cssClass\",\n    title: \"title\",\n    template: \"template\",\n    context: \"context\"\n  },\n  decls: 6,\n  vars: 6,\n  consts: [[3, \"hidden\"], [\"caretElm\", \"\"], [1, \"tooltip-content\"], [4, \"ngIf\"], [3, \"innerHTML\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"innerHTML\"]],\n  template: function TooltipContentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"span\", 0, 1);\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, TooltipContentComponent_span_4_Template, 2, 4, \"span\", 3);\n      i0.ɵɵtemplate(5, TooltipContentComponent_span_5_Template, 1, 1, \"span\", 4);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMapInterpolate1(\"tooltip-caret position-\", ctx.placement, \"\");\n      i0.ɵɵproperty(\"hidden\", !ctx.showCaret);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet],\n  styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"],\n  encapsulation: 2\n});\n\n__decorate([throttleable(100)], TooltipContentComponent.prototype, \"onWindowResize\", null);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipContentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-tooltip-content',\n      template: \"\\n    <div>\\n      <span #caretElm [hidden]=\\\"!showCaret\\\" class=\\\"tooltip-caret position-{{ this.placement }}\\\"> </span>\\n      <div class=\\\"tooltip-content\\\">\\n        <span *ngIf=\\\"!title\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"template\\\" [ngTemplateOutletContext]=\\\"{ model: context }\\\"> </ng-template>\\n        </span>\\n        <span *ngIf=\\\"title\\\" [innerHTML]=\\\"title\\\"> </span>\\n      </div>\\n    </div>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    host: [{\n      type: Input\n    }],\n    showCaret: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    alignment: [{\n      type: Input\n    }],\n    spacing: [{\n      type: Input\n    }],\n    cssClass: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }],\n    caretElm: [{\n      type: ViewChild,\n      args: ['caretElm']\n    }],\n    cssClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    onWindowResize: [{\n      type: HostListener,\n      args: ['window:resize']\n    }]\n  });\n})();\n\nvar InjectionRegisteryService = /*#__PURE__*/function () {\n  function InjectionRegisteryService(injectionService) {\n    _classCallCheck(this, InjectionRegisteryService);\n\n    this.injectionService = injectionService;\n    this.defaults = {};\n    this.components = new Map();\n  }\n\n  _createClass(InjectionRegisteryService, [{\n    key: \"getByType\",\n    value: function getByType() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.type;\n      return this.components.get(type);\n    }\n  }, {\n    key: \"create\",\n    value: function create(bindings) {\n      return this.createByType(this.type, bindings);\n    }\n  }, {\n    key: \"createByType\",\n    value: function createByType(type, bindings) {\n      bindings = this.assignDefaults(bindings);\n      var component = this.injectComponent(type, bindings);\n      this.register(type, component);\n      return component;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(instance) {\n      var compsByType = this.components.get(instance.componentType);\n\n      if (compsByType && compsByType.length) {\n        var idx = compsByType.indexOf(instance);\n\n        if (idx > -1) {\n          var component = compsByType[idx];\n          component.destroy();\n          compsByType.splice(idx, 1);\n        }\n      }\n    }\n  }, {\n    key: \"destroyAll\",\n    value: function destroyAll() {\n      this.destroyByType(this.type);\n    }\n  }, {\n    key: \"destroyByType\",\n    value: function destroyByType(type) {\n      var comps = this.components.get(type);\n\n      if (comps && comps.length) {\n        var i = comps.length - 1;\n\n        while (i >= 0) {\n          this.destroy(comps[i--]);\n        }\n      }\n    }\n  }, {\n    key: \"injectComponent\",\n    value: function injectComponent(type, bindings) {\n      return this.injectionService.appendComponent(type, bindings);\n    }\n  }, {\n    key: \"assignDefaults\",\n    value: function assignDefaults(bindings) {\n      var inputs = _objectSpread({}, this.defaults.inputs);\n\n      var outputs = _objectSpread({}, this.defaults.outputs);\n\n      if (!bindings.inputs && !bindings.outputs) {\n        bindings = {\n          inputs: bindings\n        };\n      }\n\n      if (inputs) {\n        bindings.inputs = _objectSpread(_objectSpread({}, inputs), bindings.inputs);\n      }\n\n      if (outputs) {\n        bindings.outputs = _objectSpread(_objectSpread({}, outputs), bindings.outputs);\n      }\n\n      return bindings;\n    }\n  }, {\n    key: \"register\",\n    value: function register(type, component) {\n      if (!this.components.has(type)) {\n        this.components.set(type, []);\n      }\n\n      var types = this.components.get(type);\n      types.push(component);\n    }\n  }]);\n\n  return InjectionRegisteryService;\n}();\n\nfunction isViewContainerRef(x) {\n  return x.element;\n}\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n */\n\n\nvar InjectionService = /*#__PURE__*/function () {\n  function InjectionService(applicationRef, componentFactoryResolver, injector) {\n    _classCallCheck(this, InjectionService);\n\n    this.applicationRef = applicationRef;\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.injector = injector;\n  }\n  /**\n   * Sets a default global root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   */\n\n\n  _createClass(InjectionService, [{\n    key: \"getRootViewContainer\",\n    value:\n    /**\n     * Gets the root view container to inject the component to.\n     *\n     * @memberOf InjectionService\n     */\n    function getRootViewContainer() {\n      if (this._container) return this._container;\n      if (InjectionService.globalRootViewContainer) return InjectionService.globalRootViewContainer;\n      if (this.applicationRef.components.length) return this.applicationRef.components[0];\n      throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.');\n    }\n    /**\n     * Overrides the default root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     *\n     * @memberOf InjectionService\n     */\n\n  }, {\n    key: \"setRootViewContainer\",\n    value: function setRootViewContainer(container) {\n      this._container = container;\n    }\n    /**\n     * Gets the html element for a component ref.\n     *\n     * @param componentRef\n     *\n     * @memberOf InjectionService\n     */\n\n  }, {\n    key: \"getComponentRootNode\",\n    value: function getComponentRootNode(component) {\n      if (isViewContainerRef(component)) {\n        return component.element.nativeElement;\n      }\n\n      if (component.hostView && component.hostView.rootNodes.length > 0) {\n        return component.hostView.rootNodes[0];\n      } // the top most component root node has no `hostView`\n\n\n      return component.location.nativeElement;\n    }\n    /**\n     * Gets the root component container html element.\n     *\n     * @memberOf InjectionService\n     */\n\n  }, {\n    key: \"getRootViewContainerNode\",\n    value: function getRootViewContainerNode(component) {\n      return this.getComponentRootNode(component);\n    }\n    /**\n     * Projects the bindings onto the component\n     *\n     * @param component\n     * @param options\n     *\n     * @memberOf InjectionService\n     */\n\n  }, {\n    key: \"projectComponentBindings\",\n    value: function projectComponentBindings(component, bindings) {\n      if (bindings) {\n        if (bindings.inputs !== undefined) {\n          var bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n\n          var _iterator = _createForOfIteratorHelper(bindingKeys),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var bindingName = _step.value;\n              component.instance[bindingName] = bindings.inputs[bindingName];\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n\n        if (bindings.outputs !== undefined) {\n          var eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n\n          var _iterator2 = _createForOfIteratorHelper(eventKeys),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var eventName = _step2.value;\n              component.instance[eventName] = bindings.outputs[eventName];\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      }\n\n      return component;\n    }\n    /**\n     * Appends a component to a adjacent location\n     *\n     * @param componentClass\n     * @param [options={}]\n     * @param [location]\n     *\n     * @memberOf InjectionService\n     */\n\n  }, {\n    key: \"appendComponent\",\n    value: function appendComponent(componentClass) {\n      var bindings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var location = arguments.length > 2 ? arguments[2] : undefined;\n      if (!location) location = this.getRootViewContainer();\n      var appendLocation = this.getComponentRootNode(location);\n      var portalHost = new DomPortalOutlet(appendLocation, this.componentFactoryResolver, this.applicationRef, this.injector);\n      var portal = new ComponentPortal(componentClass);\n      var componentRef = portalHost.attach(portal);\n      this.projectComponentBindings(componentRef, bindings);\n      return componentRef;\n    }\n  }], [{\n    key: \"setGlobalRootViewContainer\",\n    value: function setGlobalRootViewContainer(container) {\n      InjectionService.globalRootViewContainer = container;\n    }\n  }]);\n\n  return InjectionService;\n}();\n\nInjectionService.globalRootViewContainer = null;\n\nInjectionService.ɵfac = function InjectionService_Factory(t) {\n  return new (t || InjectionService)(i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.Injector));\n};\n\nInjectionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: InjectionService,\n  factory: InjectionService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InjectionService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.ApplicationRef\n    }, {\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\n\nvar TooltipService = /*#__PURE__*/function (_InjectionRegisterySe) {\n  _inherits(TooltipService, _InjectionRegisterySe);\n\n  var _super = _createSuper(TooltipService);\n\n  function TooltipService(injectionService) {\n    var _this2;\n\n    _classCallCheck(this, TooltipService);\n\n    _this2 = _super.call(this, injectionService);\n    _this2.type = TooltipContentComponent;\n    return _this2;\n  }\n\n  return _createClass(TooltipService);\n}(InjectionRegisteryService);\n\nTooltipService.ɵfac = function TooltipService_Factory(t) {\n  return new (t || TooltipService)(i0.ɵɵinject(InjectionService));\n};\n\nTooltipService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TooltipService,\n  factory: TooltipService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: InjectionService\n    }];\n  }, null);\n})();\n\nvar LegendPosition;\n\n(function (LegendPosition) {\n  LegendPosition[\"Right\"] = \"right\";\n  LegendPosition[\"Below\"] = \"below\";\n})(LegendPosition || (LegendPosition = {}));\n\nvar LegendType;\n\n(function (LegendType) {\n  LegendType[\"ScaleLegend\"] = \"scaleLegend\";\n  LegendType[\"Legend\"] = \"legend\";\n})(LegendType || (LegendType = {}));\n\nvar ScaleType;\n\n(function (ScaleType) {\n  ScaleType[\"Time\"] = \"time\";\n  ScaleType[\"Linear\"] = \"linear\";\n  ScaleType[\"Ordinal\"] = \"ordinal\";\n  ScaleType[\"Quantile\"] = \"quantile\";\n})(ScaleType || (ScaleType = {}));\n\nvar ScaleLegendComponent = /*#__PURE__*/function () {\n  function ScaleLegendComponent() {\n    _classCallCheck(this, ScaleLegendComponent);\n\n    this.horizontal = false;\n  }\n\n  _createClass(ScaleLegendComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n      var direction = this.horizontal ? 'right' : 'bottom';\n      this.gradient = \"linear-gradient(to \".concat(direction, \", \").concat(gradientValues, \")\");\n    }\n    /**\n     * Generates the string used in the gradient stylesheet properties\n     * @param colors array of colors\n     * @param splits array of splits on a scale of (0, 1)\n     */\n\n  }, {\n    key: \"gradientString\",\n    value: function gradientString(colors, splits) {\n      // add the 100%\n      splits.push(1);\n      var pairs = [];\n      colors.reverse().forEach(function (c, i) {\n        pairs.push(\"\".concat(c, \" \").concat(Math.round(splits[i] * 100), \"%\"));\n      });\n      return pairs.join(', ');\n    }\n  }]);\n\n  return ScaleLegendComponent;\n}();\n\nScaleLegendComponent.ɵfac = function ScaleLegendComponent_Factory(t) {\n  return new (t || ScaleLegendComponent)();\n};\n\nScaleLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ScaleLegendComponent,\n  selectors: [[\"ngx-charts-scale-legend\"]],\n  inputs: {\n    valueRange: \"valueRange\",\n    colors: \"colors\",\n    height: \"height\",\n    width: \"width\",\n    horizontal: \"horizontal\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 10,\n  consts: [[1, \"scale-legend\"], [1, \"scale-legend-label\"], [1, \"scale-legend-wrap\"]],\n  template: function ScaleLegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(4, \"div\", 2);\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"span\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"height\", ctx.horizontal ? undefined : ctx.height, \"px\")(\"width\", ctx.width, \"px\");\n      i0.ɵɵclassProp(\"horizontal-legend\", ctx.horizontal);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.valueRange[1].toLocaleString());\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"background\", ctx.gradient);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.valueRange[0].toLocaleString());\n    }\n  },\n  styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScaleLegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-scale-legend',\n      template: \"\\n    <div\\n      class=\\\"scale-legend\\\"\\n      [class.horizontal-legend]=\\\"horizontal\\\"\\n      [style.height.px]=\\\"horizontal ? undefined : height\\\"\\n      [style.width.px]=\\\"width\\\"\\n    >\\n      <div class=\\\"scale-legend-label\\\">\\n        <span>{{ valueRange[1].toLocaleString() }}</span>\\n      </div>\\n      <div class=\\\"scale-legend-wrap\\\" [style.background]=\\\"gradient\\\"></div>\\n      <div class=\\\"scale-legend-label\\\">\\n        <span>{{ valueRange[0].toLocaleString() }}</span>\\n      </div>\\n    </div>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"]\n    }]\n  }], null, {\n    valueRange: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    horizontal: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Formats a label given a date, number or string.\n *\n * @export\n */\n\n\nfunction formatLabel(label) {\n  if (label instanceof Date) {\n    label = label.toLocaleDateString();\n  } else {\n    label = label.toLocaleString();\n  }\n\n  return label;\n}\n/**\n * Escapes a label.\n *\n * @export\n */\n\n\nfunction escapeLabel(label) {\n  return label.toLocaleString().replace(/[&'`\"<>]/g, function (match) {\n    return {\n      '&': '&amp;',\n      // tslint:disable-next-line: quotemark\n      \"'\": '&#x27;',\n      '`': '&#x60;',\n      '\"': '&quot;',\n      '<': '&lt;',\n      '>': '&gt;'\n    }[match];\n  });\n}\n\nvar LegendEntryComponent = /*#__PURE__*/function () {\n  function LegendEntryComponent() {\n    _classCallCheck(this, LegendEntryComponent);\n\n    this.isActive = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.toggle = new EventEmitter();\n  }\n\n  _createClass(LegendEntryComponent, [{\n    key: \"trimmedLabel\",\n    get: function get() {\n      return this.formattedLabel || '(empty)';\n    }\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter() {\n      this.activate.emit({\n        name: this.label\n      });\n    }\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave() {\n      this.deactivate.emit({\n        name: this.label\n      });\n    }\n  }]);\n\n  return LegendEntryComponent;\n}();\n\nLegendEntryComponent.ɵfac = function LegendEntryComponent_Factory(t) {\n  return new (t || LegendEntryComponent)();\n};\n\nLegendEntryComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LegendEntryComponent,\n  selectors: [[\"ngx-charts-legend-entry\"]],\n  hostBindings: function LegendEntryComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function LegendEntryComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function LegendEntryComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    color: \"color\",\n    label: \"label\",\n    formattedLabel: \"formattedLabel\",\n    isActive: \"isActive\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    toggle: \"toggle\"\n  },\n  decls: 4,\n  vars: 6,\n  consts: [[\"tabindex\", \"-1\", 3, \"title\", \"click\"], [1, \"legend-label-color\", 3, \"click\"], [1, \"legend-label-text\"]],\n  template: function LegendEntryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵlistener(\"click\", function LegendEntryComponent_Template_span_click_0_listener() {\n        return ctx.select.emit(ctx.formattedLabel);\n      });\n      i0.ɵɵelementStart(1, \"span\", 1);\n      i0.ɵɵlistener(\"click\", function LegendEntryComponent_Template_span_click_1_listener() {\n        return ctx.toggle.emit(ctx.formattedLabel);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"span\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"active\", ctx.isActive);\n      i0.ɵɵproperty(\"title\", ctx.formattedLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"background-color\", ctx.color);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.trimmedLabel, \" \");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendEntryComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-legend-entry',\n      template: \"\\n    <span [title]=\\\"formattedLabel\\\" tabindex=\\\"-1\\\" [class.active]=\\\"isActive\\\" (click)=\\\"select.emit(formattedLabel)\\\">\\n      <span class=\\\"legend-label-color\\\" [style.background-color]=\\\"color\\\" (click)=\\\"toggle.emit(formattedLabel)\\\"> </span>\\n      <span class=\\\"legend-label-text\\\">\\n        {{ trimmedLabel }}\\n      </span>\\n    </span>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    color: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    formattedLabel: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    toggle: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nvar LegendComponent = /*#__PURE__*/function () {\n  function LegendComponent(cd) {\n    _classCallCheck(this, LegendComponent);\n\n    this.cd = cd;\n    this.horizontal = false;\n    this.labelClick = new EventEmitter();\n    this.labelActivate = new EventEmitter();\n    this.labelDeactivate = new EventEmitter();\n    this.legendEntries = [];\n  }\n\n  _createClass(LegendComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.cd.markForCheck();\n      this.legendEntries = this.getLegendEntries();\n    }\n  }, {\n    key: \"getLegendEntries\",\n    value: function getLegendEntries() {\n      var _this3 = this;\n\n      var items = [];\n\n      var _iterator3 = _createForOfIteratorHelper(this.data),\n          _step3;\n\n      try {\n        var _loop = function _loop() {\n          var label = _step3.value;\n          var formattedLabel = formatLabel(label);\n          var idx = items.findIndex(function (i) {\n            return i.label === formattedLabel;\n          });\n\n          if (idx === -1) {\n            items.push({\n              label: label,\n              formattedLabel: formattedLabel,\n              color: _this3.colors.getColor(label)\n            });\n          }\n        };\n\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return items;\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive(entry) {\n      if (!this.activeEntries) return false;\n      var item = this.activeEntries.find(function (d) {\n        return entry.label === d.name;\n      });\n      return item !== undefined;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(item) {\n      this.labelActivate.emit(item);\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate(item) {\n      this.labelDeactivate.emit(item);\n    }\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, item) {\n      return item.label;\n    }\n  }]);\n\n  return LegendComponent;\n}();\n\nLegendComponent.ɵfac = function LegendComponent_Factory(t) {\n  return new (t || LegendComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LegendComponent,\n  selectors: [[\"ngx-charts-legend\"]],\n  inputs: {\n    data: \"data\",\n    title: \"title\",\n    colors: \"colors\",\n    height: \"height\",\n    width: \"width\",\n    activeEntries: \"activeEntries\",\n    horizontal: \"horizontal\"\n  },\n  outputs: {\n    labelClick: \"labelClick\",\n    labelActivate: \"labelActivate\",\n    labelDeactivate: \"labelDeactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 9,\n  consts: [[\"class\", \"legend-title\", 4, \"ngIf\"], [1, \"legend-wrap\"], [1, \"legend-labels\"], [\"class\", \"legend-label\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"legend-title\"], [1, \"legend-title-text\"], [1, \"legend-label\"], [3, \"label\", \"formattedLabel\", \"color\", \"isActive\", \"select\", \"activate\", \"deactivate\"]],\n  template: function LegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, LegendComponent_header_1_Template, 3, 1, \"header\", 0);\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"ul\", 2);\n      i0.ɵɵtemplate(4, LegendComponent_li_4_Template, 2, 4, \"li\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.title == null ? null : ctx.title.length) > 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleProp(\"max-height\", ctx.height - 45, \"px\");\n      i0.ɵɵclassProp(\"horizontal-legend\", ctx.horizontal);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.legendEntries)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [LegendEntryComponent, i2.NgIf, i2.NgForOf],\n  styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-legend',\n      template: \"\\n    <div [style.width.px]=\\\"width\\\">\\n      <header class=\\\"legend-title\\\" *ngIf=\\\"title?.length > 0\\\">\\n        <span class=\\\"legend-title-text\\\">{{ title }}</span>\\n      </header>\\n      <div class=\\\"legend-wrap\\\">\\n        <ul class=\\\"legend-labels\\\" [class.horizontal-legend]=\\\"horizontal\\\" [style.max-height.px]=\\\"height - 45\\\">\\n          <li *ngFor=\\\"let entry of legendEntries; trackBy: trackBy\\\" class=\\\"legend-label\\\">\\n            <ngx-charts-legend-entry\\n              [label]=\\\"entry.label\\\"\\n              [formattedLabel]=\\\"entry.formattedLabel\\\"\\n              [color]=\\\"entry.color\\\"\\n              [isActive]=\\\"isActive(entry)\\\"\\n              (select)=\\\"labelClick.emit($event)\\\"\\n              (activate)=\\\"activate($event)\\\"\\n              (deactivate)=\\\"deactivate($event)\\\"\\n            >\\n            </ngx-charts-legend-entry>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    horizontal: [{\n      type: Input\n    }],\n    labelClick: [{\n      type: Output\n    }],\n    labelActivate: [{\n      type: Output\n    }],\n    labelDeactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nvar ChartComponent = /*#__PURE__*/function () {\n  function ChartComponent() {\n    _classCallCheck(this, ChartComponent);\n\n    this.showLegend = false;\n    this.animations = true;\n    this.legendLabelClick = new EventEmitter();\n    this.legendLabelActivate = new EventEmitter();\n    this.legendLabelDeactivate = new EventEmitter();\n    this.LegendPosition = LegendPosition;\n    this.LegendType = LegendType;\n  }\n\n  _createClass(ChartComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var legendColumns = 0;\n\n      if (this.showLegend) {\n        this.legendType = this.getLegendType();\n\n        if (!this.legendOptions || this.legendOptions.position === LegendPosition.Right) {\n          if (this.legendType === LegendType.ScaleLegend) {\n            legendColumns = 1;\n          } else {\n            legendColumns = 2;\n          }\n        }\n      }\n\n      var chartColumns = 12 - legendColumns;\n      this.chartWidth = Math.floor(this.view[0] * chartColumns / 12.0);\n      this.legendWidth = !this.legendOptions || this.legendOptions.position === LegendPosition.Right ? Math.floor(this.view[0] * legendColumns / 12.0) : this.chartWidth;\n    }\n  }, {\n    key: \"getLegendType\",\n    value: function getLegendType() {\n      return this.legendOptions.scaleType === ScaleType.Linear ? LegendType.ScaleLegend : LegendType.Legend;\n    }\n  }]);\n\n  return ChartComponent;\n}();\n\nChartComponent.ɵfac = function ChartComponent_Factory(t) {\n  return new (t || ChartComponent)();\n};\n\nChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ChartComponent,\n  selectors: [[\"ngx-charts-chart\"]],\n  inputs: {\n    view: \"view\",\n    showLegend: \"showLegend\",\n    legendOptions: \"legendOptions\",\n    legendType: \"legendType\",\n    activeEntries: \"activeEntries\",\n    animations: \"animations\"\n  },\n  outputs: {\n    legendLabelClick: \"legendLabelClick\",\n    legendLabelActivate: \"legendLabelActivate\",\n    legendLabelDeactivate: \"legendLabelDeactivate\"\n  },\n  features: [i0.ɵɵProvidersFeature([TooltipService]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 5,\n  vars: 8,\n  consts: [[1, \"ngx-charts-outer\"], [1, \"ngx-charts\"], [\"class\", \"chart-legend\", 3, \"horizontal\", \"valueRange\", \"colors\", \"height\", \"width\", 4, \"ngIf\"], [\"class\", \"chart-legend\", 3, \"horizontal\", \"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"labelClick\", \"labelActivate\", \"labelDeactivate\", 4, \"ngIf\"], [1, \"chart-legend\", 3, \"horizontal\", \"valueRange\", \"colors\", \"height\", \"width\"], [1, \"chart-legend\", 3, \"horizontal\", \"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"labelClick\", \"labelActivate\", \"labelDeactivate\"]],\n  template: function ChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"svg\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ChartComponent_ngx_charts_scale_legend_3_Template, 1, 5, \"ngx-charts-scale-legend\", 2);\n      i0.ɵɵtemplate(4, ChartComponent_ngx_charts_legend_4_Template, 1, 7, \"ngx-charts-legend\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.view[0], \"px\")(\"height\", ctx.view[1], \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.chartWidth)(\"height\", ctx.view[1]);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLegend && ctx.legendType === ctx.LegendType.ScaleLegend);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLegend && ctx.legendType === ctx.LegendType.Legend);\n    }\n  },\n  dependencies: [ScaleLegendComponent, LegendComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartComponent, [{\n    type: Component,\n    args: [{\n      providers: [TooltipService],\n      selector: 'ngx-charts-chart',\n      template: \"\\n    <div class=\\\"ngx-charts-outer\\\" [style.width.px]=\\\"view[0]\\\" [style.height.px]=\\\"view[1]\\\">\\n      <svg class=\\\"ngx-charts\\\" [attr.width]=\\\"chartWidth\\\" [attr.height]=\\\"view[1]\\\">\\n        <ng-content></ng-content>\\n      </svg>\\n      <ngx-charts-scale-legend\\n        *ngIf=\\\"showLegend && legendType === LegendType.ScaleLegend\\\"\\n        class=\\\"chart-legend\\\"\\n        [horizontal]=\\\"legendOptions && legendOptions.position === LegendPosition.Below\\\"\\n        [valueRange]=\\\"legendOptions.domain\\\"\\n        [colors]=\\\"legendOptions.colors\\\"\\n        [height]=\\\"view[1]\\\"\\n        [width]=\\\"legendWidth\\\"\\n      >\\n      </ngx-charts-scale-legend>\\n      <ngx-charts-legend\\n        *ngIf=\\\"showLegend && legendType === LegendType.Legend\\\"\\n        class=\\\"chart-legend\\\"\\n        [horizontal]=\\\"legendOptions && legendOptions.position === LegendPosition.Below\\\"\\n        [data]=\\\"legendOptions.domain\\\"\\n        [title]=\\\"legendOptions.title\\\"\\n        [colors]=\\\"legendOptions.colors\\\"\\n        [height]=\\\"view[1]\\\"\\n        [width]=\\\"legendWidth\\\"\\n        [activeEntries]=\\\"activeEntries\\\"\\n        (labelClick)=\\\"legendLabelClick.emit($event)\\\"\\n        (labelActivate)=\\\"legendLabelActivate.emit($event)\\\"\\n        (labelDeactivate)=\\\"legendLabelDeactivate.emit($event)\\\"\\n      >\\n      </ngx-charts-legend>\\n    </div>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    view: [{\n      type: Input\n    }],\n    showLegend: [{\n      type: Input\n    }],\n    legendOptions: [{\n      type: Input\n    }],\n    legendType: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    legendLabelClick: [{\n      type: Output\n    }],\n    legendLabelActivate: [{\n      type: Output\n    }],\n    legendLabelDeactivate: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Visibility Observer\n */\n\n\nvar VisibilityObserver = /*#__PURE__*/function () {\n  function VisibilityObserver(element, zone) {\n    _classCallCheck(this, VisibilityObserver);\n\n    this.element = element;\n    this.zone = zone;\n    this.visible = new EventEmitter();\n    this.isVisible = false;\n    this.runCheck();\n  }\n\n  _createClass(VisibilityObserver, [{\n    key: \"destroy\",\n    value: function destroy() {\n      clearTimeout(this.timeout);\n    }\n  }, {\n    key: \"onVisibilityChange\",\n    value: function onVisibilityChange() {\n      var _this4 = this;\n\n      // trigger zone recalc for columns\n      this.zone.run(function () {\n        _this4.isVisible = true;\n\n        _this4.visible.emit(true);\n      });\n    }\n  }, {\n    key: \"runCheck\",\n    value: function runCheck() {\n      var _this5 = this;\n\n      var check = function check() {\n        if (!_this5.element) {\n          return;\n        } // https://davidwalsh.name/offsetheight-visibility\n\n\n        var _this5$element$native = _this5.element.nativeElement,\n            offsetHeight = _this5$element$native.offsetHeight,\n            offsetWidth = _this5$element$native.offsetWidth;\n\n        if (offsetHeight && offsetWidth) {\n          clearTimeout(_this5.timeout);\n\n          _this5.onVisibilityChange();\n        } else {\n          clearTimeout(_this5.timeout);\n\n          _this5.zone.runOutsideAngular(function () {\n            _this5.timeout = setTimeout(function () {\n              return check();\n            }, 100);\n          });\n        }\n      };\n\n      this.zone.runOutsideAngular(function () {\n        _this5.timeout = setTimeout(function () {\n          return check();\n        });\n      });\n    }\n  }]);\n\n  return VisibilityObserver;\n}();\n\nVisibilityObserver.ɵfac = function VisibilityObserver_Factory(t) {\n  return new (t || VisibilityObserver)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nVisibilityObserver.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: VisibilityObserver,\n  selectors: [[\"visibility-observer\"]],\n  outputs: {\n    visible: \"visible\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VisibilityObserver, [{\n    type: Directive,\n    args: [{\n      selector: 'visibility-observer'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    visible: [{\n      type: Output\n    }]\n  });\n})();\n\nfunction isDate(value) {\n  return toString.call(value) === '[object Date]';\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\nvar BaseChartComponent = /*#__PURE__*/function () {\n  function BaseChartComponent(chartElement, zone, cd, platformId) {\n    _classCallCheck(this, BaseChartComponent);\n\n    this.chartElement = chartElement;\n    this.zone = zone;\n    this.cd = cd;\n    this.platformId = platformId;\n    this.scheme = 'cool';\n    this.schemeType = ScaleType.Ordinal;\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n\n  _createClass(BaseChartComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.animations = false;\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.bindWindowResizeEvent(); // listen for visibility of the element for hidden by default scenario\n\n      this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n      this.visibilityObserver.visible.subscribe(this.update.bind(this));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.unbindEvents();\n\n      if (this.visibilityObserver) {\n        this.visibilityObserver.visible.unsubscribe();\n        this.visibilityObserver.destroy();\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.results) {\n        this.results = this.cloneData(this.results);\n      } else {\n        this.results = [];\n      }\n\n      if (this.view) {\n        this.width = this.view[0];\n        this.height = this.view[1];\n      } else {\n        var dims = this.getContainerDims();\n\n        if (dims) {\n          this.width = dims.width;\n          this.height = dims.height;\n        }\n      } // default values if width or height are 0 or undefined\n\n\n      if (!this.width) {\n        this.width = 600;\n      }\n\n      if (!this.height) {\n        this.height = 400;\n      }\n\n      this.width = Math.floor(this.width);\n      this.height = Math.floor(this.height);\n\n      if (this.cd) {\n        this.cd.markForCheck();\n      }\n    }\n  }, {\n    key: \"getContainerDims\",\n    value: function getContainerDims() {\n      var width;\n      var height;\n      var hostElem = this.chartElement.nativeElement;\n\n      if (isPlatformBrowser(this.platformId) && hostElem.parentNode !== null) {\n        // Get the container dimensions\n        var dims = hostElem.parentNode.getBoundingClientRect();\n        width = dims.width;\n        height = dims.height;\n      }\n\n      if (width && height) {\n        return {\n          width: width,\n          height: height\n        };\n      }\n\n      return null;\n    }\n    /**\n     * Converts all date objects that appear as name\n     * into formatted date strings\n     */\n\n  }, {\n    key: \"formatDates\",\n    value: function formatDates() {\n      for (var i = 0; i < this.results.length; i++) {\n        var g = this.results[i];\n        g.label = g.name;\n\n        if (isDate(g.label)) {\n          g.label = g.label.toLocaleDateString();\n        }\n\n        if (g.series) {\n          for (var j = 0; j < g.series.length; j++) {\n            var d = g.series[j];\n            d.label = d.name;\n\n            if (isDate(d.label)) {\n              d.label = d.label.toLocaleDateString();\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      if (this.resizeSubscription) {\n        this.resizeSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"bindWindowResizeEvent\",\n    value: function bindWindowResizeEvent() {\n      var _this6 = this;\n\n      if (!isPlatformBrowser(this.platformId)) {\n        return;\n      }\n\n      var source = fromEvent(window, 'resize');\n      var subscription = source.pipe(debounceTime(200)).subscribe(function (e) {\n        _this6.update();\n\n        if (_this6.cd) {\n          _this6.cd.markForCheck();\n        }\n      });\n      this.resizeSubscription = subscription;\n    }\n    /**\n     * Clones the data into a new object\n     *\n     * @memberOf BaseChart\n     */\n\n  }, {\n    key: \"cloneData\",\n    value: function cloneData(data) {\n      var results = [];\n\n      var _iterator4 = _createForOfIteratorHelper(data),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var item = _step4.value;\n          var copy = {\n            name: item['name']\n          };\n\n          if (item['value'] !== undefined) {\n            copy['value'] = item['value'];\n          }\n\n          if (item['series'] !== undefined) {\n            copy['series'] = [];\n\n            var _iterator5 = _createForOfIteratorHelper(item['series']),\n                _step5;\n\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var seriesItem = _step5.value;\n                var seriesItemCopy = Object.assign({}, seriesItem);\n                copy['series'].push(seriesItemCopy);\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n          }\n\n          if (item['extra'] !== undefined) {\n            copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n          }\n\n          results.push(copy);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return results;\n    }\n  }]);\n\n  return BaseChartComponent;\n}();\n\nBaseChartComponent.ɵfac = function BaseChartComponent_Factory(t) {\n  return new (t || BaseChartComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nBaseChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BaseChartComponent,\n  selectors: [[\"base-chart\"]],\n  inputs: {\n    results: \"results\",\n    view: \"view\",\n    scheme: \"scheme\",\n    schemeType: \"schemeType\",\n    customColors: \"customColors\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 0,\n  template: function BaseChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\");\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'base-chart',\n      template: \" <div></div> \"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    results: [{\n      type: Input\n    }],\n    view: [{\n      type: Input\n    }],\n    scheme: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    customColors: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\nvar Orientation;\n\n(function (Orientation) {\n  Orientation[\"Top\"] = \"top\";\n  Orientation[\"Bottom\"] = \"bottom\";\n  Orientation[\"Left\"] = \"left\";\n  Orientation[\"Right\"] = \"right\";\n})(Orientation || (Orientation = {}));\n\nvar AxisLabelComponent = /*#__PURE__*/function () {\n  function AxisLabelComponent(element) {\n    _classCallCheck(this, AxisLabelComponent);\n\n    this.textHeight = 25;\n    this.margin = 5;\n    this.element = element.nativeElement;\n  }\n\n  _createClass(AxisLabelComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.strokeWidth = '0.01';\n      this.textAnchor = 'middle';\n      this.transform = '';\n\n      switch (this.orient) {\n        case Orientation.Top:\n          this.y = this.offset;\n          this.x = this.width / 2;\n          break;\n\n        case Orientation.Bottom:\n          this.y = this.offset;\n          this.x = this.width / 2;\n          break;\n\n        case Orientation.Left:\n          this.y = -(this.offset + this.textHeight + this.margin);\n          this.x = -this.height / 2;\n          this.transform = 'rotate(270)';\n          break;\n\n        case Orientation.Right:\n          this.y = this.offset + this.margin;\n          this.x = -this.height / 2;\n          this.transform = 'rotate(270)';\n          break;\n\n        default:\n      }\n    }\n  }]);\n\n  return AxisLabelComponent;\n}();\n\nAxisLabelComponent.ɵfac = function AxisLabelComponent_Factory(t) {\n  return new (t || AxisLabelComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nAxisLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AxisLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-axis-label\", \"\"]],\n  inputs: {\n    orient: \"orient\",\n    label: \"label\",\n    offset: \"offset\",\n    width: \"width\",\n    height: \"height\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c3,\n  decls: 2,\n  vars: 6,\n  template: function AxisLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"text\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"stroke-width\", ctx.strokeWidth)(\"x\", ctx.x)(\"y\", ctx.y)(\"text-anchor\", ctx.textAnchor)(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.label, \" \");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AxisLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-axis-label]',\n      template: \"\\n    <svg:text\\n      [attr.stroke-width]=\\\"strokeWidth\\\"\\n      [attr.x]=\\\"x\\\"\\n      [attr.y]=\\\"y\\\"\\n      [attr.text-anchor]=\\\"textAnchor\\\"\\n      [attr.transform]=\\\"transform\\\"\\n    >\\n      {{ label }}\\n    </svg:text>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    orient: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }]\n  });\n})();\n\nfunction trimLabel(s) {\n  var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n\n  if (typeof s !== 'string') {\n    if (typeof s === 'number') {\n      return s + '';\n    } else {\n      return '';\n    }\n  }\n\n  s = s.trim();\n\n  if (s.length <= max) {\n    return s;\n  } else {\n    return \"\".concat(s.slice(0, max), \"...\");\n  }\n}\n\nfunction reduceTicks(ticks, maxTicks) {\n  if (ticks.length > maxTicks) {\n    var reduced = [];\n    var modulus = Math.floor(ticks.length / maxTicks);\n\n    for (var i = 0; i < ticks.length; i++) {\n      if (i % modulus === 0) {\n        reduced.push(ticks[i]);\n      }\n    }\n\n    ticks = reduced;\n  }\n\n  return ticks;\n}\n\nvar TextAnchor;\n\n(function (TextAnchor) {\n  TextAnchor[\"Start\"] = \"start\";\n  TextAnchor[\"Middle\"] = \"middle\";\n  TextAnchor[\"End\"] = \"end\";\n})(TextAnchor || (TextAnchor = {}));\n\nvar XAxisTicksComponent = /*#__PURE__*/function () {\n  function XAxisTicksComponent(platformId) {\n    _classCallCheck(this, XAxisTicksComponent);\n\n    this.platformId = platformId;\n    this.tickArguments = [5];\n    this.tickStroke = '#ccc';\n    this.trimTicks = true;\n    this.maxTickLength = 16;\n    this.showGridLines = false;\n    this.rotateTicks = true;\n    this.dimensionsChanged = new EventEmitter();\n    this.verticalSpacing = 20;\n    this.rotateLabels = false;\n    this.innerTickSize = 6;\n    this.outerTickSize = 6;\n    this.tickPadding = 3;\n    this.textAnchor = TextAnchor.Middle;\n    this.maxTicksLength = 0;\n    this.maxAllowedLength = 16;\n    this.height = 0;\n    this.approxHeight = 10;\n  }\n\n  _createClass(XAxisTicksComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this7 = this;\n\n      setTimeout(function () {\n        return _this7.updateDims();\n      });\n    }\n  }, {\n    key: \"updateDims\",\n    value: function updateDims() {\n      var _this8 = this;\n\n      if (!isPlatformBrowser(this.platformId)) {\n        // for SSR, use approximate value instead of measured\n        this.dimensionsChanged.emit({\n          height: this.approxHeight\n        });\n        return;\n      }\n\n      var height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n\n      if (height !== this.height) {\n        this.height = height;\n        this.dimensionsChanged.emit({\n          height: this.height\n        });\n        setTimeout(function () {\n          return _this8.updateDims();\n        });\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this9 = this;\n\n      var scale = this.scale;\n      this.ticks = this.getTicks();\n\n      if (this.tickFormatting) {\n        this.tickFormat = this.tickFormatting;\n      } else if (scale.tickFormat) {\n        // eslint-disable-next-line prefer-spread\n        this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n      } else {\n        this.tickFormat = function (d) {\n          if (d.constructor.name === 'Date') {\n            return d.toLocaleDateString();\n          }\n\n          return d.toLocaleString();\n        };\n      }\n\n      var angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n      this.adjustedScale = this.scale.bandwidth ? function (d) {\n        return this.scale(d) + this.scale.bandwidth() * 0.5;\n      } : this.scale;\n      this.textTransform = '';\n\n      if (angle && angle !== 0) {\n        this.textTransform = \"rotate(\".concat(angle, \")\");\n        this.textAnchor = TextAnchor.End;\n        this.verticalSpacing = 10;\n      } else {\n        this.textAnchor = TextAnchor.Middle;\n      }\n\n      setTimeout(function () {\n        return _this9.updateDims();\n      });\n    }\n  }, {\n    key: \"getRotationAngle\",\n    value: function getRotationAngle(ticks) {\n      var angle = 0;\n      this.maxTicksLength = 0;\n\n      for (var i = 0; i < ticks.length; i++) {\n        var tick = this.tickFormat(ticks[i]).toString();\n        var tickLength = tick.length;\n\n        if (this.trimTicks) {\n          tickLength = this.tickTrim(tick).length;\n        }\n\n        if (tickLength > this.maxTicksLength) {\n          this.maxTicksLength = tickLength;\n        }\n      }\n\n      var len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n      var charWidth = 7; // need to measure this\n\n      var wordWidth = len * charWidth;\n      var baseWidth = wordWidth;\n      var maxBaseWidth = Math.floor(this.width / ticks.length); // calculate optimal angle\n\n      while (baseWidth > maxBaseWidth && angle > -90) {\n        angle -= 30;\n        baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n      }\n\n      this.approxHeight = Math.max(Math.abs(Math.sin(angle * (Math.PI / 180)) * wordWidth), 10);\n      return angle;\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      var ticks;\n      var maxTicks = this.getMaxTicks(20);\n      var maxScaleTicks = this.getMaxTicks(100);\n\n      if (this.tickValues) {\n        ticks = this.tickValues;\n      } else if (this.scale.ticks) {\n        ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n      } else {\n        ticks = this.scale.domain();\n        ticks = reduceTicks(ticks, maxTicks);\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getMaxTicks\",\n    value: function getMaxTicks(tickWidth) {\n      return Math.floor(this.width / tickWidth);\n    }\n  }, {\n    key: \"tickTransform\",\n    value: function tickTransform(tick) {\n      return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n    }\n  }, {\n    key: \"gridLineTransform\",\n    value: function gridLineTransform() {\n      return \"translate(0,\".concat(-this.verticalSpacing - 5, \")\");\n    }\n  }, {\n    key: \"tickTrim\",\n    value: function tickTrim(label) {\n      return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n  }]);\n\n  return XAxisTicksComponent;\n}();\n\nXAxisTicksComponent.ɵfac = function XAxisTicksComponent_Factory(t) {\n  return new (t || XAxisTicksComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nXAxisTicksComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XAxisTicksComponent,\n  selectors: [[\"g\", \"ngx-charts-x-axis-ticks\", \"\"]],\n  viewQuery: function XAxisTicksComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    }\n  },\n  inputs: {\n    scale: \"scale\",\n    orient: \"orient\",\n    tickArguments: \"tickArguments\",\n    tickValues: \"tickValues\",\n    tickStroke: \"tickStroke\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    gridLineHeight: \"gridLineHeight\",\n    width: \"width\",\n    rotateTicks: \"rotateTicks\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c5,\n  decls: 4,\n  vars: 2,\n  consts: [[\"ticksel\", \"\"], [\"class\", \"tick\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"tick\"], [\"stroke-width\", \"0.01\"], [4, \"ngIf\"], [\"y2\", \"0\", 1, \"gridline-path\", \"gridline-path-vertical\"]],\n  template: function XAxisTicksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", null, 0);\n      i0.ɵɵtemplate(2, XAxisTicksComponent__svg_g_2_Template, 5, 7, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, XAxisTicksComponent__svg_g_3_Template, 2, 2, \"g\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAxisTicksComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-x-axis-ticks]',\n      template: \"\\n    <svg:g #ticksel>\\n      <svg:g *ngFor=\\\"let tick of ticks\\\" class=\\\"tick\\\" [attr.transform]=\\\"tickTransform(tick)\\\">\\n        <title>{{ tickFormat(tick) }}</title>\\n        <svg:text\\n          stroke-width=\\\"0.01\\\"\\n          [attr.text-anchor]=\\\"textAnchor\\\"\\n          [attr.transform]=\\\"textTransform\\\"\\n          [style.font-size]=\\\"'12px'\\\"\\n        >\\n          {{ tickTrim(tickFormat(tick)) }}\\n        </svg:text>\\n      </svg:g>\\n    </svg:g>\\n\\n    <svg:g *ngFor=\\\"let tick of ticks\\\" [attr.transform]=\\\"tickTransform(tick)\\\">\\n      <svg:g *ngIf=\\\"showGridLines\\\" [attr.transform]=\\\"gridLineTransform()\\\">\\n        <svg:line class=\\\"gridline-path gridline-path-vertical\\\" [attr.y1]=\\\"-gridLineHeight\\\" y2=\\\"0\\\" />\\n      </svg:g>\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    scale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }],\n    tickArguments: [{\n      type: Input\n    }],\n    tickValues: [{\n      type: Input\n    }],\n    tickStroke: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    gridLineHeight: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    rotateTicks: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksElement: [{\n      type: ViewChild,\n      args: ['ticksel']\n    }]\n  });\n})();\n\nvar XAxisComponent = /*#__PURE__*/function () {\n  function XAxisComponent() {\n    _classCallCheck(this, XAxisComponent);\n\n    this.rotateTicks = true;\n    this.showGridLines = false;\n    this.xOrient = Orientation.Bottom;\n    this.xAxisOffset = 0;\n    this.dimensionsChanged = new EventEmitter();\n    this.xAxisClassName = 'x axis';\n    this.labelOffset = 0;\n    this.fill = 'none';\n    this.stroke = 'stroke';\n    this.tickStroke = '#ccc';\n    this.strokeWidth = 'none';\n    this.padding = 5;\n    this.orientation = Orientation;\n  }\n\n  _createClass(XAxisComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.transform = \"translate(0,\".concat(this.xAxisOffset + this.padding + this.dims.height, \")\");\n\n      if (typeof this.xAxisTickCount !== 'undefined') {\n        this.tickArguments = [this.xAxisTickCount];\n      }\n    }\n  }, {\n    key: \"emitTicksHeight\",\n    value: function emitTicksHeight(_ref) {\n      var _this10 = this;\n\n      var height = _ref.height;\n      var newLabelOffset = height + 25 + 5;\n\n      if (newLabelOffset !== this.labelOffset) {\n        this.labelOffset = newLabelOffset;\n        setTimeout(function () {\n          _this10.dimensionsChanged.emit({\n            height: height\n          });\n        }, 0);\n      }\n    }\n  }]);\n\n  return XAxisComponent;\n}();\n\nXAxisComponent.ɵfac = function XAxisComponent_Factory(t) {\n  return new (t || XAxisComponent)();\n};\n\nXAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-x-axis\", \"\"]],\n  viewQuery: function XAxisComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(XAxisTicksComponent, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksComponent = _t.first);\n    }\n  },\n  inputs: {\n    xScale: \"xScale\",\n    dims: \"dims\",\n    trimTicks: \"trimTicks\",\n    rotateTicks: \"rotateTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    showLabel: \"showLabel\",\n    labelText: \"labelText\",\n    ticks: \"ticks\",\n    xAxisTickCount: \"xAxisTickCount\",\n    xOrient: \"xOrient\",\n    xAxisOffset: \"xAxisOffset\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c6,\n  decls: 3,\n  vars: 4,\n  consts: [[\"ngx-charts-x-axis-ticks\", \"\", 3, \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineHeight\", \"width\", \"tickValues\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"ngx-charts-x-axis-ticks\", \"\", 3, \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineHeight\", \"width\", \"tickValues\", \"dimensionsChanged\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"]],\n  template: function XAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, XAxisComponent__svg_g_1_Template, 1, 12, \"g\", 0);\n      i0.ɵɵtemplate(2, XAxisComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"class\", ctx.xAxisClassName)(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xScale);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n    }\n  },\n  dependencies: [XAxisTicksComponent, AxisLabelComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-x-axis]',\n      template: \"\\n    <svg:g [attr.class]=\\\"xAxisClassName\\\" [attr.transform]=\\\"transform\\\">\\n      <svg:g\\n        ngx-charts-x-axis-ticks\\n        *ngIf=\\\"xScale\\\"\\n        [trimTicks]=\\\"trimTicks\\\"\\n        [rotateTicks]=\\\"rotateTicks\\\"\\n        [maxTickLength]=\\\"maxTickLength\\\"\\n        [tickFormatting]=\\\"tickFormatting\\\"\\n        [tickArguments]=\\\"tickArguments\\\"\\n        [tickStroke]=\\\"tickStroke\\\"\\n        [scale]=\\\"xScale\\\"\\n        [orient]=\\\"xOrient\\\"\\n        [showGridLines]=\\\"showGridLines\\\"\\n        [gridLineHeight]=\\\"dims.height\\\"\\n        [width]=\\\"dims.width\\\"\\n        [tickValues]=\\\"ticks\\\"\\n        (dimensionsChanged)=\\\"emitTicksHeight($event)\\\"\\n      />\\n      <svg:g\\n        ngx-charts-axis-label\\n        *ngIf=\\\"showLabel\\\"\\n        [label]=\\\"labelText\\\"\\n        [offset]=\\\"labelOffset\\\"\\n        [orient]=\\\"orientation.Bottom\\\"\\n        [height]=\\\"dims.height\\\"\\n        [width]=\\\"dims.width\\\"\\n      ></svg:g>\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    xScale: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    rotateTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    showLabel: [{\n      type: Input\n    }],\n    labelText: [{\n      type: Input\n    }],\n    ticks: [{\n      type: Input\n    }],\n    xAxisTickCount: [{\n      type: Input\n    }],\n    xOrient: [{\n      type: Input\n    }],\n    xAxisOffset: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksComponent: [{\n      type: ViewChild,\n      args: [XAxisTicksComponent]\n    }]\n  });\n})();\n/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param x, y, w, h, r, tl, tr, bl, br\n */\n\n\nfunction roundedRect(x, y, w, h, r, _ref2) {\n  var _ref3 = _slicedToArray(_ref2, 4),\n      tl = _ref3[0],\n      tr = _ref3[1],\n      bl = _ref3[2],\n      br = _ref3[3];\n\n  var retval = '';\n  w = Math.floor(w);\n  h = Math.floor(h);\n  w = w === 0 ? 1 : w;\n  h = h === 0 ? 1 : h;\n  retval = \"M\".concat([x + r, y]);\n  retval += \"h\".concat(w - 2 * r);\n\n  if (tr) {\n    retval += \"a\".concat([r, r], \" 0 0 1 \").concat([r, r]);\n  } else {\n    retval += \"h\".concat(r, \"v\").concat(r);\n  }\n\n  retval += \"v\".concat(h - 2 * r);\n\n  if (br) {\n    retval += \"a\".concat([r, r], \" 0 0 1 \").concat([-r, r]);\n  } else {\n    retval += \"v\".concat(r, \"h\").concat(-r);\n  }\n\n  retval += \"h\".concat(2 * r - w);\n\n  if (bl) {\n    retval += \"a\".concat([r, r], \" 0 0 1 \").concat([-r, -r]);\n  } else {\n    retval += \"h\".concat(-r, \"v\").concat(-r);\n  }\n\n  retval += \"v\".concat(2 * r - h);\n\n  if (tl) {\n    retval += \"a\".concat([r, r], \" 0 0 1 \").concat([r, -r]);\n  } else {\n    retval += \"v\".concat(-r, \"h\").concat(r);\n  }\n\n  retval += \"z\";\n  return retval;\n}\n\nvar YAxisTicksComponent = /*#__PURE__*/function () {\n  function YAxisTicksComponent(platformId) {\n    _classCallCheck(this, YAxisTicksComponent);\n\n    this.platformId = platformId;\n    this.tickArguments = [5];\n    this.tickStroke = '#ccc';\n    this.trimTicks = true;\n    this.maxTickLength = 16;\n    this.showGridLines = false;\n    this.showRefLabels = false;\n    this.showRefLines = false;\n    this.dimensionsChanged = new EventEmitter();\n    this.innerTickSize = 6;\n    this.tickPadding = 3;\n    this.verticalSpacing = 20;\n    this.textAnchor = TextAnchor.Middle;\n    this.width = 0;\n    this.outerTickSize = 6;\n    this.rotateLabels = false;\n    this.referenceLineLength = 0;\n    this.Orientation = Orientation;\n  }\n\n  _createClass(YAxisTicksComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this11 = this;\n\n      setTimeout(function () {\n        return _this11.updateDims();\n      });\n    }\n  }, {\n    key: \"updateDims\",\n    value: function updateDims() {\n      var _this12 = this;\n\n      if (!isPlatformBrowser(this.platformId)) {\n        // for SSR, use approximate value instead of measured\n        this.width = this.getApproximateAxisWidth();\n        this.dimensionsChanged.emit({\n          width: this.width\n        });\n        return;\n      }\n\n      var width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n\n      if (width !== this.width) {\n        this.width = width;\n        this.dimensionsChanged.emit({\n          width: width\n        });\n        setTimeout(function () {\n          return _this12.updateDims();\n        });\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this13 = this;\n\n      var scale = this.scale;\n      var sign = this.orient === Orientation.Top || this.orient === Orientation.Right ? -1 : 1;\n      this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n      this.ticks = this.getTicks();\n\n      if (this.tickFormatting) {\n        this.tickFormat = this.tickFormatting;\n      } else if (scale.tickFormat) {\n        // eslint-disable-next-line prefer-spread\n        this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n      } else {\n        this.tickFormat = function (d) {\n          if (d.constructor.name === 'Date') {\n            return d.toLocaleDateString();\n          }\n\n          return d.toLocaleString();\n        };\n      }\n\n      this.adjustedScale = scale.bandwidth ? function (d) {\n        return scale(d) + scale.bandwidth() * 0.5;\n      } : scale;\n\n      if (this.showRefLines && this.referenceLines) {\n        this.setReferencelines();\n      }\n\n      switch (this.orient) {\n        case Orientation.Top:\n          this.transform = function (tick) {\n            return 'translate(' + this.adjustedScale(tick) + ',0)';\n          };\n\n          this.textAnchor = TextAnchor.Middle;\n          this.y2 = this.innerTickSize * sign;\n          this.y1 = this.tickSpacing * sign;\n          this.dy = sign < 0 ? '0em' : '.71em';\n          break;\n\n        case Orientation.Bottom:\n          this.transform = function (tick) {\n            return 'translate(' + this.adjustedScale(tick) + ',0)';\n          };\n\n          this.textAnchor = TextAnchor.Middle;\n          this.y2 = this.innerTickSize * sign;\n          this.y1 = this.tickSpacing * sign;\n          this.dy = sign < 0 ? '0em' : '.71em';\n          break;\n\n        case Orientation.Left:\n          this.transform = function (tick) {\n            return 'translate(0,' + this.adjustedScale(tick) + ')';\n          };\n\n          this.textAnchor = TextAnchor.End;\n          this.x2 = this.innerTickSize * -sign;\n          this.x1 = this.tickSpacing * -sign;\n          this.dy = '.32em';\n          break;\n\n        case Orientation.Right:\n          this.transform = function (tick) {\n            return 'translate(0,' + this.adjustedScale(tick) + ')';\n          };\n\n          this.textAnchor = TextAnchor.Start;\n          this.x2 = this.innerTickSize * -sign;\n          this.x1 = this.tickSpacing * -sign;\n          this.dy = '.32em';\n          break;\n\n        default:\n      }\n\n      setTimeout(function () {\n        return _this13.updateDims();\n      });\n    }\n  }, {\n    key: \"setReferencelines\",\n    value: function setReferencelines() {\n      this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(function (item) {\n        return item.value;\n      })));\n      this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(function (item) {\n        return item.value;\n      })));\n      this.referenceLineLength = this.referenceLines.length;\n      this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [false, false, false, false]);\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      var ticks;\n      var maxTicks = this.getMaxTicks(20);\n      var maxScaleTicks = this.getMaxTicks(50);\n\n      if (this.tickValues) {\n        ticks = this.tickValues;\n      } else if (this.scale.ticks) {\n        ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n      } else {\n        ticks = this.scale.domain();\n        ticks = reduceTicks(ticks, maxTicks);\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getMaxTicks\",\n    value: function getMaxTicks(tickHeight) {\n      return Math.floor(this.height / tickHeight);\n    }\n  }, {\n    key: \"tickTransform\",\n    value: function tickTransform(tick) {\n      return \"translate(\".concat(this.adjustedScale(tick), \",\").concat(this.verticalSpacing, \")\");\n    }\n  }, {\n    key: \"gridLineTransform\",\n    value: function gridLineTransform() {\n      return \"translate(5,0)\";\n    }\n  }, {\n    key: \"tickTrim\",\n    value: function tickTrim(label) {\n      return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n  }, {\n    key: \"getApproximateAxisWidth\",\n    value: function getApproximateAxisWidth() {\n      var _this14 = this;\n\n      var maxChars = Math.max.apply(Math, _toConsumableArray(this.ticks.map(function (t) {\n        return _this14.tickTrim(_this14.tickFormat(t)).length;\n      })));\n      var charWidth = 7;\n      return maxChars * charWidth;\n    }\n  }]);\n\n  return YAxisTicksComponent;\n}();\n\nYAxisTicksComponent.ɵfac = function YAxisTicksComponent_Factory(t) {\n  return new (t || YAxisTicksComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nYAxisTicksComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: YAxisTicksComponent,\n  selectors: [[\"g\", \"ngx-charts-y-axis-ticks\", \"\"]],\n  viewQuery: function YAxisTicksComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    }\n  },\n  inputs: {\n    scale: \"scale\",\n    orient: \"orient\",\n    tickArguments: \"tickArguments\",\n    tickValues: \"tickValues\",\n    tickStroke: \"tickStroke\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    gridLineWidth: \"gridLineWidth\",\n    height: \"height\",\n    referenceLines: \"referenceLines\",\n    showRefLabels: \"showRefLabels\",\n    showRefLines: \"showRefLines\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c7,\n  decls: 6,\n  vars: 4,\n  consts: [[\"ticksel\", \"\"], [\"class\", \"tick\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"reference-area\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"tick\"], [\"stroke-width\", \"0.01\"], [1, \"reference-area\"], [4, \"ngIf\"], [\"class\", \"gridline-path gridline-path-horizontal\", \"x1\", \"0\", 4, \"ngIf\"], [\"x1\", \"0\", 1, \"gridline-path\", \"gridline-path-horizontal\"], [\"x1\", \"0\", 1, \"refline-path\", \"gridline-path-horizontal\"], [1, \"refline-label\"]],\n  template: function YAxisTicksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", null, 0);\n      i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_2_Template, 5, 9, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, YAxisTicksComponent__svg_path_3_Template, 1, 2, \"path\", 2);\n      i0.ɵɵtemplate(4, YAxisTicksComponent__svg_g_4_Template, 2, 2, \"g\", 3);\n      i0.ɵɵtemplate(5, YAxisTicksComponent__svg_g_5_Template, 2, 1, \"g\", 3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.referenceLineLength > 1 && ctx.refMax && ctx.refMin && ctx.showRefLines);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.referenceLines);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YAxisTicksComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-y-axis-ticks]',\n      template: \"\\n    <svg:g #ticksel>\\n      <svg:g *ngFor=\\\"let tick of ticks\\\" class=\\\"tick\\\" [attr.transform]=\\\"transform(tick)\\\">\\n        <title>{{ tickFormat(tick) }}</title>\\n        <svg:text\\n          stroke-width=\\\"0.01\\\"\\n          [attr.dy]=\\\"dy\\\"\\n          [attr.x]=\\\"x1\\\"\\n          [attr.y]=\\\"y1\\\"\\n          [attr.text-anchor]=\\\"textAnchor\\\"\\n          [style.font-size]=\\\"'12px'\\\"\\n        >\\n          {{ tickTrim(tickFormat(tick)) }}\\n        </svg:text>\\n      </svg:g>\\n    </svg:g>\\n\\n    <svg:path\\n      *ngIf=\\\"referenceLineLength > 1 && refMax && refMin && showRefLines\\\"\\n      class=\\\"reference-area\\\"\\n      [attr.d]=\\\"referenceAreaPath\\\"\\n      [attr.transform]=\\\"gridLineTransform()\\\"\\n    />\\n    <svg:g *ngFor=\\\"let tick of ticks\\\" [attr.transform]=\\\"transform(tick)\\\">\\n      <svg:g *ngIf=\\\"showGridLines\\\" [attr.transform]=\\\"gridLineTransform()\\\">\\n        <svg:line\\n          *ngIf=\\\"orient === Orientation.Left\\\"\\n          class=\\\"gridline-path gridline-path-horizontal\\\"\\n          x1=\\\"0\\\"\\n          [attr.x2]=\\\"gridLineWidth\\\"\\n        />\\n        <svg:line\\n          *ngIf=\\\"orient === Orientation.Right\\\"\\n          class=\\\"gridline-path gridline-path-horizontal\\\"\\n          x1=\\\"0\\\"\\n          [attr.x2]=\\\"-gridLineWidth\\\"\\n        />\\n      </svg:g>\\n    </svg:g>\\n\\n    <svg:g *ngFor=\\\"let refLine of referenceLines\\\">\\n      <svg:g *ngIf=\\\"showRefLines\\\" [attr.transform]=\\\"transform(refLine.value)\\\">\\n        <svg:line\\n          class=\\\"refline-path gridline-path-horizontal\\\"\\n          x1=\\\"0\\\"\\n          [attr.x2]=\\\"gridLineWidth\\\"\\n          [attr.transform]=\\\"gridLineTransform()\\\"\\n        />\\n        <svg:g *ngIf=\\\"showRefLabels\\\">\\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\\n          <svg:text\\n            class=\\\"refline-label\\\"\\n            [attr.dy]=\\\"dy\\\"\\n            [attr.y]=\\\"-6\\\"\\n            [attr.x]=\\\"gridLineWidth\\\"\\n            [attr.text-anchor]=\\\"textAnchor\\\"\\n          >\\n            {{ refLine.name }}\\n          </svg:text>\\n        </svg:g>\\n      </svg:g>\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    scale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }],\n    tickArguments: [{\n      type: Input\n    }],\n    tickValues: [{\n      type: Input\n    }],\n    tickStroke: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    gridLineWidth: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksElement: [{\n      type: ViewChild,\n      args: ['ticksel']\n    }]\n  });\n})();\n\nvar YAxisComponent = /*#__PURE__*/function () {\n  function YAxisComponent() {\n    _classCallCheck(this, YAxisComponent);\n\n    this.showGridLines = false;\n    this.yOrient = Orientation.Left;\n    this.yAxisOffset = 0;\n    this.dimensionsChanged = new EventEmitter();\n    this.yAxisClassName = 'y axis';\n    this.labelOffset = 15;\n    this.fill = 'none';\n    this.stroke = '#CCC';\n    this.tickStroke = '#CCC';\n    this.strokeWidth = 1;\n    this.padding = 5;\n  }\n\n  _createClass(YAxisComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.offset = -(this.yAxisOffset + this.padding);\n\n      if (this.yOrient === Orientation.Right) {\n        this.labelOffset = 65;\n        this.transform = \"translate(\".concat(this.offset + this.dims.width, \" , 0)\");\n      } else {\n        this.transform = \"translate(\".concat(this.offset, \" , 0)\");\n      }\n\n      if (this.yAxisTickCount !== undefined) {\n        this.tickArguments = [this.yAxisTickCount];\n      }\n    }\n  }, {\n    key: \"emitTicksWidth\",\n    value: function emitTicksWidth(_ref4) {\n      var _this15 = this;\n\n      var width = _ref4.width;\n\n      if (width !== this.labelOffset && this.yOrient === Orientation.Right) {\n        this.labelOffset = width + this.labelOffset;\n        setTimeout(function () {\n          _this15.dimensionsChanged.emit({\n            width: width\n          });\n        }, 0);\n      } else if (width !== this.labelOffset) {\n        this.labelOffset = width;\n        setTimeout(function () {\n          _this15.dimensionsChanged.emit({\n            width: width\n          });\n        }, 0);\n      }\n    }\n  }]);\n\n  return YAxisComponent;\n}();\n\nYAxisComponent.ɵfac = function YAxisComponent_Factory(t) {\n  return new (t || YAxisComponent)();\n};\n\nYAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: YAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-y-axis\", \"\"]],\n  viewQuery: function YAxisComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(YAxisTicksComponent, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksComponent = _t.first);\n    }\n  },\n  inputs: {\n    yScale: \"yScale\",\n    dims: \"dims\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    ticks: \"ticks\",\n    showGridLines: \"showGridLines\",\n    showLabel: \"showLabel\",\n    labelText: \"labelText\",\n    yAxisTickCount: \"yAxisTickCount\",\n    yOrient: \"yOrient\",\n    referenceLines: \"referenceLines\",\n    showRefLines: \"showRefLines\",\n    showRefLabels: \"showRefLabels\",\n    yAxisOffset: \"yAxisOffset\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c8,\n  decls: 3,\n  vars: 4,\n  consts: [[\"ngx-charts-y-axis-ticks\", \"\", 3, \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineWidth\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"height\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"ngx-charts-y-axis-ticks\", \"\", 3, \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineWidth\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"height\", \"dimensionsChanged\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"]],\n  template: function YAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, YAxisComponent__svg_g_1_Template, 1, 14, \"g\", 0);\n      i0.ɵɵtemplate(2, YAxisComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"class\", ctx.yAxisClassName)(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yScale);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n    }\n  },\n  dependencies: [YAxisTicksComponent, AxisLabelComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-y-axis]',\n      template: \"\\n    <svg:g [attr.class]=\\\"yAxisClassName\\\" [attr.transform]=\\\"transform\\\">\\n      <svg:g\\n        ngx-charts-y-axis-ticks\\n        *ngIf=\\\"yScale\\\"\\n        [trimTicks]=\\\"trimTicks\\\"\\n        [maxTickLength]=\\\"maxTickLength\\\"\\n        [tickFormatting]=\\\"tickFormatting\\\"\\n        [tickArguments]=\\\"tickArguments\\\"\\n        [tickValues]=\\\"ticks\\\"\\n        [tickStroke]=\\\"tickStroke\\\"\\n        [scale]=\\\"yScale\\\"\\n        [orient]=\\\"yOrient\\\"\\n        [showGridLines]=\\\"showGridLines\\\"\\n        [gridLineWidth]=\\\"dims.width\\\"\\n        [referenceLines]=\\\"referenceLines\\\"\\n        [showRefLines]=\\\"showRefLines\\\"\\n        [showRefLabels]=\\\"showRefLabels\\\"\\n        [height]=\\\"dims.height\\\"\\n        (dimensionsChanged)=\\\"emitTicksWidth($event)\\\"\\n      />\\n\\n      <svg:g\\n        ngx-charts-axis-label\\n        *ngIf=\\\"showLabel\\\"\\n        [label]=\\\"labelText\\\"\\n        [offset]=\\\"labelOffset\\\"\\n        [orient]=\\\"yOrient\\\"\\n        [height]=\\\"dims.height\\\"\\n        [width]=\\\"dims.width\\\"\\n      ></svg:g>\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    yScale: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    ticks: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    showLabel: [{\n      type: Input\n    }],\n    labelText: [{\n      type: Input\n    }],\n    yAxisTickCount: [{\n      type: Input\n    }],\n    yOrient: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    yAxisOffset: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksComponent: [{\n      type: ViewChild,\n      args: [YAxisTicksComponent]\n    }]\n  });\n})();\n\nvar AxesModule = /*#__PURE__*/_createClass(function AxesModule() {\n  _classCallCheck(this, AxesModule);\n});\n\nAxesModule.ɵfac = function AxesModule_Factory(t) {\n  return new (t || AxesModule)();\n};\n\nAxesModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AxesModule\n});\nAxesModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AxesModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n      exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n    }]\n  }], null, null);\n})();\n\nvar StyleTypes;\n\n(function (StyleTypes) {\n  StyleTypes[\"popover\"] = \"popover\";\n  StyleTypes[\"tooltip\"] = \"tooltip\";\n})(StyleTypes || (StyleTypes = {}));\n\nvar ShowTypes;\n\n(function (ShowTypes) {\n  ShowTypes[ShowTypes[\"all\"] = 'all'] = \"all\";\n  ShowTypes[ShowTypes[\"focus\"] = 'focus'] = \"focus\";\n  ShowTypes[ShowTypes[\"mouseover\"] = 'mouseover'] = \"mouseover\";\n})(ShowTypes || (ShowTypes = {}));\n\nvar TooltipDirective = /*#__PURE__*/function () {\n  function TooltipDirective(tooltipService, viewContainerRef, renderer) {\n    _classCallCheck(this, TooltipDirective);\n\n    this.tooltipService = tooltipService;\n    this.viewContainerRef = viewContainerRef;\n    this.renderer = renderer;\n    this.tooltipCssClass = '';\n    this.tooltipAppendToBody = true;\n    this.tooltipSpacing = 10;\n    this.tooltipDisabled = false;\n    this.tooltipShowCaret = true;\n    this.tooltipPlacement = PlacementTypes.Top;\n    this.tooltipAlignment = PlacementTypes.Center;\n    this.tooltipType = StyleTypes.popover;\n    this.tooltipCloseOnClickOutside = true;\n    this.tooltipCloseOnMouseLeave = true;\n    this.tooltipHideTimeout = 300;\n    this.tooltipShowTimeout = 100;\n    this.tooltipShowEvent = ShowTypes.all;\n    this.tooltipImmediateExit = false;\n    this.show = new EventEmitter();\n    this.hide = new EventEmitter();\n  }\n\n  _createClass(TooltipDirective, [{\n    key: \"listensForFocus\",\n    get: function get() {\n      return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\n    }\n  }, {\n    key: \"listensForHover\",\n    get: function get() {\n      return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.hideTooltip(true);\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      if (this.listensForFocus) {\n        this.showTooltip();\n      }\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      if (this.listensForFocus) {\n        this.hideTooltip(true);\n      }\n    }\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter() {\n      if (this.listensForHover) {\n        this.showTooltip();\n      }\n    }\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave(target) {\n      if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n        clearTimeout(this.timeout);\n\n        if (this.component) {\n          var contentDom = this.component.instance.element.nativeElement;\n          var contains = contentDom.contains(target);\n          if (contains) return;\n        }\n\n        this.hideTooltip(this.tooltipImmediateExit);\n      }\n    }\n  }, {\n    key: \"onMouseClick\",\n    value: function onMouseClick() {\n      if (this.listensForHover) {\n        this.hideTooltip(true);\n      }\n    }\n  }, {\n    key: \"showTooltip\",\n    value: function showTooltip(immediate) {\n      var _this16 = this;\n\n      if (this.component || this.tooltipDisabled) return;\n      var time = immediate ? 0 : this.tooltipShowTimeout + (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 400 : 0);\n      clearTimeout(this.timeout);\n      this.timeout = setTimeout(function () {\n        _this16.tooltipService.destroyAll();\n\n        var options = _this16.createBoundOptions();\n\n        _this16.component = _this16.tooltipService.create(options); // add a tiny timeout to avoid event re-triggers\n\n        setTimeout(function () {\n          if (_this16.component) {\n            _this16.addHideListeners(_this16.component.instance.element.nativeElement);\n          }\n        }, 10);\n\n        _this16.show.emit(true);\n      }, time);\n    }\n  }, {\n    key: \"addHideListeners\",\n    value: function addHideListeners(tooltip) {\n      var _this17 = this;\n\n      // on mouse enter, cancel the hide triggered by the leave\n      this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', function () {\n        clearTimeout(_this17.timeout);\n      }); // content mouse leave listener\n\n      if (this.tooltipCloseOnMouseLeave) {\n        this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', function () {\n          _this17.hideTooltip(_this17.tooltipImmediateExit);\n        });\n      } // content close on click outside\n\n\n      if (this.tooltipCloseOnClickOutside) {\n        this.documentClickEvent = this.renderer.listen('window', 'click', function (event) {\n          var contains = tooltip.contains(event.target);\n          if (!contains) _this17.hideTooltip();\n        });\n      }\n    }\n  }, {\n    key: \"hideTooltip\",\n    value: function hideTooltip() {\n      var _this18 = this;\n\n      var immediate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!this.component) return;\n\n      var destroyFn = function destroyFn() {\n        // remove events\n        if (_this18.mouseLeaveContentEvent) _this18.mouseLeaveContentEvent();\n        if (_this18.mouseEnterContentEvent) _this18.mouseEnterContentEvent();\n        if (_this18.documentClickEvent) _this18.documentClickEvent(); // emit events\n\n        _this18.hide.emit(true); // destroy component\n\n\n        _this18.tooltipService.destroy(_this18.component);\n\n        _this18.component = undefined;\n      };\n\n      clearTimeout(this.timeout);\n\n      if (!immediate) {\n        this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n      } else {\n        destroyFn();\n      }\n    }\n  }, {\n    key: \"createBoundOptions\",\n    value: function createBoundOptions() {\n      return {\n        title: this.tooltipTitle,\n        template: this.tooltipTemplate,\n        host: this.viewContainerRef.element,\n        placement: this.tooltipPlacement,\n        alignment: this.tooltipAlignment,\n        type: this.tooltipType,\n        showCaret: this.tooltipShowCaret,\n        cssClass: this.tooltipCssClass,\n        spacing: this.tooltipSpacing,\n        context: this.tooltipContext\n      };\n    }\n  }]);\n\n  return TooltipDirective;\n}();\n\nTooltipDirective.ɵfac = function TooltipDirective_Factory(t) {\n  return new (t || TooltipDirective)(i0.ɵɵdirectiveInject(TooltipService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nTooltipDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TooltipDirective,\n  selectors: [[\"\", \"ngx-tooltip\", \"\"]],\n  hostBindings: function TooltipDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focusin\", function TooltipDirective_focusin_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function TooltipDirective_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      })(\"mouseenter\", function TooltipDirective_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function TooltipDirective_mouseleave_HostBindingHandler($event) {\n        return ctx.onMouseLeave($event.target);\n      })(\"click\", function TooltipDirective_click_HostBindingHandler() {\n        return ctx.onMouseClick();\n      });\n    }\n  },\n  inputs: {\n    tooltipCssClass: \"tooltipCssClass\",\n    tooltipTitle: \"tooltipTitle\",\n    tooltipAppendToBody: \"tooltipAppendToBody\",\n    tooltipSpacing: \"tooltipSpacing\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipShowCaret: \"tooltipShowCaret\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipAlignment: \"tooltipAlignment\",\n    tooltipType: \"tooltipType\",\n    tooltipCloseOnClickOutside: \"tooltipCloseOnClickOutside\",\n    tooltipCloseOnMouseLeave: \"tooltipCloseOnMouseLeave\",\n    tooltipHideTimeout: \"tooltipHideTimeout\",\n    tooltipShowTimeout: \"tooltipShowTimeout\",\n    tooltipTemplate: \"tooltipTemplate\",\n    tooltipShowEvent: \"tooltipShowEvent\",\n    tooltipContext: \"tooltipContext\",\n    tooltipImmediateExit: \"tooltipImmediateExit\"\n  },\n  outputs: {\n    show: \"show\",\n    hide: \"hide\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-tooltip]'\n    }]\n  }], function () {\n    return [{\n      type: TooltipService\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    tooltipCssClass: [{\n      type: Input\n    }],\n    tooltipTitle: [{\n      type: Input\n    }],\n    tooltipAppendToBody: [{\n      type: Input\n    }],\n    tooltipSpacing: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipShowCaret: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipAlignment: [{\n      type: Input\n    }],\n    tooltipType: [{\n      type: Input\n    }],\n    tooltipCloseOnClickOutside: [{\n      type: Input\n    }],\n    tooltipCloseOnMouseLeave: [{\n      type: Input\n    }],\n    tooltipHideTimeout: [{\n      type: Input\n    }],\n    tooltipShowTimeout: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    tooltipShowEvent: [{\n      type: Input\n    }],\n    tooltipContext: [{\n      type: Input\n    }],\n    tooltipImmediateExit: [{\n      type: Input\n    }],\n    show: [{\n      type: Output\n    }],\n    hide: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: HostListener,\n      args: ['focusin']\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave', ['$event.target']]\n    }],\n    onMouseClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\n\nvar TooltipModule = /*#__PURE__*/_createClass(function TooltipModule() {\n  _classCallCheck(this, TooltipModule);\n});\n\nTooltipModule.ɵfac = function TooltipModule_Factory(t) {\n  return new (t || TooltipModule)();\n};\n\nTooltipModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TooltipModule\n});\nTooltipModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [InjectionService, TooltipService],\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TooltipContentComponent, TooltipDirective],\n      providers: [InjectionService, TooltipService],\n      exports: [TooltipContentComponent, TooltipDirective],\n      imports: [CommonModule],\n      entryComponents: [TooltipContentComponent]\n    }]\n  }], null, null);\n})();\n\nvar cache = {};\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\n\nfunction id() {\n  var newId = ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4); // append a 'a' because neo gets mad\n\n  newId = \"a\".concat(newId); // ensure not already used\n\n  if (!cache[newId]) {\n    cache[newId] = true;\n    return newId;\n  }\n\n  return id();\n}\n\nvar BarOrientation;\n\n(function (BarOrientation) {\n  BarOrientation[\"Vertical\"] = \"vertical\";\n  BarOrientation[\"Horizontal\"] = \"horizontal\";\n})(BarOrientation || (BarOrientation = {}));\n\nvar SvgLinearGradientComponent = /*#__PURE__*/function () {\n  function SvgLinearGradientComponent() {\n    _classCallCheck(this, SvgLinearGradientComponent);\n\n    this.orientation = BarOrientation.Vertical;\n  }\n\n  _createClass(SvgLinearGradientComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.x1 = '0%';\n      this.x2 = '0%';\n      this.y1 = '0%';\n      this.y2 = '0%';\n\n      if (this.orientation === BarOrientation.Horizontal) {\n        this.x2 = '100%';\n      } else if (this.orientation === BarOrientation.Vertical) {\n        this.y1 = '100%';\n      }\n    }\n  }]);\n\n  return SvgLinearGradientComponent;\n}();\n\nSvgLinearGradientComponent.ɵfac = function SvgLinearGradientComponent_Factory(t) {\n  return new (t || SvgLinearGradientComponent)();\n};\n\nSvgLinearGradientComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SvgLinearGradientComponent,\n  selectors: [[\"g\", \"ngx-charts-svg-linear-gradient\", \"\"]],\n  inputs: {\n    orientation: \"orientation\",\n    name: \"name\",\n    stops: \"stops\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c9,\n  decls: 2,\n  vars: 6,\n  consts: [[3, \"id\"], [3, \"stop-color\", \"stop-opacity\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function SvgLinearGradientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"linearGradient\", 0);\n      i0.ɵɵtemplate(1, SvgLinearGradientComponent__svg_stop_1_Template, 1, 5, \"stop\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.name);\n      i0.ɵɵattribute(\"x1\", ctx.x1)(\"y1\", ctx.y1)(\"x2\", ctx.x2)(\"y2\", ctx.y2);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stops);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgLinearGradientComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-svg-linear-gradient]',\n      template: \"\\n    <svg:linearGradient [id]=\\\"name\\\" [attr.x1]=\\\"x1\\\" [attr.y1]=\\\"y1\\\" [attr.x2]=\\\"x2\\\" [attr.y2]=\\\"y2\\\">\\n      <svg:stop\\n        *ngFor=\\\"let stop of stops\\\"\\n        [attr.offset]=\\\"stop.offset + '%'\\\"\\n        [style.stop-color]=\\\"stop.color\\\"\\n        [style.stop-opacity]=\\\"stop.opacity\\\"\\n      />\\n    </svg:linearGradient>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    orientation: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }]\n  });\n})();\n\nvar CircleComponent = /*#__PURE__*/function () {\n  function CircleComponent() {\n    _classCallCheck(this, CircleComponent);\n\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n\n  _createClass(CircleComponent, [{\n    key: \"onClick\",\n    value: function onClick() {\n      this.select.emit(this.data);\n    }\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter() {\n      this.activate.emit(this.data);\n    }\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave() {\n      this.deactivate.emit(this.data);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\n      this.classNames += 'circle';\n    }\n  }]);\n\n  return CircleComponent;\n}();\n\nCircleComponent.ɵfac = function CircleComponent_Factory(t) {\n  return new (t || CircleComponent)();\n};\n\nCircleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CircleComponent,\n  selectors: [[\"g\", \"ngx-charts-circle\", \"\"]],\n  hostBindings: function CircleComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function CircleComponent_click_HostBindingHandler() {\n        return ctx.onClick();\n      })(\"mouseenter\", function CircleComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function CircleComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    cx: \"cx\",\n    cy: \"cy\",\n    r: \"r\",\n    fill: \"fill\",\n    stroke: \"stroke\",\n    data: \"data\",\n    classNames: \"classNames\",\n    circleOpacity: \"circleOpacity\",\n    pointerEvents: \"pointerEvents\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c10,\n  decls: 1,\n  vars: 8,\n  template: function CircleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"circle\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"cx\", ctx.cx)(\"cy\", ctx.cy)(\"r\", ctx.r)(\"fill\", ctx.fill)(\"stroke\", ctx.stroke)(\"opacity\", ctx.circleOpacity)(\"class\", ctx.classNames)(\"pointer-events\", ctx.pointerEvents);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CircleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-circle]',\n      template: \"\\n    <svg:circle\\n      [attr.cx]=\\\"cx\\\"\\n      [attr.cy]=\\\"cy\\\"\\n      [attr.r]=\\\"r\\\"\\n      [attr.fill]=\\\"fill\\\"\\n      [attr.stroke]=\\\"stroke\\\"\\n      [attr.opacity]=\\\"circleOpacity\\\"\\n      [attr.class]=\\\"classNames\\\"\\n      [attr.pointer-events]=\\\"pointerEvents\\\"\\n    />\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    cx: [{\n      type: Input\n    }],\n    cy: [{\n      type: Input\n    }],\n    r: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    stroke: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    classNames: [{\n      type: Input\n    }],\n    circleOpacity: [{\n      type: Input\n    }],\n    pointerEvents: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nvar SeriesType;\n\n(function (SeriesType) {\n  SeriesType[\"Standard\"] = \"standard\";\n  SeriesType[\"Stacked\"] = \"stacked\";\n})(SeriesType || (SeriesType = {}));\n\nvar CircleSeriesComponent = /*#__PURE__*/function () {\n  function CircleSeriesComponent(platformId) {\n    _classCallCheck(this, CircleSeriesComponent);\n\n    this.platformId = platformId;\n    this.type = SeriesType.Standard;\n    this.tooltipDisabled = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.barVisible = false;\n    this.barOrientation = BarOrientation;\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.isSSR = false;\n  }\n\n  _createClass(CircleSeriesComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.gradientId = 'grad' + id().toString();\n      this.gradientFill = \"url(#\".concat(this.gradientId, \")\");\n\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.circle = this.getActiveCircle();\n    }\n  }, {\n    key: \"getActiveCircle\",\n    value: function getActiveCircle() {\n      var _this19 = this;\n\n      var indexActiveDataPoint = this.data.series.findIndex(function (d) {\n        var label = d.name;\n        return label && _this19.visibleValue && label.toString() === _this19.visibleValue.toString() && d.value !== undefined;\n      });\n\n      if (indexActiveDataPoint === -1) {\n        // No valid point is 'active/hovered over' at this moment.\n        return undefined;\n      }\n\n      return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n    }\n  }, {\n    key: \"mapDataPointToCircle\",\n    value: function mapDataPointToCircle(d, i) {\n      var seriesName = this.data.name;\n      var value = d.value;\n      var label = d.name;\n      var tooltipLabel = formatLabel(label);\n      var cx;\n\n      if (this.scaleType === ScaleType.Time) {\n        cx = this.xScale(label);\n      } else if (this.scaleType === ScaleType.Linear) {\n        cx = this.xScale(Number(label));\n      } else {\n        cx = this.xScale(label);\n      }\n\n      var cy = this.yScale(this.type === SeriesType.Standard ? value : d.d1);\n      var radius = 5;\n      var height = this.yScale.range()[0] - cy;\n      var opacity = 1;\n      var color;\n\n      if (this.colors.scaleType === ScaleType.Linear) {\n        if (this.type === SeriesType.Standard) {\n          color = this.colors.getColor(value);\n        } else {\n          color = this.colors.getColor(d.d1);\n        }\n      } else {\n        color = this.colors.getColor(seriesName);\n      }\n\n      var data = Object.assign({}, d, {\n        series: seriesName,\n        value: value,\n        name: label\n      });\n      return {\n        classNames: [\"circle-data-\".concat(i)],\n        value: value,\n        label: label,\n        data: data,\n        cx: cx,\n        cy: cy,\n        radius: radius,\n        height: height,\n        tooltipLabel: tooltipLabel,\n        color: color,\n        opacity: opacity,\n        seriesName: seriesName,\n        gradientStops: this.getGradientStops(color),\n        min: d.min,\n        max: d.max\n      };\n    }\n  }, {\n    key: \"getTooltipText\",\n    value: function getTooltipText(_ref5) {\n      var tooltipLabel = _ref5.tooltipLabel,\n          value = _ref5.value,\n          seriesName = _ref5.seriesName,\n          min = _ref5.min,\n          max = _ref5.max;\n      return \"\\n      <span class=\\\"tooltip-label\\\">\".concat(escapeLabel(seriesName), \" \\u2022 \").concat(escapeLabel(tooltipLabel), \"</span>\\n      <span class=\\\"tooltip-val\\\">\").concat(value.toLocaleString()).concat(this.getTooltipMinMaxText(min, max), \"</span>\\n    \");\n    }\n  }, {\n    key: \"getTooltipMinMaxText\",\n    value: function getTooltipMinMaxText(min, max) {\n      if (min !== undefined || max !== undefined) {\n        var result = ' (';\n\n        if (min !== undefined) {\n          if (max === undefined) {\n            result += '≥';\n          }\n\n          result += min.toLocaleString();\n\n          if (max !== undefined) {\n            result += ' - ';\n          }\n        } else if (max !== undefined) {\n          result += '≤';\n        }\n\n        if (max !== undefined) {\n          result += max.toLocaleString();\n        }\n\n        result += ')';\n        return result;\n      } else {\n        return '';\n      }\n    }\n  }, {\n    key: \"getGradientStops\",\n    value: function getGradientStops(color) {\n      return [{\n        offset: 0,\n        color: color,\n        opacity: 0.2\n      }, {\n        offset: 100,\n        color: color,\n        opacity: 1\n      }];\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive(entry) {\n      if (!this.activeEntries) return false;\n      var item = this.activeEntries.find(function (d) {\n        return entry.name === d.name;\n      });\n      return item !== undefined;\n    }\n  }, {\n    key: \"activateCircle\",\n    value: function activateCircle() {\n      this.barVisible = true;\n      this.activate.emit({\n        name: this.data.name\n      });\n    }\n  }, {\n    key: \"deactivateCircle\",\n    value: function deactivateCircle() {\n      this.barVisible = false;\n      this.circle.opacity = 0;\n      this.deactivate.emit({\n        name: this.data.name\n      });\n    }\n  }]);\n\n  return CircleSeriesComponent;\n}();\n\nCircleSeriesComponent.ɵfac = function CircleSeriesComponent_Factory(t) {\n  return new (t || CircleSeriesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nCircleSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CircleSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-circle-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    type: \"type\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    visibleValue: \"visibleValue\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c11,\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"class\", \"tooltip-bar\", 4, \"ngIf\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"], [1, \"tooltip-bar\"]],\n  template: function CircleSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CircleSeriesComponent__svg_g_0_Template, 6, 22, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.circle);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, CircleComponent, i2.NgIf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      opacity: 0\n    }), animate(250, style({\n      opacity: 1\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CircleSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-circle-series]',\n      template: \"\\n    <svg:g *ngIf=\\\"circle\\\">\\n      <defs>\\n        <svg:g\\n          ngx-charts-svg-linear-gradient\\n          [orientation]=\\\"barOrientation.Vertical\\\"\\n          [name]=\\\"gradientId\\\"\\n          [stops]=\\\"circle.gradientStops\\\"\\n        />\\n      </defs>\\n      <svg:rect\\n        *ngIf=\\\"!isSSR && barVisible && type === 'standard'\\\"\\n        [@animationState]=\\\"'active'\\\"\\n        [attr.x]=\\\"circle.cx - circle.radius\\\"\\n        [attr.y]=\\\"circle.cy\\\"\\n        [attr.width]=\\\"circle.radius * 2\\\"\\n        [attr.height]=\\\"circle.height\\\"\\n        [attr.fill]=\\\"gradientFill\\\"\\n        class=\\\"tooltip-bar\\\"\\n      />\\n      <svg:rect\\n        *ngIf=\\\"isSSR && barVisible && type === 'standard'\\\"\\n        [attr.x]=\\\"circle.cx - circle.radius\\\"\\n        [attr.y]=\\\"circle.cy\\\"\\n        [attr.width]=\\\"circle.radius * 2\\\"\\n        [attr.height]=\\\"circle.height\\\"\\n        [attr.fill]=\\\"gradientFill\\\"\\n        class=\\\"tooltip-bar\\\"\\n      />\\n      <svg:g\\n        ngx-charts-circle\\n        class=\\\"circle\\\"\\n        [cx]=\\\"circle.cx\\\"\\n        [cy]=\\\"circle.cy\\\"\\n        [r]=\\\"circle.radius\\\"\\n        [fill]=\\\"circle.color\\\"\\n        [class.active]=\\\"isActive({ name: circle.seriesName })\\\"\\n        [pointerEvents]=\\\"circle.value === 0 ? 'none' : 'all'\\\"\\n        [data]=\\\"circle.value\\\"\\n        [classNames]=\\\"circle.classNames\\\"\\n        (select)=\\\"onClick(circle.data)\\\"\\n        (activate)=\\\"activateCircle()\\\"\\n        (deactivate)=\\\"deactivateCircle()\\\"\\n        ngx-tooltip\\n        [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n        [tooltipPlacement]=\\\"placementTypes.Top\\\"\\n        [tooltipType]=\\\"styleTypes.tooltip\\\"\\n        [tooltipTitle]=\\\"tooltipTemplate ? undefined : getTooltipText(circle)\\\"\\n        [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n        [tooltipContext]=\\\"circle.data\\\"\\n      />\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        opacity: 0\n      }), animate(250, style({\n        opacity: 1\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    visibleValue: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nvar GridPanelComponent = /*#__PURE__*/_createClass(function GridPanelComponent() {\n  _classCallCheck(this, GridPanelComponent);\n});\n\nGridPanelComponent.ɵfac = function GridPanelComponent_Factory(t) {\n  return new (t || GridPanelComponent)();\n};\n\nGridPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GridPanelComponent,\n  selectors: [[\"g\", \"ngx-charts-grid-panel\", \"\"]],\n  inputs: {\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\"\n  },\n  attrs: _c13,\n  decls: 1,\n  vars: 4,\n  consts: [[\"stroke\", \"none\", 1, \"gridpanel\"]],\n  template: function GridPanelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"rect\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"height\", ctx.height)(\"width\", ctx.width)(\"x\", ctx.x)(\"y\", ctx.y);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridPanelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-grid-panel]',\n      template: \"\\n    <svg:rect [attr.height]=\\\"height\\\" [attr.width]=\\\"width\\\" [attr.x]=\\\"x\\\" [attr.y]=\\\"y\\\" stroke=\\\"none\\\" class=\\\"gridpanel\\\" />\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ClassEnum;\n\n(function (ClassEnum) {\n  ClassEnum[\"Odd\"] = \"odd\";\n  ClassEnum[\"Even\"] = \"even\";\n})(ClassEnum || (ClassEnum = {}));\n\nvar GridPanelSeriesComponent = /*#__PURE__*/function () {\n  function GridPanelSeriesComponent() {\n    _classCallCheck(this, GridPanelSeriesComponent);\n  }\n\n  _createClass(GridPanelSeriesComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.gridPanels = this.getGridPanels();\n    }\n  }, {\n    key: \"getGridPanels\",\n    value: function getGridPanels() {\n      var _this20 = this;\n\n      return this.data.map(function (d) {\n        var offset;\n        var width;\n        var height;\n        var x;\n        var y;\n        var className = ClassEnum.Odd;\n\n        if (_this20.orient === BarOrientation.Vertical) {\n          var position = _this20.xScale(d.name);\n\n          var positionIndex = Number.parseInt((position / _this20.xScale.step()).toString(), 10);\n\n          if (positionIndex % 2 === 1) {\n            className = ClassEnum.Even;\n          }\n\n          offset = _this20.xScale.bandwidth() * _this20.xScale.paddingInner();\n          width = _this20.xScale.bandwidth() + offset;\n          height = _this20.dims.height;\n          x = _this20.xScale(d.name) - offset / 2;\n          y = 0;\n        } else if (_this20.orient === BarOrientation.Horizontal) {\n          var _position = _this20.yScale(d.name);\n\n          var _positionIndex = Number.parseInt((_position / _this20.yScale.step()).toString(), 10);\n\n          if (_positionIndex % 2 === 1) {\n            className = ClassEnum.Even;\n          }\n\n          offset = _this20.yScale.bandwidth() * _this20.yScale.paddingInner();\n          width = _this20.dims.width;\n          height = _this20.yScale.bandwidth() + offset;\n          x = 0;\n          y = _this20.yScale(d.name) - offset / 2;\n        }\n\n        return {\n          name: d.name,\n          class: className,\n          height: height,\n          width: width,\n          x: x,\n          y: y\n        };\n      });\n    }\n  }]);\n\n  return GridPanelSeriesComponent;\n}();\n\nGridPanelSeriesComponent.ɵfac = function GridPanelSeriesComponent_Factory(t) {\n  return new (t || GridPanelSeriesComponent)();\n};\n\nGridPanelSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GridPanelSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-grid-panel-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    orient: \"orient\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c14,\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngx-charts-grid-panel\", \"\", 3, \"height\", \"width\", \"x\", \"y\", \"grid-panel\", \"odd\", \"even\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-grid-panel\", \"\", 3, \"height\", \"width\", \"x\", \"y\"]],\n  template: function GridPanelSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, GridPanelSeriesComponent__svg_g_0_Template, 1, 10, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.gridPanels);\n    }\n  },\n  dependencies: [GridPanelComponent, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridPanelSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-grid-panel-series]',\n      template: \"\\n    <svg:g\\n      ngx-charts-grid-panel\\n      *ngFor=\\\"let gridPanel of gridPanels\\\"\\n      [height]=\\\"gridPanel.height\\\"\\n      [width]=\\\"gridPanel.width\\\"\\n      [x]=\\\"gridPanel.x\\\"\\n      [y]=\\\"gridPanel.y\\\"\\n      [class.grid-panel]=\\\"true\\\"\\n      [class.odd]=\\\"gridPanel.class === 'odd'\\\"\\n      [class.even]=\\\"gridPanel.class === 'even'\\\"\\n    ></svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }]\n  });\n})();\n\nvar SvgRadialGradientComponent = /*#__PURE__*/function () {\n  function SvgRadialGradientComponent() {\n    _classCallCheck(this, SvgRadialGradientComponent);\n\n    this.endOpacity = 1;\n    this.cx = 0;\n    this.cy = 0;\n  }\n\n  _createClass(SvgRadialGradientComponent, [{\n    key: \"stops\",\n    get: function get() {\n      return this.stopsInput || this.stopsDefault;\n    },\n    set: function set(value) {\n      this.stopsInput = value;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.r = '30%';\n\n      if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\n        this.stopsDefault = [{\n          offset: 0,\n          color: this.color,\n          opacity: this.startOpacity\n        }, {\n          offset: 100,\n          color: this.color,\n          opacity: this.endOpacity\n        }];\n      }\n    }\n  }]);\n\n  return SvgRadialGradientComponent;\n}();\n\nSvgRadialGradientComponent.ɵfac = function SvgRadialGradientComponent_Factory(t) {\n  return new (t || SvgRadialGradientComponent)();\n};\n\nSvgRadialGradientComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SvgRadialGradientComponent,\n  selectors: [[\"g\", \"ngx-charts-svg-radial-gradient\", \"\"]],\n  inputs: {\n    color: \"color\",\n    name: \"name\",\n    startOpacity: \"startOpacity\",\n    endOpacity: \"endOpacity\",\n    cx: \"cx\",\n    cy: \"cy\",\n    stops: \"stops\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c15,\n  decls: 2,\n  vars: 5,\n  consts: [[\"gradientUnits\", \"userSpaceOnUse\", 3, \"id\"], [3, \"stop-color\", \"stop-opacity\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function SvgRadialGradientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"radialGradient\", 0);\n      i0.ɵɵtemplate(1, SvgRadialGradientComponent__svg_stop_1_Template, 1, 5, \"stop\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.name);\n      i0.ɵɵattribute(\"cx\", ctx.cx)(\"cy\", ctx.cy)(\"r\", ctx.r);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stops);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgRadialGradientComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-svg-radial-gradient]',\n      template: \"\\n    <svg:radialGradient [id]=\\\"name\\\" [attr.cx]=\\\"cx\\\" [attr.cy]=\\\"cy\\\" [attr.r]=\\\"r\\\" gradientUnits=\\\"userSpaceOnUse\\\">\\n      <svg:stop\\n        *ngFor=\\\"let stop of stops\\\"\\n        [attr.offset]=\\\"stop.offset + '%'\\\"\\n        [style.stop-color]=\\\"stop.color\\\"\\n        [style.stop-opacity]=\\\"stop.opacity\\\"\\n      />\\n    </svg:radialGradient>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    color: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    startOpacity: [{\n      type: Input\n    }],\n    endOpacity: [{\n      type: Input\n    }],\n    cx: [{\n      type: Input\n    }],\n    cy: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }]\n  });\n})();\n\nvar AreaComponent = /*#__PURE__*/function () {\n  function AreaComponent(element) {\n    _classCallCheck(this, AreaComponent);\n\n    this.opacity = 1;\n    this.startOpacity = 0.5;\n    this.endOpacity = 1;\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.animationsLoaded = false;\n    this.hasGradient = false;\n    this.barOrientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n\n  _createClass(AreaComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.update();\n\n      if (!this.animationsLoaded) {\n        this.loadAnimation();\n        this.animationsLoaded = true;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.gradientId = 'grad' + id().toString();\n      this.gradientFill = \"url(#\".concat(this.gradientId, \")\");\n\n      if (this.gradient || this.stops) {\n        this.gradientStops = this.getGradient();\n        this.hasGradient = true;\n      } else {\n        this.hasGradient = false;\n      }\n\n      this.updatePathEl();\n    }\n  }, {\n    key: \"loadAnimation\",\n    value: function loadAnimation() {\n      this.areaPath = this.startingPath;\n      setTimeout(this.updatePathEl.bind(this), 100);\n    }\n  }, {\n    key: \"updatePathEl\",\n    value: function updatePathEl() {\n      var node = select(this.element).select('.area');\n\n      if (this.animations) {\n        node.transition().duration(750).attr('d', this.path);\n      } else {\n        node.attr('d', this.path);\n      }\n    }\n  }, {\n    key: \"getGradient\",\n    value: function getGradient() {\n      if (this.stops) {\n        return this.stops;\n      }\n\n      return [{\n        offset: 0,\n        color: this.fill,\n        opacity: this.startOpacity\n      }, {\n        offset: 100,\n        color: this.fill,\n        opacity: this.endOpacity\n      }];\n    }\n  }]);\n\n  return AreaComponent;\n}();\n\nAreaComponent.ɵfac = function AreaComponent_Factory(t) {\n  return new (t || AreaComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nAreaComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaComponent,\n  selectors: [[\"g\", \"ngx-charts-area\", \"\"]],\n  inputs: {\n    data: \"data\",\n    path: \"path\",\n    startingPath: \"startingPath\",\n    fill: \"fill\",\n    opacity: \"opacity\",\n    startOpacity: \"startOpacity\",\n    endOpacity: \"endOpacity\",\n    gradient: \"gradient\",\n    stops: \"stops\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c16,\n  decls: 2,\n  vars: 5,\n  consts: [[4, \"ngIf\"], [1, \"area\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function AreaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AreaComponent__svg_defs_0_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(1, \"path\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"opacity\", ctx.opacity);\n      i0.ɵɵattribute(\"d\", ctx.areaPath)(\"fill\", ctx.gradient ? ctx.gradientFill : ctx.fill);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-area]',\n      template: \"\\n    <svg:defs *ngIf=\\\"gradient\\\">\\n      <svg:g\\n        ngx-charts-svg-linear-gradient\\n        [orientation]=\\\"barOrientation.Vertical\\\"\\n        [name]=\\\"gradientId\\\"\\n        [stops]=\\\"gradientStops\\\"\\n      />\\n    </svg:defs>\\n    <svg:path class=\\\"area\\\" [attr.d]=\\\"areaPath\\\" [attr.fill]=\\\"gradient ? gradientFill : fill\\\" [style.opacity]=\\\"opacity\\\" />\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    path: [{\n      type: Input\n    }],\n    startingPath: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    startOpacity: [{\n      type: Input\n    }],\n    endOpacity: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})(); // Robert Penner's easeOutExpo\n\n\nfunction easeOutExpo(t, b, c, d) {\n  return c * (-Math.pow(2, -10 * t / d) + 1) * 1024 / 1023 + b;\n}\n/**\n * Counts from a number to the end incrementally.\n */\n\n\nfunction count(countFrom, countTo, countDecimals, countDuration, callback) {\n  var startVal = Number(countFrom);\n  var endVal = Number(countTo);\n  var countDown = startVal > endVal;\n  var decimals = Math.max(0, countDecimals);\n  var dec = Math.pow(10, decimals);\n  var duration = Number(countDuration) * 1000;\n  var startTime;\n\n  function runCount(timestamp) {\n    var frameVal;\n    var progress = timestamp - startTime;\n\n    if (countDown) {\n      frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n    } else {\n      frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n    }\n\n    if (countDown) {\n      frameVal = frameVal < endVal ? endVal : frameVal;\n    } else {\n      frameVal = frameVal > endVal ? endVal : frameVal;\n    }\n\n    frameVal = Math.round(frameVal * dec) / dec;\n    var tick = progress < duration;\n    callback({\n      value: frameVal,\n      progress: progress,\n      timestamp: timestamp,\n      finished: !tick\n    });\n\n    if (tick) {\n      return requestAnimationFrame(function (val) {\n        return runCount(val);\n      });\n    }\n  }\n\n  return requestAnimationFrame(function (timestamp) {\n    startTime = timestamp;\n    return runCount(timestamp);\n  });\n}\n/**\n * Determine decimals places\n *\n * @export\n */\n\n\nfunction decimalChecker(countTo) {\n  var endVal = Number(countTo);\n\n  if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n    return 2;\n  }\n\n  return 0;\n}\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n */\n\n\nvar CountUpDirective = /*#__PURE__*/function () {\n  function CountUpDirective(cd, element) {\n    _classCallCheck(this, CountUpDirective);\n\n    this.cd = cd;\n    this.countDuration = 1;\n    this.countPrefix = '';\n    this.countSuffix = '';\n    this.countChange = new EventEmitter();\n    this.countFinish = new EventEmitter();\n    this.value = '';\n    this._countDecimals = 0;\n    this._countTo = 0;\n    this._countFrom = 0;\n    this.nativeElement = element.nativeElement;\n  }\n\n  _createClass(CountUpDirective, [{\n    key: \"countDecimals\",\n    get: function get() {\n      if (this._countDecimals) return this._countDecimals;\n      return decimalChecker(this.countTo);\n    },\n    set: function set(val) {\n      this._countDecimals = val;\n    }\n  }, {\n    key: \"countTo\",\n    get: function get() {\n      return this._countTo;\n    },\n    set: function set(val) {\n      this._countTo = parseFloat(val);\n      this.start();\n    }\n  }, {\n    key: \"countFrom\",\n    get: function get() {\n      return this._countFrom;\n    },\n    set: function set(val) {\n      this._countFrom = parseFloat(val);\n      this.start();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      cancelAnimationFrame(this.animationReq);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this21 = this;\n\n      cancelAnimationFrame(this.animationReq);\n\n      var valueFormatting = this.valueFormatting || function (value) {\n        return \"\".concat(_this21.countPrefix).concat(value.toLocaleString()).concat(_this21.countSuffix);\n      };\n\n      var callback = function callback(_ref6) {\n        var value = _ref6.value,\n            progress = _ref6.progress,\n            finished = _ref6.finished;\n        _this21.value = valueFormatting(value);\n\n        _this21.cd.markForCheck();\n\n        if (!finished) _this21.countChange.emit({\n          value: _this21.value,\n          progress: progress\n        });\n        if (finished) _this21.countFinish.emit({\n          value: _this21.value,\n          progress: progress\n        });\n      };\n\n      this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n    }\n  }]);\n\n  return CountUpDirective;\n}();\n\nCountUpDirective.ɵfac = function CountUpDirective_Factory(t) {\n  return new (t || CountUpDirective)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCountUpDirective.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CountUpDirective,\n  selectors: [[\"\", \"ngx-charts-count-up\", \"\"]],\n  inputs: {\n    countDuration: \"countDuration\",\n    countPrefix: \"countPrefix\",\n    countSuffix: \"countSuffix\",\n    valueFormatting: \"valueFormatting\",\n    countDecimals: \"countDecimals\",\n    countTo: \"countTo\",\n    countFrom: \"countFrom\"\n  },\n  outputs: {\n    countChange: \"countChange\",\n    countFinish: \"countFinish\"\n  },\n  attrs: _c17,\n  decls: 1,\n  vars: 1,\n  template: function CountUpDirective_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵtextInterpolate1(\" \", ctx.value, \" \");\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountUpDirective, [{\n    type: Component,\n    args: [{\n      selector: '[ngx-charts-count-up]',\n      template: \" {{ value }} \"\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    countDuration: [{\n      type: Input\n    }],\n    countPrefix: [{\n      type: Input\n    }],\n    countSuffix: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    countDecimals: [{\n      type: Input\n    }],\n    countTo: [{\n      type: Input\n    }],\n    countFrom: [{\n      type: Input\n    }],\n    countChange: [{\n      type: Output\n    }],\n    countFinish: [{\n      type: Output\n    }]\n  });\n})(); // If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\n\n\nvar root;\n\nif (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} // tslint:disable-next-line:variable-name\n\n\nvar MouseEvent = root.MouseEvent;\n\nfunction createMouseEvent(name) {\n  var bubbles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var cancelable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  // Calling new of an event does not work correctly on IE. The following is a tested workaround\n  // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n  if (typeof MouseEvent === 'function') {\n    // Sane browsers\n    return new MouseEvent(name, {\n      bubbles: bubbles,\n      cancelable: cancelable\n    });\n  } else {\n    // IE\n    var event = document.createEvent('MouseEvent');\n    event.initEvent(name, bubbles, cancelable);\n    return event;\n  }\n}\n\nvar TooltipArea = /*#__PURE__*/function () {\n  function TooltipArea(platformId) {\n    _classCallCheck(this, TooltipArea);\n\n    this.platformId = platformId;\n    this.anchorOpacity = 0;\n    this.anchorPos = -1;\n    this.anchorValues = [];\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.showPercentage = false;\n    this.tooltipDisabled = false;\n    this.hover = new EventEmitter();\n  }\n\n  _createClass(TooltipArea, [{\n    key: \"getValues\",\n    value: function getValues(xVal) {\n      var results = [];\n\n      var _iterator6 = _createForOfIteratorHelper(this.results),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var group = _step6.value;\n          var item = group.series.find(function (d) {\n            return d.name.toString() === xVal.toString();\n          });\n          var groupName = group.name;\n\n          if (groupName instanceof Date) {\n            groupName = groupName.toLocaleDateString();\n          }\n\n          if (item) {\n            var label = item.name;\n            var val = item.value;\n\n            if (this.showPercentage) {\n              val = (item.d1 - item.d0).toFixed(2) + '%';\n            }\n\n            var color = void 0;\n\n            if (this.colors.scaleType === ScaleType.Linear) {\n              var v = val;\n\n              if (item.d1) {\n                v = item.d1;\n              }\n\n              color = this.colors.getColor(v);\n            } else {\n              color = this.colors.getColor(group.name);\n            }\n\n            var data = Object.assign({}, item, {\n              value: val,\n              name: label,\n              series: groupName,\n              min: item.min,\n              max: item.max,\n              color: color\n            });\n            results.push(data);\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      return results;\n    }\n  }, {\n    key: \"mouseMove\",\n    value: function mouseMove(event) {\n      if (!isPlatformBrowser(this.platformId)) {\n        return;\n      }\n\n      var xPos = event.pageX - event.target.getBoundingClientRect().left;\n      var closestIndex = this.findClosestPointIndex(xPos);\n      var closestPoint = this.xSet[closestIndex];\n      this.anchorPos = this.xScale(closestPoint);\n      this.anchorPos = Math.max(0, this.anchorPos);\n      this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n      this.anchorValues = this.getValues(closestPoint);\n\n      if (this.anchorPos !== this.lastAnchorPos) {\n        var ev = createMouseEvent('mouseleave');\n        this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n        this.anchorOpacity = 0.7;\n        this.hover.emit({\n          value: closestPoint\n        });\n        this.showTooltip();\n        this.lastAnchorPos = this.anchorPos;\n      }\n    }\n  }, {\n    key: \"findClosestPointIndex\",\n    value: function findClosestPointIndex(xPos) {\n      var minIndex = 0;\n      var maxIndex = this.xSet.length - 1;\n      var minDiff = Number.MAX_VALUE;\n      var closestIndex = 0;\n\n      while (minIndex <= maxIndex) {\n        var currentIndex = (minIndex + maxIndex) / 2 | 0;\n        var currentElement = this.xScale(this.xSet[currentIndex]);\n        var curDiff = Math.abs(currentElement - xPos);\n\n        if (curDiff < minDiff) {\n          minDiff = curDiff;\n          closestIndex = currentIndex;\n        }\n\n        if (currentElement < xPos) {\n          minIndex = currentIndex + 1;\n        } else if (currentElement > xPos) {\n          maxIndex = currentIndex - 1;\n        } else {\n          minDiff = 0;\n          closestIndex = currentIndex;\n          break;\n        }\n      }\n\n      return closestIndex;\n    }\n  }, {\n    key: \"showTooltip\",\n    value: function showTooltip() {\n      var event = createMouseEvent('mouseenter');\n      this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    }\n  }, {\n    key: \"hideTooltip\",\n    value: function hideTooltip() {\n      var event = createMouseEvent('mouseleave');\n      this.tooltipAnchor.nativeElement.dispatchEvent(event);\n      this.anchorOpacity = 0;\n      this.lastAnchorPos = -1;\n    }\n  }, {\n    key: \"getToolTipText\",\n    value: function getToolTipText(tooltipItem) {\n      var result = '';\n\n      if (tooltipItem.series !== undefined) {\n        result += tooltipItem.series;\n      } else {\n        result += '???';\n      }\n\n      result += ': ';\n\n      if (tooltipItem.value !== undefined) {\n        result += tooltipItem.value.toLocaleString();\n      }\n\n      if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n        result += ' (';\n\n        if (tooltipItem.min !== undefined) {\n          if (tooltipItem.max === undefined) {\n            result += '≥';\n          }\n\n          result += tooltipItem.min.toLocaleString();\n\n          if (tooltipItem.max !== undefined) {\n            result += ' - ';\n          }\n        } else if (tooltipItem.max !== undefined) {\n          result += '≤';\n        }\n\n        if (tooltipItem.max !== undefined) {\n          result += tooltipItem.max.toLocaleString();\n        }\n\n        result += ')';\n      }\n\n      return result;\n    }\n  }]);\n\n  return TooltipArea;\n}();\n\nTooltipArea.ɵfac = function TooltipArea_Factory(t) {\n  return new (t || TooltipArea)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nTooltipArea.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TooltipArea,\n  selectors: [[\"g\", \"ngx-charts-tooltip-area\", \"\"]],\n  viewQuery: function TooltipArea_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c18, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipAnchor = _t.first);\n    }\n  },\n  inputs: {\n    dims: \"dims\",\n    xSet: \"xSet\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    results: \"results\",\n    colors: \"colors\",\n    showPercentage: \"showPercentage\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    hover: \"hover\"\n  },\n  attrs: _c19,\n  decls: 6,\n  vars: 18,\n  consts: [[\"y\", \"0\", 1, \"tooltip-area\", 2, \"opacity\", \"0\", \"cursor\", \"auto\", 3, \"mousemove\", \"mouseleave\"], [\"defaultTooltipTemplate\", \"\"], [\"y\", \"0\", \"ngx-tooltip\", \"\", 1, \"tooltip-anchor\", 3, \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipSpacing\", \"tooltipTemplate\", \"tooltipContext\", \"tooltipImmediateExit\"], [\"tooltipAnchor\", \"\"], [1, \"area-tooltip-container\"], [\"class\", \"tooltip-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"tooltip-item\"], [1, \"tooltip-item-color\"]],\n  template: function TooltipArea_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\")(1, \"rect\", 0);\n      i0.ɵɵlistener(\"mousemove\", function TooltipArea_Template__svg_rect_mousemove_1_listener($event) {\n        return ctx.mouseMove($event);\n      })(\"mouseleave\", function TooltipArea_Template__svg_rect_mouseleave_1_listener() {\n        return ctx.hideTooltip();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, TooltipArea__svg_ng_template_2_Template, 2, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelement(4, \"rect\", 2, 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      var _r0 = i0.ɵɵreference(3);\n\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"x\", 0)(\"width\", ctx.dims.width)(\"height\", ctx.dims.height);\n      i0.ɵɵadvance(3);\n      i0.ɵɵstyleProp(\"opacity\", ctx.anchorOpacity)(\"pointer-events\", \"none\");\n      i0.ɵɵproperty(\"@animationState\", ctx.anchorOpacity !== 0 ? \"active\" : \"inactive\")(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.placementTypes.Right)(\"tooltipType\", ctx.styleTypes.tooltip)(\"tooltipSpacing\", 15)(\"tooltipTemplate\", ctx.tooltipTemplate ? ctx.tooltipTemplate : _r0)(\"tooltipContext\", ctx.anchorValues)(\"tooltipImmediateExit\", true);\n      i0.ɵɵattribute(\"x\", ctx.anchorPos)(\"width\", 1)(\"height\", ctx.dims.height);\n    }\n  },\n  dependencies: [i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition('inactive => active', [style({\n      opacity: 0\n    }), animate(250, style({\n      opacity: 0.7\n    }))]), transition('active => inactive', [style({\n      opacity: 0.7\n    }), animate(250, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipArea, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tooltip-area]',\n      template: \"\\n    <svg:g>\\n      <svg:rect\\n        class=\\\"tooltip-area\\\"\\n        [attr.x]=\\\"0\\\"\\n        y=\\\"0\\\"\\n        [attr.width]=\\\"dims.width\\\"\\n        [attr.height]=\\\"dims.height\\\"\\n        style=\\\"opacity: 0; cursor: 'auto';\\\"\\n        (mousemove)=\\\"mouseMove($event)\\\"\\n        (mouseleave)=\\\"hideTooltip()\\\"\\n      />\\n      <ng-template #defaultTooltipTemplate let-model=\\\"model\\\">\\n        <xhtml:div class=\\\"area-tooltip-container\\\">\\n          <xhtml:div *ngFor=\\\"let tooltipItem of model\\\" class=\\\"tooltip-item\\\">\\n            <xhtml:span class=\\\"tooltip-item-color\\\" [style.background-color]=\\\"tooltipItem.color\\\"></xhtml:span>\\n            {{ getToolTipText(tooltipItem) }}\\n          </xhtml:div>\\n        </xhtml:div>\\n      </ng-template>\\n      <svg:rect\\n        #tooltipAnchor\\n        [@animationState]=\\\"anchorOpacity !== 0 ? 'active' : 'inactive'\\\"\\n        class=\\\"tooltip-anchor\\\"\\n        [attr.x]=\\\"anchorPos\\\"\\n        y=\\\"0\\\"\\n        [attr.width]=\\\"1\\\"\\n        [attr.height]=\\\"dims.height\\\"\\n        [style.opacity]=\\\"anchorOpacity\\\"\\n        [style.pointer-events]=\\\"'none'\\\"\\n        ngx-tooltip\\n        [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n        [tooltipPlacement]=\\\"placementTypes.Right\\\"\\n        [tooltipType]=\\\"styleTypes.tooltip\\\"\\n        [tooltipSpacing]=\\\"15\\\"\\n        [tooltipTemplate]=\\\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\\\"\\n        [tooltipContext]=\\\"anchorValues\\\"\\n        [tooltipImmediateExit]=\\\"true\\\"\\n      />\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition('inactive => active', [style({\n        opacity: 0\n      }), animate(250, style({\n        opacity: 0.7\n      }))]), transition('active => inactive', [style({\n        opacity: 0.7\n      }), animate(250, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    dims: [{\n      type: Input\n    }],\n    xSet: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    showPercentage: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    hover: [{\n      type: Output\n    }],\n    tooltipAnchor: [{\n      type: ViewChild,\n      args: ['tooltipAnchor', {\n        static: false\n      }]\n    }]\n  });\n})();\n\nvar Timeline = /*#__PURE__*/function () {\n  function Timeline(element, cd) {\n    _classCallCheck(this, Timeline);\n\n    this.cd = cd;\n    this.height = 50;\n    this.select = new EventEmitter();\n    this.onDomainChange = new EventEmitter();\n    this.initialized = false;\n    this.element = element.nativeElement;\n  }\n\n  _createClass(Timeline, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n\n      if (!this.initialized) {\n        this.addBrush();\n        this.initialized = true;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.dims = this.getDims();\n      this.height = this.dims.height;\n      var offsetY = this.view[1] - this.height;\n      this.xDomain = this.getXDomain();\n      this.xScale = this.getXScale();\n\n      if (this.brush) {\n        this.updateBrush();\n      }\n\n      this.transform = \"translate(0 , \".concat(offsetY, \")\");\n      this.filterId = 'filter' + id().toString();\n      this.filter = \"url(#\".concat(this.filterId, \")\");\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"getXDomain\",\n    value: function getXDomain() {\n      var values = [];\n\n      var _iterator7 = _createForOfIteratorHelper(this.results),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var results = _step7.value;\n\n          var _iterator8 = _createForOfIteratorHelper(results.series),\n              _step8;\n\n          try {\n            for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n              var d = _step8.value;\n\n              if (!values.includes(d.name)) {\n                values.push(d.name);\n              }\n            }\n          } catch (err) {\n            _iterator8.e(err);\n          } finally {\n            _iterator8.f();\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      var domain = [];\n\n      if (this.scaleType === ScaleType.Time) {\n        var _min = Math.min.apply(Math, _toConsumableArray(values));\n\n        var _max = Math.max.apply(Math, _toConsumableArray(values));\n\n        domain = [_min, _max];\n      } else if (this.scaleType === ScaleType.Linear) {\n        values = values.map(function (v) {\n          return Number(v);\n        });\n\n        var _min2 = Math.min.apply(Math, _toConsumableArray(values));\n\n        var _max2 = Math.max.apply(Math, _toConsumableArray(values));\n\n        domain = [_min2, _max2];\n      } else {\n        domain = values;\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getXScale\",\n    value: function getXScale() {\n      var scale;\n\n      if (this.scaleType === ScaleType.Time) {\n        scale = scaleTime().range([0, this.dims.width]).domain(this.xDomain);\n      } else if (this.scaleType === ScaleType.Linear) {\n        scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n      } else if (this.scaleType === ScaleType.Ordinal) {\n        scale = scalePoint().range([0, this.dims.width]).padding(0.1).domain(this.xDomain);\n      }\n\n      return scale;\n    }\n  }, {\n    key: \"addBrush\",\n    value: function addBrush() {\n      var _this22 = this;\n\n      if (this.brush) return;\n      var height = this.height;\n      var width = this.view[0];\n      this.brush = brushX().extent([[0, 0], [width, height]]).on('brush end', function (_ref7) {\n        var selection = _ref7.selection;\n\n        var newSelection = selection || _this22.xScale.range();\n\n        var newDomain = newSelection.map(_this22.xScale.invert);\n\n        _this22.onDomainChange.emit(newDomain);\n\n        _this22.cd.markForCheck();\n      });\n      select(this.element).select('.brush').call(this.brush);\n    }\n  }, {\n    key: \"updateBrush\",\n    value: function updateBrush() {\n      if (!this.brush) return;\n      var height = this.height;\n      var width = this.view[0];\n      this.brush.extent([[0, 0], [width, height]]);\n      select(this.element).select('.brush').call(this.brush); // clear hardcoded properties so they can be defined by CSS\n\n      select(this.element).select('.selection').attr('fill', undefined).attr('stroke', undefined).attr('fill-opacity', undefined);\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"getDims\",\n    value: function getDims() {\n      var width = this.view[0];\n      var dims = {\n        width: width,\n        height: this.height\n      };\n      return dims;\n    }\n  }]);\n\n  return Timeline;\n}();\n\nTimeline.ɵfac = function Timeline_Factory(t) {\n  return new (t || Timeline)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nTimeline.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Timeline,\n  selectors: [[\"g\", \"ngx-charts-timeline\", \"\"]],\n  inputs: {\n    view: \"view\",\n    results: \"results\",\n    scheme: \"scheme\",\n    customColors: \"customColors\",\n    legend: \"legend\",\n    autoScale: \"autoScale\",\n    scaleType: \"scaleType\",\n    height: \"height\"\n  },\n  outputs: {\n    select: \"select\",\n    onDomainChange: \"onDomainChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c20,\n  ngContentSelectors: _c2,\n  decls: 7,\n  vars: 4,\n  consts: [[1, \"timeline\"], [\"in\", \"SourceGraphic\", \"type\", \"matrix\", \"values\", \"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"], [1, \"embedded-chart\"], [\"x\", \"0\", \"y\", \"0\", 1, \"brush-background\"], [1, \"brush\"]],\n  template: function Timeline_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0)(1, \"filter\");\n      i0.ɵɵelement(2, \"feColorMatrix\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"g\", 2);\n      i0.ɵɵprojection(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"rect\", 3)(6, \"g\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"id\", ctx.filterId);\n      i0.ɵɵadvance(4);\n      i0.ɵɵattribute(\"width\", ctx.view[0])(\"height\", ctx.height);\n    }\n  },\n  styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Timeline, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-timeline]',\n      template: \"\\n    <svg:g class=\\\"timeline\\\" [attr.transform]=\\\"transform\\\">\\n      <svg:filter [attr.id]=\\\"filterId\\\">\\n        <svg:feColorMatrix\\n          in=\\\"SourceGraphic\\\"\\n          type=\\\"matrix\\\"\\n          values=\\\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\\\"\\n        />\\n      </svg:filter>\\n      <svg:g class=\\\"embedded-chart\\\">\\n        <ng-content></ng-content>\\n      </svg:g>\\n      <svg:rect x=\\\"0\\\" [attr.width]=\\\"view[0]\\\" y=\\\"0\\\" [attr.height]=\\\"height\\\" class=\\\"brush-background\\\" />\\n      <svg:g class=\\\"brush\\\"></svg:g>\\n    </svg:g>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    view: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    scheme: [{\n      type: Input\n    }],\n    customColors: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    onDomainChange: [{\n      type: Output\n    }]\n  });\n})();\n\nvar AdvancedLegendComponent = /*#__PURE__*/function () {\n  function AdvancedLegendComponent() {\n    _classCallCheck(this, AdvancedLegendComponent);\n\n    this.label = 'Total';\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.legendItems = [];\n\n    this.labelFormatting = function (label) {\n      return label;\n    };\n\n    this.percentageFormatting = function (percentage) {\n      return percentage;\n    };\n\n    this.defaultValueFormatting = function (value) {\n      return value.toLocaleString();\n    };\n  }\n\n  _createClass(AdvancedLegendComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"getTotal\",\n    value: function getTotal() {\n      return this.data.map(function (d) {\n        return Number(d.value);\n      }).reduce(function (sum, d) {\n        return sum + d;\n      }, 0);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.total = this.getTotal();\n      this.roundedTotal = this.total;\n      this.legendItems = this.getLegendItems();\n    }\n  }, {\n    key: \"getLegendItems\",\n    value: function getLegendItems() {\n      var _this23 = this;\n\n      return this.data.map(function (d) {\n        var label = formatLabel(d.name);\n        var value = d.value;\n\n        var color = _this23.colors.getColor(label);\n\n        var percentage = _this23.total > 0 ? value / _this23.total * 100 : 0;\n        var formattedLabel = typeof _this23.labelFormatting === 'function' ? _this23.labelFormatting(label) : label;\n        return {\n          _value: value,\n          data: d,\n          value: value,\n          color: color,\n          label: formattedLabel,\n          displayLabel: trimLabel(formattedLabel, 20),\n          origialLabel: d.name,\n          percentage: _this23.percentageFormatting ? _this23.percentageFormatting(percentage) : percentage.toLocaleString()\n        };\n      });\n    }\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, item) {\n      return item.label;\n    }\n  }]);\n\n  return AdvancedLegendComponent;\n}();\n\nAdvancedLegendComponent.ɵfac = function AdvancedLegendComponent_Factory(t) {\n  return new (t || AdvancedLegendComponent)();\n};\n\nAdvancedLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AdvancedLegendComponent,\n  selectors: [[\"ngx-charts-advanced-legend\"]],\n  inputs: {\n    width: \"width\",\n    data: \"data\",\n    colors: \"colors\",\n    label: \"label\",\n    animations: \"animations\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    percentageFormatting: \"percentageFormatting\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 7,\n  consts: [[1, \"advanced-pie-legend\"], [\"class\", \"total-value\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"total-value\", 4, \"ngIf\"], [1, \"total-label\"], [1, \"legend-items-container\"], [1, \"legend-items\"], [\"tabindex\", \"-1\", \"class\", \"legend-item\", 3, \"mouseenter\", \"mouseleave\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-count-up\", \"\", 1, \"total-value\", 3, \"countTo\", \"valueFormatting\"], [1, \"total-value\"], [\"tabindex\", \"-1\", 1, \"legend-item\", 3, \"mouseenter\", \"mouseleave\", \"click\"], [1, \"item-color\"], [\"class\", \"item-value\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"item-value\", 4, \"ngIf\"], [1, \"item-label\"], [\"class\", \"item-percent\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"countSuffix\", 4, \"ngIf\"], [\"class\", \"item-percent\", 4, \"ngIf\"], [\"ngx-charts-count-up\", \"\", 1, \"item-value\", 3, \"countTo\", \"valueFormatting\"], [1, \"item-value\"], [\"ngx-charts-count-up\", \"\", 1, \"item-percent\", 3, \"countTo\", \"countSuffix\"], [1, \"item-percent\"]],\n  template: function AdvancedLegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, AdvancedLegendComponent_div_1_Template, 1, 2, \"div\", 1);\n      i0.ɵɵtemplate(2, AdvancedLegendComponent_div_2_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5);\n      i0.ɵɵtemplate(7, AdvancedLegendComponent_div_7_Template, 8, 7, \"div\", 6);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.label, \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.legendItems)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [CountUpDirective, i2.NgIf, i2.NgForOf],\n  styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AdvancedLegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-advanced-legend',\n      template: \"\\n    <div class=\\\"advanced-pie-legend\\\" [style.width.px]=\\\"width\\\">\\n      <div\\n        *ngIf=\\\"animations\\\"\\n        class=\\\"total-value\\\"\\n        ngx-charts-count-up\\n        [countTo]=\\\"roundedTotal\\\"\\n        [valueFormatting]=\\\"valueFormatting\\\"\\n      ></div>\\n      <div class=\\\"total-value\\\" *ngIf=\\\"!animations\\\">\\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\\n      </div>\\n      <div class=\\\"total-label\\\">\\n        {{ label }}\\n      </div>\\n      <div class=\\\"legend-items-container\\\">\\n        <div class=\\\"legend-items\\\">\\n          <div\\n            *ngFor=\\\"let legendItem of legendItems; trackBy: trackBy\\\"\\n            tabindex=\\\"-1\\\"\\n            class=\\\"legend-item\\\"\\n            (mouseenter)=\\\"activate.emit(legendItem.data)\\\"\\n            (mouseleave)=\\\"deactivate.emit(legendItem.data)\\\"\\n            (click)=\\\"select.emit(legendItem.data)\\\"\\n          >\\n            <div class=\\\"item-color\\\" [style.border-left-color]=\\\"legendItem.color\\\"></div>\\n            <div\\n              *ngIf=\\\"animations\\\"\\n              class=\\\"item-value\\\"\\n              ngx-charts-count-up\\n              [countTo]=\\\"legendItem._value\\\"\\n              [valueFormatting]=\\\"valueFormatting\\\"\\n            ></div>\\n            <div *ngIf=\\\"!animations\\\" class=\\\"item-value\\\">\\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\\n            </div>\\n            <div class=\\\"item-label\\\">{{ legendItem.displayLabel }}</div>\\n            <div\\n              *ngIf=\\\"animations\\\"\\n              class=\\\"item-percent\\\"\\n              ngx-charts-count-up\\n              [countTo]=\\\"legendItem.percentage\\\"\\n              [countSuffix]=\\\"'%'\\\"\\n            ></div>\\n            <div *ngIf=\\\"!animations\\\" class=\\\"item-percent\\\">{{ legendItem.percentage.toLocaleString() }}%</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"]\n    }]\n  }], null, {\n    width: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    percentageFormatting: [{\n      type: Input\n    }]\n  });\n})();\n\nvar COMPONENTS = [AreaComponent, BaseChartComponent, CountUpDirective, TooltipArea, ChartComponent, LegendComponent, LegendEntryComponent, ScaleLegendComponent, CircleComponent, CircleSeriesComponent, GridPanelComponent, GridPanelSeriesComponent, SvgLinearGradientComponent, SvgRadialGradientComponent, Timeline, AdvancedLegendComponent];\n\nvar ChartCommonModule = /*#__PURE__*/_createClass(function ChartCommonModule() {\n  _classCallCheck(this, ChartCommonModule);\n});\n\nChartCommonModule.ɵfac = function ChartCommonModule_Factory(t) {\n  return new (t || ChartCommonModule)();\n};\n\nChartCommonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ChartCommonModule\n});\nChartCommonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, AxesModule, TooltipModule], CommonModule, AxesModule, TooltipModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, AxesModule, TooltipModule],\n      declarations: [].concat(COMPONENTS, [VisibilityObserver]),\n      exports: [CommonModule, AxesModule, TooltipModule].concat(COMPONENTS, [VisibilityObserver])\n    }]\n  }], null, null);\n})();\n\nfunction calculateViewDimensions(_ref8) {\n  var width = _ref8.width,\n      height = _ref8.height,\n      margins = _ref8.margins,\n      _ref8$showXAxis = _ref8.showXAxis,\n      showXAxis = _ref8$showXAxis === void 0 ? false : _ref8$showXAxis,\n      _ref8$showYAxis = _ref8.showYAxis,\n      showYAxis = _ref8$showYAxis === void 0 ? false : _ref8$showYAxis,\n      _ref8$xAxisHeight = _ref8.xAxisHeight,\n      xAxisHeight = _ref8$xAxisHeight === void 0 ? 0 : _ref8$xAxisHeight,\n      _ref8$yAxisWidth = _ref8.yAxisWidth,\n      yAxisWidth = _ref8$yAxisWidth === void 0 ? 0 : _ref8$yAxisWidth,\n      _ref8$showXLabel = _ref8.showXLabel,\n      showXLabel = _ref8$showXLabel === void 0 ? false : _ref8$showXLabel,\n      _ref8$showYLabel = _ref8.showYLabel,\n      showYLabel = _ref8$showYLabel === void 0 ? false : _ref8$showYLabel,\n      _ref8$showLegend = _ref8.showLegend,\n      showLegend = _ref8$showLegend === void 0 ? false : _ref8$showLegend,\n      _ref8$legendType = _ref8.legendType,\n      legendType = _ref8$legendType === void 0 ? ScaleType.Ordinal : _ref8$legendType,\n      _ref8$legendPosition = _ref8.legendPosition,\n      legendPosition = _ref8$legendPosition === void 0 ? LegendPosition.Right : _ref8$legendPosition,\n      _ref8$columns = _ref8.columns,\n      columns = _ref8$columns === void 0 ? 12 : _ref8$columns;\n  var xOffset = margins[3];\n  var chartWidth = width;\n  var chartHeight = height - margins[0] - margins[2];\n\n  if (showLegend && legendPosition === LegendPosition.Right) {\n    if (legendType === ScaleType.Ordinal) {\n      columns -= 2;\n    } else {\n      columns -= 1;\n    }\n  }\n\n  chartWidth = chartWidth * columns / 12;\n  chartWidth = chartWidth - margins[1] - margins[3];\n\n  if (showXAxis) {\n    chartHeight -= 5;\n    chartHeight -= xAxisHeight;\n\n    if (showXLabel) {\n      // text height + spacing between axis label and tick labels\n      var offset = 25 + 5;\n      chartHeight -= offset;\n    }\n  }\n\n  if (showYAxis) {\n    chartWidth -= 5;\n    chartWidth -= yAxisWidth;\n    xOffset += yAxisWidth;\n    xOffset += 10;\n\n    if (showYLabel) {\n      // text height + spacing between axis label and tick labels\n      var _offset = 25 + 5;\n\n      chartWidth -= _offset;\n      xOffset += _offset;\n    }\n  }\n\n  chartWidth = Math.max(0, chartWidth);\n  chartHeight = Math.max(0, chartHeight);\n  return {\n    width: Math.floor(chartWidth),\n    height: Math.floor(chartHeight),\n    xOffset: Math.floor(xOffset)\n  };\n}\n\nvar colorSets = [{\n  name: 'vivid',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#647c8a', '#3f51b5', '#2196f3', '#00b862', '#afdf0a', '#a7b61a', '#f3e562', '#ff9800', '#ff5722', '#ff4514']\n}, {\n  name: 'natural',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#bf9d76', '#e99450', '#d89f59', '#f2dfa7', '#a5d7c6', '#7794b1', '#afafaf', '#707160', '#ba9383', '#d9d5c3']\n}, {\n  name: 'cool',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#a8385d', '#7aa3e5', '#a27ea8', '#aae3f5', '#adcded', '#a95963', '#8796c0', '#7ed3ed', '#50abcc', '#ad6886']\n}, {\n  name: 'fire',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\n}, {\n  name: 'solar',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00']\n}, {\n  name: 'air',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b']\n}, {\n  name: 'aqua',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064']\n}, {\n  name: 'flame',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#A10A28', '#D3342D', '#EF6D49', '#FAAD67', '#FDDE90', '#DBED91', '#A9D770', '#6CBA67', '#2C9653', '#146738']\n}, {\n  name: 'ocean',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#1D68FB', '#33C0FC', '#4AFFFE', '#AFFFFF', '#FFFC63', '#FDBD2D', '#FC8A25', '#FA4F1E', '#FA141B', '#BA38D1']\n}, {\n  name: 'forest',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#55C22D', '#C1F33D', '#3CC099', '#AFFFFF', '#8CFC9D', '#76CFFA', '#BA60FB', '#EE6490', '#C42A1C', '#FC9F32']\n}, {\n  name: 'horizon',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#2597FB', '#65EBFD', '#99FDD0', '#FCEE4B', '#FEFCFA', '#FDD6E3', '#FCB1A8', '#EF6F7B', '#CB96E8', '#EFDEE0']\n}, {\n  name: 'neons',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#FF3333', '#FF33FF', '#CC33FF', '#0000FF', '#33CCFF', '#33FFFF', '#33FF66', '#CCFF33', '#FFCC00', '#FF6600']\n}, {\n  name: 'picnic',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#FAC51D', '#66BD6D', '#FAA026', '#29BB9C', '#E96B56', '#55ACD2', '#B7332F', '#2C83C9', '#9166B8', '#92E7E8']\n}, {\n  name: 'night',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#2B1B5A', '#501356', '#183356', '#28203F', '#391B3C', '#1E2B3C', '#120634', '#2D0432', '#051932', '#453080', '#75267D', '#2C507D', '#4B3880', '#752F7D', '#35547D']\n}, {\n  name: 'nightLights',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#4e31a5', '#9c25a7', '#3065ab', '#57468b', '#904497', '#46648b', '#32118d', '#a00fb3', '#1052a2', '#6e51bd', '#b63cc3', '#6c97cb', '#8671c1', '#b455be', '#7496c3']\n}];\n\nvar ColorHelper = /*#__PURE__*/function () {\n  function ColorHelper(scheme, type, domain, customColors) {\n    _classCallCheck(this, ColorHelper);\n\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(function (cs) {\n        return cs.name === scheme;\n      });\n    }\n\n    this.colorDomain = scheme.domain;\n    this.scaleType = type;\n    this.domain = domain;\n    this.customColors = customColors;\n    this.scale = this.generateColorScheme(scheme, type, this.domain);\n  }\n\n  _createClass(ColorHelper, [{\n    key: \"generateColorScheme\",\n    value: function generateColorScheme(scheme, type, domain) {\n      if (typeof scheme === 'string') {\n        scheme = colorSets.find(function (cs) {\n          return cs.name === scheme;\n        });\n      }\n\n      var colorScale;\n\n      switch (type) {\n        case ScaleType.Quantile:\n          colorScale = scaleQuantile().range(scheme.domain).domain(domain);\n          break;\n\n        case ScaleType.Ordinal:\n          colorScale = scaleOrdinal().range(scheme.domain).domain(domain);\n          break;\n\n        case ScaleType.Linear:\n          {\n            var colorDomain = _toConsumableArray(scheme.domain);\n\n            if (colorDomain.length === 1) {\n              colorDomain.push(colorDomain[0]);\n              this.colorDomain = colorDomain;\n            }\n\n            var points = range(0, 1, 1.0 / colorDomain.length);\n            colorScale = scaleLinear().range(colorDomain).domain(points);\n          }\n          break;\n\n        default:\n          break;\n      }\n\n      return colorScale;\n    }\n  }, {\n    key: \"getColor\",\n    value: function getColor(value) {\n      if (value === undefined || value === null) {\n        throw new Error('Value can not be null');\n      }\n\n      if (this.scaleType === ScaleType.Linear) {\n        var valueScale = scaleLinear().domain(this.domain).range([0, 1]);\n        return this.scale(valueScale(value));\n      } else {\n        if (typeof this.customColors === 'function') {\n          return this.customColors(value);\n        }\n\n        var formattedValue = value.toString();\n        var found; // todo type customColors\n\n        if (this.customColors && this.customColors.length > 0) {\n          found = this.customColors.find(function (mapping) {\n            return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n          });\n        }\n\n        if (found) {\n          return found.value;\n        } else {\n          return this.scale(value);\n        }\n      }\n    }\n  }, {\n    key: \"getLinearGradientStops\",\n    value: function getLinearGradientStops(value, start) {\n      if (start === undefined) {\n        start = this.domain[0];\n      }\n\n      var valueScale = scaleLinear().domain(this.domain).range([0, 1]);\n      var colorValueScale = scaleBand().domain(this.colorDomain).range([0, 1]);\n      var endColor = this.getColor(value); // generate the stops\n\n      var startVal = valueScale(start);\n      var startColor = this.getColor(start);\n      var endVal = valueScale(value);\n      var i = 1;\n      var currentVal = startVal;\n      var stops = [];\n      stops.push({\n        color: startColor,\n        offset: startVal,\n        originalOffset: startVal,\n        opacity: 1\n      });\n\n      while (currentVal < endVal && i < this.colorDomain.length) {\n        var color = this.colorDomain[i];\n        var offset = colorValueScale(color);\n\n        if (offset <= startVal) {\n          i++;\n          continue;\n        }\n\n        if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n          break;\n        }\n\n        stops.push({\n          color: color,\n          offset: offset,\n          opacity: 1\n        });\n        currentVal = offset;\n        i++;\n      }\n\n      if (stops[stops.length - 1].offset < 100) {\n        stops.push({\n          color: endColor,\n          offset: endVal,\n          opacity: 1\n        });\n      }\n\n      if (endVal === startVal) {\n        stops[0].offset = 0;\n        stops[1].offset = 100;\n      } else {\n        // normalize the offsets into percentages\n        if (stops[stops.length - 1].offset !== 100) {\n          var _iterator9 = _createForOfIteratorHelper(stops),\n              _step9;\n\n          try {\n            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n              var s = _step9.value;\n              s.offset = (s.offset - startVal) / (endVal - startVal) * 100;\n            }\n          } catch (err) {\n            _iterator9.e(err);\n          } finally {\n            _iterator9.f();\n          }\n        }\n      }\n\n      return stops;\n    }\n  }]);\n\n  return ColorHelper;\n}();\n/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n */\n\n\nfunction getUniqueXDomainValues(results) {\n  var valueSet = new Set();\n\n  var _iterator10 = _createForOfIteratorHelper(results),\n      _step10;\n\n  try {\n    for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n      var result = _step10.value;\n\n      var _iterator11 = _createForOfIteratorHelper(result.series),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var d = _step11.value;\n          valueSet.add(d.name);\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    }\n  } catch (err) {\n    _iterator10.e(err);\n  } finally {\n    _iterator10.f();\n  }\n\n  return Array.from(valueSet);\n}\n/**\n * Get the scaleType of enumerable of values.\n * @returns  'time', 'linear' or 'ordinal'\n */\n\n\nfunction getScaleType(values) {\n  var checkDateType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (checkDateType) {\n    var allDates = values.every(function (value) {\n      return value instanceof Date;\n    });\n\n    if (allDates) {\n      return ScaleType.Time;\n    }\n  }\n\n  var allNumbers = values.every(function (value) {\n    return typeof value === 'number';\n  });\n\n  if (allNumbers) {\n    return ScaleType.Linear;\n  }\n\n  return ScaleType.Ordinal;\n}\n\nfunction getXDomainArray(values, xScaleMin, xScaleMax) {\n  var scaleType = getScaleType(values);\n  var xSet = [];\n  var domain = [];\n\n  if (scaleType === ScaleType.Linear) {\n    values = values.map(function (v) {\n      return Number(v);\n    });\n  }\n\n  var min;\n  var max;\n\n  if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n    var mappedValues = values.map(function (v) {\n      return Number(v);\n    });\n    min = xScaleMin ? xScaleMin : Math.min.apply(Math, _toConsumableArray(mappedValues));\n    max = xScaleMax ? xScaleMax : Math.max.apply(Math, _toConsumableArray(mappedValues));\n  }\n\n  if (scaleType === ScaleType.Time) {\n    domain = [new Date(min), new Date(max)];\n    xSet = _toConsumableArray(values).sort(function (a, b) {\n      var aDate = a.getTime();\n      var bDate = b.getTime();\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    });\n  } else if (scaleType === ScaleType.Linear) {\n    domain = [min, max]; // Use compare function to sort numbers numerically\n\n    xSet = _toConsumableArray(values).sort(function (a, b) {\n      return a - b;\n    });\n  } else {\n    domain = values;\n    xSet = values;\n  }\n\n  return {\n    domain: domain,\n    xSet: xSet,\n    scaleType: scaleType\n  };\n}\n\nfunction sortLinear(data, property) {\n  var direction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'asc';\n  return data.sort(function (a, b) {\n    if (direction === 'asc') {\n      return a[property] - b[property];\n    } else {\n      return b[property] - a[property];\n    }\n  });\n}\n\nfunction sortByDomain(data, property) {\n  var direction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'asc';\n  var domain = arguments.length > 3 ? arguments[3] : undefined;\n  return data.sort(function (a, b) {\n    var aVal = a[property];\n    var bVal = b[property];\n    var aIdx = domain.indexOf(aVal);\n    var bIdx = domain.indexOf(bVal);\n\n    if (direction === 'asc') {\n      return aIdx - bIdx;\n    } else {\n      return bIdx - aIdx;\n    }\n  });\n}\n\nfunction sortByTime(data, property) {\n  var direction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'asc';\n  return data.sort(function (a, b) {\n    var aDate = a[property].getTime();\n    var bDate = b[property].getTime();\n\n    if (direction === 'asc') {\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    } else {\n      if (aDate > bDate) return -1;\n      if (bDate > aDate) return 1;\n      return 0;\n    }\n  });\n}\n\nvar AreaSeriesComponent = /*#__PURE__*/function () {\n  function AreaSeriesComponent() {\n    _classCallCheck(this, AreaSeriesComponent);\n\n    this.baseValue = 'auto';\n    this.stacked = false;\n    this.normalized = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n\n  _createClass(AreaSeriesComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this24 = this;\n\n      this.updateGradient();\n      var currentArea;\n      var startingArea;\n\n      var xProperty = function xProperty(d) {\n        var label = d.name;\n        return _this24.xScale(label);\n      };\n\n      if (this.stacked || this.normalized) {\n        currentArea = area().x(xProperty).y0(function (d, i) {\n          return _this24.yScale(d.d0);\n        }).y1(function (d, i) {\n          return _this24.yScale(d.d1);\n        });\n        startingArea = area().x(xProperty).y0(function (d) {\n          return _this24.yScale.range()[0];\n        }).y1(function (d) {\n          return _this24.yScale.range()[0];\n        });\n      } else {\n        currentArea = area().x(xProperty).y0(function () {\n          return _this24.baseValue === 'auto' ? _this24.yScale.range()[0] : _this24.yScale(_this24.baseValue);\n        }).y1(function (d) {\n          return _this24.yScale(d.value);\n        });\n        startingArea = area().x(xProperty).y0(function (d) {\n          return _this24.baseValue === 'auto' ? _this24.yScale.range()[0] : _this24.yScale(_this24.baseValue);\n        }).y1(function (d) {\n          return _this24.baseValue === 'auto' ? _this24.yScale.range()[0] : _this24.yScale(_this24.baseValue);\n        });\n      }\n\n      currentArea.curve(this.curve);\n      startingArea.curve(this.curve);\n      this.opacity = 0.8;\n      var data = this.data.series;\n\n      if (this.scaleType === ScaleType.Linear) {\n        data = sortLinear(data, 'name');\n      } else if (this.scaleType === ScaleType.Time) {\n        data = sortByTime(data, 'name');\n      } else {\n        data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n      }\n\n      this.path = currentArea(data);\n      this.startingPath = startingArea(data);\n    }\n  }, {\n    key: \"updateGradient\",\n    value: function updateGradient() {\n      if (this.colors.scaleType === ScaleType.Linear) {\n        this.hasGradient = true;\n\n        if (this.stacked || this.normalized) {\n          var d0values = this.data.series.map(function (d) {\n            return d.d0;\n          });\n          var d1values = this.data.series.map(function (d) {\n            return d.d1;\n          });\n\n          var _max3 = Math.max.apply(Math, _toConsumableArray(d1values));\n\n          var _min3 = Math.min.apply(Math, _toConsumableArray(d0values));\n\n          this.gradientStops = this.colors.getLinearGradientStops(_max3, _min3);\n        } else {\n          var values = this.data.series.map(function (d) {\n            return d.value;\n          });\n\n          var _max4 = Math.max.apply(Math, _toConsumableArray(values));\n\n          this.gradientStops = this.colors.getLinearGradientStops(_max4);\n        }\n      } else {\n        this.hasGradient = false;\n        this.gradientStops = undefined;\n      }\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive(entry) {\n      if (!this.activeEntries) return false;\n      var item = this.activeEntries.find(function (d) {\n        return entry.name === d.name;\n      });\n      return item !== undefined;\n    }\n  }, {\n    key: \"isInactive\",\n    value: function isInactive(entry) {\n      if (!this.activeEntries || this.activeEntries.length === 0) return false;\n      var item = this.activeEntries.find(function (d) {\n        return entry.name === d.name;\n      });\n      return item === undefined;\n    }\n  }]);\n\n  return AreaSeriesComponent;\n}();\n\nAreaSeriesComponent.ɵfac = function AreaSeriesComponent_Factory(t) {\n  return new (t || AreaSeriesComponent)();\n};\n\nAreaSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-area-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    baseValue: \"baseValue\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    stacked: \"stacked\",\n    normalized: \"normalized\",\n    gradient: \"gradient\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c21,\n  decls: 1,\n  vars: 12,\n  consts: [[\"ngx-charts-area\", \"\", 1, \"area-series\", 3, \"data\", \"path\", \"fill\", \"stops\", \"startingPath\", \"opacity\", \"gradient\", \"animations\"]],\n  template: function AreaSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.path)(\"fill\", ctx.colors.getColor(ctx.data.name))(\"stops\", ctx.gradientStops)(\"startingPath\", ctx.startingPath)(\"opacity\", ctx.opacity)(\"gradient\", ctx.gradient || ctx.hasGradient)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [AreaComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-area-series]',\n      template: \"\\n    <svg:g\\n      ngx-charts-area\\n      class=\\\"area-series\\\"\\n      [data]=\\\"data\\\"\\n      [path]=\\\"path\\\"\\n      [fill]=\\\"colors.getColor(data.name)\\\"\\n      [stops]=\\\"gradientStops\\\"\\n      [startingPath]=\\\"startingPath\\\"\\n      [opacity]=\\\"opacity\\\"\\n      [gradient]=\\\"gradient || hasGradient\\\"\\n      [animations]=\\\"animations\\\"\\n      [class.active]=\\\"isActive(data)\\\"\\n      [class.inactive]=\\\"isInactive(data)\\\"\\n    />\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    baseValue: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    stacked: [{\n      type: Input\n    }],\n    normalized: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\nvar AreaChartComponent = /*#__PURE__*/function (_BaseChartComponent) {\n  _inherits(AreaChartComponent, _BaseChartComponent);\n\n  var _super2 = _createSuper(AreaChartComponent);\n\n  function AreaChartComponent() {\n    var _this25;\n\n    _classCallCheck(this, AreaChartComponent);\n\n    _this25 = _super2.apply(this, arguments);\n    _this25.legend = false;\n    _this25.legendTitle = 'Legend';\n    _this25.legendPosition = LegendPosition.Right;\n    _this25.xAxis = false;\n    _this25.yAxis = false;\n    _this25.baseValue = 'auto';\n    _this25.autoScale = false;\n    _this25.timeline = false;\n    _this25.showGridLines = true;\n    _this25.curve = curveLinear;\n    _this25.activeEntries = [];\n    _this25.trimXAxisTicks = true;\n    _this25.trimYAxisTicks = true;\n    _this25.rotateXAxisTicks = true;\n    _this25.maxXAxisTickLength = 16;\n    _this25.maxYAxisTickLength = 16;\n    _this25.roundDomains = false;\n    _this25.tooltipDisabled = false;\n    _this25.activate = new EventEmitter();\n    _this25.deactivate = new EventEmitter();\n    _this25.margin = [10, 20, 10, 20];\n    _this25.xAxisHeight = 0;\n    _this25.yAxisWidth = 0;\n    _this25.timelineHeight = 50;\n    _this25.timelinePadding = 10;\n\n    _this25.trackBy = function (index, item) {\n      return item.name;\n    };\n\n    return _this25;\n  }\n\n  _createClass(AreaChartComponent, [{\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(AreaChartComponent.prototype), \"update\", this).call(this);\n\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n\n      if (this.timeline) {\n        this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n      }\n\n      this.xDomain = this.getXDomain();\n\n      if (this.filteredDomain) {\n        this.xDomain = this.filteredDomain;\n      }\n\n      this.yDomain = this.getYDomain();\n      this.seriesDomain = this.getSeriesDomain();\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n      this.yScale = this.getYScale(this.yDomain, this.dims.height);\n      this.updateTimeline();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \", \").concat(this.margin[0], \")\");\n      this.clipPathId = 'clip' + id().toString();\n      this.clipPath = \"url(#\".concat(this.clipPathId, \")\");\n    }\n  }, {\n    key: \"updateTimeline\",\n    value: function updateTimeline() {\n      if (this.timeline) {\n        this.timelineWidth = this.dims.width;\n        this.timelineXDomain = this.getXDomain();\n        this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n        this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n        this.timelineTransform = \"translate(\".concat(this.dims.xOffset, \", \").concat(-this.margin[2], \")\");\n      }\n    }\n  }, {\n    key: \"getXDomain\",\n    value: function getXDomain() {\n      var values = getUniqueXDomainValues(this.results);\n      this.scaleType = getScaleType(values);\n      var domain = [];\n\n      if (this.scaleType === ScaleType.Linear) {\n        values = values.map(function (v) {\n          return Number(v);\n        });\n      }\n\n      var min;\n      var max;\n\n      if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n        min = this.xScaleMin ? this.xScaleMin : Math.min.apply(Math, _toConsumableArray(values));\n        max = this.xScaleMax ? this.xScaleMax : Math.max.apply(Math, _toConsumableArray(values));\n      }\n\n      if (this.scaleType === ScaleType.Time) {\n        domain = [new Date(min), new Date(max)];\n        this.xSet = _toConsumableArray(values).sort(function (a, b) {\n          var aDate = a.getTime();\n          var bDate = b.getTime();\n          if (aDate > bDate) return 1;\n          if (bDate > aDate) return -1;\n          return 0;\n        });\n      } else if (this.scaleType === ScaleType.Linear) {\n        domain = [min, max]; // Use compare function to sort numbers numerically\n\n        this.xSet = _toConsumableArray(values).sort(function (a, b) {\n          return a - b;\n        });\n      } else {\n        domain = values;\n        this.xSet = values;\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getYDomain\",\n    value: function getYDomain() {\n      var domain = [];\n\n      var _iterator12 = _createForOfIteratorHelper(this.results),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var results = _step12.value;\n\n          var _iterator13 = _createForOfIteratorHelper(results.series),\n              _step13;\n\n          try {\n            for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n              var d = _step13.value;\n\n              if (!domain.includes(d.value)) {\n                domain.push(d.value);\n              }\n            }\n          } catch (err) {\n            _iterator13.e(err);\n          } finally {\n            _iterator13.f();\n          }\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n\n      var values = [].concat(domain);\n\n      if (!this.autoScale) {\n        values.push(0);\n      }\n\n      if (this.baseValue !== 'auto') {\n        values.push(this.baseValue);\n      }\n\n      var min = this.yScaleMin ? this.yScaleMin : Math.min.apply(Math, _toConsumableArray(values));\n      var max = this.yScaleMax ? this.yScaleMax : Math.max.apply(Math, _toConsumableArray(values));\n      return [min, max];\n    }\n  }, {\n    key: \"getSeriesDomain\",\n    value: function getSeriesDomain() {\n      return this.results.map(function (d) {\n        return d.name;\n      });\n    }\n  }, {\n    key: \"getXScale\",\n    value: function getXScale(domain, width) {\n      var scale;\n\n      if (this.scaleType === ScaleType.Time) {\n        scale = scaleTime();\n      } else if (this.scaleType === ScaleType.Linear) {\n        scale = scaleLinear();\n      } else if (this.scaleType === ScaleType.Ordinal) {\n        scale = scalePoint().padding(0.1);\n      }\n\n      scale.range([0, width]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"getYScale\",\n    value: function getYScale(domain, height) {\n      var scale = scaleLinear().range([height, 0]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"getScaleType\",\n    value: function getScaleType(values) {\n      var date = true;\n      var num = true;\n\n      var _iterator14 = _createForOfIteratorHelper(values),\n          _step14;\n\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var value = _step14.value;\n\n          if (isDate(value)) {\n            date = false;\n          }\n\n          if (isNumber(value)) {\n            num = false;\n          }\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n\n      if (date) {\n        return ScaleType.Time;\n      }\n\n      if (num) {\n        return ScaleType.Linear;\n      }\n\n      return ScaleType.Ordinal;\n    }\n  }, {\n    key: \"updateDomain\",\n    value: function updateDomain(domain) {\n      this.filteredDomain = domain;\n      this.xDomain = this.filteredDomain;\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n  }, {\n    key: \"updateHoveredVertical\",\n    value: function updateHoveredVertical(item) {\n      this.hoveredVertical = item.value;\n      this.deactivateAll();\n    }\n  }, {\n    key: \"hideCircles\",\n    value: function hideCircles() {\n      this.hoveredVertical = null;\n      this.deactivateAll();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data, series) {\n      if (series) {\n        data.series = series.name;\n      }\n\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      var domain;\n\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.seriesDomain;\n      } else {\n        domain = this.yDomain;\n      }\n\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      var opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.seriesDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.yDomain;\n        opts.colors = this.colors.scale;\n      }\n\n      return opts;\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref9) {\n      var width = _ref9.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref10) {\n      var height = _ref10.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(item) {\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value;\n      });\n\n      if (idx > -1) {\n        return;\n      }\n\n      this.activeEntries = [item].concat(_toConsumableArray(this.activeEntries));\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(item) {\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"deactivateAll\",\n    value: function deactivateAll() {\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n\n      var _iterator15 = _createForOfIteratorHelper(this.activeEntries),\n          _step15;\n\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var entry = _step15.value;\n          this.deactivate.emit({\n            value: entry,\n            entries: []\n          });\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n\n      this.activeEntries = [];\n    }\n  }]);\n\n  return AreaChartComponent;\n}(BaseChartComponent);\n\nAreaChartComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵAreaChartComponent_BaseFactory;\n  return function AreaChartComponent_Factory(t) {\n    return (ɵAreaChartComponent_BaseFactory || (ɵAreaChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartComponent)))(t || AreaChartComponent);\n  };\n}();\n\nAreaChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartComponent,\n  selectors: [[\"ngx-charts-area-chart\"]],\n  contentQueries: function AreaChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    baseValue: \"baseValue\",\n    autoScale: \"autoScale\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"gradient\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"curve\", \"animations\"]],\n  template: function AreaChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartComponent__svg_g_5_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(6, AreaChartComponent__svg_g_6_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartComponent__svg_g_8_Template, 2, 10, \"g\", 4);\n      i0.ɵɵtemplate(9, AreaChartComponent__svg_g_9_Template, 3, 9, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AreaChartComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:defs>\\n        <svg:clipPath [attr.id]=\\\"clipPathId\\\">\\n          <svg:rect\\n            [attr.width]=\\\"dims.width + 10\\\"\\n            [attr.height]=\\\"dims.height + 10\\\"\\n            [attr.transform]=\\\"'translate(-5, -5)'\\\"\\n          />\\n        </svg:clipPath>\\n      </svg:defs>\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"area-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g [attr.clip-path]=\\\"clipPath\\\">\\n          <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n            <svg:g\\n              ngx-charts-area-series\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [baseValue]=\\\"baseValue\\\"\\n              [colors]=\\\"colors\\\"\\n              [data]=\\\"series\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [scaleType]=\\\"scaleType\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [curve]=\\\"curve\\\"\\n              [animations]=\\\"animations\\\"\\n            />\\n          </svg:g>\\n\\n          <svg:g *ngIf=\\\"!tooltipDisabled\\\" (mouseleave)=\\\"hideCircles()\\\">\\n            <svg:g\\n              ngx-charts-tooltip-area\\n              [dims]=\\\"dims\\\"\\n              [xSet]=\\\"xSet\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [results]=\\\"results\\\"\\n              [colors]=\\\"colors\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"seriesTooltipTemplate\\\"\\n              (hover)=\\\"updateHoveredVertical($event)\\\"\\n            />\\n\\n            <svg:g *ngFor=\\\"let series of results\\\">\\n              <svg:g\\n                ngx-charts-circle-series\\n                [xScale]=\\\"xScale\\\"\\n                [yScale]=\\\"yScale\\\"\\n                [colors]=\\\"colors\\\"\\n                [activeEntries]=\\\"activeEntries\\\"\\n                [data]=\\\"series\\\"\\n                [scaleType]=\\\"scaleType\\\"\\n                [visibleValue]=\\\"hoveredVertical\\\"\\n                [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n                [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n                (select)=\\\"onClick($event, series)\\\"\\n                (activate)=\\\"onActivate($event)\\\"\\n                (deactivate)=\\\"onDeactivate($event)\\\"\\n              />\\n            </svg:g>\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n      <svg:g\\n        ngx-charts-timeline\\n        *ngIf=\\\"timeline && scaleType != 'ordinal'\\\"\\n        [attr.transform]=\\\"timelineTransform\\\"\\n        [results]=\\\"results\\\"\\n        [view]=\\\"[timelineWidth, height]\\\"\\n        [height]=\\\"timelineHeight\\\"\\n        [scheme]=\\\"scheme\\\"\\n        [customColors]=\\\"customColors\\\"\\n        [legend]=\\\"legend\\\"\\n        [scaleType]=\\\"scaleType\\\"\\n        (onDomainChange)=\\\"updateDomain($event)\\\"\\n      >\\n        <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n          <svg:g\\n            ngx-charts-area-series\\n            [xScale]=\\\"timelineXScale\\\"\\n            [yScale]=\\\"timelineYScale\\\"\\n            [baseValue]=\\\"baseValue\\\"\\n            [colors]=\\\"colors\\\"\\n            [data]=\\\"series\\\"\\n            [scaleType]=\\\"scaleType\\\"\\n            [gradient]=\\\"gradient\\\"\\n            [curve]=\\\"curve\\\"\\n            [animations]=\\\"animations\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    baseValue: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nvar AreaChartNormalizedComponent = /*#__PURE__*/function (_BaseChartComponent2) {\n  _inherits(AreaChartNormalizedComponent, _BaseChartComponent2);\n\n  var _super3 = _createSuper(AreaChartNormalizedComponent);\n\n  function AreaChartNormalizedComponent() {\n    var _this26;\n\n    _classCallCheck(this, AreaChartNormalizedComponent);\n\n    _this26 = _super3.apply(this, arguments);\n    _this26.legend = false;\n    _this26.legendTitle = 'Legend';\n    _this26.legendPosition = LegendPosition.Right;\n    _this26.showXAxisLabel = false;\n    _this26.showYAxisLabel = false;\n    _this26.showGridLines = true;\n    _this26.curve = curveLinear;\n    _this26.activeEntries = [];\n    _this26.trimXAxisTicks = true;\n    _this26.trimYAxisTicks = true;\n    _this26.rotateXAxisTicks = true;\n    _this26.maxXAxisTickLength = 16;\n    _this26.maxYAxisTickLength = 16;\n    _this26.roundDomains = false;\n    _this26.tooltipDisabled = false;\n    _this26.activate = new EventEmitter();\n    _this26.deactivate = new EventEmitter();\n    _this26.yDomain = [0, 100];\n    _this26.margin = [10, 20, 10, 20];\n    _this26.xAxisHeight = 0;\n    _this26.yAxisWidth = 0;\n    _this26.seriesType = SeriesType;\n    _this26.timelineHeight = 50;\n    _this26.timelinePadding = 10;\n\n    _this26.trackBy = function (index, item) {\n      return item.name;\n    };\n\n    return _this26;\n  }\n\n  _createClass(AreaChartNormalizedComponent, [{\n    key: \"update\",\n    value: function update() {\n      var _this27 = this;\n\n      _get(_getPrototypeOf(AreaChartNormalizedComponent.prototype), \"update\", this).call(this);\n\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n\n      if (this.timeline) {\n        this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n      }\n\n      this.xDomain = this.getXDomain();\n\n      if (this.filteredDomain) {\n        this.xDomain = this.filteredDomain;\n      }\n\n      this.seriesDomain = this.getSeriesDomain();\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n      this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n      var _loop2 = function _loop2() {\n        var val = _this27.xSet[i];\n        var d0 = 0;\n        var total = 0;\n\n        var _iterator16 = _createForOfIteratorHelper(_this27.results),\n            _step16;\n\n        try {\n          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n            var group = _step16.value;\n            var d = group.series.find(function (item) {\n              var a = item.name;\n              var b = val;\n\n              if (_this27.scaleType === ScaleType.Time) {\n                a = a.valueOf();\n                b = b.valueOf();\n              }\n\n              return a === b;\n            });\n\n            if (d) {\n              total += d.value;\n            }\n          }\n        } catch (err) {\n          _iterator16.e(err);\n        } finally {\n          _iterator16.f();\n        }\n\n        var _iterator17 = _createForOfIteratorHelper(_this27.results),\n            _step17;\n\n        try {\n          for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n            var _group = _step17.value;\n\n            var _d = _group.series.find(function (item) {\n              var a = item.name;\n              var b = val;\n\n              if (_this27.scaleType === ScaleType.Time) {\n                a = a.valueOf();\n                b = b.valueOf();\n              }\n\n              return a === b;\n            });\n\n            if (_d) {\n              _d.d0 = d0;\n              _d.d1 = d0 + _d.value;\n              d0 += _d.value;\n            } else {\n              _d = {\n                name: val,\n                value: 0,\n                d0: d0,\n                d1: d0\n              };\n\n              _group.series.push(_d);\n            }\n\n            if (total > 0) {\n              _d.d0 = _d.d0 * 100 / total;\n              _d.d1 = _d.d1 * 100 / total;\n            } else {\n              _d.d0 = 0;\n              _d.d1 = 0;\n            }\n          }\n        } catch (err) {\n          _iterator17.e(err);\n        } finally {\n          _iterator17.f();\n        }\n      };\n\n      for (var i = 0; i < this.xSet.length; i++) {\n        _loop2();\n      }\n\n      this.updateTimeline();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \" , \").concat(this.margin[0], \")\");\n      this.clipPathId = 'clip' + id().toString();\n      this.clipPath = \"url(#\".concat(this.clipPathId, \")\");\n    }\n  }, {\n    key: \"updateTimeline\",\n    value: function updateTimeline() {\n      if (this.timeline) {\n        this.timelineWidth = this.dims.width;\n        this.timelineXDomain = this.getXDomain();\n        this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n        this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n        this.timelineTransform = \"translate(\".concat(this.dims.xOffset, \", \").concat(-this.margin[2], \")\");\n      }\n    }\n  }, {\n    key: \"getXDomain\",\n    value: function getXDomain() {\n      var values = getUniqueXDomainValues(this.results);\n      this.scaleType = getScaleType(values);\n      var domain = [];\n\n      if (this.scaleType === ScaleType.Time) {\n        var _min4 = Math.min.apply(Math, _toConsumableArray(values));\n\n        var _max5 = Math.max.apply(Math, _toConsumableArray(values));\n\n        domain = [new Date(_min4), new Date(_max5)];\n        this.xSet = _toConsumableArray(values).sort(function (a, b) {\n          var aDate = a.getTime();\n          var bDate = b.getTime();\n          if (aDate > bDate) return 1;\n          if (bDate > aDate) return -1;\n          return 0;\n        });\n      } else if (this.scaleType === ScaleType.Linear) {\n        values = values.map(function (v) {\n          return Number(v);\n        });\n\n        var _min5 = Math.min.apply(Math, _toConsumableArray(values));\n\n        var _max6 = Math.max.apply(Math, _toConsumableArray(values));\n\n        domain = [_min5, _max6]; // Use compare function to sort numbers numerically\n\n        this.xSet = _toConsumableArray(values).sort(function (a, b) {\n          return a - b;\n        });\n      } else {\n        domain = values;\n        this.xSet = values;\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getSeriesDomain\",\n    value: function getSeriesDomain() {\n      return this.results.map(function (d) {\n        return d.name;\n      });\n    }\n  }, {\n    key: \"getXScale\",\n    value: function getXScale(domain, width) {\n      var scale;\n\n      if (this.scaleType === ScaleType.Time) {\n        scale = scaleTime();\n      } else if (this.scaleType === ScaleType.Linear) {\n        scale = scaleLinear();\n      } else if (this.scaleType === ScaleType.Ordinal) {\n        scale = scalePoint().padding(0.1);\n      }\n\n      scale.range([0, width]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"getYScale\",\n    value: function getYScale(domain, height) {\n      var scale = scaleLinear().range([height, 0]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"updateDomain\",\n    value: function updateDomain(domain) {\n      this.filteredDomain = domain;\n      this.xDomain = this.filteredDomain;\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n  }, {\n    key: \"updateHoveredVertical\",\n    value: function updateHoveredVertical(item) {\n      this.hoveredVertical = item.value;\n      this.deactivateAll();\n    }\n  }, {\n    key: \"hideCircles\",\n    value: function hideCircles() {\n      this.hoveredVertical = null;\n      this.deactivateAll();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data, series) {\n      if (series) {\n        data.series = series.name;\n      }\n\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      var domain;\n\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.seriesDomain;\n      } else {\n        domain = this.yDomain;\n      }\n\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      var opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.seriesDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.yDomain;\n        opts.colors = this.colors.scale;\n      }\n\n      return opts;\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref11) {\n      var width = _ref11.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref12) {\n      var height = _ref12.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(item) {\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value;\n      });\n\n      if (idx > -1) {\n        return;\n      }\n\n      this.activeEntries = [item].concat(_toConsumableArray(this.activeEntries));\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(item) {\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"deactivateAll\",\n    value: function deactivateAll() {\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n\n      var _iterator18 = _createForOfIteratorHelper(this.activeEntries),\n          _step18;\n\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var entry = _step18.value;\n          this.deactivate.emit({\n            value: entry,\n            entries: []\n          });\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n\n      this.activeEntries = [];\n    }\n  }]);\n\n  return AreaChartNormalizedComponent;\n}(BaseChartComponent);\n\nAreaChartNormalizedComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵAreaChartNormalizedComponent_BaseFactory;\n  return function AreaChartNormalizedComponent_Factory(t) {\n    return (ɵAreaChartNormalizedComponent_BaseFactory || (ɵAreaChartNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartNormalizedComponent)))(t || AreaChartNormalizedComponent);\n  };\n}();\n\nAreaChartNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartNormalizedComponent,\n  selectors: [[\"ngx-charts-area-chart-normalized\"]],\n  contentQueries: function AreaChartNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartNormalizedComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartNormalizedComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"activeEntries\", \"gradient\", \"normalized\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"normalized\", \"curve\", \"animations\"]],\n  template: function AreaChartNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartNormalizedComponent__svg_g_5_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(6, AreaChartNormalizedComponent__svg_g_6_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartNormalizedComponent__svg_g_8_Template, 2, 10, \"g\", 4);\n      i0.ɵɵtemplate(9, AreaChartNormalizedComponent__svg_g_9_Template, 3, 10, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AreaChartNormalizedComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart-normalized',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:defs>\\n        <svg:clipPath [attr.id]=\\\"clipPathId\\\">\\n          <svg:rect\\n            [attr.width]=\\\"dims.width + 10\\\"\\n            [attr.height]=\\\"dims.height + 10\\\"\\n            [attr.transform]=\\\"'translate(-5, -5)'\\\"\\n          />\\n        </svg:clipPath>\\n      </svg:defs>\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"area-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g [attr.clip-path]=\\\"clipPath\\\">\\n          <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n            <svg:g\\n              ngx-charts-area-series\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [colors]=\\\"colors\\\"\\n              [data]=\\\"series\\\"\\n              [scaleType]=\\\"scaleType\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [normalized]=\\\"true\\\"\\n              [curve]=\\\"curve\\\"\\n              [animations]=\\\"animations\\\"\\n            />\\n          </svg:g>\\n\\n          <svg:g *ngIf=\\\"!tooltipDisabled\\\" (mouseleave)=\\\"hideCircles()\\\">\\n            <svg:g\\n              ngx-charts-tooltip-area\\n              [dims]=\\\"dims\\\"\\n              [xSet]=\\\"xSet\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [results]=\\\"results\\\"\\n              [colors]=\\\"colors\\\"\\n              [showPercentage]=\\\"true\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"seriesTooltipTemplate\\\"\\n              (hover)=\\\"updateHoveredVertical($event)\\\"\\n            />\\n\\n            <svg:g *ngFor=\\\"let series of results\\\">\\n              <svg:g\\n                ngx-charts-circle-series\\n                [type]=\\\"seriesType.Stacked\\\"\\n                [xScale]=\\\"xScale\\\"\\n                [yScale]=\\\"yScale\\\"\\n                [colors]=\\\"colors\\\"\\n                [activeEntries]=\\\"activeEntries\\\"\\n                [data]=\\\"series\\\"\\n                [scaleType]=\\\"scaleType\\\"\\n                [visibleValue]=\\\"hoveredVertical\\\"\\n                [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n                [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n                (select)=\\\"onClick($event, series)\\\"\\n                (activate)=\\\"onActivate($event)\\\"\\n                (deactivate)=\\\"onDeactivate($event)\\\"\\n              />\\n            </svg:g>\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n      <svg:g\\n        ngx-charts-timeline\\n        *ngIf=\\\"timeline && scaleType != 'ordinal'\\\"\\n        [attr.transform]=\\\"timelineTransform\\\"\\n        [results]=\\\"results\\\"\\n        [view]=\\\"[timelineWidth, height]\\\"\\n        [height]=\\\"timelineHeight\\\"\\n        [scheme]=\\\"scheme\\\"\\n        [customColors]=\\\"customColors\\\"\\n        [legend]=\\\"legend\\\"\\n        [scaleType]=\\\"scaleType\\\"\\n        (onDomainChange)=\\\"updateDomain($event)\\\"\\n      >\\n        <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n          <svg:g\\n            ngx-charts-area-series\\n            [xScale]=\\\"timelineXScale\\\"\\n            [yScale]=\\\"timelineYScale\\\"\\n            [colors]=\\\"colors\\\"\\n            [data]=\\\"series\\\"\\n            [scaleType]=\\\"scaleType\\\"\\n            [gradient]=\\\"gradient\\\"\\n            [normalized]=\\\"true\\\"\\n            [curve]=\\\"curve\\\"\\n            [animations]=\\\"animations\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nvar AreaChartStackedComponent = /*#__PURE__*/function (_BaseChartComponent3) {\n  _inherits(AreaChartStackedComponent, _BaseChartComponent3);\n\n  var _super4 = _createSuper(AreaChartStackedComponent);\n\n  function AreaChartStackedComponent() {\n    var _this28;\n\n    _classCallCheck(this, AreaChartStackedComponent);\n\n    _this28 = _super4.apply(this, arguments);\n    _this28.legend = false;\n    _this28.legendTitle = 'Legend';\n    _this28.legendPosition = LegendPosition.Right;\n    _this28.xAxis = false;\n    _this28.yAxis = false;\n    _this28.timeline = false;\n    _this28.showGridLines = true;\n    _this28.curve = curveLinear;\n    _this28.activeEntries = [];\n    _this28.trimXAxisTicks = true;\n    _this28.trimYAxisTicks = true;\n    _this28.rotateXAxisTicks = true;\n    _this28.maxXAxisTickLength = 16;\n    _this28.maxYAxisTickLength = 16;\n    _this28.roundDomains = false;\n    _this28.tooltipDisabled = false;\n    _this28.activate = new EventEmitter();\n    _this28.deactivate = new EventEmitter();\n    _this28.margin = [10, 20, 10, 20];\n    _this28.xAxisHeight = 0;\n    _this28.yAxisWidth = 0;\n    _this28.timelineHeight = 50;\n    _this28.timelinePadding = 10;\n    _this28.seriesType = SeriesType;\n    return _this28;\n  }\n\n  _createClass(AreaChartStackedComponent, [{\n    key: \"update\",\n    value: function update() {\n      var _this29 = this;\n\n      _get(_getPrototypeOf(AreaChartStackedComponent.prototype), \"update\", this).call(this);\n\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n\n      if (this.timeline) {\n        this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n      }\n\n      this.xDomain = this.getXDomain();\n\n      if (this.filteredDomain) {\n        this.xDomain = this.filteredDomain;\n      }\n\n      this.yDomain = this.getYDomain();\n      this.seriesDomain = this.getSeriesDomain();\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n      this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n      var _loop3 = function _loop3() {\n        var val = _this29.xSet[i];\n        var d0 = 0;\n\n        var _iterator19 = _createForOfIteratorHelper(_this29.results),\n            _step19;\n\n        try {\n          for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n            var group = _step19.value;\n            var d = group.series.find(function (item) {\n              var a = item.name;\n              var b = val;\n\n              if (_this29.scaleType === ScaleType.Time) {\n                a = a.valueOf();\n                b = b.valueOf();\n              }\n\n              return a === b;\n            });\n\n            if (d) {\n              d.d0 = d0;\n              d.d1 = d0 + d.value;\n              d0 += d.value;\n            } else {\n              d = {\n                name: val,\n                value: 0,\n                d0: d0,\n                d1: d0\n              };\n              group.series.push(d);\n            }\n          }\n        } catch (err) {\n          _iterator19.e(err);\n        } finally {\n          _iterator19.f();\n        }\n      };\n\n      for (var i = 0; i < this.xSet.length; i++) {\n        _loop3();\n      }\n\n      this.updateTimeline();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \" , \").concat(this.margin[0], \")\");\n      this.clipPathId = 'clip' + id().toString();\n      this.clipPath = \"url(#\".concat(this.clipPathId, \")\");\n    }\n  }, {\n    key: \"updateTimeline\",\n    value: function updateTimeline() {\n      if (this.timeline) {\n        this.timelineWidth = this.dims.width;\n        this.timelineXDomain = this.getXDomain();\n        this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n        this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n        this.timelineTransform = \"translate(\".concat(this.dims.xOffset, \", \").concat(-this.margin[2], \")\");\n      }\n    }\n  }, {\n    key: \"getXDomain\",\n    value: function getXDomain() {\n      var values = getUniqueXDomainValues(this.results);\n      this.scaleType = getScaleType(values);\n      var domain = [];\n\n      if (this.scaleType === ScaleType.Linear) {\n        values = values.map(function (v) {\n          return Number(v);\n        });\n      }\n\n      var min;\n      var max;\n\n      if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n        min = this.xScaleMin ? this.xScaleMin : Math.min.apply(Math, _toConsumableArray(values));\n        max = this.xScaleMax ? this.xScaleMax : Math.max.apply(Math, _toConsumableArray(values));\n      }\n\n      if (this.scaleType === ScaleType.Time) {\n        domain = [new Date(min), new Date(max)];\n        this.xSet = _toConsumableArray(values).sort(function (a, b) {\n          var aDate = a.getTime();\n          var bDate = b.getTime();\n          if (aDate > bDate) return 1;\n          if (bDate > aDate) return -1;\n          return 0;\n        });\n      } else if (this.scaleType === ScaleType.Linear) {\n        domain = [min, max]; // Use compare function to sort numbers numerically\n\n        this.xSet = _toConsumableArray(values).sort(function (a, b) {\n          return a - b;\n        });\n      } else {\n        domain = values;\n        this.xSet = values;\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getYDomain\",\n    value: function getYDomain() {\n      var _this30 = this;\n\n      var domain = [];\n\n      var _loop4 = function _loop4() {\n        var val = _this30.xSet[i];\n        var sum = 0;\n\n        var _iterator20 = _createForOfIteratorHelper(_this30.results),\n            _step20;\n\n        try {\n          for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n            var group = _step20.value;\n            var d = group.series.find(function (item) {\n              var a = item.name;\n              var b = val;\n\n              if (_this30.scaleType === ScaleType.Time) {\n                a = a.valueOf();\n                b = b.valueOf();\n              }\n\n              return a === b;\n            });\n\n            if (d) {\n              sum += d.value;\n            }\n          }\n        } catch (err) {\n          _iterator20.e(err);\n        } finally {\n          _iterator20.f();\n        }\n\n        domain.push(sum);\n      };\n\n      for (var i = 0; i < this.xSet.length; i++) {\n        _loop4();\n      }\n\n      var min = this.yScaleMin ? this.yScaleMin : Math.min.apply(Math, [0].concat(domain));\n      var max = this.yScaleMax ? this.yScaleMax : Math.max.apply(Math, domain);\n      return [min, max];\n    }\n  }, {\n    key: \"getSeriesDomain\",\n    value: function getSeriesDomain() {\n      return this.results.map(function (d) {\n        return d.name;\n      });\n    }\n  }, {\n    key: \"getXScale\",\n    value: function getXScale(domain, width) {\n      var scale;\n\n      if (this.scaleType === ScaleType.Time) {\n        scale = scaleTime();\n      } else if (this.scaleType === ScaleType.Linear) {\n        scale = scaleLinear();\n      } else if (this.scaleType === ScaleType.Ordinal) {\n        scale = scalePoint().padding(0.1);\n      }\n\n      scale.range([0, width]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"getYScale\",\n    value: function getYScale(domain, height) {\n      var scale = scaleLinear().range([height, 0]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"updateDomain\",\n    value: function updateDomain(domain) {\n      this.filteredDomain = domain;\n      this.xDomain = this.filteredDomain;\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n  }, {\n    key: \"updateHoveredVertical\",\n    value: function updateHoveredVertical(item) {\n      this.hoveredVertical = item.value;\n      this.deactivateAll();\n    }\n  }, {\n    key: \"hideCircles\",\n    value: function hideCircles() {\n      this.hoveredVertical = null;\n      this.deactivateAll();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data, series) {\n      if (series) {\n        data.series = series.name;\n      }\n\n      this.select.emit(data);\n    }\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, item) {\n      return \"\".concat(item.name);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      var domain;\n\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.seriesDomain;\n      } else {\n        domain = this.yDomain;\n      }\n\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      var opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.seriesDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.yDomain;\n        opts.colors = this.colors.scale;\n      }\n\n      return opts;\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref13) {\n      var width = _ref13.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref14) {\n      var height = _ref14.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(item) {\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value;\n      });\n\n      if (idx > -1) {\n        return;\n      }\n\n      this.activeEntries = [item].concat(_toConsumableArray(this.activeEntries));\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(item) {\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"deactivateAll\",\n    value: function deactivateAll() {\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n\n      var _iterator21 = _createForOfIteratorHelper(this.activeEntries),\n          _step21;\n\n      try {\n        for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n          var entry = _step21.value;\n          this.deactivate.emit({\n            value: entry,\n            entries: []\n          });\n        }\n      } catch (err) {\n        _iterator21.e(err);\n      } finally {\n        _iterator21.f();\n      }\n\n      this.activeEntries = [];\n    }\n  }]);\n\n  return AreaChartStackedComponent;\n}(BaseChartComponent);\n\nAreaChartStackedComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵAreaChartStackedComponent_BaseFactory;\n  return function AreaChartStackedComponent_Factory(t) {\n    return (ɵAreaChartStackedComponent_BaseFactory || (ɵAreaChartStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartStackedComponent)))(t || AreaChartStackedComponent);\n  };\n}();\n\nAreaChartStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartStackedComponent,\n  selectors: [[\"ngx-charts-area-chart-stacked\"]],\n  contentQueries: function AreaChartStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartStackedComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartStackedComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"activeEntries\", \"stacked\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [\"ngx-charts-circle-series\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"stacked\", \"curve\", \"animations\"]],\n  template: function AreaChartStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartStackedComponent__svg_g_5_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(6, AreaChartStackedComponent__svg_g_6_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartStackedComponent__svg_g_8_Template, 2, 10, \"g\", 4);\n      i0.ɵɵtemplate(9, AreaChartStackedComponent__svg_g_9_Template, 3, 10, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AreaChartStackedComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart-stacked',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:defs>\\n        <svg:clipPath [attr.id]=\\\"clipPathId\\\">\\n          <svg:rect\\n            [attr.width]=\\\"dims.width + 10\\\"\\n            [attr.height]=\\\"dims.height + 10\\\"\\n            [attr.transform]=\\\"'translate(-5, -5)'\\\"\\n          />\\n        </svg:clipPath>\\n      </svg:defs>\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"area-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g [attr.clip-path]=\\\"clipPath\\\">\\n          <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n            <svg:g\\n              ngx-charts-area-series\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [colors]=\\\"colors\\\"\\n              [data]=\\\"series\\\"\\n              [scaleType]=\\\"scaleType\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [stacked]=\\\"true\\\"\\n              [curve]=\\\"curve\\\"\\n              [animations]=\\\"animations\\\"\\n            />\\n          </svg:g>\\n\\n          <svg:g *ngIf=\\\"!tooltipDisabled\\\" (mouseleave)=\\\"hideCircles()\\\">\\n            <svg:g\\n              ngx-charts-tooltip-area\\n              [dims]=\\\"dims\\\"\\n              [xSet]=\\\"xSet\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [results]=\\\"results\\\"\\n              [colors]=\\\"colors\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"seriesTooltipTemplate\\\"\\n              (hover)=\\\"updateHoveredVertical($event)\\\"\\n            />\\n\\n            <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n              <svg:g\\n                ngx-charts-circle-series\\n                [type]=\\\"seriesType.Stacked\\\"\\n                [xScale]=\\\"xScale\\\"\\n                [yScale]=\\\"yScale\\\"\\n                [colors]=\\\"colors\\\"\\n                [activeEntries]=\\\"activeEntries\\\"\\n                [data]=\\\"series\\\"\\n                [scaleType]=\\\"scaleType\\\"\\n                [visibleValue]=\\\"hoveredVertical\\\"\\n                [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n                [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n                (select)=\\\"onClick($event, series)\\\"\\n                (activate)=\\\"onActivate($event)\\\"\\n                (deactivate)=\\\"onDeactivate($event)\\\"\\n              />\\n            </svg:g>\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n      <svg:g\\n        ngx-charts-timeline\\n        *ngIf=\\\"timeline && scaleType != 'ordinal'\\\"\\n        [attr.transform]=\\\"timelineTransform\\\"\\n        [results]=\\\"results\\\"\\n        [view]=\\\"[timelineWidth, height]\\\"\\n        [height]=\\\"timelineHeight\\\"\\n        [scheme]=\\\"scheme\\\"\\n        [customColors]=\\\"customColors\\\"\\n        [legend]=\\\"legend\\\"\\n        [scaleType]=\\\"scaleType\\\"\\n        (onDomainChange)=\\\"updateDomain($event)\\\"\\n      >\\n        <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n          <svg:g\\n            ngx-charts-area-series\\n            [xScale]=\\\"timelineXScale\\\"\\n            [yScale]=\\\"timelineYScale\\\"\\n            [colors]=\\\"colors\\\"\\n            [data]=\\\"series\\\"\\n            [scaleType]=\\\"scaleType\\\"\\n            [gradient]=\\\"gradient\\\"\\n            [stacked]=\\\"true\\\"\\n            [curve]=\\\"curve\\\"\\n            [animations]=\\\"animations\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nvar AreaChartModule = /*#__PURE__*/_createClass(function AreaChartModule() {\n  _classCallCheck(this, AreaChartModule);\n});\n\nAreaChartModule.ɵfac = function AreaChartModule_Factory(t) {\n  return new (t || AreaChartModule)();\n};\n\nAreaChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AreaChartModule\n});\nAreaChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\n      exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\n    }]\n  }], null, null);\n})();\n\nvar BarComponent = /*#__PURE__*/function () {\n  function BarComponent(element) {\n    _classCallCheck(this, BarComponent);\n\n    this.roundEdges = true;\n    this.gradient = false;\n    this.offset = 0;\n    this.isActive = false;\n    this.animations = true;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.hasGradient = false;\n    this.hideBar = false;\n    this.element = element.nativeElement;\n  }\n\n  _createClass(BarComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.roundEdges) {\n        this.loadAnimation();\n      }\n\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.gradientId = 'grad' + id().toString();\n      this.gradientFill = \"url(#\".concat(this.gradientId, \")\");\n\n      if (this.gradient || this.stops) {\n        this.gradientStops = this.getGradient();\n        this.hasGradient = true;\n      } else {\n        this.hasGradient = false;\n      }\n\n      this.updatePathEl();\n      this.checkToHideBar();\n    }\n  }, {\n    key: \"loadAnimation\",\n    value: function loadAnimation() {\n      this.path = this.getStartingPath();\n      setTimeout(this.update.bind(this), 100);\n    }\n  }, {\n    key: \"updatePathEl\",\n    value: function updatePathEl() {\n      var node = select(this.element).select('.bar');\n      var path = this.getPath();\n\n      if (this.animations) {\n        node.transition().duration(500).attr('d', path);\n      } else {\n        node.attr('d', path);\n      }\n    }\n  }, {\n    key: \"getGradient\",\n    value: function getGradient() {\n      if (this.stops) {\n        return this.stops;\n      }\n\n      return [{\n        offset: 0,\n        color: this.fill,\n        opacity: this.getStartOpacity()\n      }, {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n      }];\n    }\n  }, {\n    key: \"getStartingPath\",\n    value: function getStartingPath() {\n      if (!this.animations) {\n        return this.getPath();\n      }\n\n      var radius = this.getRadius();\n      var path;\n\n      if (this.roundEdges) {\n        if (this.orientation === BarOrientation.Vertical) {\n          radius = Math.min(this.height, radius);\n          path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n        } else if (this.orientation === BarOrientation.Horizontal) {\n          radius = Math.min(this.width, radius);\n          path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n        }\n      } else {\n        if (this.orientation === BarOrientation.Vertical) {\n          path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n        } else if (this.orientation === BarOrientation.Horizontal) {\n          path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n        }\n      }\n\n      return path;\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      var radius = this.getRadius();\n      var path;\n\n      if (this.roundEdges) {\n        if (this.orientation === BarOrientation.Vertical) {\n          radius = Math.min(this.height, radius);\n          path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n        } else if (this.orientation === BarOrientation.Horizontal) {\n          radius = Math.min(this.width, radius);\n          path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n        }\n      } else {\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      }\n\n      return path;\n    }\n  }, {\n    key: \"getRadius\",\n    value: function getRadius() {\n      var radius = 0;\n\n      if (this.roundEdges && this.height > 5 && this.width > 5) {\n        radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n      }\n\n      return radius;\n    }\n  }, {\n    key: \"getStartOpacity\",\n    value: function getStartOpacity() {\n      if (this.roundEdges) {\n        return 0.2;\n      } else {\n        return 0.5;\n      }\n    }\n  }, {\n    key: \"edges\",\n    get: function get() {\n      var edges = [false, false, false, false];\n\n      if (this.roundEdges) {\n        if (this.orientation === BarOrientation.Vertical) {\n          if (this.data.value > 0) {\n            edges = [true, true, false, false];\n          } else {\n            edges = [false, false, true, true];\n          }\n        } else if (this.orientation === BarOrientation.Horizontal) {\n          if (this.data.value > 0) {\n            edges = [false, true, false, true];\n          } else {\n            edges = [true, false, true, false];\n          }\n        }\n      }\n\n      return edges;\n    }\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter() {\n      this.activate.emit(this.data);\n    }\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave() {\n      this.deactivate.emit(this.data);\n    }\n  }, {\n    key: \"checkToHideBar\",\n    value: function checkToHideBar() {\n      this.hideBar = this.noBarWhenZero && (this.orientation === BarOrientation.Vertical && this.height === 0 || this.orientation === BarOrientation.Horizontal && this.width === 0);\n    }\n  }]);\n\n  return BarComponent;\n}();\n\nBarComponent.ɵfac = function BarComponent_Factory(t) {\n  return new (t || BarComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarComponent,\n  selectors: [[\"g\", \"ngx-charts-bar\", \"\"]],\n  hostBindings: function BarComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function BarComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function BarComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    fill: \"fill\",\n    data: \"data\",\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\",\n    orientation: \"orientation\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\",\n    offset: \"offset\",\n    isActive: \"isActive\",\n    stops: \"stops\",\n    animations: \"animations\",\n    ariaLabel: \"ariaLabel\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c26,\n  decls: 2,\n  vars: 8,\n  consts: [[4, \"ngIf\"], [\"stroke\", \"none\", \"role\", \"img\", \"tabIndex\", \"-1\", 1, \"bar\", 3, \"click\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function BarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BarComponent__svg_defs_0_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"path\", 1);\n      i0.ɵɵlistener(\"click\", function BarComponent_Template__svg_path_click_1_listener() {\n        return ctx.select.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.isActive)(\"hidden\", ctx.hideBar);\n      i0.ɵɵattribute(\"d\", ctx.path)(\"aria-label\", ctx.ariaLabel)(\"fill\", ctx.hasGradient ? ctx.gradientFill : ctx.fill);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bar]',\n      template: \"\\n    <svg:defs *ngIf=\\\"hasGradient\\\">\\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\\\"orientation\\\" [name]=\\\"gradientId\\\" [stops]=\\\"gradientStops\\\" />\\n    </svg:defs>\\n    <svg:path\\n      class=\\\"bar\\\"\\n      stroke=\\\"none\\\"\\n      role=\\\"img\\\"\\n      tabIndex=\\\"-1\\\"\\n      [class.active]=\\\"isActive\\\"\\n      [class.hidden]=\\\"hideBar\\\"\\n      [attr.d]=\\\"path\\\"\\n      [attr.aria-label]=\\\"ariaLabel\\\"\\n      [attr.fill]=\\\"hasGradient ? gradientFill : fill\\\"\\n      (click)=\\\"select.emit(data)\\\"\\n    />\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nvar BarChartType;\n\n(function (BarChartType) {\n  BarChartType[\"Standard\"] = \"standard\";\n  BarChartType[\"Normalized\"] = \"normalized\";\n  BarChartType[\"Stacked\"] = \"stacked\";\n})(BarChartType || (BarChartType = {}));\n\nvar D0Types;\n\n(function (D0Types) {\n  D0Types[\"positive\"] = \"positive\";\n  D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\n\nvar BarLabelComponent = /*#__PURE__*/function () {\n  function BarLabelComponent(element) {\n    _classCallCheck(this, BarLabelComponent);\n\n    this.dimensionsChanged = new EventEmitter();\n    this.horizontalPadding = 2;\n    this.verticalPadding = 5;\n    this.element = element.nativeElement;\n  }\n\n  _createClass(BarLabelComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      var h = this.element.getBoundingClientRect().height;\n      var w = this.element.getBoundingClientRect().width;\n      return {\n        height: h,\n        width: w,\n        negative: this.value < 0\n      };\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.dimensionsChanged.emit(this.getSize());\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.valueFormatting) {\n        this.formatedValue = this.valueFormatting(this.value);\n      } else {\n        this.formatedValue = formatLabel(this.value);\n      }\n\n      if (this.orientation === 'horizontal') {\n        this.x = this.barX + this.barWidth; // if the value is negative then it's on the left of the x0.\n        // we need to put the data label in front of the bar\n\n        if (this.value < 0) {\n          this.x = this.x - this.horizontalPadding;\n          this.textAnchor = 'end';\n        } else {\n          this.x = this.x + this.horizontalPadding;\n          this.textAnchor = 'start';\n        }\n\n        this.y = this.barY + this.barHeight / 2;\n      } else {\n        // orientation must be \"vertical\"\n        this.x = this.barX + this.barWidth / 2;\n        this.y = this.barY + this.barHeight;\n\n        if (this.value < 0) {\n          this.y = this.y + this.verticalPadding;\n          this.textAnchor = 'end';\n        } else {\n          this.y = this.y - this.verticalPadding;\n          this.textAnchor = 'start';\n        }\n\n        this.transform = \"rotate(-45, \".concat(this.x, \" , \").concat(this.y, \")\");\n      }\n    }\n  }]);\n\n  return BarLabelComponent;\n}();\n\nBarLabelComponent.ɵfac = function BarLabelComponent_Factory(t) {\n  return new (t || BarLabelComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nBarLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-bar-label\", \"\"]],\n  inputs: {\n    value: \"value\",\n    valueFormatting: \"valueFormatting\",\n    barX: \"barX\",\n    barY: \"barY\",\n    barWidth: \"barWidth\",\n    barHeight: \"barHeight\",\n    orientation: \"orientation\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c27,\n  decls: 2,\n  vars: 5,\n  consts: [[\"alignment-baseline\", \"middle\", 1, \"textDataLabel\"]],\n  template: function BarLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"text\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"text-anchor\", ctx.textAnchor)(\"transform\", ctx.transform)(\"x\", ctx.x)(\"y\", ctx.y);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.formatedValue, \" \");\n    }\n  },\n  styles: [\".textDataLabel[_ngcontent-%COMP%]{font-size:11px}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bar-label]',\n      template: \"\\n    <svg:text\\n      class=\\\"textDataLabel\\\"\\n      alignment-baseline=\\\"middle\\\"\\n      [attr.text-anchor]=\\\"textAnchor\\\"\\n      [attr.transform]=\\\"transform\\\"\\n      [attr.x]=\\\"x\\\"\\n      [attr.y]=\\\"y\\\"\\n    >\\n      {{ formatedValue }}\\n    </svg:text>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".textDataLabel{font-size:11px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    barX: [{\n      type: Input\n    }],\n    barY: [{\n      type: Input\n    }],\n    barWidth: [{\n      type: Input\n    }],\n    barHeight: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }]\n  });\n})();\n\nvar SeriesHorizontal = /*#__PURE__*/function () {\n  function SeriesHorizontal() {\n    _classCallCheck(this, SeriesHorizontal);\n\n    this.type = BarChartType.Standard;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dataLabelWidthChanged = new EventEmitter();\n    this.barsForDataLabels = [];\n    this.barOrientation = BarOrientation;\n  }\n\n  _createClass(SeriesHorizontal, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _d2,\n          _this31 = this;\n\n      this.updateTooltipSettings();\n      var d0 = (_d2 = {}, _defineProperty(_d2, D0Types.positive, 0), _defineProperty(_d2, D0Types.negative, 0), _d2);\n      var d0Type;\n      d0Type = D0Types.positive;\n      var total;\n\n      if (this.type === BarChartType.Normalized) {\n        total = this.series.map(function (d) {\n          return d.value;\n        }).reduce(function (sum, d) {\n          return sum + d;\n        }, 0);\n      }\n\n      var xScaleMin = Math.max(this.xScale.domain()[0], 0);\n      this.bars = this.series.map(function (d) {\n        var value = d.value;\n\n        var label = _this31.getLabel(d);\n\n        var formattedLabel = formatLabel(label);\n        var roundEdges = _this31.roundEdges;\n        d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n        var bar = {\n          value: value,\n          label: label,\n          roundEdges: roundEdges,\n          data: d,\n          formattedLabel: formattedLabel\n        };\n        bar.height = _this31.yScale.bandwidth();\n\n        if (_this31.type === BarChartType.Standard) {\n          bar.width = Math.abs(_this31.xScale(value) - _this31.xScale(xScaleMin));\n\n          if (value < 0) {\n            bar.x = _this31.xScale(value);\n          } else {\n            bar.x = _this31.xScale(xScaleMin);\n          }\n\n          bar.y = _this31.yScale(label);\n        } else if (_this31.type === BarChartType.Stacked) {\n          var offset0 = d0[d0Type];\n          var offset1 = offset0 + value;\n          d0[d0Type] += value;\n          bar.width = _this31.xScale(offset1) - _this31.xScale(offset0);\n          bar.x = _this31.xScale(offset0);\n          bar.y = 0;\n          bar.offset0 = offset0;\n          bar.offset1 = offset1;\n        } else if (_this31.type === BarChartType.Normalized) {\n          var _offset2 = d0[d0Type];\n\n          var _offset3 = _offset2 + value;\n\n          d0[d0Type] += value;\n\n          if (total > 0) {\n            _offset2 = _offset2 * 100 / total;\n            _offset3 = _offset3 * 100 / total;\n          } else {\n            _offset2 = 0;\n            _offset3 = 0;\n          }\n\n          bar.width = _this31.xScale(_offset3) - _this31.xScale(_offset2);\n          bar.x = _this31.xScale(_offset2);\n          bar.y = 0;\n          bar.offset0 = _offset2;\n          bar.offset1 = _offset3;\n          value = (_offset3 - _offset2).toFixed(2) + '%';\n        }\n\n        if (_this31.colors.scaleType === ScaleType.Ordinal) {\n          bar.color = _this31.colors.getColor(label);\n        } else {\n          if (_this31.type === BarChartType.Standard) {\n            bar.color = _this31.colors.getColor(value);\n            bar.gradientStops = _this31.colors.getLinearGradientStops(value);\n          } else {\n            bar.color = _this31.colors.getColor(bar.offset1);\n            bar.gradientStops = _this31.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n          }\n        }\n\n        var tooltipLabel = formattedLabel;\n        bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n\n        if (_this31.seriesName !== null && _this31.seriesName !== undefined) {\n          tooltipLabel = \"\".concat(_this31.seriesName, \" \\u2022 \").concat(formattedLabel);\n          bar.data.series = _this31.seriesName;\n          bar.ariaLabel = _this31.seriesName + ' ' + bar.ariaLabel;\n        }\n\n        bar.tooltipText = _this31.tooltipDisabled ? undefined : \"\\n        <span class=\\\"tooltip-label\\\">\".concat(escapeLabel(tooltipLabel), \"</span>\\n        <span class=\\\"tooltip-val\\\">\").concat(_this31.dataLabelFormatting ? _this31.dataLabelFormatting(value) : value.toLocaleString(), \"</span>\\n      \");\n        return bar;\n      });\n      this.updateDataLabels();\n    }\n  }, {\n    key: \"updateDataLabels\",\n    value: function updateDataLabels() {\n      var _this32 = this;\n\n      if (this.type === BarChartType.Stacked) {\n        this.barsForDataLabels = [];\n        var section = {};\n        section.series = this.seriesName;\n        var totalPositive = this.series.map(function (d) {\n          return d.value;\n        }).reduce(function (sum, d) {\n          return d > 0 ? sum + d : sum;\n        }, 0);\n        var totalNegative = this.series.map(function (d) {\n          return d.value;\n        }).reduce(function (sum, d) {\n          return d < 0 ? sum + d : sum;\n        }, 0);\n        section.total = totalPositive + totalNegative;\n        section.x = 0;\n        section.y = 0; // if total is positive then we show it on the right, otherwise on the left\n\n        if (section.total > 0) {\n          section.width = this.xScale(totalPositive);\n        } else {\n          section.width = this.xScale(totalNegative);\n        }\n\n        section.height = this.yScale.bandwidth();\n        this.barsForDataLabels.push(section);\n      } else {\n        this.barsForDataLabels = this.series.map(function (d) {\n          var _this32$seriesName;\n\n          var section = {};\n          section.series = (_this32$seriesName = _this32.seriesName) !== null && _this32$seriesName !== void 0 ? _this32$seriesName : d.label;\n          section.total = d.value;\n          section.x = _this32.xScale(0);\n          section.y = _this32.yScale(d.label);\n          section.width = _this32.xScale(section.total) - _this32.xScale(0);\n          section.height = _this32.yScale.bandwidth();\n          return section;\n        });\n      }\n    }\n  }, {\n    key: \"updateTooltipSettings\",\n    value: function updateTooltipSettings() {\n      this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n      this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive(entry) {\n      if (!this.activeEntries) return false;\n      var item = this.activeEntries.find(function (active) {\n        return entry.name === active.name && entry.value === active.value;\n      });\n      return item !== undefined;\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel(dataItem) {\n      if (dataItem.label) {\n        return dataItem.label;\n      }\n\n      return dataItem.name;\n    }\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, bar) {\n      return bar.label;\n    }\n  }, {\n    key: \"trackDataLabelBy\",\n    value: function trackDataLabelBy(index, barLabel) {\n      return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n  }, {\n    key: \"click\",\n    value: function click(data) {\n      this.select.emit(data);\n    }\n  }]);\n\n  return SeriesHorizontal;\n}();\n\nSeriesHorizontal.ɵfac = function SeriesHorizontal_Factory(t) {\n  return new (t || SeriesHorizontal)();\n};\n\nSeriesHorizontal.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SeriesHorizontal,\n  selectors: [[\"g\", \"ngx-charts-series-horizontal\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    type: \"type\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    seriesName: \"seriesName\",\n    tooltipTemplate: \"tooltipTemplate\",\n    roundEdges: \"roundEdges\",\n    animations: \"animations\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dataLabelWidthChanged: \"dataLabelWidthChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c28,\n  decls: 2,\n  vars: 3,\n  consts: [[\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"ariaLabel\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"ariaLabel\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\"]],\n  template: function SeriesHorizontal_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SeriesHorizontal__svg_g_0_Template, 1, 21, \"g\", 0);\n      i0.ɵɵtemplate(1, SeriesHorizontal__svg_g_1_Template, 2, 2, \"g\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.bars)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDataLabel);\n    }\n  },\n  dependencies: [BarComponent, BarLabelComponent, i2.NgForOf, TooltipDirective, i2.NgIf],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SeriesHorizontal, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-series-horizontal]',\n      template: \"\\n    <svg:g\\n      ngx-charts-bar\\n      *ngFor=\\\"let bar of bars; trackBy: trackBy\\\"\\n      [@animationState]=\\\"'active'\\\"\\n      [width]=\\\"bar.width\\\"\\n      [height]=\\\"bar.height\\\"\\n      [x]=\\\"bar.x\\\"\\n      [y]=\\\"bar.y\\\"\\n      [fill]=\\\"bar.color\\\"\\n      [stops]=\\\"bar.gradientStops\\\"\\n      [data]=\\\"bar.data\\\"\\n      [orientation]=\\\"barOrientation.Horizontal\\\"\\n      [roundEdges]=\\\"bar.roundEdges\\\"\\n      (select)=\\\"click($event)\\\"\\n      [gradient]=\\\"gradient\\\"\\n      [isActive]=\\\"isActive(bar.data)\\\"\\n      [ariaLabel]=\\\"bar.ariaLabel\\\"\\n      [animations]=\\\"animations\\\"\\n      (activate)=\\\"activate.emit($event)\\\"\\n      (deactivate)=\\\"deactivate.emit($event)\\\"\\n      ngx-tooltip\\n      [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n      [tooltipPlacement]=\\\"tooltipPlacement\\\"\\n      [tooltipType]=\\\"tooltipType\\\"\\n      [tooltipTitle]=\\\"tooltipTemplate ? undefined : bar.tooltipText\\\"\\n      [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n      [tooltipContext]=\\\"bar.data\\\"\\n      [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n    ></svg:g>\\n    <svg:g *ngIf=\\\"showDataLabel\\\">\\n      <svg:g\\n        ngx-charts-bar-label\\n        *ngFor=\\\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\\\"\\n        [barX]=\\\"b.x\\\"\\n        [barY]=\\\"b.y\\\"\\n        [barWidth]=\\\"b.width\\\"\\n        [barHeight]=\\\"b.height\\\"\\n        [value]=\\\"b.total\\\"\\n        [valueFormatting]=\\\"dataLabelFormatting\\\"\\n        [orientation]=\\\"barOrientation.Horizontal\\\"\\n        (dimensionsChanged)=\\\"dataLabelWidthChanged.emit({ size: $event, index: i })\\\"\\n      />\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], null, {\n    dims: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    seriesName: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dataLabelWidthChanged: [{\n      type: Output\n    }]\n  });\n})();\n\nvar BarHorizontalComponent = /*#__PURE__*/function (_BaseChartComponent4) {\n  _inherits(BarHorizontalComponent, _BaseChartComponent4);\n\n  var _super5 = _createSuper(BarHorizontalComponent);\n\n  function BarHorizontalComponent() {\n    var _this33;\n\n    _classCallCheck(this, BarHorizontalComponent);\n\n    _this33 = _super5.apply(this, arguments);\n    _this33.legend = false;\n    _this33.legendTitle = 'Legend';\n    _this33.legendPosition = LegendPosition.Right;\n    _this33.tooltipDisabled = false;\n    _this33.showGridLines = true;\n    _this33.activeEntries = [];\n    _this33.trimXAxisTicks = true;\n    _this33.trimYAxisTicks = true;\n    _this33.rotateXAxisTicks = true;\n    _this33.maxXAxisTickLength = 16;\n    _this33.maxYAxisTickLength = 16;\n    _this33.barPadding = 8;\n    _this33.roundDomains = false;\n    _this33.roundEdges = true;\n    _this33.showDataLabel = false;\n    _this33.noBarWhenZero = true;\n    _this33.activate = new EventEmitter();\n    _this33.deactivate = new EventEmitter();\n    _this33.margin = [10, 20, 10, 20];\n    _this33.xAxisHeight = 0;\n    _this33.yAxisWidth = 0;\n    _this33.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n    return _this33;\n  }\n\n  _createClass(BarHorizontalComponent, [{\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(BarHorizontalComponent.prototype), \"update\", this).call(this);\n\n      if (!this.showDataLabel) {\n        this.dataLabelMaxWidth = {\n          negative: 0,\n          positive: 0\n        };\n      }\n\n      this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      this.formatDates();\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \" , \").concat(this.margin[0], \")\");\n    }\n  }, {\n    key: \"getXScale\",\n    value: function getXScale() {\n      this.xDomain = this.getXDomain();\n      var scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"getYScale\",\n    value: function getYScale() {\n      this.yDomain = this.getYDomain();\n      var spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n      return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.yDomain);\n    }\n  }, {\n    key: \"getXDomain\",\n    value: function getXDomain() {\n      var values = this.results.map(function (d) {\n        return d.value;\n      });\n      var min = this.xScaleMin ? Math.min.apply(Math, [this.xScaleMin].concat(_toConsumableArray(values))) : Math.min.apply(Math, [0].concat(_toConsumableArray(values)));\n      var max = this.xScaleMax ? Math.max.apply(Math, [this.xScaleMax].concat(_toConsumableArray(values))) : Math.max.apply(Math, [0].concat(_toConsumableArray(values)));\n      return [min, max];\n    }\n  }, {\n    key: \"getYDomain\",\n    value: function getYDomain() {\n      return this.results.map(function (d) {\n        return d.label;\n      });\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      var domain;\n\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.yDomain;\n      } else {\n        domain = this.xDomain;\n      }\n\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      var opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n\n      if (opts.scaleType === 'ordinal') {\n        opts.domain = this.yDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.xDomain;\n        opts.colors = this.colors.scale;\n      }\n\n      return opts;\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref15) {\n      var width = _ref15.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref16) {\n      var height = _ref16.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onDataLabelMaxWidthChanged\",\n    value: function onDataLabelMaxWidthChanged(event) {\n      var _this34 = this;\n\n      if (event.size.negative) {\n        this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n      } else {\n        this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n      }\n\n      if (event.index === this.results.length - 1) {\n        setTimeout(function () {\n          return _this34.update();\n        });\n      }\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(item) {\n      var fromLegend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      item = this.results.find(function (d) {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n\n      if (idx > -1) {\n        return;\n      }\n\n      this.activeEntries = [item].concat(_toConsumableArray(this.activeEntries));\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(item) {\n      var fromLegend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      item = this.results.find(function (d) {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }]);\n\n  return BarHorizontalComponent;\n}(BaseChartComponent);\n\nBarHorizontalComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵBarHorizontalComponent_BaseFactory;\n  return function BarHorizontalComponent_Factory(t) {\n    return (ɵBarHorizontalComponent_BaseFactory || (ɵBarHorizontalComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalComponent)))(t || BarHorizontalComponent);\n  };\n}();\n\nBarHorizontalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalComponent,\n  selectors: [[\"ngx-charts-bar-horizontal\"]],\n  contentQueries: function BarHorizontalComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    xScaleMax: \"xScaleMax\",\n    xScaleMin: \"xScaleMin\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 25,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"activeEntries\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\"]],\n  template: function BarHorizontalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontalComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(4, \"g\", 4);\n      i0.ɵɵlistener(\"select\", function BarHorizontalComponent_Template__svg_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function BarHorizontalComponent_Template__svg_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function BarHorizontalComponent_Template__svg_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      })(\"dataLabelWidthChanged\", function BarHorizontalComponent_Template__svg_g_dataLabelWidthChanged_4_listener($event) {\n        return ctx.onDataLabelMaxWidthChanged($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(22, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"series\", ctx.results)(\"dims\", ctx.dims)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"activeEntries\", ctx.activeEntries)(\"roundEdges\", ctx.roundEdges)(\"animations\", ctx.animations)(\"showDataLabel\", ctx.showDataLabel)(\"dataLabelFormatting\", ctx.dataLabelFormatting)(\"noBarWhenZero\", ctx.noBarWhenZero);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, true)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          [yAxisOffset]=\\\"dataLabelMaxWidth.negative\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-series-horizontal\\n          [xScale]=\\\"xScale\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [colors]=\\\"colors\\\"\\n          [series]=\\\"results\\\"\\n          [dims]=\\\"dims\\\"\\n          [gradient]=\\\"gradient\\\"\\n          [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [activeEntries]=\\\"activeEntries\\\"\\n          [roundEdges]=\\\"roundEdges\\\"\\n          [animations]=\\\"animations\\\"\\n          [showDataLabel]=\\\"showDataLabel\\\"\\n          [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n          [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n          (select)=\\\"onClick($event)\\\"\\n          (activate)=\\\"onActivate($event)\\\"\\n          (deactivate)=\\\"onDeactivate($event)\\\"\\n          (dataLabelWidthChanged)=\\\"onDataLabelMaxWidthChanged($event)\\\"\\n        ></svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nvar BarHorizontal2DComponent = /*#__PURE__*/function (_BaseChartComponent5) {\n  _inherits(BarHorizontal2DComponent, _BaseChartComponent5);\n\n  var _super6 = _createSuper(BarHorizontal2DComponent);\n\n  function BarHorizontal2DComponent() {\n    var _this35;\n\n    _classCallCheck(this, BarHorizontal2DComponent);\n\n    _this35 = _super6.apply(this, arguments);\n    _this35.legend = false;\n    _this35.legendTitle = 'Legend';\n    _this35.legendPosition = LegendPosition.Right;\n    _this35.tooltipDisabled = false;\n    _this35.showGridLines = true;\n    _this35.activeEntries = [];\n    _this35.trimXAxisTicks = true;\n    _this35.trimYAxisTicks = true;\n    _this35.rotateXAxisTicks = true;\n    _this35.maxXAxisTickLength = 16;\n    _this35.maxYAxisTickLength = 16;\n    _this35.groupPadding = 16;\n    _this35.barPadding = 8;\n    _this35.roundDomains = false;\n    _this35.roundEdges = true;\n    _this35.showDataLabel = false;\n    _this35.noBarWhenZero = true;\n    _this35.activate = new EventEmitter();\n    _this35.deactivate = new EventEmitter();\n    _this35.margin = [10, 20, 10, 20];\n    _this35.xAxisHeight = 0;\n    _this35.yAxisWidth = 0;\n    _this35.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n    _this35.isSSR = false;\n    _this35.barOrientation = BarOrientation;\n\n    _this35.trackBy = function (index, item) {\n      return item.name;\n    };\n\n    return _this35;\n  }\n\n  _createClass(BarHorizontal2DComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(BarHorizontal2DComponent.prototype), \"update\", this).call(this);\n\n      if (!this.showDataLabel) {\n        this.dataLabelMaxWidth = {\n          negative: 0,\n          positive: 0\n        };\n      }\n\n      this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      this.formatDates();\n      this.groupDomain = this.getGroupDomain();\n      this.innerDomain = this.getInnerDomain();\n      this.valueDomain = this.getValueDomain();\n      this.groupScale = this.getGroupScale();\n      this.innerScale = this.getInnerScale();\n      this.valueScale = this.getValueScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \" , \").concat(this.margin[0], \")\");\n    }\n  }, {\n    key: \"getGroupScale\",\n    value: function getGroupScale() {\n      var spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n      return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).paddingOuter(spacing / 2).domain(this.groupDomain);\n    }\n  }, {\n    key: \"getInnerScale\",\n    value: function getInnerScale() {\n      var height = this.groupScale.bandwidth();\n      var spacing = this.innerDomain.length / (height / this.barPadding + 1);\n      return scaleBand().rangeRound([0, height]).paddingInner(spacing).domain(this.innerDomain);\n    }\n  }, {\n    key: \"getValueScale\",\n    value: function getValueScale() {\n      var scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"getGroupDomain\",\n    value: function getGroupDomain() {\n      var domain = [];\n\n      var _iterator22 = _createForOfIteratorHelper(this.results),\n          _step22;\n\n      try {\n        for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n          var group = _step22.value;\n\n          if (!domain.includes(group.label)) {\n            domain.push(group.label);\n          }\n        }\n      } catch (err) {\n        _iterator22.e(err);\n      } finally {\n        _iterator22.f();\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getInnerDomain\",\n    value: function getInnerDomain() {\n      var domain = [];\n\n      var _iterator23 = _createForOfIteratorHelper(this.results),\n          _step23;\n\n      try {\n        for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n          var group = _step23.value;\n\n          var _iterator24 = _createForOfIteratorHelper(group.series),\n              _step24;\n\n          try {\n            for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n              var d = _step24.value;\n\n              if (!domain.includes(d.label)) {\n                domain.push(d.label);\n              }\n            }\n          } catch (err) {\n            _iterator24.e(err);\n          } finally {\n            _iterator24.f();\n          }\n        }\n      } catch (err) {\n        _iterator23.e(err);\n      } finally {\n        _iterator23.f();\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getValueDomain\",\n    value: function getValueDomain() {\n      var domain = [];\n\n      var _iterator25 = _createForOfIteratorHelper(this.results),\n          _step25;\n\n      try {\n        for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n          var group = _step25.value;\n\n          var _iterator26 = _createForOfIteratorHelper(group.series),\n              _step26;\n\n          try {\n            for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n              var d = _step26.value;\n\n              if (!domain.includes(d.value)) {\n                domain.push(d.value);\n              }\n            }\n          } catch (err) {\n            _iterator26.e(err);\n          } finally {\n            _iterator26.f();\n          }\n        }\n      } catch (err) {\n        _iterator25.e(err);\n      } finally {\n        _iterator25.f();\n      }\n\n      var min = Math.min.apply(Math, [0].concat(domain));\n      var max = this.xScaleMax ? Math.max.apply(Math, [this.xScaleMax].concat(domain)) : Math.max.apply(Math, [0].concat(domain));\n      return [min, max];\n    }\n  }, {\n    key: \"groupTransform\",\n    value: function groupTransform(group) {\n      return \"translate(0, \".concat(this.groupScale(group.label), \")\");\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data, group) {\n      if (group) {\n        data.series = group.name;\n      }\n\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      var domain;\n\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.innerDomain;\n      } else {\n        domain = this.valueDomain;\n      }\n\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      var opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.innerDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.valueDomain;\n        opts.colors = this.colors.scale;\n      }\n\n      return opts;\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref17) {\n      var width = _ref17.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref18) {\n      var height = _ref18.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onDataLabelMaxWidthChanged\",\n    value: function onDataLabelMaxWidthChanged(event, groupIndex) {\n      var _this36 = this;\n\n      if (event.size.negative) {\n        this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n      } else {\n        this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n      }\n\n      if (groupIndex === this.results.length - 1) {\n        setTimeout(function () {\n          return _this36.update();\n        });\n      }\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(event, group) {\n      var fromLegend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var item = Object.assign({}, event);\n\n      if (group) {\n        item.series = group.name;\n      }\n\n      var items = this.results.map(function (g) {\n        return g.series;\n      }).flat().filter(function (i) {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n      this.activeEntries = _toConsumableArray(items);\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(event, group) {\n      var fromLegend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var item = Object.assign({}, event);\n\n      if (group) {\n        item.series = group.name;\n      }\n\n      this.activeEntries = this.activeEntries.filter(function (i) {\n        if (fromLegend) {\n          return i.label !== item.name;\n        } else {\n          return !(i.name === item.name && i.series === item.series);\n        }\n      });\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }]);\n\n  return BarHorizontal2DComponent;\n}(BaseChartComponent);\n\nBarHorizontal2DComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵBarHorizontal2DComponent_BaseFactory;\n  return function BarHorizontal2DComponent_Factory(t) {\n    return (ɵBarHorizontal2DComponent_BaseFactory || (ɵBarHorizontal2DComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontal2DComponent)))(t || BarHorizontal2DComponent);\n  };\n}();\n\nBarHorizontal2DComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontal2DComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-2d\"]],\n  contentQueries: function BarHorizontal2DComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    groupPadding: \"groupPadding\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    xScaleMax: \"xScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 18,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\", \"orient\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"xScale\", \"activeEntries\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"]],\n  template: function BarHorizontal2DComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontal2DComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵtemplate(4, BarHorizontal2DComponent__svg_g_4_Template, 1, 9, \"g\", 4);\n      i0.ɵɵtemplate(5, BarHorizontal2DComponent__svg_g_5_Template, 2, 2, \"g\", 5);\n      i0.ɵɵtemplate(6, BarHorizontal2DComponent__svg_g_6_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(15, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.valueScale)(\"yScale\", ctx.groupScale)(\"data\", ctx.results)(\"dims\", ctx.dims)(\"orient\", ctx.barOrientation.Horizontal);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, GridPanelSeriesComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontal2DComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-2d',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, undefined, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, undefined, true)\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-grid-panel-series\\n          [xScale]=\\\"valueScale\\\"\\n          [yScale]=\\\"groupScale\\\"\\n          [data]=\\\"results\\\"\\n          [dims]=\\\"dims\\\"\\n          [orient]=\\\"barOrientation.Horizontal\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"valueScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"groupScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          [yAxisOffset]=\\\"dataLabelMaxWidth.negative\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n\\n        <svg:g *ngIf=\\\"!isSSR\\\">\\n          <svg:g\\n            *ngFor=\\\"let group of results; let index = index; trackBy: trackBy\\\"\\n            [@animationState]=\\\"'active'\\\"\\n            [attr.transform]=\\\"groupTransform(group)\\\"\\n          >\\n            <svg:g\\n              ngx-charts-series-horizontal\\n              [xScale]=\\\"valueScale\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [yScale]=\\\"innerScale\\\"\\n              [colors]=\\\"colors\\\"\\n              [series]=\\\"group.series\\\"\\n              [dims]=\\\"dims\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              [seriesName]=\\\"group.name\\\"\\n              [roundEdges]=\\\"roundEdges\\\"\\n              [animations]=\\\"animations\\\"\\n              [showDataLabel]=\\\"showDataLabel\\\"\\n              [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n              [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n              (select)=\\\"onClick($event, group)\\\"\\n              (activate)=\\\"onActivate($event, group)\\\"\\n              (deactivate)=\\\"onDeactivate($event, group)\\\"\\n              (dataLabelWidthChanged)=\\\"onDataLabelMaxWidthChanged($event, index)\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n        <svg:g *ngIf=\\\"isSSR\\\">\\n          <svg:g\\n            *ngFor=\\\"let group of results; let index = index; trackBy: trackBy\\\"\\n            [attr.transform]=\\\"groupTransform(group)\\\"\\n          >\\n            <svg:g\\n              ngx-charts-series-horizontal\\n              [xScale]=\\\"valueScale\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [yScale]=\\\"innerScale\\\"\\n              [colors]=\\\"colors\\\"\\n              [series]=\\\"group.series\\\"\\n              [dims]=\\\"dims\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              [seriesName]=\\\"group.name\\\"\\n              [roundEdges]=\\\"roundEdges\\\"\\n              [animations]=\\\"animations\\\"\\n              [showDataLabel]=\\\"showDataLabel\\\"\\n              [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n              [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n              (select)=\\\"onClick($event, group)\\\"\\n              (activate)=\\\"onActivate($event, group)\\\"\\n              (deactivate)=\\\"onDeactivate($event, group)\\\"\\n              (dataLabelWidthChanged)=\\\"onDataLabelMaxWidthChanged($event, index)\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    groupPadding: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nvar BarHorizontalNormalizedComponent = /*#__PURE__*/function (_BaseChartComponent6) {\n  _inherits(BarHorizontalNormalizedComponent, _BaseChartComponent6);\n\n  var _super7 = _createSuper(BarHorizontalNormalizedComponent);\n\n  function BarHorizontalNormalizedComponent() {\n    var _this37;\n\n    _classCallCheck(this, BarHorizontalNormalizedComponent);\n\n    _this37 = _super7.apply(this, arguments);\n    _this37.legend = false;\n    _this37.legendTitle = 'Legend';\n    _this37.legendPosition = LegendPosition.Right;\n    _this37.tooltipDisabled = false;\n    _this37.showGridLines = true;\n    _this37.activeEntries = [];\n    _this37.trimXAxisTicks = true;\n    _this37.trimYAxisTicks = true;\n    _this37.rotateXAxisTicks = true;\n    _this37.maxXAxisTickLength = 16;\n    _this37.maxYAxisTickLength = 16;\n    _this37.barPadding = 8;\n    _this37.roundDomains = false;\n    _this37.noBarWhenZero = true;\n    _this37.activate = new EventEmitter();\n    _this37.deactivate = new EventEmitter();\n    _this37.valueDomain = [0, 100];\n    _this37.margin = [10, 20, 10, 20];\n    _this37.xAxisHeight = 0;\n    _this37.yAxisWidth = 0;\n    _this37.barChartType = BarChartType;\n    _this37.isSSR = false;\n\n    _this37.trackBy = function (index, item) {\n      return item.name;\n    };\n\n    return _this37;\n  }\n\n  _createClass(BarHorizontalNormalizedComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(BarHorizontalNormalizedComponent.prototype), \"update\", this).call(this);\n\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      this.formatDates();\n      this.groupDomain = this.getGroupDomain();\n      this.innerDomain = this.getInnerDomain();\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \" , \").concat(this.margin[0], \")\");\n    }\n  }, {\n    key: \"getGroupDomain\",\n    value: function getGroupDomain() {\n      var domain = [];\n\n      var _iterator27 = _createForOfIteratorHelper(this.results),\n          _step27;\n\n      try {\n        for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n          var group = _step27.value;\n\n          if (!domain.includes(group.label)) {\n            domain.push(group.label);\n          }\n        }\n      } catch (err) {\n        _iterator27.e(err);\n      } finally {\n        _iterator27.f();\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getInnerDomain\",\n    value: function getInnerDomain() {\n      var domain = [];\n\n      var _iterator28 = _createForOfIteratorHelper(this.results),\n          _step28;\n\n      try {\n        for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n          var group = _step28.value;\n\n          var _iterator29 = _createForOfIteratorHelper(group.series),\n              _step29;\n\n          try {\n            for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n              var d = _step29.value;\n\n              if (!domain.includes(d.label)) {\n                domain.push(d.label);\n              }\n            }\n          } catch (err) {\n            _iterator29.e(err);\n          } finally {\n            _iterator29.f();\n          }\n        }\n      } catch (err) {\n        _iterator28.e(err);\n      } finally {\n        _iterator28.f();\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getYScale\",\n    value: function getYScale() {\n      var spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n      return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n  }, {\n    key: \"getXScale\",\n    value: function getXScale() {\n      var scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"groupTransform\",\n    value: function groupTransform(group) {\n      return \"translate(0, \".concat(this.yScale(group.name), \")\");\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data, group) {\n      if (group) {\n        data.series = group.name;\n      }\n\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      var domain;\n\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.innerDomain;\n      } else {\n        domain = this.valueDomain;\n      }\n\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      var opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.innerDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.valueDomain;\n        opts.colors = this.colors.scale;\n      }\n\n      return opts;\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref19) {\n      var width = _ref19.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref20) {\n      var height = _ref20.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(event, group) {\n      var fromLegend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var item = Object.assign({}, event);\n\n      if (group) {\n        item.series = group.name;\n      }\n\n      var items = this.results.map(function (g) {\n        return g.series;\n      }).flat().filter(function (i) {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n      this.activeEntries = _toConsumableArray(items);\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(event, group) {\n      var fromLegend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var item = Object.assign({}, event);\n\n      if (group) {\n        item.series = group.name;\n      }\n\n      this.activeEntries = this.activeEntries.filter(function (i) {\n        if (fromLegend) {\n          return i.label !== item.name;\n        } else {\n          return !(i.name === item.name && i.series === item.series);\n        }\n      });\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }]);\n\n  return BarHorizontalNormalizedComponent;\n}(BaseChartComponent);\n\nBarHorizontalNormalizedComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵBarHorizontalNormalizedComponent_BaseFactory;\n  return function BarHorizontalNormalizedComponent_Factory(t) {\n    return (ɵBarHorizontalNormalizedComponent_BaseFactory || (ɵBarHorizontalNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalNormalizedComponent)))(t || BarHorizontalNormalizedComponent);\n  };\n}();\n\nBarHorizontalNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalNormalizedComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-normalized\"]],\n  contentQueries: function BarHorizontalNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BarHorizontalNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalNormalizedComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontalNormalizedComponent__svg_g_3_Template, 1, 8, \"g\", 3);\n      i0.ɵɵtemplate(4, BarHorizontalNormalizedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(5, BarHorizontalNormalizedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-normalized',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, undefined, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, undefined, true)\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g *ngIf=\\\"!isSSR\\\">\\n          <svg:g\\n            *ngFor=\\\"let group of results; trackBy: trackBy\\\"\\n            [@animationState]=\\\"'active'\\\"\\n            [attr.transform]=\\\"groupTransform(group)\\\"\\n          >\\n            <svg:g\\n              ngx-charts-series-horizontal\\n              [type]=\\\"barChartType.Normalized\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [colors]=\\\"colors\\\"\\n              [series]=\\\"group.series\\\"\\n              [dims]=\\\"dims\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              [seriesName]=\\\"group.name\\\"\\n              [animations]=\\\"animations\\\"\\n              (select)=\\\"onClick($event, group)\\\"\\n              (activate)=\\\"onActivate($event, group)\\\"\\n              (deactivate)=\\\"onDeactivate($event, group)\\\"\\n              [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n        <svg:g *ngIf=\\\"isSSR\\\">\\n          <svg:g *ngFor=\\\"let group of results; trackBy: trackBy\\\" [attr.transform]=\\\"groupTransform(group)\\\">\\n            <svg:g\\n              ngx-charts-series-horizontal\\n              [type]=\\\"barChartType.Normalized\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [colors]=\\\"colors\\\"\\n              [series]=\\\"group.series\\\"\\n              [dims]=\\\"dims\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              [seriesName]=\\\"group.name\\\"\\n              [animations]=\\\"animations\\\"\\n              (select)=\\\"onClick($event, group)\\\"\\n              (activate)=\\\"onActivate($event, group)\\\"\\n              (deactivate)=\\\"onDeactivate($event, group)\\\"\\n              [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nvar BarHorizontalStackedComponent = /*#__PURE__*/function (_BaseChartComponent7) {\n  _inherits(BarHorizontalStackedComponent, _BaseChartComponent7);\n\n  var _super8 = _createSuper(BarHorizontalStackedComponent);\n\n  function BarHorizontalStackedComponent() {\n    var _this38;\n\n    _classCallCheck(this, BarHorizontalStackedComponent);\n\n    _this38 = _super8.apply(this, arguments);\n    _this38.legend = false;\n    _this38.legendTitle = 'Legend';\n    _this38.legendPosition = LegendPosition.Right;\n    _this38.tooltipDisabled = false;\n    _this38.showGridLines = true;\n    _this38.activeEntries = [];\n    _this38.trimXAxisTicks = true;\n    _this38.trimYAxisTicks = true;\n    _this38.rotateXAxisTicks = true;\n    _this38.maxXAxisTickLength = 16;\n    _this38.maxYAxisTickLength = 16;\n    _this38.barPadding = 8;\n    _this38.roundDomains = false;\n    _this38.showDataLabel = false;\n    _this38.noBarWhenZero = true;\n    _this38.activate = new EventEmitter();\n    _this38.deactivate = new EventEmitter();\n    _this38.margin = [10, 20, 10, 20];\n    _this38.xAxisHeight = 0;\n    _this38.yAxisWidth = 0;\n    _this38.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n    _this38.barChartType = BarChartType;\n    _this38.isSSR = false;\n\n    _this38.trackBy = function (index, item) {\n      return item.name;\n    };\n\n    return _this38;\n  }\n\n  _createClass(BarHorizontalStackedComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(BarHorizontalStackedComponent.prototype), \"update\", this).call(this);\n\n      if (!this.showDataLabel) {\n        this.dataLabelMaxWidth = {\n          negative: 0,\n          positive: 0\n        };\n      }\n\n      this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      this.formatDates();\n      this.groupDomain = this.getGroupDomain();\n      this.innerDomain = this.getInnerDomain();\n      this.valueDomain = this.getValueDomain();\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \" , \").concat(this.margin[0], \")\");\n    }\n  }, {\n    key: \"getGroupDomain\",\n    value: function getGroupDomain() {\n      var domain = [];\n\n      var _iterator30 = _createForOfIteratorHelper(this.results),\n          _step30;\n\n      try {\n        for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n          var group = _step30.value;\n\n          if (!domain.includes(group.label)) {\n            domain.push(group.label);\n          }\n        }\n      } catch (err) {\n        _iterator30.e(err);\n      } finally {\n        _iterator30.f();\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getInnerDomain\",\n    value: function getInnerDomain() {\n      var domain = [];\n\n      var _iterator31 = _createForOfIteratorHelper(this.results),\n          _step31;\n\n      try {\n        for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n          var group = _step31.value;\n\n          var _iterator32 = _createForOfIteratorHelper(group.series),\n              _step32;\n\n          try {\n            for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n              var d = _step32.value;\n\n              if (!domain.includes(d.label)) {\n                domain.push(d.label);\n              }\n            }\n          } catch (err) {\n            _iterator32.e(err);\n          } finally {\n            _iterator32.f();\n          }\n        }\n      } catch (err) {\n        _iterator31.e(err);\n      } finally {\n        _iterator31.f();\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getValueDomain\",\n    value: function getValueDomain() {\n      var domain = [];\n      var smallest = 0;\n      var biggest = 0;\n\n      var _iterator33 = _createForOfIteratorHelper(this.results),\n          _step33;\n\n      try {\n        for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n          var group = _step33.value;\n          var smallestSum = 0;\n          var biggestSum = 0;\n\n          var _iterator34 = _createForOfIteratorHelper(group.series),\n              _step34;\n\n          try {\n            for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {\n              var d = _step34.value;\n\n              if (d.value < 0) {\n                smallestSum += d.value;\n              } else {\n                biggestSum += d.value;\n              }\n\n              smallest = d.value < smallest ? d.value : smallest;\n              biggest = d.value > biggest ? d.value : biggest;\n            }\n          } catch (err) {\n            _iterator34.e(err);\n          } finally {\n            _iterator34.f();\n          }\n\n          domain.push(smallestSum);\n          domain.push(biggestSum);\n        }\n      } catch (err) {\n        _iterator33.e(err);\n      } finally {\n        _iterator33.f();\n      }\n\n      domain.push(smallest);\n      domain.push(biggest);\n      var min = Math.min.apply(Math, [0].concat(domain));\n      var max = this.xScaleMax ? Math.max.apply(Math, [this.xScaleMax].concat(domain)) : Math.max.apply(Math, domain);\n      return [min, max];\n    }\n  }, {\n    key: \"getYScale\",\n    value: function getYScale() {\n      var spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n      return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n  }, {\n    key: \"getXScale\",\n    value: function getXScale() {\n      var scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"groupTransform\",\n    value: function groupTransform(group) {\n      return \"translate(0, \".concat(this.yScale(group.name), \")\");\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data, group) {\n      if (group) {\n        data.series = group.name;\n      }\n\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      var domain;\n\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.innerDomain;\n      } else {\n        domain = this.valueDomain;\n      }\n\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      var opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.innerDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.valueDomain;\n        opts.colors = this.colors.scale;\n      }\n\n      return opts;\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref21) {\n      var width = _ref21.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref22) {\n      var height = _ref22.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onDataLabelMaxWidthChanged\",\n    value: function onDataLabelMaxWidthChanged(event, groupIndex) {\n      var _this39 = this;\n\n      if (event.size.negative) {\n        this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n      } else {\n        this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n      }\n\n      if (groupIndex === this.results.length - 1) {\n        setTimeout(function () {\n          return _this39.update();\n        });\n      }\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(event, group) {\n      var fromLegend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var item = Object.assign({}, event);\n\n      if (group) {\n        item.series = group.name;\n      }\n\n      var items = this.results.map(function (g) {\n        return g.series;\n      }).flat().filter(function (i) {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n      this.activeEntries = _toConsumableArray(items);\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(event, group) {\n      var fromLegend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var item = Object.assign({}, event);\n\n      if (group) {\n        item.series = group.name;\n      }\n\n      this.activeEntries = this.activeEntries.filter(function (i) {\n        if (fromLegend) {\n          return i.label !== item.name;\n        } else {\n          return !(i.name === item.name && i.series === item.series);\n        }\n      });\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }]);\n\n  return BarHorizontalStackedComponent;\n}(BaseChartComponent);\n\nBarHorizontalStackedComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵBarHorizontalStackedComponent_BaseFactory;\n  return function BarHorizontalStackedComponent_Factory(t) {\n    return (ɵBarHorizontalStackedComponent_BaseFactory || (ɵBarHorizontalStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalStackedComponent)))(t || BarHorizontalStackedComponent);\n  };\n}();\n\nBarHorizontalStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalStackedComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-stacked\"]],\n  contentQueries: function BarHorizontalStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    xScaleMax: \"xScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"colors\", \"series\", \"activeEntries\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"]],\n  template: function BarHorizontalStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalStackedComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontalStackedComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, BarHorizontalStackedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(5, BarHorizontalStackedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-stacked',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, undefined, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, undefined, true)\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          [yAxisOffset]=\\\"dataLabelMaxWidth.negative\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g *ngIf=\\\"!isSSR\\\">\\n          <svg:g\\n            *ngFor=\\\"let group of results; let index = index; trackBy: trackBy\\\"\\n            [@animationState]=\\\"'active'\\\"\\n            [attr.transform]=\\\"groupTransform(group)\\\"\\n          >\\n            <svg:g\\n              ngx-charts-series-horizontal\\n              [type]=\\\"barChartType.Stacked\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [colors]=\\\"colors\\\"\\n              [series]=\\\"group.series\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [dims]=\\\"dims\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              [seriesName]=\\\"group.name\\\"\\n              [animations]=\\\"animations\\\"\\n              [showDataLabel]=\\\"showDataLabel\\\"\\n              [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n              [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n              (select)=\\\"onClick($event, group)\\\"\\n              (activate)=\\\"onActivate($event, group)\\\"\\n              (deactivate)=\\\"onDeactivate($event, group)\\\"\\n              (dataLabelWidthChanged)=\\\"onDataLabelMaxWidthChanged($event, index)\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n        <svg:g *ngIf=\\\"isSSR\\\">\\n          <svg:g\\n            *ngFor=\\\"let group of results; let index = index; trackBy: trackBy\\\"\\n            [attr.transform]=\\\"groupTransform(group)\\\"\\n          >\\n            <svg:g\\n              ngx-charts-series-horizontal\\n              [type]=\\\"barChartType.Stacked\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [colors]=\\\"colors\\\"\\n              [series]=\\\"group.series\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [dims]=\\\"dims\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              [seriesName]=\\\"group.name\\\"\\n              [animations]=\\\"animations\\\"\\n              [showDataLabel]=\\\"showDataLabel\\\"\\n              [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n              [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n              (select)=\\\"onClick($event, group)\\\"\\n              (activate)=\\\"onActivate($event, group)\\\"\\n              (deactivate)=\\\"onDeactivate($event, group)\\\"\\n              (dataLabelWidthChanged)=\\\"onDataLabelMaxWidthChanged($event, index)\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nvar SeriesVerticalComponent = /*#__PURE__*/function () {\n  function SeriesVerticalComponent(platformId) {\n    _classCallCheck(this, SeriesVerticalComponent);\n\n    this.platformId = platformId;\n    this.type = BarChartType.Standard;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dataLabelHeightChanged = new EventEmitter();\n    this.barsForDataLabels = [];\n    this.barOrientation = BarOrientation;\n    this.isSSR = false;\n  }\n\n  _createClass(SeriesVerticalComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _d3,\n          _this40 = this;\n\n      this.updateTooltipSettings();\n      var width;\n\n      if (this.series.length) {\n        width = this.xScale.bandwidth();\n      }\n\n      width = Math.round(width);\n      var yScaleMin = Math.max(this.yScale.domain()[0], 0);\n      var d0 = (_d3 = {}, _defineProperty(_d3, D0Types.positive, 0), _defineProperty(_d3, D0Types.negative, 0), _d3);\n      var d0Type = D0Types.positive;\n      var total;\n\n      if (this.type === BarChartType.Normalized) {\n        total = this.series.map(function (d) {\n          return d.value;\n        }).reduce(function (sum, d) {\n          return sum + d;\n        }, 0);\n      }\n\n      this.bars = this.series.map(function (d, index) {\n        var value = d.value;\n\n        var label = _this40.getLabel(d);\n\n        var formattedLabel = formatLabel(label);\n        var roundEdges = _this40.roundEdges;\n        d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n        var bar = {\n          value: value,\n          label: label,\n          roundEdges: roundEdges,\n          data: d,\n          width: width,\n          formattedLabel: formattedLabel,\n          height: 0,\n          x: 0,\n          y: 0\n        };\n\n        if (_this40.type === BarChartType.Standard) {\n          bar.height = Math.abs(_this40.yScale(value) - _this40.yScale(yScaleMin));\n          bar.x = _this40.xScale(label);\n\n          if (value < 0) {\n            bar.y = _this40.yScale(0);\n          } else {\n            bar.y = _this40.yScale(value);\n          }\n        } else if (_this40.type === BarChartType.Stacked) {\n          var offset0 = d0[d0Type];\n          var offset1 = offset0 + value;\n          d0[d0Type] += value;\n          bar.height = _this40.yScale(offset0) - _this40.yScale(offset1);\n          bar.x = 0;\n          bar.y = _this40.yScale(offset1);\n          bar.offset0 = offset0;\n          bar.offset1 = offset1;\n        } else if (_this40.type === BarChartType.Normalized) {\n          var _offset4 = d0[d0Type];\n\n          var _offset5 = _offset4 + value;\n\n          d0[d0Type] += value;\n\n          if (total > 0) {\n            _offset4 = _offset4 * 100 / total;\n            _offset5 = _offset5 * 100 / total;\n          } else {\n            _offset4 = 0;\n            _offset5 = 0;\n          }\n\n          bar.height = _this40.yScale(_offset4) - _this40.yScale(_offset5);\n          bar.x = 0;\n          bar.y = _this40.yScale(_offset5);\n          bar.offset0 = _offset4;\n          bar.offset1 = _offset5;\n          value = (_offset5 - _offset4).toFixed(2) + '%';\n        }\n\n        if (_this40.colors.scaleType === ScaleType.Ordinal) {\n          bar.color = _this40.colors.getColor(label);\n        } else {\n          if (_this40.type === BarChartType.Standard) {\n            bar.color = _this40.colors.getColor(value);\n            bar.gradientStops = _this40.colors.getLinearGradientStops(value);\n          } else {\n            bar.color = _this40.colors.getColor(bar.offset1);\n            bar.gradientStops = _this40.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n          }\n        }\n\n        var tooltipLabel = formattedLabel;\n        bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n\n        if (_this40.seriesName !== null && _this40.seriesName !== undefined) {\n          tooltipLabel = \"\".concat(_this40.seriesName, \" \\u2022 \").concat(formattedLabel);\n          bar.data.series = _this40.seriesName;\n          bar.ariaLabel = _this40.seriesName + ' ' + bar.ariaLabel;\n        }\n\n        bar.tooltipText = _this40.tooltipDisabled ? undefined : \"\\n        <span class=\\\"tooltip-label\\\">\".concat(escapeLabel(tooltipLabel), \"</span>\\n        <span class=\\\"tooltip-val\\\">\").concat(_this40.dataLabelFormatting ? _this40.dataLabelFormatting(value) : value.toLocaleString(), \"</span>\\n      \");\n        return bar;\n      });\n      this.updateDataLabels();\n    }\n  }, {\n    key: \"updateDataLabels\",\n    value: function updateDataLabels() {\n      var _this41 = this;\n\n      if (this.type === BarChartType.Stacked) {\n        this.barsForDataLabels = [];\n        var section = {};\n        section.series = this.seriesName;\n        var totalPositive = this.series.map(function (d) {\n          return d.value;\n        }).reduce(function (sum, d) {\n          return d > 0 ? sum + d : sum;\n        }, 0);\n        var totalNegative = this.series.map(function (d) {\n          return d.value;\n        }).reduce(function (sum, d) {\n          return d < 0 ? sum + d : sum;\n        }, 0);\n        section.total = totalPositive + totalNegative;\n        section.x = 0;\n        section.y = 0;\n\n        if (section.total > 0) {\n          section.height = this.yScale(totalPositive);\n        } else {\n          section.height = this.yScale(totalNegative);\n        }\n\n        section.width = this.xScale.bandwidth();\n        this.barsForDataLabels.push(section);\n      } else {\n        this.barsForDataLabels = this.series.map(function (d) {\n          var _this41$seriesName;\n\n          var section = {};\n          section.series = (_this41$seriesName = _this41.seriesName) !== null && _this41$seriesName !== void 0 ? _this41$seriesName : d.label;\n          section.total = d.value;\n          section.x = _this41.xScale(d.label);\n          section.y = _this41.yScale(0);\n          section.height = _this41.yScale(section.total) - _this41.yScale(0);\n          section.width = _this41.xScale.bandwidth();\n          return section;\n        });\n      }\n    }\n  }, {\n    key: \"updateTooltipSettings\",\n    value: function updateTooltipSettings() {\n      this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n      this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive(entry) {\n      if (!this.activeEntries) return false;\n      var item = this.activeEntries.find(function (active) {\n        return entry.name === active.name && entry.value === active.value;\n      });\n      return item !== undefined;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel(dataItem) {\n      if (dataItem.label) {\n        return dataItem.label;\n      }\n\n      return dataItem.name;\n    }\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, bar) {\n      return bar.label;\n    }\n  }, {\n    key: \"trackDataLabelBy\",\n    value: function trackDataLabelBy(index, barLabel) {\n      return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n  }]);\n\n  return SeriesVerticalComponent;\n}();\n\nSeriesVerticalComponent.ɵfac = function SeriesVerticalComponent_Factory(t) {\n  return new (t || SeriesVerticalComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nSeriesVerticalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SeriesVerticalComponent,\n  selectors: [[\"g\", \"ngx-charts-series-vertical\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    type: \"type\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    seriesName: \"seriesName\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    roundEdges: \"roundEdges\",\n    animations: \"animations\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dataLabelHeightChanged: \"dataLabelHeightChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c29,\n  decls: 3,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"ariaLabel\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"animations\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"ariaLabel\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"animations\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\"]],\n  template: function SeriesVerticalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SeriesVerticalComponent__svg_g_0_Template, 2, 2, \"g\", 0);\n      i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_1_Template, 2, 2, \"g\", 0);\n      i0.ɵɵtemplate(2, SeriesVerticalComponent__svg_g_2_Template, 2, 2, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDataLabel);\n    }\n  },\n  dependencies: [BarComponent, BarLabelComponent, i2.NgIf, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SeriesVerticalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-series-vertical]',\n      template: \"\\n    <svg:g *ngIf=\\\"!isSSR\\\">\\n      <svg:g\\n        ngx-charts-bar\\n        *ngFor=\\\"let bar of bars; trackBy: trackBy\\\"\\n        [@animationState]=\\\"'active'\\\"\\n        [@.disabled]=\\\"!animations\\\"\\n        [width]=\\\"bar.width\\\"\\n        [height]=\\\"bar.height\\\"\\n        [x]=\\\"bar.x\\\"\\n        [y]=\\\"bar.y\\\"\\n        [fill]=\\\"bar.color\\\"\\n        [stops]=\\\"bar.gradientStops\\\"\\n        [data]=\\\"bar.data\\\"\\n        [orientation]=\\\"barOrientation.Vertical\\\"\\n        [roundEdges]=\\\"bar.roundEdges\\\"\\n        [gradient]=\\\"gradient\\\"\\n        [ariaLabel]=\\\"bar.ariaLabel\\\"\\n        [isActive]=\\\"isActive(bar.data)\\\"\\n        (select)=\\\"onClick($event)\\\"\\n        (activate)=\\\"activate.emit($event)\\\"\\n        (deactivate)=\\\"deactivate.emit($event)\\\"\\n        ngx-tooltip\\n        [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n        [tooltipPlacement]=\\\"tooltipPlacement\\\"\\n        [tooltipType]=\\\"tooltipType\\\"\\n        [tooltipTitle]=\\\"tooltipTemplate ? undefined : bar.tooltipText\\\"\\n        [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n        [tooltipContext]=\\\"bar.data\\\"\\n        [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n        [animations]=\\\"animations\\\"\\n      ></svg:g>\\n    </svg:g>\\n    <svg:g *ngIf=\\\"isSSR\\\">\\n      <svg:g\\n        ngx-charts-bar\\n        *ngFor=\\\"let bar of bars; trackBy: trackBy\\\"\\n        [width]=\\\"bar.width\\\"\\n        [height]=\\\"bar.height\\\"\\n        [x]=\\\"bar.x\\\"\\n        [y]=\\\"bar.y\\\"\\n        [fill]=\\\"bar.color\\\"\\n        [stops]=\\\"bar.gradientStops\\\"\\n        [data]=\\\"bar.data\\\"\\n        [orientation]=\\\"barOrientation.Vertical\\\"\\n        [roundEdges]=\\\"bar.roundEdges\\\"\\n        [gradient]=\\\"gradient\\\"\\n        [ariaLabel]=\\\"bar.ariaLabel\\\"\\n        [isActive]=\\\"isActive(bar.data)\\\"\\n        (select)=\\\"onClick($event)\\\"\\n        (activate)=\\\"activate.emit($event)\\\"\\n        (deactivate)=\\\"deactivate.emit($event)\\\"\\n        ngx-tooltip\\n        [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n        [tooltipPlacement]=\\\"tooltipPlacement\\\"\\n        [tooltipType]=\\\"tooltipType\\\"\\n        [tooltipTitle]=\\\"tooltipTemplate ? undefined : bar.tooltipText\\\"\\n        [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n        [tooltipContext]=\\\"bar.data\\\"\\n        [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n        [animations]=\\\"animations\\\"\\n      ></svg:g>\\n    </svg:g>\\n    <svg:g *ngIf=\\\"showDataLabel\\\">\\n      <svg:g\\n        ngx-charts-bar-label\\n        *ngFor=\\\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\\\"\\n        [barX]=\\\"b.x\\\"\\n        [barY]=\\\"b.y\\\"\\n        [barWidth]=\\\"b.width\\\"\\n        [barHeight]=\\\"b.height\\\"\\n        [value]=\\\"b.total\\\"\\n        [valueFormatting]=\\\"dataLabelFormatting\\\"\\n        [orientation]=\\\"barOrientation.Vertical\\\"\\n        (dimensionsChanged)=\\\"dataLabelHeightChanged.emit({ size: $event, index: i })\\\"\\n      />\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    dims: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    seriesName: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dataLabelHeightChanged: [{\n      type: Output\n    }]\n  });\n})();\n\nvar BarVerticalComponent = /*#__PURE__*/function (_BaseChartComponent8) {\n  _inherits(BarVerticalComponent, _BaseChartComponent8);\n\n  var _super9 = _createSuper(BarVerticalComponent);\n\n  function BarVerticalComponent() {\n    var _this42;\n\n    _classCallCheck(this, BarVerticalComponent);\n\n    _this42 = _super9.apply(this, arguments);\n    _this42.legend = false;\n    _this42.legendTitle = 'Legend';\n    _this42.legendPosition = LegendPosition.Right;\n    _this42.tooltipDisabled = false;\n    _this42.showGridLines = true;\n    _this42.activeEntries = [];\n    _this42.trimXAxisTicks = true;\n    _this42.trimYAxisTicks = true;\n    _this42.rotateXAxisTicks = true;\n    _this42.maxXAxisTickLength = 16;\n    _this42.maxYAxisTickLength = 16;\n    _this42.barPadding = 8;\n    _this42.roundDomains = false;\n    _this42.roundEdges = true;\n    _this42.showDataLabel = false;\n    _this42.noBarWhenZero = true;\n    _this42.activate = new EventEmitter();\n    _this42.deactivate = new EventEmitter();\n    _this42.margin = [10, 20, 10, 20];\n    _this42.xAxisHeight = 0;\n    _this42.yAxisWidth = 0;\n    _this42.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n    return _this42;\n  }\n\n  _createClass(BarVerticalComponent, [{\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(BarVerticalComponent.prototype), \"update\", this).call(this);\n\n      if (!this.showDataLabel) {\n        this.dataLabelMaxHeight = {\n          negative: 0,\n          positive: 0\n        };\n      }\n\n      this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      this.formatDates();\n\n      if (this.showDataLabel) {\n        this.dims.height -= this.dataLabelMaxHeight.negative;\n      }\n\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \" , \").concat(this.margin[0] + this.dataLabelMaxHeight.negative, \")\");\n    }\n  }, {\n    key: \"getXScale\",\n    value: function getXScale() {\n      this.xDomain = this.getXDomain();\n      var spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n      return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n    }\n  }, {\n    key: \"getYScale\",\n    value: function getYScale() {\n      this.yDomain = this.getYDomain();\n      var scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"getXDomain\",\n    value: function getXDomain() {\n      return this.results.map(function (d) {\n        return d.label;\n      });\n    }\n  }, {\n    key: \"getYDomain\",\n    value: function getYDomain() {\n      var values = this.results.map(function (d) {\n        return d.value;\n      });\n      var min = this.yScaleMin ? Math.min.apply(Math, [this.yScaleMin].concat(_toConsumableArray(values))) : Math.min.apply(Math, [0].concat(_toConsumableArray(values)));\n\n      if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n        min = Math.min.apply(Math, [min].concat(_toConsumableArray(this.yAxisTicks)));\n      }\n\n      var max = this.yScaleMax ? Math.max.apply(Math, [this.yScaleMax].concat(_toConsumableArray(values))) : Math.max.apply(Math, [0].concat(_toConsumableArray(values)));\n\n      if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n        max = Math.max.apply(Math, [max].concat(_toConsumableArray(this.yAxisTicks)));\n      }\n\n      return [min, max];\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      var domain;\n\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.xDomain;\n      } else {\n        domain = this.yDomain;\n      }\n\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      var opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.xDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.yDomain;\n        opts.colors = this.colors.scale;\n      }\n\n      return opts;\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref23) {\n      var width = _ref23.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref24) {\n      var height = _ref24.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onDataLabelMaxHeightChanged\",\n    value: function onDataLabelMaxHeightChanged(event) {\n      var _this43 = this;\n\n      if (event.size.negative) {\n        this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n      } else {\n        this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n      }\n\n      if (event.index === this.results.length - 1) {\n        setTimeout(function () {\n          return _this43.update();\n        });\n      }\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(item) {\n      var fromLegend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      item = this.results.find(function (d) {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n\n      if (idx > -1) {\n        return;\n      }\n\n      this.activeEntries = [item].concat(_toConsumableArray(this.activeEntries));\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(item) {\n      var fromLegend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      item = this.results.find(function (d) {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }]);\n\n  return BarVerticalComponent;\n}(BaseChartComponent);\n\nBarVerticalComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵBarVerticalComponent_BaseFactory;\n  return function BarVerticalComponent_Factory(t) {\n    return (ɵBarVerticalComponent_BaseFactory || (ɵBarVerticalComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalComponent)))(t || BarVerticalComponent);\n  };\n}();\n\nBarVerticalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalComponent,\n  selectors: [[\"ngx-charts-bar-vertical\"]],\n  contentQueries: function BarVerticalComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    yScaleMax: \"yScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 25,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-series-vertical\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"activeEntries\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"activate\", \"deactivate\", \"select\", \"dataLabelHeightChanged\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"]],\n  template: function BarVerticalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalComponent__svg_g_2_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVerticalComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(4, \"g\", 4);\n      i0.ɵɵlistener(\"activate\", function BarVerticalComponent_Template__svg_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function BarVerticalComponent_Template__svg_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      })(\"select\", function BarVerticalComponent_Template__svg_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"dataLabelHeightChanged\", function BarVerticalComponent_Template__svg_g_dataLabelHeightChanged_4_listener($event) {\n        return ctx.onDataLabelMaxHeightChanged($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(22, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"series\", ctx.results)(\"dims\", ctx.dims)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"showDataLabel\", ctx.showDataLabel)(\"dataLabelFormatting\", ctx.dataLabelFormatting)(\"activeEntries\", ctx.activeEntries)(\"roundEdges\", ctx.roundEdges)(\"animations\", ctx.animations)(\"noBarWhenZero\", ctx.noBarWhenZero);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, true)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          [xAxisOffset]=\\\"dataLabelMaxHeight.negative\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-series-vertical\\n          [xScale]=\\\"xScale\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [colors]=\\\"colors\\\"\\n          [series]=\\\"results\\\"\\n          [dims]=\\\"dims\\\"\\n          [gradient]=\\\"gradient\\\"\\n          [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [showDataLabel]=\\\"showDataLabel\\\"\\n          [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n          [activeEntries]=\\\"activeEntries\\\"\\n          [roundEdges]=\\\"roundEdges\\\"\\n          [animations]=\\\"animations\\\"\\n          [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n          (activate)=\\\"onActivate($event)\\\"\\n          (deactivate)=\\\"onDeactivate($event)\\\"\\n          (select)=\\\"onClick($event)\\\"\\n          (dataLabelHeightChanged)=\\\"onDataLabelMaxHeightChanged($event)\\\"\\n        ></svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nvar BarVertical2DComponent = /*#__PURE__*/function (_BaseChartComponent9) {\n  _inherits(BarVertical2DComponent, _BaseChartComponent9);\n\n  var _super10 = _createSuper(BarVertical2DComponent);\n\n  function BarVertical2DComponent() {\n    var _this44;\n\n    _classCallCheck(this, BarVertical2DComponent);\n\n    _this44 = _super10.apply(this, arguments);\n    _this44.legend = false;\n    _this44.legendTitle = 'Legend';\n    _this44.legendPosition = LegendPosition.Right;\n    _this44.tooltipDisabled = false;\n    _this44.scaleType = ScaleType.Ordinal;\n    _this44.showGridLines = true;\n    _this44.activeEntries = [];\n    _this44.trimXAxisTicks = true;\n    _this44.trimYAxisTicks = true;\n    _this44.rotateXAxisTicks = true;\n    _this44.maxXAxisTickLength = 16;\n    _this44.maxYAxisTickLength = 16;\n    _this44.groupPadding = 16;\n    _this44.barPadding = 8;\n    _this44.roundDomains = false;\n    _this44.roundEdges = true;\n    _this44.showDataLabel = false;\n    _this44.noBarWhenZero = true;\n    _this44.activate = new EventEmitter();\n    _this44.deactivate = new EventEmitter();\n    _this44.margin = [10, 20, 10, 20];\n    _this44.xAxisHeight = 0;\n    _this44.yAxisWidth = 0;\n    _this44.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n    _this44.isSSR = false;\n    _this44.barOrientation = BarOrientation;\n\n    _this44.trackBy = function (index, item) {\n      return item.name;\n    };\n\n    return _this44;\n  }\n\n  _createClass(BarVertical2DComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(BarVertical2DComponent.prototype), \"update\", this).call(this);\n\n      if (!this.showDataLabel) {\n        this.dataLabelMaxHeight = {\n          negative: 0,\n          positive: 0\n        };\n      }\n\n      this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n\n      if (this.showDataLabel) {\n        this.dims.height -= this.dataLabelMaxHeight.negative;\n      }\n\n      this.formatDates();\n      this.groupDomain = this.getGroupDomain();\n      this.innerDomain = this.getInnerDomain();\n      this.valueDomain = this.getValueDomain();\n      this.groupScale = this.getGroupScale();\n      this.innerScale = this.getInnerScale();\n      this.valueScale = this.getValueScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \" , \").concat(this.margin[0] + this.dataLabelMaxHeight.negative, \")\");\n    }\n  }, {\n    key: \"onDataLabelMaxHeightChanged\",\n    value: function onDataLabelMaxHeightChanged(event, groupIndex) {\n      var _this45 = this;\n\n      if (event.size.negative) {\n        this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n      } else {\n        this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n      }\n\n      if (groupIndex === this.results.length - 1) {\n        setTimeout(function () {\n          return _this45.update();\n        });\n      }\n    }\n  }, {\n    key: \"getGroupScale\",\n    value: function getGroupScale() {\n      var spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n      return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).paddingOuter(spacing / 2).domain(this.groupDomain);\n    }\n  }, {\n    key: \"getInnerScale\",\n    value: function getInnerScale() {\n      var width = this.groupScale.bandwidth();\n      var spacing = this.innerDomain.length / (width / this.barPadding + 1);\n      return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n    }\n  }, {\n    key: \"getValueScale\",\n    value: function getValueScale() {\n      var scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"getGroupDomain\",\n    value: function getGroupDomain() {\n      var domain = [];\n\n      var _iterator35 = _createForOfIteratorHelper(this.results),\n          _step35;\n\n      try {\n        for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {\n          var group = _step35.value;\n\n          if (!domain.includes(group.label)) {\n            domain.push(group.label);\n          }\n        }\n      } catch (err) {\n        _iterator35.e(err);\n      } finally {\n        _iterator35.f();\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getInnerDomain\",\n    value: function getInnerDomain() {\n      var domain = [];\n\n      var _iterator36 = _createForOfIteratorHelper(this.results),\n          _step36;\n\n      try {\n        for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {\n          var group = _step36.value;\n\n          var _iterator37 = _createForOfIteratorHelper(group.series),\n              _step37;\n\n          try {\n            for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {\n              var d = _step37.value;\n\n              if (!domain.includes(d.label)) {\n                domain.push(d.label);\n              }\n            }\n          } catch (err) {\n            _iterator37.e(err);\n          } finally {\n            _iterator37.f();\n          }\n        }\n      } catch (err) {\n        _iterator36.e(err);\n      } finally {\n        _iterator36.f();\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getValueDomain\",\n    value: function getValueDomain() {\n      var domain = [];\n\n      var _iterator38 = _createForOfIteratorHelper(this.results),\n          _step38;\n\n      try {\n        for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {\n          var group = _step38.value;\n\n          var _iterator39 = _createForOfIteratorHelper(group.series),\n              _step39;\n\n          try {\n            for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {\n              var d = _step39.value;\n\n              if (!domain.includes(d.value)) {\n                domain.push(d.value);\n              }\n            }\n          } catch (err) {\n            _iterator39.e(err);\n          } finally {\n            _iterator39.f();\n          }\n        }\n      } catch (err) {\n        _iterator38.e(err);\n      } finally {\n        _iterator38.f();\n      }\n\n      var min = Math.min.apply(Math, [0].concat(domain));\n      var max = this.yScaleMax ? Math.max.apply(Math, [this.yScaleMax].concat(domain)) : Math.max.apply(Math, [0].concat(domain));\n      return [min, max];\n    }\n  }, {\n    key: \"groupTransform\",\n    value: function groupTransform(group) {\n      return \"translate(\".concat(this.groupScale(group.label), \", 0)\");\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data, group) {\n      if (group) {\n        data.series = group.name;\n      }\n\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      var domain;\n\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.innerDomain;\n      } else {\n        domain = this.valueDomain;\n      }\n\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      var opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.innerDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.valueDomain;\n        opts.colors = this.colors.scale;\n      }\n\n      return opts;\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref25) {\n      var width = _ref25.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref26) {\n      var height = _ref26.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(event, group) {\n      var fromLegend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var item = Object.assign({}, event);\n\n      if (group) {\n        item.series = group.name;\n      }\n\n      var items = this.results.map(function (g) {\n        return g.series;\n      }).flat().filter(function (i) {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n      this.activeEntries = _toConsumableArray(items);\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(event, group) {\n      var fromLegend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var item = Object.assign({}, event);\n\n      if (group) {\n        item.series = group.name;\n      }\n\n      this.activeEntries = this.activeEntries.filter(function (i) {\n        if (fromLegend) {\n          return i.label !== item.name;\n        } else {\n          return !(i.name === item.name && i.series === item.series);\n        }\n      });\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }]);\n\n  return BarVertical2DComponent;\n}(BaseChartComponent);\n\nBarVertical2DComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵBarVertical2DComponent_BaseFactory;\n  return function BarVertical2DComponent_Factory(t) {\n    return (ɵBarVertical2DComponent_BaseFactory || (ɵBarVertical2DComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVertical2DComponent)))(t || BarVertical2DComponent);\n  };\n}();\n\nBarVertical2DComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVertical2DComponent,\n  selectors: [[\"ngx-charts-bar-vertical-2d\"]],\n  contentQueries: function BarVertical2DComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    scaleType: \"scaleType\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    groupPadding: \"groupPadding\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    yScaleMax: \"yScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 18,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\", \"orient\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-series-vertical\", \"\", 3, \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"]],\n  template: function BarVertical2DComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVertical2DComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵtemplate(4, BarVertical2DComponent__svg_g_4_Template, 1, 9, \"g\", 4);\n      i0.ɵɵtemplate(5, BarVertical2DComponent__svg_g_5_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, BarVertical2DComponent__svg_g_6_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(15, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.groupScale)(\"yScale\", ctx.valueScale)(\"data\", ctx.results)(\"dims\", ctx.dims)(\"orient\", ctx.barOrientation.Vertical);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, GridPanelSeriesComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVertical2DComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-2d',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, undefined, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, undefined, true)\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-grid-panel-series\\n          [xScale]=\\\"groupScale\\\"\\n          [yScale]=\\\"valueScale\\\"\\n          [data]=\\\"results\\\"\\n          [dims]=\\\"dims\\\"\\n          [orient]=\\\"barOrientation.Vertical\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"groupScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          [xAxisOffset]=\\\"dataLabelMaxHeight.negative\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"valueScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g *ngIf=\\\"!isSSR\\\">\\n          <svg:g\\n            ngx-charts-series-vertical\\n            *ngFor=\\\"let group of results; let index = index; trackBy: trackBy\\\"\\n            [@animationState]=\\\"'active'\\\"\\n            [attr.transform]=\\\"groupTransform(group)\\\"\\n            [activeEntries]=\\\"activeEntries\\\"\\n            [xScale]=\\\"innerScale\\\"\\n            [yScale]=\\\"valueScale\\\"\\n            [colors]=\\\"colors\\\"\\n            [series]=\\\"group.series\\\"\\n            [dims]=\\\"dims\\\"\\n            [gradient]=\\\"gradient\\\"\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n            [showDataLabel]=\\\"showDataLabel\\\"\\n            [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n            [seriesName]=\\\"group.name\\\"\\n            [roundEdges]=\\\"roundEdges\\\"\\n            [animations]=\\\"animations\\\"\\n            [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n            (select)=\\\"onClick($event, group)\\\"\\n            (activate)=\\\"onActivate($event, group)\\\"\\n            (deactivate)=\\\"onDeactivate($event, group)\\\"\\n            (dataLabelHeightChanged)=\\\"onDataLabelMaxHeightChanged($event, index)\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n      <svg:g *ngIf=\\\"isSSR\\\">\\n        <svg:g\\n          ngx-charts-series-vertical\\n          *ngFor=\\\"let group of results; let index = index; trackBy: trackBy\\\"\\n          [attr.transform]=\\\"groupTransform(group)\\\"\\n          [activeEntries]=\\\"activeEntries\\\"\\n          [xScale]=\\\"innerScale\\\"\\n          [yScale]=\\\"valueScale\\\"\\n          [colors]=\\\"colors\\\"\\n          [series]=\\\"group.series\\\"\\n          [dims]=\\\"dims\\\"\\n          [gradient]=\\\"gradient\\\"\\n          [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [showDataLabel]=\\\"showDataLabel\\\"\\n          [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n          [seriesName]=\\\"group.name\\\"\\n          [roundEdges]=\\\"roundEdges\\\"\\n          [animations]=\\\"animations\\\"\\n          [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n          (select)=\\\"onClick($event, group)\\\"\\n          (activate)=\\\"onActivate($event, group)\\\"\\n          (deactivate)=\\\"onDeactivate($event, group)\\\"\\n          (dataLabelHeightChanged)=\\\"onDataLabelMaxHeightChanged($event, index)\\\"\\n        />\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    groupPadding: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nvar BarVerticalNormalizedComponent = /*#__PURE__*/function (_BaseChartComponent10) {\n  _inherits(BarVerticalNormalizedComponent, _BaseChartComponent10);\n\n  var _super11 = _createSuper(BarVerticalNormalizedComponent);\n\n  function BarVerticalNormalizedComponent() {\n    var _this46;\n\n    _classCallCheck(this, BarVerticalNormalizedComponent);\n\n    _this46 = _super11.apply(this, arguments);\n    _this46.legend = false;\n    _this46.legendTitle = 'Legend';\n    _this46.legendPosition = LegendPosition.Right;\n    _this46.tooltipDisabled = false;\n    _this46.showGridLines = true;\n    _this46.activeEntries = [];\n    _this46.trimXAxisTicks = true;\n    _this46.trimYAxisTicks = true;\n    _this46.rotateXAxisTicks = true;\n    _this46.maxXAxisTickLength = 16;\n    _this46.maxYAxisTickLength = 16;\n    _this46.barPadding = 8;\n    _this46.roundDomains = false;\n    _this46.noBarWhenZero = true;\n    _this46.activate = new EventEmitter();\n    _this46.deactivate = new EventEmitter();\n    _this46.valueDomain = [0, 100];\n    _this46.margin = [10, 20, 10, 20];\n    _this46.xAxisHeight = 0;\n    _this46.yAxisWidth = 0;\n    _this46.isSSR = false;\n    _this46.barChartType = BarChartType;\n\n    _this46.trackBy = function (index, item) {\n      return item.name;\n    };\n\n    return _this46;\n  }\n\n  _createClass(BarVerticalNormalizedComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(BarVerticalNormalizedComponent.prototype), \"update\", this).call(this);\n\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      this.formatDates();\n      this.groupDomain = this.getGroupDomain();\n      this.innerDomain = this.getInnerDomain();\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \" , \").concat(this.margin[0], \")\");\n    }\n  }, {\n    key: \"getGroupDomain\",\n    value: function getGroupDomain() {\n      var domain = [];\n\n      var _iterator40 = _createForOfIteratorHelper(this.results),\n          _step40;\n\n      try {\n        for (_iterator40.s(); !(_step40 = _iterator40.n()).done;) {\n          var group = _step40.value;\n\n          if (!domain.includes(group.label)) {\n            domain.push(group.label);\n          }\n        }\n      } catch (err) {\n        _iterator40.e(err);\n      } finally {\n        _iterator40.f();\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getInnerDomain\",\n    value: function getInnerDomain() {\n      var domain = [];\n\n      var _iterator41 = _createForOfIteratorHelper(this.results),\n          _step41;\n\n      try {\n        for (_iterator41.s(); !(_step41 = _iterator41.n()).done;) {\n          var group = _step41.value;\n\n          var _iterator42 = _createForOfIteratorHelper(group.series),\n              _step42;\n\n          try {\n            for (_iterator42.s(); !(_step42 = _iterator42.n()).done;) {\n              var d = _step42.value;\n\n              if (!domain.includes(d.label)) {\n                domain.push(d.label);\n              }\n            }\n          } catch (err) {\n            _iterator42.e(err);\n          } finally {\n            _iterator42.f();\n          }\n        }\n      } catch (err) {\n        _iterator41.e(err);\n      } finally {\n        _iterator41.f();\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getXScale\",\n    value: function getXScale() {\n      var spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n      return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n  }, {\n    key: \"getYScale\",\n    value: function getYScale() {\n      var scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"groupTransform\",\n    value: function groupTransform(group) {\n      return \"translate(\".concat(this.xScale(group.name), \", 0)\");\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data, group) {\n      if (group) {\n        data.series = group.name;\n      }\n\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      var domain;\n\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.innerDomain;\n      } else {\n        domain = this.valueDomain;\n      }\n\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      var opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.innerDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.valueDomain;\n        opts.colors = this.colors.scale;\n      }\n\n      return opts;\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref27) {\n      var width = _ref27.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref28) {\n      var height = _ref28.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(event, group) {\n      var fromLegend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var item = Object.assign({}, event);\n\n      if (group) {\n        item.series = group.name;\n      }\n\n      var items = this.results.map(function (g) {\n        return g.series;\n      }).flat().filter(function (i) {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n      this.activeEntries = _toConsumableArray(items);\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(event, group) {\n      var fromLegend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var item = Object.assign({}, event);\n\n      if (group) {\n        item.series = group.name;\n      }\n\n      this.activeEntries = this.activeEntries.filter(function (i) {\n        if (fromLegend) {\n          return i.label !== item.name;\n        } else {\n          return !(i.name === item.name && i.series === item.series);\n        }\n      });\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }]);\n\n  return BarVerticalNormalizedComponent;\n}(BaseChartComponent);\n\nBarVerticalNormalizedComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵBarVerticalNormalizedComponent_BaseFactory;\n  return function BarVerticalNormalizedComponent_Factory(t) {\n    return (ɵBarVerticalNormalizedComponent_BaseFactory || (ɵBarVerticalNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalNormalizedComponent)))(t || BarVerticalNormalizedComponent);\n  };\n}();\n\nBarVerticalNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalNormalizedComponent,\n  selectors: [[\"ngx-charts-bar-vertical-normalized\"]],\n  contentQueries: function BarVerticalNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BarVerticalNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalNormalizedComponent__svg_g_2_Template, 1, 9, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVerticalNormalizedComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, BarVerticalNormalizedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(5, BarVerticalNormalizedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-normalized',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, undefined, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, undefined, true)\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g *ngIf=\\\"!isSSR\\\">\\n          <svg:g\\n            *ngFor=\\\"let group of results; trackBy: trackBy\\\"\\n            [@animationState]=\\\"'active'\\\"\\n            [attr.transform]=\\\"groupTransform(group)\\\"\\n          >\\n            <svg:g\\n              ngx-charts-series-vertical\\n              [type]=\\\"barChartType.Normalized\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [colors]=\\\"colors\\\"\\n              [series]=\\\"group.series\\\"\\n              [dims]=\\\"dims\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              [seriesName]=\\\"group.name\\\"\\n              [animations]=\\\"animations\\\"\\n              [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n              (select)=\\\"onClick($event, group)\\\"\\n              (activate)=\\\"onActivate($event, group)\\\"\\n              (deactivate)=\\\"onDeactivate($event, group)\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n        <svg:g *ngIf=\\\"isSSR\\\">\\n          <svg:g *ngFor=\\\"let group of results; trackBy: trackBy\\\" [attr.transform]=\\\"groupTransform(group)\\\">\\n            <svg:g\\n              ngx-charts-series-vertical\\n              [type]=\\\"barChartType.Normalized\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [colors]=\\\"colors\\\"\\n              [series]=\\\"group.series\\\"\\n              [dims]=\\\"dims\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              [seriesName]=\\\"group.name\\\"\\n              [animations]=\\\"animations\\\"\\n              [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n              (select)=\\\"onClick($event, group)\\\"\\n              (activate)=\\\"onActivate($event, group)\\\"\\n              (deactivate)=\\\"onDeactivate($event, group)\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nvar BarVerticalStackedComponent = /*#__PURE__*/function (_BaseChartComponent11) {\n  _inherits(BarVerticalStackedComponent, _BaseChartComponent11);\n\n  var _super12 = _createSuper(BarVerticalStackedComponent);\n\n  function BarVerticalStackedComponent() {\n    var _this47;\n\n    _classCallCheck(this, BarVerticalStackedComponent);\n\n    _this47 = _super12.apply(this, arguments);\n    _this47.legend = false;\n    _this47.legendTitle = 'Legend';\n    _this47.legendPosition = LegendPosition.Right;\n    _this47.tooltipDisabled = false;\n    _this47.showGridLines = true;\n    _this47.activeEntries = [];\n    _this47.trimXAxisTicks = true;\n    _this47.trimYAxisTicks = true;\n    _this47.rotateXAxisTicks = true;\n    _this47.maxXAxisTickLength = 16;\n    _this47.maxYAxisTickLength = 16;\n    _this47.barPadding = 8;\n    _this47.roundDomains = false;\n    _this47.showDataLabel = false;\n    _this47.noBarWhenZero = true;\n    _this47.activate = new EventEmitter();\n    _this47.deactivate = new EventEmitter();\n    _this47.margin = [10, 20, 10, 20];\n    _this47.xAxisHeight = 0;\n    _this47.yAxisWidth = 0;\n    _this47.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n    _this47.isSSR = false;\n    _this47.barChartType = BarChartType;\n\n    _this47.trackBy = function (index, item) {\n      return item.name;\n    };\n\n    return _this47;\n  }\n\n  _createClass(BarVerticalStackedComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(BarVerticalStackedComponent.prototype), \"update\", this).call(this);\n\n      if (!this.showDataLabel) {\n        this.dataLabelMaxHeight = {\n          negative: 0,\n          positive: 0\n        };\n      }\n\n      this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n\n      if (this.showDataLabel) {\n        this.dims.height -= this.dataLabelMaxHeight.negative;\n      }\n\n      this.formatDates();\n      this.groupDomain = this.getGroupDomain();\n      this.innerDomain = this.getInnerDomain();\n      this.valueDomain = this.getValueDomain();\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \" , \").concat(this.margin[0] + this.dataLabelMaxHeight.negative, \")\");\n    }\n  }, {\n    key: \"getGroupDomain\",\n    value: function getGroupDomain() {\n      var domain = [];\n\n      var _iterator43 = _createForOfIteratorHelper(this.results),\n          _step43;\n\n      try {\n        for (_iterator43.s(); !(_step43 = _iterator43.n()).done;) {\n          var group = _step43.value;\n\n          if (!domain.includes(group.label)) {\n            domain.push(group.label);\n          }\n        }\n      } catch (err) {\n        _iterator43.e(err);\n      } finally {\n        _iterator43.f();\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getInnerDomain\",\n    value: function getInnerDomain() {\n      var domain = [];\n\n      var _iterator44 = _createForOfIteratorHelper(this.results),\n          _step44;\n\n      try {\n        for (_iterator44.s(); !(_step44 = _iterator44.n()).done;) {\n          var group = _step44.value;\n\n          var _iterator45 = _createForOfIteratorHelper(group.series),\n              _step45;\n\n          try {\n            for (_iterator45.s(); !(_step45 = _iterator45.n()).done;) {\n              var d = _step45.value;\n\n              if (!domain.includes(d.label)) {\n                domain.push(d.label);\n              }\n            }\n          } catch (err) {\n            _iterator45.e(err);\n          } finally {\n            _iterator45.f();\n          }\n        }\n      } catch (err) {\n        _iterator44.e(err);\n      } finally {\n        _iterator44.f();\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getValueDomain\",\n    value: function getValueDomain() {\n      var domain = [];\n      var smallest = 0;\n      var biggest = 0;\n\n      var _iterator46 = _createForOfIteratorHelper(this.results),\n          _step46;\n\n      try {\n        for (_iterator46.s(); !(_step46 = _iterator46.n()).done;) {\n          var group = _step46.value;\n          var smallestSum = 0;\n          var biggestSum = 0;\n\n          var _iterator47 = _createForOfIteratorHelper(group.series),\n              _step47;\n\n          try {\n            for (_iterator47.s(); !(_step47 = _iterator47.n()).done;) {\n              var d = _step47.value;\n\n              if (d.value < 0) {\n                smallestSum += d.value;\n              } else {\n                biggestSum += d.value;\n              }\n\n              smallest = d.value < smallest ? d.value : smallest;\n              biggest = d.value > biggest ? d.value : biggest;\n            }\n          } catch (err) {\n            _iterator47.e(err);\n          } finally {\n            _iterator47.f();\n          }\n\n          domain.push(smallestSum);\n          domain.push(biggestSum);\n        }\n      } catch (err) {\n        _iterator46.e(err);\n      } finally {\n        _iterator46.f();\n      }\n\n      domain.push(smallest);\n      domain.push(biggest);\n      var min = Math.min.apply(Math, [0].concat(domain));\n      var max = this.yScaleMax ? Math.max.apply(Math, [this.yScaleMax].concat(domain)) : Math.max.apply(Math, domain);\n      return [min, max];\n    }\n  }, {\n    key: \"getXScale\",\n    value: function getXScale() {\n      var spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n      return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n  }, {\n    key: \"getYScale\",\n    value: function getYScale() {\n      var scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"onDataLabelMaxHeightChanged\",\n    value: function onDataLabelMaxHeightChanged(event, groupIndex) {\n      var _this48 = this;\n\n      if (event.size.negative) {\n        this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n      } else {\n        this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n      }\n\n      if (groupIndex === this.results.length - 1) {\n        setTimeout(function () {\n          return _this48.update();\n        });\n      }\n    }\n  }, {\n    key: \"groupTransform\",\n    value: function groupTransform(group) {\n      return \"translate(\".concat(this.xScale(group.name) || 0, \", 0)\");\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data, group) {\n      if (group) {\n        data.series = group.name;\n      }\n\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      var domain;\n\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.innerDomain;\n      } else {\n        domain = this.valueDomain;\n      }\n\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      var opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.innerDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.valueDomain;\n        opts.colors = this.colors.scale;\n      }\n\n      return opts;\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref29) {\n      var width = _ref29.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref30) {\n      var height = _ref30.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(event, group) {\n      var fromLegend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var item = Object.assign({}, event);\n\n      if (group) {\n        item.series = group.name;\n      }\n\n      var items = this.results.map(function (g) {\n        return g.series;\n      }).flat().filter(function (i) {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n      this.activeEntries = _toConsumableArray(items);\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(event, group) {\n      var fromLegend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var item = Object.assign({}, event);\n\n      if (group) {\n        item.series = group.name;\n      }\n\n      this.activeEntries = this.activeEntries.filter(function (i) {\n        if (fromLegend) {\n          return i.label !== item.name;\n        } else {\n          return !(i.name === item.name && i.series === item.series);\n        }\n      });\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }]);\n\n  return BarVerticalStackedComponent;\n}(BaseChartComponent);\n\nBarVerticalStackedComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵBarVerticalStackedComponent_BaseFactory;\n  return function BarVerticalStackedComponent_Factory(t) {\n    return (ɵBarVerticalStackedComponent_BaseFactory || (ɵBarVerticalStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalStackedComponent)))(t || BarVerticalStackedComponent);\n  };\n}();\n\nBarVerticalStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalStackedComponent,\n  selectors: [[\"ngx-charts-bar-vertical-stacked\"]],\n  contentQueries: function BarVerticalStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    yScaleMax: \"yScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"]],\n  template: function BarVerticalStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalStackedComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVerticalStackedComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, BarVerticalStackedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, BarVerticalStackedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-stacked',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, undefined, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, undefined, true)\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bar-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          [xAxisOffset]=\\\"dataLabelMaxHeight.negative\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g *ngIf=\\\"!isSSR\\\">\\n          <svg:g\\n            *ngFor=\\\"let group of results; let index = index; trackBy: trackBy\\\"\\n            [@animationState]=\\\"'active'\\\"\\n            [attr.transform]=\\\"groupTransform(group)\\\"\\n          >\\n            <svg:g\\n              ngx-charts-series-vertical\\n              [type]=\\\"barChartType.Stacked\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [colors]=\\\"colors\\\"\\n              [series]=\\\"group.series\\\"\\n              [dims]=\\\"dims\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              [showDataLabel]=\\\"showDataLabel\\\"\\n              [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n              [seriesName]=\\\"group.name\\\"\\n              [animations]=\\\"animations\\\"\\n              [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n              (select)=\\\"onClick($event, group)\\\"\\n              (activate)=\\\"onActivate($event, group)\\\"\\n              (deactivate)=\\\"onDeactivate($event, group)\\\"\\n              (dataLabelHeightChanged)=\\\"onDataLabelMaxHeightChanged($event, index)\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n      <svg:g *ngIf=\\\"isSSR\\\">\\n        <svg:g\\n          *ngFor=\\\"let group of results; let index = index; trackBy: trackBy\\\"\\n          [attr.transform]=\\\"groupTransform(group)\\\"\\n        >\\n          <svg:g\\n            ngx-charts-series-vertical\\n            [type]=\\\"barChartType.Stacked\\\"\\n            [xScale]=\\\"xScale\\\"\\n            [yScale]=\\\"yScale\\\"\\n            [activeEntries]=\\\"activeEntries\\\"\\n            [colors]=\\\"colors\\\"\\n            [series]=\\\"group.series\\\"\\n            [dims]=\\\"dims\\\"\\n            [gradient]=\\\"gradient\\\"\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n            [showDataLabel]=\\\"showDataLabel\\\"\\n            [dataLabelFormatting]=\\\"dataLabelFormatting\\\"\\n            [seriesName]=\\\"group.name\\\"\\n            [animations]=\\\"animations\\\"\\n            [noBarWhenZero]=\\\"noBarWhenZero\\\"\\n            (select)=\\\"onClick($event, group)\\\"\\n            (activate)=\\\"onActivate($event, group)\\\"\\n            (deactivate)=\\\"onDeactivate($event, group)\\\"\\n            (dataLabelHeightChanged)=\\\"onDataLabelMaxHeightChanged($event, index)\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nvar BarChartModule = /*#__PURE__*/_createClass(function BarChartModule() {\n  _classCallCheck(this, BarChartModule);\n});\n\nBarChartModule.ɵfac = function BarChartModule_Factory(t) {\n  return new (t || BarChartModule)();\n};\n\nBarChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BarChartModule\n});\nBarChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BarComponent, BarHorizontalComponent, BarHorizontal2DComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarVerticalComponent, BarVertical2DComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BarLabelComponent, SeriesHorizontal, SeriesVerticalComponent],\n      exports: [BarComponent, BarHorizontalComponent, BarHorizontal2DComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarVerticalComponent, BarVertical2DComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BarLabelComponent, SeriesHorizontal, SeriesVerticalComponent]\n    }]\n  }], null, null);\n})();\n\nvar cloneDeep = rfdc();\n\nvar BoxComponent = /*#__PURE__*/function () {\n  function BoxComponent(element, cd) {\n    _classCallCheck(this, BoxComponent);\n\n    this.cd = cd;\n    this.roundEdges = true;\n    this.gradient = false;\n    this.offset = 0;\n    this.isActive = false;\n    this.animations = true;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.BarOrientation = BarOrientation;\n    this.initialized = false;\n    this.hasGradient = false;\n    this.hideBar = false;\n    this.nativeElm = element.nativeElement;\n  }\n\n  _createClass(BoxComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this.initialized) {\n        this.loadAnimation();\n        this.initialized = true;\n      } else {\n        this.update();\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.boxStrokeWidth = Math.max(this.strokeWidth, 1);\n      this.whiskerStrokeWidth = Math.max(this.strokeWidth / 2, 1);\n      this.medianLineWidth = 1.5 * this.strokeWidth;\n      this.gradientId = 'grad' + id().toString();\n      this.gradientFill = \"url(#\".concat(this.gradientId, \")\");\n\n      if (this.gradient) {\n        this.gradientStops = this.getGradient();\n        this.hasGradient = true;\n      } else {\n        this.hasGradient = false;\n      }\n\n      this.updateLineEl();\n      this.updatePathEl();\n      this.checkToHideBar();\n      this.maskLineId = 'mask' + id().toString();\n      this.maskLine = \"url(#\".concat(this.maskLineId, \")\");\n\n      if (this.cd) {\n        this.cd.markForCheck();\n      }\n    }\n  }, {\n    key: \"loadAnimation\",\n    value: function loadAnimation() {\n      this.boxPath = this.oldPath = this.getStartingPath();\n      this.oldLineCoordinates = this.getStartingLineCoordinates();\n      setTimeout(this.update.bind(this), 100);\n    }\n  }, {\n    key: \"updatePathEl\",\n    value: function updatePathEl() {\n      var nodeBar = select(this.nativeElm).selectAll('.bar');\n      var path = this.getPath();\n\n      if (this.animations) {\n        nodeBar.attr('d', this.oldPath).transition().ease(easeSinInOut).duration(500).attrTween('d', this.pathTween(path, 4));\n      } else {\n        nodeBar.attr('d', path);\n      }\n\n      this.oldPath = path;\n    }\n  }, {\n    key: \"updateLineEl\",\n    value: function updateLineEl() {\n      var lineEl = select(this.nativeElm).selectAll('.bar-line');\n      var lineCoordinates = this.lineCoordinates;\n      var oldLineCoordinates = this.oldLineCoordinates;\n\n      if (this.animations) {\n        lineEl.attr('x1', function (_, index) {\n          return oldLineCoordinates[index].v1.x;\n        }).attr('y1', function (_, index) {\n          return oldLineCoordinates[index].v1.y;\n        }).attr('x2', function (_, index) {\n          return oldLineCoordinates[index].v2.x;\n        }).attr('y2', function (_, index) {\n          return oldLineCoordinates[index].v2.y;\n        }).transition().ease(easeSinInOut).duration(500).attr('x1', function (_, index) {\n          return lineCoordinates[index].v1.x;\n        }).attr('y1', function (_, index) {\n          return lineCoordinates[index].v1.y;\n        }).attr('x2', function (_, index) {\n          return lineCoordinates[index].v2.x;\n        }).attr('y2', function (_, index) {\n          return lineCoordinates[index].v2.y;\n        });\n      } else {\n        lineEl.attr('x1', function (_, index) {\n          return lineCoordinates[index].v1.x;\n        }).attr('y1', function (_, index) {\n          return lineCoordinates[index].v1.y;\n        }).attr('x2', function (_, index) {\n          return lineCoordinates[index].v2.x;\n        }).attr('y2', function (_, index) {\n          return lineCoordinates[index].v2.y;\n        });\n      }\n\n      this.oldLineCoordinates = _toConsumableArray(lineCoordinates);\n    }\n    /**\n     * See [D3 Selections](https://www.d3indepth.com/selections/)\n     * @param d The joined data.\n     * @param index The index of the element within the selection\n     * @param node The node element (Line).\n     */\n\n  }, {\n    key: \"lineTween\",\n    value: function lineTween(attr, d, index, node) {\n      var nodeLineEl = node[index];\n      return nodeLineEl[attr].baseVal.value;\n    } // TODO: Refactor into another .ts file if https://github.com/swimlane/ngx-charts/pull/1179 gets merged.\n\n  }, {\n    key: \"pathTween\",\n    value: function pathTween(d1, precision) {\n      return function () {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var path0 = this;\n        var path1 = this.cloneNode();\n        path1.setAttribute('d', d1);\n        var n0 = path0 === null || path0 === void 0 ? void 0 : path0.getTotalLength();\n        var n1 = path1 === null || path1 === void 0 ? void 0 : path1.getTotalLength(); // Uniform sampling of distance based on specified precision.\n\n        var distances = [0];\n        var i = 0;\n        var dt = precision / Math.max(n0, n1);\n\n        while (i < 1) {\n          distances.push(i);\n          i += dt;\n        }\n\n        distances.push(1); // Compute point-interpolators at each distance.\n\n        var points = distances.map(function (t) {\n          var p0 = path0.getPointAtLength(t * n0);\n          var p1 = path1.getPointAtLength(t * n1);\n          return interpolate([p0.x, p0.y], [p1.x, p1.y]);\n        }); // 't': T is the fraction of time (between 0 and 1) since the transition began.\n\n        return function (t) {\n          return t < 1 ? 'M' + points.map(function (p) {\n            return p(t);\n          }).join('L') : d1;\n        };\n      };\n    }\n  }, {\n    key: \"getStartingPath\",\n    value: function getStartingPath() {\n      if (!this.animations) {\n        return this.getPath();\n      }\n\n      var radius = this.roundEdges ? 1 : 0;\n      var _this$lineCoordinates = this.lineCoordinates[2].v1,\n          x = _this$lineCoordinates.x,\n          y = _this$lineCoordinates.y;\n      return roundedRect(x - this.width, y - 1, this.width, 2, radius, this.edges);\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      var radius = this.getRadius();\n      var path = '';\n      path = roundedRect(this.x, this.y, this.width, this.height, Math.min(this.height, radius), this.edges);\n      return path;\n    }\n  }, {\n    key: \"getStartingLineCoordinates\",\n    value: function getStartingLineCoordinates() {\n      if (!this.animations) {\n        return _toConsumableArray(this.lineCoordinates);\n      }\n\n      var lineCoordinates = cloneDeep(this.lineCoordinates);\n      lineCoordinates[1].v1.y = lineCoordinates[1].v2.y = lineCoordinates[3].v1.y = lineCoordinates[3].v2.y = lineCoordinates[0].v1.y = lineCoordinates[0].v2.y = lineCoordinates[2].v1.y;\n      return lineCoordinates;\n    }\n  }, {\n    key: \"getRadius\",\n    value: function getRadius() {\n      var radius = 0;\n\n      if (this.roundEdges && this.height > 5 && this.width > 5) {\n        radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n      }\n\n      return radius;\n    }\n  }, {\n    key: \"getGradient\",\n    value: function getGradient() {\n      return [{\n        offset: 0,\n        color: this.fill,\n        opacity: this.getStartOpacity()\n      }, {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n      }];\n    }\n  }, {\n    key: \"getStartOpacity\",\n    value: function getStartOpacity() {\n      if (this.roundEdges) {\n        return 0.2;\n      } else {\n        return 0.5;\n      }\n    }\n  }, {\n    key: \"edges\",\n    get: function get() {\n      var edges = [false, false, false, false];\n\n      if (this.roundEdges) {\n        edges = [true, true, true, true];\n      }\n\n      return edges;\n    }\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter() {\n      this.activate.emit(this.data);\n    }\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave() {\n      this.deactivate.emit(this.data);\n    }\n  }, {\n    key: \"checkToHideBar\",\n    value: function checkToHideBar() {\n      this.hideBar = this.noBarWhenZero && this.height === 0;\n    }\n  }]);\n\n  return BoxComponent;\n}();\n\nBoxComponent.ɵfac = function BoxComponent_Factory(t) {\n  return new (t || BoxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxComponent,\n  selectors: [[\"g\", \"ngx-charts-box\", \"\"]],\n  hostBindings: function BoxComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function BoxComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function BoxComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    fill: \"fill\",\n    data: \"data\",\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\",\n    lineCoordinates: \"lineCoordinates\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\",\n    gradientStops: \"gradientStops\",\n    offset: \"offset\",\n    isActive: \"isActive\",\n    animations: \"animations\",\n    ariaLabel: \"ariaLabel\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c30,\n  decls: 9,\n  vars: 13,\n  consts: [[\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\", 4, \"ngIf\"], [\"height\", \"100%\", \"width\", \"100%\", \"fill\", \"white\", \"fill-opacity\", \"1\"], [\"fill\", \"black\", \"fill-opacity\", \"1\", 1, \"bar\"], [\"role\", \"img\", \"tabIndex\", \"-1\", 1, \"bar\", 3, \"click\"], [\"class\", \"bar-line\", \"fill\", \"none\", 3, \"hidden\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"fill\", \"none\", 1, \"bar-line\"]],\n  template: function BoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"defs\");\n      i0.ɵɵtemplate(1, BoxComponent__svg_g_1_Template, 1, 3, \"g\", 0);\n      i0.ɵɵelementStart(2, \"mask\")(3, \"g\");\n      i0.ɵɵelement(4, \"rect\", 1)(5, \"path\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"g\")(7, \"path\", 3);\n      i0.ɵɵlistener(\"click\", function BoxComponent_Template__svg_path_click_7_listener() {\n        return ctx.select.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, BoxComponent__svg_line_8_Template, 1, 9, \"line\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"id\", ctx.maskLineId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵattribute(\"d\", ctx.boxPath);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"active\", ctx.isActive)(\"hidden\", ctx.hideBar);\n      i0.ɵɵattribute(\"d\", ctx.boxPath)(\"stroke\", ctx.strokeColor)(\"stroke-width\", ctx.boxStrokeWidth)(\"aria-label\", ctx.ariaLabel)(\"fill\", ctx.hasGradient ? ctx.gradientFill : ctx.fill);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lineCoordinates);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-box]',\n      template: \"\\n    <svg:defs>\\n      <svg:g\\n        *ngIf=\\\"hasGradient\\\"\\n        ngx-charts-svg-linear-gradient\\n        [orientation]=\\\"BarOrientation.Vertical\\\"\\n        [name]=\\\"gradientId\\\"\\n        [stops]=\\\"gradientStops\\\"\\n      />\\n      <svg:mask [attr.id]=\\\"maskLineId\\\">\\n        <svg:g>\\n          <rect height=\\\"100%\\\" width=\\\"100%\\\" fill=\\\"white\\\" fill-opacity=\\\"1\\\" />\\n          <path class=\\\"bar\\\" [attr.d]=\\\"boxPath\\\" fill=\\\"black\\\" fill-opacity=\\\"1\\\" />\\n        </svg:g>\\n      </svg:mask>\\n    </svg:defs>\\n    <svg:g>\\n      <svg:path\\n        class=\\\"bar\\\"\\n        role=\\\"img\\\"\\n        tabIndex=\\\"-1\\\"\\n        [class.active]=\\\"isActive\\\"\\n        [class.hidden]=\\\"hideBar\\\"\\n        [attr.d]=\\\"boxPath\\\"\\n        [attr.stroke]=\\\"strokeColor\\\"\\n        [attr.stroke-width]=\\\"boxStrokeWidth\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.fill]=\\\"hasGradient ? gradientFill : fill\\\"\\n        (click)=\\\"select.emit(data)\\\"\\n      />\\n      <svg:line\\n        *ngFor=\\\"let line of lineCoordinates; let i = index\\\"\\n        class=\\\"bar-line\\\"\\n        [class.hidden]=\\\"hideBar\\\"\\n        [attr.x1]=\\\"line.v1.x\\\"\\n        [attr.y1]=\\\"line.v1.y\\\"\\n        [attr.x2]=\\\"line.v2.x\\\"\\n        [attr.y2]=\\\"line.v2.y\\\"\\n        [attr.stroke]=\\\"strokeColor\\\"\\n        [attr.stroke-width]=\\\"i === 2 ? medianLineWidth : whiskerStrokeWidth\\\"\\n        [attr.mask]=\\\"i ? undefined : maskLine\\\"\\n        fill=\\\"none\\\"\\n      />\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    lineCoordinates: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    gradientStops: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nvar BoxSeriesComponent = /*#__PURE__*/function () {\n  function BoxSeriesComponent() {\n    _classCallCheck(this, BoxSeriesComponent);\n\n    this.animations = true;\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n\n  _createClass(BoxSeriesComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.updateTooltipSettings();\n      var width = this.series && this.series.series.length ? Math.round(this.xScale.bandwidth()) : null;\n      var seriesName = this.series.name; // Calculate Quantile and Whiskers for each box serie.\n\n      this.counts = this.series.series;\n      var mappedCounts = this.counts.map(function (serie) {\n        return Number(serie.value);\n      });\n      this.whiskers = [min(mappedCounts), max(mappedCounts)]; // We get the group count and must sort it in order to retrieve quantiles.\n\n      var groupCounts = this.counts.map(function (item) {\n        return item.value;\n      }).sort(function (a, b) {\n        return Number(a) - Number(b);\n      });\n      this.quartiles = this.getBoxQuantiles(groupCounts);\n      this.lineCoordinates = this.getLinesCoordinates(seriesName.toString(), this.whiskers, this.quartiles, width);\n      var value = this.quartiles[1];\n      var formattedLabel = formatLabel(seriesName);\n      var box = {\n        value: value,\n        data: this.counts,\n        label: seriesName,\n        formattedLabel: formattedLabel,\n        width: width,\n        height: 0,\n        x: 0,\n        y: 0,\n        roundEdges: this.roundEdges,\n        quartiles: this.quartiles,\n        lineCoordinates: this.lineCoordinates\n      };\n      box.height = Math.abs(this.yScale(this.quartiles[0]) - this.yScale(this.quartiles[2]));\n      box.x = this.xScale(seriesName.toString());\n      box.y = this.yScale(this.quartiles[2]);\n      box.ariaLabel = formattedLabel + ' - Median: ' + value.toLocaleString();\n\n      if (this.colors.scaleType === ScaleType.Ordinal) {\n        box.color = this.colors.getColor(seriesName);\n      } else {\n        box.color = this.colors.getColor(this.quartiles[1]);\n        box.gradientStops = this.colors.getLinearGradientStops(this.quartiles[0], this.quartiles[2]);\n      }\n\n      var tooltipLabel = formattedLabel;\n      var formattedTooltipLabel = \"\\n    <span class=\\\"tooltip-label\\\">\".concat(escapeLabel(tooltipLabel), \"</span>\\n    <span class=\\\"tooltip-val\\\">\\n      \\u2022 Q1: \").concat(this.quartiles[0], \" \\u2022 Q2: \").concat(this.quartiles[1], \" \\u2022 Q3: \").concat(this.quartiles[2], \"<br>\\n      \\u2022 Min: \").concat(this.whiskers[0], \" \\u2022 Max: \").concat(this.whiskers[1], \"\\n    </span>\");\n      box.tooltipText = this.tooltipDisabled ? undefined : formattedTooltipLabel;\n      this.tooltipTitle = this.tooltipDisabled ? undefined : box.tooltipText;\n      this.box = box;\n    }\n  }, {\n    key: \"getBoxQuantiles\",\n    value: function getBoxQuantiles(inputData) {\n      return [quantile(inputData, 0.25), quantile(inputData, 0.5), quantile(inputData, 0.75)];\n    }\n  }, {\n    key: \"getLinesCoordinates\",\n    value: function getLinesCoordinates(seriesName, whiskers, quartiles, barWidth) {\n      // The X value is not being centered, so had to sum half the width to align it.\n      var commonX = this.xScale(seriesName);\n      var offsetX = commonX + barWidth / 2;\n      var medianLineWidth = Math.max(barWidth + 4 * this.strokeWidth, 1);\n      var whiskerLineWidth = Math.max(barWidth / 3, 1);\n      var whiskerZero = this.yScale(whiskers[0]);\n      var whiskerOne = this.yScale(whiskers[1]);\n      var median = this.yScale(quartiles[1]);\n      var topLine = {\n        v1: {\n          x: offsetX + whiskerLineWidth / 2,\n          y: whiskerZero\n        },\n        v2: {\n          x: offsetX - whiskerLineWidth / 2,\n          y: whiskerZero\n        }\n      };\n      var medianLine = {\n        v1: {\n          x: offsetX + medianLineWidth / 2,\n          y: median\n        },\n        v2: {\n          x: offsetX - medianLineWidth / 2,\n          y: median\n        }\n      };\n      var bottomLine = {\n        v1: {\n          x: offsetX + whiskerLineWidth / 2,\n          y: whiskerOne\n        },\n        v2: {\n          x: offsetX - whiskerLineWidth / 2,\n          y: whiskerOne\n        }\n      };\n      var verticalLine = {\n        v1: {\n          x: offsetX,\n          y: whiskerZero\n        },\n        v2: {\n          x: offsetX,\n          y: whiskerOne\n        }\n      };\n      return [verticalLine, topLine, medianLine, bottomLine];\n    }\n  }, {\n    key: \"updateTooltipSettings\",\n    value: function updateTooltipSettings() {\n      if (this.tooltipDisabled) {\n        this.tooltipPlacement = undefined;\n        this.tooltipType = undefined;\n      } else {\n        if (!this.tooltipPlacement) {\n          this.tooltipPlacement = PlacementTypes.Top;\n        }\n\n        if (!this.tooltipType) {\n          this.tooltipType = StyleTypes.tooltip;\n        }\n      }\n    }\n  }]);\n\n  return BoxSeriesComponent;\n}();\n\nBoxSeriesComponent.ɵfac = function BoxSeriesComponent_Factory(t) {\n  return new (t || BoxSeriesComponent)();\n};\n\nBoxSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-box-series\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    animations: \"animations\",\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipType: \"tooltipType\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c31,\n  decls: 1,\n  vars: 22,\n  consts: [[\"ngx-charts-box\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"roundEdges\", \"fill\", \"gradientStops\", \"strokeColor\", \"strokeWidth\", \"data\", \"lineCoordinates\", \"gradient\", \"ariaLabel\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"animations\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BoxSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵlistener(\"select\", function BoxSeriesComponent_Template__svg_g_select_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function BoxSeriesComponent_Template__svg_g_activate_0_listener($event) {\n        return ctx.activate.emit($event);\n      })(\"deactivate\", function BoxSeriesComponent_Template__svg_g_deactivate_0_listener($event) {\n        return ctx.deactivate.emit($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@animationState\", \"active\")(\"@.disabled\", !ctx.animations)(\"width\", ctx.box.width)(\"height\", ctx.box.height)(\"x\", ctx.box.x)(\"y\", ctx.box.y)(\"roundEdges\", ctx.box.roundEdges)(\"fill\", ctx.box.color)(\"gradientStops\", ctx.box.gradientStops)(\"strokeColor\", ctx.strokeColor)(\"strokeWidth\", ctx.strokeWidth)(\"data\", ctx.box.data)(\"lineCoordinates\", ctx.box.lineCoordinates)(\"gradient\", ctx.gradient)(\"ariaLabel\", ctx.box.ariaLabel)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.tooltipPlacement)(\"tooltipType\", ctx.tooltipType)(\"tooltipTitle\", ctx.tooltipTitle)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipContext\", ctx.box.data)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [BoxComponent, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-box-series]',\n      template: \"\\n    <svg:g\\n      ngx-charts-box\\n      [@animationState]=\\\"'active'\\\"\\n      [@.disabled]=\\\"!animations\\\"\\n      [width]=\\\"box.width\\\"\\n      [height]=\\\"box.height\\\"\\n      [x]=\\\"box.x\\\"\\n      [y]=\\\"box.y\\\"\\n      [roundEdges]=\\\"box.roundEdges\\\"\\n      [fill]=\\\"box.color\\\"\\n      [gradientStops]=\\\"box.gradientStops\\\"\\n      [strokeColor]=\\\"strokeColor\\\"\\n      [strokeWidth]=\\\"strokeWidth\\\"\\n      [data]=\\\"box.data\\\"\\n      [lineCoordinates]=\\\"box.lineCoordinates\\\"\\n      [gradient]=\\\"gradient\\\"\\n      [ariaLabel]=\\\"box.ariaLabel\\\"\\n      (select)=\\\"onClick($event)\\\"\\n      (activate)=\\\"activate.emit($event)\\\"\\n      (deactivate)=\\\"deactivate.emit($event)\\\"\\n      ngx-tooltip\\n      [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n      [tooltipPlacement]=\\\"tooltipPlacement\\\"\\n      [tooltipType]=\\\"tooltipType\\\"\\n      [tooltipTitle]=\\\"tooltipTitle\\\"\\n      [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n      [tooltipContext]=\\\"box.data\\\"\\n      [animations]=\\\"animations\\\"\\n    ></svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], null, {\n    dims: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipType: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nvar BoxChartComponent = /*#__PURE__*/function (_BaseChartComponent12) {\n  _inherits(BoxChartComponent, _BaseChartComponent12);\n\n  var _super13 = _createSuper(BoxChartComponent);\n\n  function BoxChartComponent() {\n    var _this49;\n\n    _classCallCheck(this, BoxChartComponent);\n\n    _this49 = _super13.apply(this, arguments);\n    /** Show or hide the legend. */\n\n    _this49.legend = false;\n    _this49.legendPosition = LegendPosition.Right;\n    _this49.legendTitle = 'Legend';\n    _this49.showGridLines = true;\n    _this49.xAxis = true;\n    _this49.yAxis = true;\n    _this49.showXAxisLabel = true;\n    _this49.showYAxisLabel = true;\n    _this49.roundDomains = false;\n    _this49.roundEdges = true;\n    _this49.strokeColor = '#FFFFFF';\n    _this49.strokeWidth = 2;\n    _this49.tooltipDisabled = false;\n    _this49.select = new EventEmitter();\n    _this49.activate = new EventEmitter();\n    _this49.deactivate = new EventEmitter();\n    /** Chart Margins (For each side, counterclock wise). */\n\n    _this49.margin = [10, 20, 10, 20];\n    /** Chart X axis dimension. */\n\n    _this49.xAxisHeight = 0;\n    /** Chart Y axis dimension. */\n\n    _this49.yAxisWidth = 0;\n    return _this49;\n  }\n\n  _createClass(BoxChartComponent, [{\n    key: \"trackBy\",\n    value: function trackBy(index, item) {\n      return item.name;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(BoxChartComponent.prototype), \"update\", this).call(this);\n\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendPosition: this.legendPosition\n      });\n      this.xDomain = this.getXDomain();\n      this.yDomain = this.getYDomain();\n      this.seriesDomain = this.getSeriesDomain();\n      this.setScales();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \" , \").concat(this.margin[0], \")\");\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      var domain = [];\n\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.seriesDomain;\n      } else {\n        domain = this.yDomain;\n      }\n\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n  }, {\n    key: \"setScales\",\n    value: function setScales() {\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n      this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    }\n  }, {\n    key: \"getXScale\",\n    value: function getXScale(domain, width) {\n      var scale = scaleBand().domain(domain.map(function (d) {\n        return d.toString();\n      })).rangeRound([0, width]).padding(0.5);\n      return scale;\n    }\n  }, {\n    key: \"getYScale\",\n    value: function getYScale(domain, height) {\n      var scale = scaleLinear().domain(domain).range([height, 0]);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"getUniqueBoxChartXDomainValues\",\n    value: function getUniqueBoxChartXDomainValues(results) {\n      var valueSet = new Set();\n\n      var _iterator48 = _createForOfIteratorHelper(results),\n          _step48;\n\n      try {\n        for (_iterator48.s(); !(_step48 = _iterator48.n()).done;) {\n          var result = _step48.value;\n          valueSet.add(result.name);\n        }\n      } catch (err) {\n        _iterator48.e(err);\n      } finally {\n        _iterator48.f();\n      }\n\n      return Array.from(valueSet);\n    }\n  }, {\n    key: \"getXDomain\",\n    value: function getXDomain() {\n      var domain = [];\n      var values = this.getUniqueBoxChartXDomainValues(this.results);\n      var min;\n      var max;\n\n      if (typeof values[0] === 'string') {\n        domain = values.map(function (val) {\n          return val.toString();\n        });\n      } else if (typeof values[0] === 'number') {\n        var mappedValues = values.map(function (v) {\n          return Number(v);\n        });\n        min = Math.min.apply(Math, _toConsumableArray(mappedValues));\n        max = Math.max.apply(Math, _toConsumableArray(mappedValues));\n        domain = [min, max];\n      } else {\n        var _mappedValues = values.map(function (v) {\n          return Number(new Date(v));\n        });\n\n        min = Math.min.apply(Math, _toConsumableArray(_mappedValues));\n        max = Math.max.apply(Math, _toConsumableArray(_mappedValues));\n        domain = [new Date(min), new Date(max)];\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getYDomain\",\n    value: function getYDomain() {\n      var domain = [];\n\n      var _iterator49 = _createForOfIteratorHelper(this.results),\n          _step49;\n\n      try {\n        for (_iterator49.s(); !(_step49 = _iterator49.n()).done;) {\n          var results = _step49.value;\n\n          var _iterator50 = _createForOfIteratorHelper(results.series),\n              _step50;\n\n          try {\n            for (_iterator50.s(); !(_step50 = _iterator50.n()).done;) {\n              var d = _step50.value;\n\n              if (domain.indexOf(d.value) < 0) {\n                domain.push(d.value);\n              }\n            }\n          } catch (err) {\n            _iterator50.e(err);\n          } finally {\n            _iterator50.f();\n          }\n        }\n      } catch (err) {\n        _iterator49.e(err);\n      } finally {\n        _iterator49.f();\n      }\n\n      var values = [].concat(domain);\n      var mappedValues = values.map(function (v) {\n        return Number(v);\n      });\n      var min = Math.min.apply(Math, _toConsumableArray(mappedValues));\n      var max = Math.max.apply(Math, _toConsumableArray(mappedValues));\n      return [min, max];\n    }\n  }, {\n    key: \"getSeriesDomain\",\n    value: function getSeriesDomain() {\n      return this.results.map(function (d) {\n        return \"\".concat(d.name);\n      });\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref31) {\n      var width = _ref31.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref32) {\n      var height = _ref32.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(data) {\n      this.activate.emit(data);\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(data) {\n      this.deactivate.emit(data);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      var legendOpts = {\n        scaleType: this.schemeType,\n        colors: this.colors,\n        domain: [],\n        position: this.legendPosition,\n        title: this.legendTitle\n      };\n\n      if (this.schemeType === ScaleType.Ordinal) {\n        legendOpts.domain = this.xDomain;\n        legendOpts.colors = this.colors;\n      } else {\n        legendOpts.domain = this.yDomain;\n        legendOpts.colors = this.colors.scale;\n      }\n\n      return legendOpts;\n    }\n  }]);\n\n  return BoxChartComponent;\n}(BaseChartComponent);\n\nBoxChartComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵBoxChartComponent_BaseFactory;\n  return function BoxChartComponent_Factory(t) {\n    return (ɵBoxChartComponent_BaseFactory || (ɵBoxChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BoxChartComponent)))(t || BoxChartComponent);\n  };\n}();\n\nBoxChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxChartComponent,\n  selectors: [[\"ngx-charts-box-chart\"]],\n  contentQueries: function BoxChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendPosition: \"legendPosition\",\n    legendTitle: \"legendTitle\",\n    legendOptionsConfig: \"legendOptionsConfig\",\n    showGridLines: \"showGridLines\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    roundDomains: \"roundDomains\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    roundEdges: \"roundEdges\",\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 21,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"box-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"dims\", \"yScale\", \"showLabel\", \"labelText\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-box-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"roundEdges\", \"strokeColor\", \"strokeWidth\", \"tooltipDisabled\", \"tooltipTemplate\", \"series\", \"dims\", \"animations\", \"gradient\", \"activate\", \"deactivate\", \"select\"]],\n  template: function BoxChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"dimensionsChanged\", function BoxChartComponent_Template__svg_g_dimensionsChanged_2_listener($event) {\n        return ctx.updateXAxisHeight($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"g\", 3);\n      i0.ɵɵlistener(\"dimensionsChanged\", function BoxChartComponent_Template__svg_g_dimensionsChanged_3_listener($event) {\n        return ctx.updateYAxisWidth($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\");\n      i0.ɵɵtemplate(5, BoxChartComponent__svg_g_5_Template, 2, 12, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(18, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"showGridLines\", ctx.showGridLines)(\"dims\", ctx.dims)(\"xScale\", ctx.xScale)(\"showLabel\", ctx.showXAxisLabel)(\"labelText\", ctx.xAxisLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"showGridLines\", ctx.showGridLines)(\"dims\", ctx.dims)(\"yScale\", ctx.yScale)(\"showLabel\", ctx.showYAxisLabel)(\"labelText\", ctx.yAxisLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, BoxSeriesComponent, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-box-chart',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"box-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [dims]=\\\"dims\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        />\\n        <svg:g\\n          ngx-charts-y-axis\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [dims]=\\\"dims\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        />\\n      </svg:g>\\n      <svg:g [attr.transform]=\\\"transform\\\">\\n        <svg:g *ngFor=\\\"let result of results; trackBy: trackBy\\\">\\n          <svg:g\\n            ngx-charts-box-series\\n            [xScale]=\\\"xScale\\\"\\n            [yScale]=\\\"yScale\\\"\\n            [colors]=\\\"colors\\\"\\n            [roundEdges]=\\\"roundEdges\\\"\\n            [strokeColor]=\\\"strokeColor\\\"\\n            [strokeWidth]=\\\"strokeWidth\\\"\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n            [series]=\\\"result\\\"\\n            [dims]=\\\"dims\\\"\\n            [animations]=\\\"animations\\\"\\n            [gradient]=\\\"gradient\\\"\\n            (activate)=\\\"onActivate($event)\\\"\\n            (deactivate)=\\\"onDeactivate($event)\\\"\\n            (select)=\\\"onClick($event)\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendOptionsConfig: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate', {\n        static: false\n      }]\n    }]\n  });\n})();\n\nvar BoxChartModule = /*#__PURE__*/_createClass(function BoxChartModule() {\n  _classCallCheck(this, BoxChartModule);\n});\n\nBoxChartModule.ɵfac = function BoxChartModule_Factory(t) {\n  return new (t || BoxChartModule)();\n};\n\nBoxChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BoxChartModule\n});\nBoxChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent],\n      exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent]\n    }]\n  }], null, null);\n})();\n\nfunction getDomain(values, scaleType, autoScale, minVal, maxVal) {\n  var domain = [];\n\n  if (scaleType === ScaleType.Linear) {\n    values = values.map(function (v) {\n      return Number(v);\n    });\n\n    if (!autoScale) {\n      values.push(0);\n    }\n  }\n\n  if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n    var _min6 = minVal || minVal === 0 ? minVal : Math.min.apply(Math, _toConsumableArray(values));\n\n    var _max7 = maxVal ? maxVal : Math.max.apply(Math, _toConsumableArray(values));\n\n    domain = [_min6, _max7];\n  } else {\n    domain = values;\n  }\n\n  return domain;\n}\n\nfunction getScale(domain, range, scaleType, roundDomains) {\n  switch (scaleType) {\n    case ScaleType.Time:\n      return scaleTime().range(range).domain(domain);\n\n    case ScaleType.Linear:\n      {\n        var scale = scaleLinear().range(range).domain(domain);\n\n        if (roundDomains) {\n          return scale.nice();\n        }\n\n        return scale;\n      }\n\n    case ScaleType.Ordinal:\n      return scalePoint().range([range[0], range[1]]).domain(domain.map(function (r) {\n        return r.toString();\n      }));\n\n    default:\n      return undefined;\n  }\n}\n\nvar BubbleSeriesComponent = /*#__PURE__*/function () {\n  function BubbleSeriesComponent(platformId) {\n    _classCallCheck(this, BubbleSeriesComponent);\n\n    this.platformId = platformId;\n    this.tooltipDisabled = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.isSSR = false;\n  }\n\n  _createClass(BubbleSeriesComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.circles = this.getCircles();\n    }\n  }, {\n    key: \"getCircles\",\n    value: function getCircles() {\n      var _this50 = this;\n\n      var seriesName = this.data.name;\n      return this.data.series.map(function (d, i) {\n        if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n          var y = d.y;\n          var x = d.x;\n          var r = d.r;\n\n          var radius = _this50.rScale(r || 1);\n\n          var tooltipLabel = formatLabel(d.name);\n          var cx = _this50.xScaleType === ScaleType.Linear ? _this50.xScale(Number(x)) : _this50.xScale(x);\n          var cy = _this50.yScaleType === ScaleType.Linear ? _this50.yScale(Number(y)) : _this50.yScale(y);\n          var color = _this50.colors.scaleType === ScaleType.Linear ? _this50.colors.getColor(r) : _this50.colors.getColor(seriesName);\n          var isActive = !_this50.activeEntries.length ? true : _this50.isActive({\n            name: seriesName\n          });\n          var opacity = isActive ? 1 : 0.3;\n          var data = Object.assign({}, d, {\n            series: seriesName,\n            name: d.name,\n            value: d.y,\n            x: d.x,\n            radius: d.r\n          });\n          return {\n            data: data,\n            x: x,\n            y: y,\n            r: r,\n            classNames: [\"circle-data-\".concat(i)],\n            value: y,\n            label: x,\n            cx: cx,\n            cy: cy,\n            radius: radius,\n            tooltipLabel: tooltipLabel,\n            color: color,\n            opacity: opacity,\n            seriesName: seriesName,\n            isActive: isActive,\n            transform: \"translate(\".concat(cx, \",\").concat(cy, \")\")\n          };\n        }\n      }).filter(function (circle) {\n        return circle !== undefined;\n      });\n    }\n  }, {\n    key: \"getTooltipText\",\n    value: function getTooltipText(circle) {\n      var hasRadius = typeof circle.r !== 'undefined';\n      var hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n      var hasSeriesName = circle.seriesName && circle.seriesName.length;\n      var radiusValue = hasRadius ? formatLabel(circle.r) : '';\n      var xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? \"\".concat(this.xAxisLabel, \":\") : '';\n      var yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? \"\".concat(this.yAxisLabel, \":\") : '';\n      var x = formatLabel(circle.x);\n      var y = formatLabel(circle.y);\n      var name = hasSeriesName && hasTooltipLabel ? \"\".concat(circle.seriesName, \" \\u2022 \").concat(circle.tooltipLabel) : circle.seriesName + circle.tooltipLabel;\n      var tooltipTitle = hasSeriesName || hasTooltipLabel ? \"<span class=\\\"tooltip-label\\\">\".concat(escapeLabel(name), \"</span>\") : '';\n      return \"\\n      \".concat(tooltipTitle, \"\\n      <span class=\\\"tooltip-label\\\">\\n        <label>\").concat(escapeLabel(xAxisLabel), \"</label> \").concat(escapeLabel(x), \"<br />\\n        <label>\").concat(escapeLabel(yAxisLabel), \"</label> \").concat(escapeLabel(y), \"\\n      </span>\\n      <span class=\\\"tooltip-val\\\">\\n        \").concat(escapeLabel(radiusValue), \"\\n      </span>\\n    \");\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive(entry) {\n      if (!this.activeEntries) return false;\n      var item = this.activeEntries.find(function (d) {\n        return entry.name === d.name;\n      });\n      return item !== undefined;\n    }\n  }, {\n    key: \"isVisible\",\n    value: function isVisible(circle) {\n      if (this.activeEntries.length > 0) {\n        return this.isActive({\n          name: circle.seriesName\n        });\n      }\n\n      return circle.opacity !== 0;\n    }\n  }, {\n    key: \"activateCircle\",\n    value: function activateCircle(circle) {\n      circle.barVisible = true;\n      this.activate.emit({\n        name: this.data.name\n      });\n    }\n  }, {\n    key: \"deactivateCircle\",\n    value: function deactivateCircle(circle) {\n      circle.barVisible = false;\n      this.deactivate.emit({\n        name: this.data.name\n      });\n    }\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, circle) {\n      return \"\".concat(circle.data.series, \" \").concat(circle.data.name);\n    }\n  }]);\n\n  return BubbleSeriesComponent;\n}();\n\nBubbleSeriesComponent.ɵfac = function BubbleSeriesComponent_Factory(t) {\n  return new (t || BubbleSeriesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nBubbleSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BubbleSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-bubble-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    rScale: \"rScale\",\n    xScaleType: \"xScaleType\",\n    yScaleType: \"yScaleType\",\n    colors: \"colors\",\n    visibleValue: \"visibleValue\",\n    activeEntries: \"activeEntries\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c32,\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-circle\", \"\", \"class\", \"circle\", \"ngx-tooltip\", \"\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"opacity\", \"active\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngIf\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BubbleSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BubbleSeriesComponent__svg_g_0_Template, 4, 3, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.circles)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [CircleComponent, i2.NgForOf, i2.NgIf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }), animate(250, style({\n      opacity: 1,\n      transform: 'scale(1)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bubble-series]',\n      template: \"\\n    <svg:g *ngFor=\\\"let circle of circles; trackBy: trackBy\\\">\\n      <svg:g [attr.transform]=\\\"circle.transform\\\">\\n        <svg:g\\n          *ngIf=\\\"!isSSR\\\"\\n          ngx-charts-circle\\n          [@animationState]=\\\"'active'\\\"\\n          class=\\\"circle\\\"\\n          [cx]=\\\"0\\\"\\n          [cy]=\\\"0\\\"\\n          [r]=\\\"circle.radius\\\"\\n          [fill]=\\\"circle.color\\\"\\n          [style.opacity]=\\\"circle.opacity\\\"\\n          [class.active]=\\\"circle.isActive\\\"\\n          [pointerEvents]=\\\"'all'\\\"\\n          [data]=\\\"circle.value\\\"\\n          [classNames]=\\\"circle.classNames\\\"\\n          (select)=\\\"onClick(circle.data)\\\"\\n          (activate)=\\\"activateCircle(circle)\\\"\\n          (deactivate)=\\\"deactivateCircle(circle)\\\"\\n          ngx-tooltip\\n          [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n          [tooltipPlacement]=\\\"placementTypes.Top\\\"\\n          [tooltipType]=\\\"styleTypes.tooltip\\\"\\n          [tooltipTitle]=\\\"tooltipTemplate ? undefined : getTooltipText(circle)\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [tooltipContext]=\\\"circle.data\\\"\\n        />\\n        <svg:g\\n          *ngIf=\\\"isSSR\\\"\\n          ngx-charts-circle\\n          class=\\\"circle\\\"\\n          [cx]=\\\"0\\\"\\n          [cy]=\\\"0\\\"\\n          [r]=\\\"circle.radius\\\"\\n          [fill]=\\\"circle.color\\\"\\n          [style.opacity]=\\\"circle.opacity\\\"\\n          [class.active]=\\\"circle.isActive\\\"\\n          [pointerEvents]=\\\"'all'\\\"\\n          [data]=\\\"circle.value\\\"\\n          [classNames]=\\\"circle.classNames\\\"\\n          (select)=\\\"onClick(circle.data)\\\"\\n          (activate)=\\\"activateCircle(circle)\\\"\\n          (deactivate)=\\\"deactivateCircle(circle)\\\"\\n          ngx-tooltip\\n          [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n          [tooltipPlacement]=\\\"placementTypes.Top\\\"\\n          [tooltipType]=\\\"styleTypes.tooltip\\\"\\n          [tooltipTitle]=\\\"tooltipTemplate ? undefined : getTooltipText(circle)\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [tooltipContext]=\\\"circle.data\\\"\\n        />\\n      </svg:g>\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }), animate(250, style({\n        opacity: 1,\n        transform: 'scale(1)'\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    rScale: [{\n      type: Input\n    }],\n    xScaleType: [{\n      type: Input\n    }],\n    yScaleType: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    visibleValue: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nvar BubbleChartComponent = /*#__PURE__*/function (_BaseChartComponent13) {\n  _inherits(BubbleChartComponent, _BaseChartComponent13);\n\n  var _super14 = _createSuper(BubbleChartComponent);\n\n  function BubbleChartComponent() {\n    var _this51;\n\n    _classCallCheck(this, BubbleChartComponent);\n\n    _this51 = _super14.apply(this, arguments);\n    _this51.showGridLines = true;\n    _this51.legend = false;\n    _this51.legendTitle = 'Legend';\n    _this51.legendPosition = LegendPosition.Right;\n    _this51.xAxis = true;\n    _this51.yAxis = true;\n    _this51.trimXAxisTicks = true;\n    _this51.trimYAxisTicks = true;\n    _this51.rotateXAxisTicks = true;\n    _this51.maxXAxisTickLength = 16;\n    _this51.maxYAxisTickLength = 16;\n    _this51.roundDomains = false;\n    _this51.maxRadius = 10;\n    _this51.minRadius = 3;\n    _this51.schemeType = ScaleType.Ordinal;\n    _this51.tooltipDisabled = false;\n    _this51.activate = new EventEmitter();\n    _this51.deactivate = new EventEmitter();\n    _this51.scaleType = ScaleType.Linear;\n    _this51.margin = [10, 20, 10, 20];\n    _this51.bubblePadding = [0, 0, 0, 0];\n    _this51.xAxisHeight = 0;\n    _this51.yAxisWidth = 0;\n    _this51.activeEntries = [];\n    _this51.isSSR = false;\n    return _this51;\n  }\n\n  _createClass(BubbleChartComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(BubbleChartComponent.prototype), \"update\", this).call(this);\n\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      this.seriesDomain = this.results.map(function (d) {\n        return d.name;\n      });\n      this.rDomain = this.getRDomain();\n      this.xDomain = this.getXDomain();\n      this.yDomain = this.getYDomain();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \",\").concat(this.margin[0], \")\");\n      var colorDomain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.rDomain;\n      this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n      this.data = this.results;\n      this.minRadius = Math.max(this.minRadius, 1);\n      this.maxRadius = Math.max(this.maxRadius, 1);\n      this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n      this.bubblePadding = [0, 0, 0, 0];\n      this.setScales();\n      this.bubblePadding = this.getBubblePadding();\n      this.setScales();\n      this.legendOptions = this.getLegendOptions();\n      this.clipPathId = 'clip' + id().toString();\n      this.clipPath = \"url(#\".concat(this.clipPathId, \")\");\n    }\n  }, {\n    key: \"hideCircles\",\n    value: function hideCircles() {\n      this.deactivateAll();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data, series) {\n      if (series) {\n        data.series = series.name;\n      }\n\n      this.select.emit(data);\n    }\n  }, {\n    key: \"getBubblePadding\",\n    value: function getBubblePadding() {\n      var yMin = 0;\n      var xMin = 0;\n      var yMax = this.dims.height;\n      var xMax = this.dims.width;\n\n      var _iterator51 = _createForOfIteratorHelper(this.data),\n          _step51;\n\n      try {\n        for (_iterator51.s(); !(_step51 = _iterator51.n()).done;) {\n          var s = _step51.value;\n\n          var _iterator52 = _createForOfIteratorHelper(s.series),\n              _step52;\n\n          try {\n            for (_iterator52.s(); !(_step52 = _iterator52.n()).done;) {\n              var d = _step52.value;\n              var r = this.rScale(d.r);\n              var cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(d.x)) : this.xScale(d.x);\n              var cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(d.y)) : this.yScale(d.y);\n              xMin = Math.max(r - cx, xMin);\n              yMin = Math.max(r - cy, yMin);\n              yMax = Math.max(cy + r, yMax);\n              xMax = Math.max(cx + r, xMax);\n            }\n          } catch (err) {\n            _iterator52.e(err);\n          } finally {\n            _iterator52.f();\n          }\n        }\n      } catch (err) {\n        _iterator51.e(err);\n      } finally {\n        _iterator51.f();\n      }\n\n      xMax = Math.max(xMax - this.dims.width, 0);\n      yMax = Math.max(yMax - this.dims.height, 0);\n      return [yMin, xMax, yMax, xMin];\n    }\n  }, {\n    key: \"setScales\",\n    value: function setScales() {\n      var width = this.dims.width;\n\n      if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n        width = width - this.bubblePadding[1];\n      }\n\n      var height = this.dims.height;\n\n      if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n        height = height - this.bubblePadding[2];\n      }\n\n      this.xScale = this.getXScale(this.xDomain, width);\n      this.yScale = this.getYScale(this.yDomain, height);\n    }\n  }, {\n    key: \"getYScale\",\n    value: function getYScale(domain, height) {\n      return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n    }\n  }, {\n    key: \"getXScale\",\n    value: function getXScale(domain, width) {\n      return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n    }\n  }, {\n    key: \"getRScale\",\n    value: function getRScale(domain, range) {\n      var scale = scaleLinear().range(range).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      var opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        position: this.legendPosition,\n        title: undefined\n      };\n\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.seriesDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.rDomain;\n        opts.colors = this.colors.scale;\n      }\n\n      return opts;\n    }\n  }, {\n    key: \"getXDomain\",\n    value: function getXDomain() {\n      var values = [];\n\n      var _iterator53 = _createForOfIteratorHelper(this.results),\n          _step53;\n\n      try {\n        for (_iterator53.s(); !(_step53 = _iterator53.n()).done;) {\n          var results = _step53.value;\n\n          var _iterator54 = _createForOfIteratorHelper(results.series),\n              _step54;\n\n          try {\n            for (_iterator54.s(); !(_step54 = _iterator54.n()).done;) {\n              var d = _step54.value;\n\n              if (!values.includes(d.x)) {\n                values.push(d.x);\n              }\n            }\n          } catch (err) {\n            _iterator54.e(err);\n          } finally {\n            _iterator54.f();\n          }\n        }\n      } catch (err) {\n        _iterator53.e(err);\n      } finally {\n        _iterator53.f();\n      }\n\n      this.xScaleType = getScaleType(values);\n      return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n    }\n  }, {\n    key: \"getYDomain\",\n    value: function getYDomain() {\n      var values = [];\n\n      var _iterator55 = _createForOfIteratorHelper(this.results),\n          _step55;\n\n      try {\n        for (_iterator55.s(); !(_step55 = _iterator55.n()).done;) {\n          var results = _step55.value;\n\n          var _iterator56 = _createForOfIteratorHelper(results.series),\n              _step56;\n\n          try {\n            for (_iterator56.s(); !(_step56 = _iterator56.n()).done;) {\n              var d = _step56.value;\n\n              if (!values.includes(d.y)) {\n                values.push(d.y);\n              }\n            }\n          } catch (err) {\n            _iterator56.e(err);\n          } finally {\n            _iterator56.f();\n          }\n        }\n      } catch (err) {\n        _iterator55.e(err);\n      } finally {\n        _iterator55.f();\n      }\n\n      this.yScaleType = getScaleType(values);\n      return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n    }\n  }, {\n    key: \"getRDomain\",\n    value: function getRDomain() {\n      var min = Infinity;\n      var max = -Infinity;\n\n      var _iterator57 = _createForOfIteratorHelper(this.results),\n          _step57;\n\n      try {\n        for (_iterator57.s(); !(_step57 = _iterator57.n()).done;) {\n          var results = _step57.value;\n\n          var _iterator58 = _createForOfIteratorHelper(results.series),\n              _step58;\n\n          try {\n            for (_iterator58.s(); !(_step58 = _iterator58.n()).done;) {\n              var d = _step58.value;\n              var value = Number(d.r) || 1;\n              min = Math.min(min, value);\n              max = Math.max(max, value);\n            }\n          } catch (err) {\n            _iterator58.e(err);\n          } finally {\n            _iterator58.f();\n          }\n        }\n      } catch (err) {\n        _iterator57.e(err);\n      } finally {\n        _iterator57.f();\n      }\n\n      return [min, max];\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref33) {\n      var width = _ref33.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref34) {\n      var height = _ref34.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(item) {\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name;\n      });\n\n      if (idx > -1) {\n        return;\n      }\n\n      this.activeEntries = [item].concat(_toConsumableArray(this.activeEntries));\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(item) {\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"deactivateAll\",\n    value: function deactivateAll() {\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n\n      var _iterator59 = _createForOfIteratorHelper(this.activeEntries),\n          _step59;\n\n      try {\n        for (_iterator59.s(); !(_step59 = _iterator59.n()).done;) {\n          var entry = _step59.value;\n          this.deactivate.emit({\n            value: entry,\n            entries: []\n          });\n        }\n      } catch (err) {\n        _iterator59.e(err);\n      } finally {\n        _iterator59.f();\n      }\n\n      this.activeEntries = [];\n    }\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, item) {\n      return \"\".concat(item.name);\n    }\n  }]);\n\n  return BubbleChartComponent;\n}(BaseChartComponent);\n\nBubbleChartComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵBubbleChartComponent_BaseFactory;\n  return function BubbleChartComponent_Factory(t) {\n    return (ɵBubbleChartComponent_BaseFactory || (ɵBubbleChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BubbleChartComponent)))(t || BubbleChartComponent);\n  };\n}();\n\nBubbleChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BubbleChartComponent,\n  selectors: [[\"ngx-charts-bubble-chart\"]],\n  contentQueries: function BubbleChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function BubbleChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function BubbleChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    showGridLines: \"showGridLines\",\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    maxRadius: \"maxRadius\",\n    minRadius: \"minRadius\",\n    autoScale: \"autoScale\",\n    schemeType: \"schemeType\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 19,\n  consts: [[3, \"view\", \"showLegend\", \"activeEntries\", \"legendOptions\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"bubble-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"x\", \"0\", \"y\", \"0\", 1, \"bubble-chart-area\", 2, \"fill\", \"rgb(255, 0, 0)\", \"opacity\", \"0\", \"cursor\", \"auto\", 3, \"mouseenter\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bubble-series\", \"\", 3, \"xScale\", \"yScale\", \"rScale\", \"xScaleType\", \"yScaleType\", \"xAxisLabel\", \"yAxisLabel\", \"colors\", \"data\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BubbleChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, BubbleChartComponent__svg_g_5_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(6, BubbleChartComponent__svg_g_6_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(7, \"rect\", 4);\n      i0.ɵɵlistener(\"mouseenter\", function BubbleChartComponent_Template__svg_rect_mouseenter_7_listener() {\n        return ctx.deactivateAll();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, BubbleChartComponent__svg_g_8_Template, 2, 3, \"g\", 5);\n      i0.ɵɵtemplate(9, BubbleChartComponent__svg_g_9_Template, 2, 3, \"g\", 5);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(16, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"activeEntries\", ctx.activeEntries)(\"legendOptions\", ctx.legendOptions)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width)(\"height\", ctx.dims.height);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, BubbleSeriesComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bubble-chart',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:defs>\\n        <svg:clipPath [attr.id]=\\\"clipPathId\\\">\\n          <svg:rect\\n            [attr.width]=\\\"dims.width + 10\\\"\\n            [attr.height]=\\\"dims.height + 10\\\"\\n            [attr.transform]=\\\"'translate(-5, -5)'\\\"\\n          />\\n        </svg:clipPath>\\n      </svg:defs>\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"bubble-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [dims]=\\\"dims\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        />\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        />\\n        <svg:rect\\n          class=\\\"bubble-chart-area\\\"\\n          x=\\\"0\\\"\\n          y=\\\"0\\\"\\n          [attr.width]=\\\"dims.width\\\"\\n          [attr.height]=\\\"dims.height\\\"\\n          style=\\\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\\\"\\n          (mouseenter)=\\\"deactivateAll()\\\"\\n        />\\n        <svg:g *ngIf=\\\"!isSSR\\\" [attr.clip-path]=\\\"clipPath\\\">\\n          <svg:g *ngFor=\\\"let series of data; trackBy: trackBy\\\" [@animationState]=\\\"'active'\\\">\\n            <svg:g\\n              ngx-charts-bubble-series\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [rScale]=\\\"rScale\\\"\\n              [xScaleType]=\\\"xScaleType\\\"\\n              [yScaleType]=\\\"yScaleType\\\"\\n              [xAxisLabel]=\\\"xAxisLabel\\\"\\n              [yAxisLabel]=\\\"yAxisLabel\\\"\\n              [colors]=\\\"colors\\\"\\n              [data]=\\\"series\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              (select)=\\\"onClick($event, series)\\\"\\n              (activate)=\\\"onActivate($event)\\\"\\n              (deactivate)=\\\"onDeactivate($event)\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n        <svg:g *ngIf=\\\"isSSR\\\" [attr.clip-path]=\\\"clipPath\\\">\\n          <svg:g *ngFor=\\\"let series of data; trackBy: trackBy\\\">\\n            <svg:g\\n              ngx-charts-bubble-series\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [rScale]=\\\"rScale\\\"\\n              [xScaleType]=\\\"xScaleType\\\"\\n              [yScaleType]=\\\"yScaleType\\\"\\n              [xAxisLabel]=\\\"xAxisLabel\\\"\\n              [yAxisLabel]=\\\"yAxisLabel\\\"\\n              [colors]=\\\"colors\\\"\\n              [data]=\\\"series\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              (select)=\\\"onClick($event, series)\\\"\\n              (activate)=\\\"onActivate($event)\\\"\\n              (deactivate)=\\\"onDeactivate($event)\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    showGridLines: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    maxRadius: [{\n      type: Input\n    }],\n    minRadius: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nvar BubbleChartModule = /*#__PURE__*/_createClass(function BubbleChartModule() {\n  _classCallCheck(this, BubbleChartModule);\n});\n\nBubbleChartModule.ɵfac = function BubbleChartModule_Factory(t) {\n  return new (t || BubbleChartModule)();\n};\n\nBubbleChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BubbleChartModule\n});\nBubbleChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BubbleChartComponent, BubbleSeriesComponent],\n      exports: [BubbleChartComponent, BubbleSeriesComponent]\n    }]\n  }], null, null);\n})();\n\nvar HeatMapCellComponent = /*#__PURE__*/function () {\n  function HeatMapCellComponent(element) {\n    _classCallCheck(this, HeatMapCellComponent);\n\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.barOrientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n\n  _createClass(HeatMapCellComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.transform = \"translate(\".concat(this.x, \" , \").concat(this.y, \")\");\n      this.startOpacity = 0.3;\n      this.gradientId = 'grad' + id().toString();\n      this.gradientUrl = \"url(#\".concat(this.gradientId, \")\");\n      this.gradientStops = this.getGradientStops();\n\n      if (this.animations) {\n        this.loadAnimation();\n      }\n    }\n  }, {\n    key: \"getGradientStops\",\n    value: function getGradientStops() {\n      return [{\n        offset: 0,\n        color: this.fill,\n        opacity: this.startOpacity\n      }, {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n      }];\n    }\n  }, {\n    key: \"loadAnimation\",\n    value: function loadAnimation() {\n      var node = select(this.element).select('.cell');\n      node.attr('opacity', 0);\n      this.animateToCurrentForm();\n    }\n  }, {\n    key: \"animateToCurrentForm\",\n    value: function animateToCurrentForm() {\n      var node = select(this.element).select('.cell');\n      node.transition().duration(750).attr('opacity', 1);\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      this.select.emit(this.data);\n    }\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter() {\n      this.activate.emit(this.data);\n    }\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave() {\n      this.deactivate.emit(this.data);\n    }\n  }]);\n\n  return HeatMapCellComponent;\n}();\n\nHeatMapCellComponent.ɵfac = function HeatMapCellComponent_Factory(t) {\n  return new (t || HeatMapCellComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nHeatMapCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatMapCellComponent,\n  selectors: [[\"g\", \"ngx-charts-heat-map-cell\", \"\"]],\n  hostBindings: function HeatMapCellComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function HeatMapCellComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function HeatMapCellComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    fill: \"fill\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    data: \"data\",\n    gradient: \"gradient\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c33,\n  decls: 3,\n  vars: 5,\n  consts: [[1, \"cell\"], [4, \"ngIf\"], [\"rx\", \"3\", 1, \"cell\", 3, \"click\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function HeatMapCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, HeatMapCellComponent__svg_defs_1_Template, 2, 3, \"defs\", 1);\n      i0.ɵɵelementStart(2, \"rect\", 2);\n      i0.ɵɵlistener(\"click\", function HeatMapCellComponent_Template__svg_rect_click_2_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"fill\", ctx.gradient ? ctx.gradientUrl : ctx.fill)(\"width\", ctx.width)(\"height\", ctx.height);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-heat-map-cell]',\n      template: \"\\n    <svg:g [attr.transform]=\\\"transform\\\" class=\\\"cell\\\">\\n      <defs *ngIf=\\\"gradient\\\">\\n        <svg:g\\n          ngx-charts-svg-linear-gradient\\n          [orientation]=\\\"barOrientation.Vertical\\\"\\n          [name]=\\\"gradientId\\\"\\n          [stops]=\\\"gradientStops\\\"\\n        />\\n      </defs>\\n      <svg:rect\\n        [attr.fill]=\\\"gradient ? gradientUrl : fill\\\"\\n        rx=\\\"3\\\"\\n        [attr.width]=\\\"width\\\"\\n        [attr.height]=\\\"height\\\"\\n        class=\\\"cell\\\"\\n        (click)=\\\"onClick()\\\"\\n      />\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nvar HeatCellSeriesComponent = /*#__PURE__*/function () {\n  function HeatCellSeriesComponent() {\n    _classCallCheck(this, HeatCellSeriesComponent);\n\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n\n  _createClass(HeatCellSeriesComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (!this.tooltipText) {\n        this.tooltipText = this.getTooltipText;\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.cells = this.getCells();\n    }\n  }, {\n    key: \"getCells\",\n    value: function getCells() {\n      var _this52 = this;\n\n      var cells = [];\n      this.data.map(function (row) {\n        row.series.map(function (cell) {\n          var value = cell.value;\n          cell.series = row.name;\n          cells.push({\n            row: row,\n            cell: cell,\n            x: _this52.xScale(row.name),\n            y: _this52.yScale(cell.name),\n            width: _this52.xScale.bandwidth(),\n            height: _this52.yScale.bandwidth(),\n            fill: _this52.colors.getColor(value),\n            data: value,\n            label: formatLabel(cell.name),\n            series: row.name\n          });\n        });\n      });\n      return cells;\n    }\n  }, {\n    key: \"getTooltipText\",\n    value: function getTooltipText(_ref35) {\n      var label = _ref35.label,\n          data = _ref35.data,\n          series = _ref35.series;\n      return \"\\n      <span class=\\\"tooltip-label\\\">\".concat(escapeLabel(series), \" \\u2022 \").concat(escapeLabel(label), \"</span>\\n      <span class=\\\"tooltip-val\\\">\").concat(data.toLocaleString(), \"</span>\\n    \");\n    }\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, item) {\n      return item.label;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }]);\n\n  return HeatCellSeriesComponent;\n}();\n\nHeatCellSeriesComponent.ɵfac = function HeatCellSeriesComponent_Factory(t) {\n  return new (t || HeatCellSeriesComponent)();\n};\n\nHeatCellSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatCellSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-heat-map-cell-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    colors: \"colors\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    gradient: \"gradient\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c34,\n  decls: 1,\n  vars: 2,\n  consts: [[\"ngx-charts-heat-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"fill\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-heat-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"fill\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function HeatCellSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, HeatCellSeriesComponent__svg_g_0_Template, 1, 18, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.cells)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [HeatMapCellComponent, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatCellSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-heat-map-cell-series]',\n      template: \"\\n    <svg:g\\n      ngx-charts-heat-map-cell\\n      *ngFor=\\\"let c of cells; trackBy: trackBy\\\"\\n      [x]=\\\"c.x\\\"\\n      [y]=\\\"c.y\\\"\\n      [width]=\\\"c.width\\\"\\n      [height]=\\\"c.height\\\"\\n      [fill]=\\\"c.fill\\\"\\n      [data]=\\\"c.data\\\"\\n      (select)=\\\"onClick(c.cell)\\\"\\n      (activate)=\\\"activate.emit(c.cell)\\\"\\n      (deactivate)=\\\"deactivate.emit(c.cell)\\\"\\n      [gradient]=\\\"gradient\\\"\\n      [animations]=\\\"animations\\\"\\n      ngx-tooltip\\n      [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n      [tooltipPlacement]=\\\"placementTypes.Top\\\"\\n      [tooltipType]=\\\"styleTypes.tooltip\\\"\\n      [tooltipTitle]=\\\"tooltipTemplate ? undefined : tooltipText(c)\\\"\\n      [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n      [tooltipContext]=\\\"{ series: c.series, name: c.label, value: c.data }\\\"\\n    ></svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nvar HeatMapComponent = /*#__PURE__*/function (_BaseChartComponent14) {\n  _inherits(HeatMapComponent, _BaseChartComponent14);\n\n  var _super15 = _createSuper(HeatMapComponent);\n\n  function HeatMapComponent() {\n    var _this53;\n\n    _classCallCheck(this, HeatMapComponent);\n\n    _this53 = _super15.apply(this, arguments);\n    _this53.legendTitle = 'Legend';\n    _this53.legendPosition = LegendPosition.Right;\n    _this53.innerPadding = 8;\n    _this53.trimXAxisTicks = true;\n    _this53.trimYAxisTicks = true;\n    _this53.rotateXAxisTicks = true;\n    _this53.maxXAxisTickLength = 16;\n    _this53.maxYAxisTickLength = 16;\n    _this53.tooltipDisabled = false;\n    _this53.activeEntries = [];\n    _this53.activate = new EventEmitter();\n    _this53.deactivate = new EventEmitter();\n    _this53.margin = [10, 20, 10, 20];\n    _this53.xAxisHeight = 0;\n    _this53.yAxisWidth = 0;\n    _this53.scaleType = ScaleType.Linear;\n    return _this53;\n  }\n\n  _createClass(HeatMapComponent, [{\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(HeatMapComponent.prototype), \"update\", this).call(this);\n\n      this.formatDates();\n      this.xDomain = this.getXDomain();\n      this.yDomain = this.getYDomain();\n      this.valueDomain = this.getValueDomain();\n      this.scaleType = getScaleType(this.valueDomain, false);\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.scaleType,\n        legendPosition: this.legendPosition\n      });\n\n      if (this.scaleType === ScaleType.Linear) {\n        var _min7 = this.min;\n        var _max8 = this.max;\n\n        if (!this.min) {\n          _min7 = Math.min.apply(Math, [0].concat(_toConsumableArray(this.valueDomain)));\n        }\n\n        if (!this.max) {\n          _max8 = Math.max.apply(Math, _toConsumableArray(this.valueDomain));\n        }\n\n        this.valueDomain = [_min7, _max8];\n      }\n\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \" , \").concat(this.margin[0], \")\");\n      this.rects = this.getRects();\n    }\n  }, {\n    key: \"getXDomain\",\n    value: function getXDomain() {\n      var domain = [];\n\n      var _iterator60 = _createForOfIteratorHelper(this.results),\n          _step60;\n\n      try {\n        for (_iterator60.s(); !(_step60 = _iterator60.n()).done;) {\n          var group = _step60.value;\n\n          if (!domain.includes(group.name)) {\n            domain.push(group.name);\n          }\n        }\n      } catch (err) {\n        _iterator60.e(err);\n      } finally {\n        _iterator60.f();\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getYDomain\",\n    value: function getYDomain() {\n      var domain = [];\n\n      var _iterator61 = _createForOfIteratorHelper(this.results),\n          _step61;\n\n      try {\n        for (_iterator61.s(); !(_step61 = _iterator61.n()).done;) {\n          var group = _step61.value;\n\n          var _iterator62 = _createForOfIteratorHelper(group.series),\n              _step62;\n\n          try {\n            for (_iterator62.s(); !(_step62 = _iterator62.n()).done;) {\n              var d = _step62.value;\n\n              if (!domain.includes(d.name)) {\n                domain.push(d.name);\n              }\n            }\n          } catch (err) {\n            _iterator62.e(err);\n          } finally {\n            _iterator62.f();\n          }\n        }\n      } catch (err) {\n        _iterator61.e(err);\n      } finally {\n        _iterator61.f();\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getValueDomain\",\n    value: function getValueDomain() {\n      var domain = [];\n\n      var _iterator63 = _createForOfIteratorHelper(this.results),\n          _step63;\n\n      try {\n        for (_iterator63.s(); !(_step63 = _iterator63.n()).done;) {\n          var group = _step63.value;\n\n          var _iterator64 = _createForOfIteratorHelper(group.series),\n              _step64;\n\n          try {\n            for (_iterator64.s(); !(_step64 = _iterator64.n()).done;) {\n              var d = _step64.value;\n\n              if (!domain.includes(d.value)) {\n                domain.push(d.value);\n              }\n            }\n          } catch (err) {\n            _iterator64.e(err);\n          } finally {\n            _iterator64.f();\n          }\n        }\n      } catch (err) {\n        _iterator63.e(err);\n      } finally {\n        _iterator63.f();\n      }\n\n      return domain;\n    }\n    /**\n     * Converts the input to gap paddingInner in fraction\n     * Supports the following inputs:\n     *    Numbers: 8\n     *    Strings: \"8\", \"8px\", \"8%\"\n     *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n     *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n     *\n     * @memberOf HeatMapComponent\n     */\n\n  }, {\n    key: \"getDimension\",\n    value: function getDimension(value) {\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var N = arguments.length > 2 ? arguments[2] : undefined;\n      var L = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (typeof value === 'string') {\n        value = value.replace('[', '').replace(']', '').replace('px', '') // tslint:disable-next-line: quotemark\n        .replace(\"'\", '');\n\n        if (value.includes(',')) {\n          value = value.split(',');\n        }\n      }\n\n      if (Array.isArray(value) && typeof index === 'number') {\n        return this.getDimension(value[index], null, N, L);\n      }\n\n      if (typeof value === 'string' && value.includes('%')) {\n        return +value.replace('%', '') / 100;\n      }\n\n      return N / (L / +value + 1);\n    }\n  }, {\n    key: \"getXScale\",\n    value: function getXScale() {\n      var f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n      return scaleBand().rangeRound([0, this.dims.width]).domain(this.xDomain).paddingInner(f);\n    }\n  }, {\n    key: \"getYScale\",\n    value: function getYScale() {\n      var f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n      return scaleBand().rangeRound([this.dims.height, 0]).domain(this.yDomain).paddingInner(f);\n    }\n  }, {\n    key: \"getRects\",\n    value: function getRects() {\n      var _this54 = this;\n\n      var rects = [];\n      this.xDomain.map(function (xVal) {\n        _this54.yDomain.map(function (yVal) {\n          rects.push({\n            x: _this54.xScale(xVal),\n            y: _this54.yScale(yVal),\n            rx: 3,\n            width: _this54.xScale.bandwidth(),\n            height: _this54.yScale.bandwidth(),\n            fill: 'rgba(200,200,200,0.03)'\n          });\n        });\n      });\n      return rects;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      return {\n        scaleType: this.scaleType,\n        domain: this.valueDomain,\n        colors: this.scaleType === ScaleType.Ordinal ? this.colors : this.colors.scale,\n        title: this.scaleType === ScaleType.Ordinal ? this.legendTitle : undefined,\n        position: this.legendPosition\n      };\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref36) {\n      var width = _ref36.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref37) {\n      var height = _ref37.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(event, group) {\n      var fromLegend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var item = Object.assign({}, event);\n\n      if (group) {\n        item.series = group.name;\n      }\n\n      var items = this.results.map(function (g) {\n        return g.series;\n      }).flat().filter(function (i) {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n      this.activeEntries = _toConsumableArray(items);\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(event, group) {\n      var fromLegend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var item = Object.assign({}, event);\n\n      if (group) {\n        item.series = group.name;\n      }\n\n      this.activeEntries = this.activeEntries.filter(function (i) {\n        if (fromLegend) {\n          return i.label !== item.name;\n        } else {\n          return !(i.name === item.name && i.series === item.series);\n        }\n      });\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }]);\n\n  return HeatMapComponent;\n}(BaseChartComponent);\n\nHeatMapComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵHeatMapComponent_BaseFactory;\n  return function HeatMapComponent_Factory(t) {\n    return (ɵHeatMapComponent_BaseFactory || (ɵHeatMapComponent_BaseFactory = i0.ɵɵgetInheritedFactory(HeatMapComponent)))(t || HeatMapComponent);\n  };\n}();\n\nHeatMapComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatMapComponent,\n  selectors: [[\"ngx-charts-heat-map\"]],\n  contentQueries: function HeatMapComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    gradient: \"gradient\",\n    innerPadding: \"innerPadding\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    min: \"min\",\n    max: \"max\",\n    activeEntries: \"activeEntries\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"animations\", \"legendOptions\", \"legendLabelClick\"], [1, \"heat-map\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-heat-map-cell-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"]],\n  template: function HeatMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function HeatMapComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, HeatMapComponent__svg_g_2_Template, 1, 9, \"g\", 2);\n      i0.ɵɵtemplate(3, HeatMapComponent__svg_g_3_Template, 1, 8, \"g\", 3);\n      i0.ɵɵtemplate(4, HeatMapComponent__svg_rect_4_Template, 1, 6, \"rect\", 4);\n      i0.ɵɵelementStart(5, \"g\", 5);\n      i0.ɵɵlistener(\"select\", function HeatMapComponent_Template__svg_g_select_5_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function HeatMapComponent_Template__svg_g_activate_5_listener($event) {\n        return ctx.onActivate($event, undefined);\n      })(\"deactivate\", function HeatMapComponent_Template__svg_g_deactivate_5_listener($event) {\n        return ctx.onDeactivate($event, undefined);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"animations\", ctx.animations)(\"legendOptions\", ctx.legendOptions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.rects);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"data\", ctx.results)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, HeatCellSeriesComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-heat-map',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [animations]=\\\"animations\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"heat-map chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:rect\\n          *ngFor=\\\"let rect of rects\\\"\\n          [attr.x]=\\\"rect.x\\\"\\n          [attr.y]=\\\"rect.y\\\"\\n          [attr.rx]=\\\"rect.rx\\\"\\n          [attr.width]=\\\"rect.width\\\"\\n          [attr.height]=\\\"rect.height\\\"\\n          [attr.fill]=\\\"rect.fill\\\"\\n        />\\n        <svg:g\\n          ngx-charts-heat-map-cell-series\\n          [xScale]=\\\"xScale\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [colors]=\\\"colors\\\"\\n          [data]=\\\"results\\\"\\n          [gradient]=\\\"gradient\\\"\\n          [animations]=\\\"animations\\\"\\n          [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [tooltipText]=\\\"tooltipText\\\"\\n          (select)=\\\"onClick($event)\\\"\\n          (activate)=\\\"onActivate($event, undefined)\\\"\\n          (deactivate)=\\\"onDeactivate($event, undefined)\\\"\\n        />\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nvar HeatMapModule = /*#__PURE__*/_createClass(function HeatMapModule() {\n  _classCallCheck(this, HeatMapModule);\n});\n\nHeatMapModule.ɵfac = function HeatMapModule_Factory(t) {\n  return new (t || HeatMapModule)();\n};\n\nHeatMapModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: HeatMapModule\n});\nHeatMapModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\n      exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\n    }]\n  }], null, null);\n})();\n\nvar LineComponent = /*#__PURE__*/function () {\n  function LineComponent(element, platformId) {\n    _classCallCheck(this, LineComponent);\n\n    this.element = element;\n    this.platformId = platformId;\n    this.fill = 'none';\n    this.animations = true; // @Output() select = new EventEmitter();\n\n    this.initialized = false;\n    this.isSSR = false;\n  }\n\n  _createClass(LineComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this.initialized) {\n        this.initialized = true;\n        this.initialPath = this.path;\n      } else {\n        this.updatePathEl();\n      }\n    }\n  }, {\n    key: \"updatePathEl\",\n    value: function updatePathEl() {\n      var node = select(this.element.nativeElement).select('.line');\n\n      if (this.animations) {\n        node.transition().duration(750).attr('d', this.path);\n      } else {\n        node.attr('d', this.path);\n      }\n    }\n  }]);\n\n  return LineComponent;\n}();\n\nLineComponent.ɵfac = function LineComponent_Factory(t) {\n  return new (t || LineComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nLineComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineComponent,\n  selectors: [[\"g\", \"ngx-charts-line\", \"\"]],\n  inputs: {\n    path: \"path\",\n    stroke: \"stroke\",\n    data: \"data\",\n    fill: \"fill\",\n    animations: \"animations\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c36,\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"stroke-width\", \"1.5px\", 1, \"line\"]],\n  template: function LineComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LineComponent__svg_g_0_Template, 2, 4, \"g\", 0);\n      i0.ɵɵtemplate(1, LineComponent__svg_g_1_Template, 2, 3, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [i2.NgIf],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      strokeDasharray: 2000,\n      strokeDashoffset: 2000\n    }), animate(1000, style({\n      strokeDashoffset: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-line]',\n      template: \"\\n    <svg:g *ngIf=\\\"!isSSR\\\">\\n      <svg:path\\n        [@animationState]=\\\"'active'\\\"\\n        class=\\\"line\\\"\\n        [attr.d]=\\\"initialPath\\\"\\n        [attr.fill]=\\\"fill\\\"\\n        [attr.stroke]=\\\"stroke\\\"\\n        stroke-width=\\\"1.5px\\\"\\n      />\\n    </svg:g>\\n    <svg:g *ngIf=\\\"isSSR\\\">\\n      <svg:path class=\\\"line\\\" [attr.d]=\\\"initialPath\\\" [attr.fill]=\\\"fill\\\" [attr.stroke]=\\\"stroke\\\" stroke-width=\\\"1.5px\\\" />\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        strokeDasharray: 2000,\n        strokeDashoffset: 2000\n      }), animate(1000, style({\n        strokeDashoffset: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    path: [{\n      type: Input\n    }],\n    stroke: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }]\n  });\n})();\n\nvar LineSeriesComponent = /*#__PURE__*/function () {\n  function LineSeriesComponent() {\n    _classCallCheck(this, LineSeriesComponent);\n\n    this.animations = true;\n    this.barOrientation = BarOrientation;\n  }\n\n  _createClass(LineSeriesComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.updateGradients();\n      var data = this.sortData(this.data.series);\n      var lineGen = this.getLineGenerator();\n      this.path = lineGen(data) || '';\n      var areaGen = this.getAreaGenerator();\n      this.areaPath = areaGen(data) || '';\n\n      if (this.hasRange) {\n        var _range = this.getRangeGenerator();\n\n        this.outerPath = _range(data) || '';\n      }\n\n      if (this.hasGradient) {\n        this.stroke = this.gradientUrl;\n        var values = this.data.series.map(function (d) {\n          return d.value;\n        });\n\n        var _max9 = Math.max.apply(Math, _toConsumableArray(values));\n\n        var _min8 = Math.min.apply(Math, _toConsumableArray(values));\n\n        if (_max9 === _min8) {\n          this.stroke = this.colors.getColor(_max9);\n        }\n      } else {\n        this.stroke = this.colors.getColor(this.data.name);\n      }\n    }\n  }, {\n    key: \"getLineGenerator\",\n    value: function getLineGenerator() {\n      var _this55 = this;\n\n      return line().x(function (d) {\n        var label = d.name;\n        var value;\n\n        if (_this55.scaleType === ScaleType.Time) {\n          value = _this55.xScale(label);\n        } else if (_this55.scaleType === ScaleType.Linear) {\n          value = _this55.xScale(Number(label));\n        } else {\n          value = _this55.xScale(label);\n        }\n\n        return value;\n      }).y(function (d) {\n        return _this55.yScale(d.value);\n      }).curve(this.curve);\n    }\n  }, {\n    key: \"getRangeGenerator\",\n    value: function getRangeGenerator() {\n      var _this56 = this;\n\n      return area().x(function (d) {\n        var label = d.name;\n        var value;\n\n        if (_this56.scaleType === ScaleType.Time) {\n          value = _this56.xScale(label);\n        } else if (_this56.scaleType === ScaleType.Linear) {\n          value = _this56.xScale(Number(label));\n        } else {\n          value = _this56.xScale(label);\n        }\n\n        return value;\n      }).y0(function (d) {\n        return _this56.yScale(typeof d.min === 'number' ? d.min : d.value);\n      }).y1(function (d) {\n        return _this56.yScale(typeof d.max === 'number' ? d.max : d.value);\n      }).curve(this.curve);\n    }\n  }, {\n    key: \"getAreaGenerator\",\n    value: function getAreaGenerator() {\n      var _this57 = this;\n\n      var xProperty = function xProperty(d) {\n        var label = d.name;\n        return _this57.xScale(label);\n      };\n\n      return area().x(xProperty).y0(function () {\n        return _this57.yScale.range()[0];\n      }).y1(function (d) {\n        return _this57.yScale(d.value);\n      }).curve(this.curve);\n    }\n  }, {\n    key: \"sortData\",\n    value: function sortData(data) {\n      if (this.scaleType === ScaleType.Linear) {\n        data = sortLinear(data, 'name');\n      } else if (this.scaleType === ScaleType.Time) {\n        data = sortByTime(data, 'name');\n      } else {\n        data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n      }\n\n      return data;\n    }\n  }, {\n    key: \"updateGradients\",\n    value: function updateGradients() {\n      if (this.colors.scaleType === ScaleType.Linear) {\n        this.hasGradient = true;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = \"url(#\".concat(this.gradientId, \")\");\n        var values = this.data.series.map(function (d) {\n          return d.value;\n        });\n\n        var _max10 = Math.max.apply(Math, _toConsumableArray(values));\n\n        var _min9 = Math.min.apply(Math, _toConsumableArray(values));\n\n        this.gradientStops = this.colors.getLinearGradientStops(_max10, _min9);\n        this.areaGradientStops = this.colors.getLinearGradientStops(_max10);\n      } else {\n        this.hasGradient = false;\n        this.gradientStops = undefined;\n        this.areaGradientStops = undefined;\n      }\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive(entry) {\n      if (!this.activeEntries) return false;\n      var item = this.activeEntries.find(function (d) {\n        return entry.name === d.name;\n      });\n      return item !== undefined;\n    }\n  }, {\n    key: \"isInactive\",\n    value: function isInactive(entry) {\n      if (!this.activeEntries || this.activeEntries.length === 0) return false;\n      var item = this.activeEntries.find(function (d) {\n        return entry.name === d.name;\n      });\n      return item === undefined;\n    }\n  }]);\n\n  return LineSeriesComponent;\n}();\n\nLineSeriesComponent.ɵfac = function LineSeriesComponent_Factory(t) {\n  return new (t || LineSeriesComponent)();\n};\n\nLineSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-line-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    hasRange: \"hasRange\",\n    animations: \"animations\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c37,\n  decls: 6,\n  vars: 22,\n  consts: [[\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\", 4, \"ngIf\"], [\"ngx-charts-area\", \"\", 1, \"line-highlight\", 3, \"data\", \"path\", \"fill\", \"opacity\", \"startOpacity\", \"gradient\", \"stops\", \"animations\"], [\"ngx-charts-line\", \"\", 1, \"line-series\", 3, \"data\", \"path\", \"stroke\", \"animations\"], [\"ngx-charts-area\", \"\", \"class\", \"line-series-range\", 3, \"data\", \"path\", \"fill\", \"active\", \"inactive\", \"opacity\", \"animations\", 4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"ngx-charts-area\", \"\", 1, \"line-series-range\", 3, \"data\", \"path\", \"fill\", \"opacity\", \"animations\"]],\n  template: function LineSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\")(1, \"defs\");\n      i0.ɵɵtemplate(2, LineSeriesComponent__svg_g_2_Template, 1, 3, \"g\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"g\", 1)(4, \"g\", 2);\n      i0.ɵɵtemplate(5, LineSeriesComponent__svg_g_5_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.areaPath)(\"fill\", ctx.hasGradient ? ctx.gradientUrl : ctx.colors.getColor(ctx.data.name))(\"opacity\", 0.25)(\"startOpacity\", 0)(\"gradient\", true)(\"stops\", ctx.areaGradientStops)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.path)(\"stroke\", ctx.stroke)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasRange);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, AreaComponent, LineComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-line-series]',\n      template: \"\\n    <svg:g>\\n      <defs>\\n        <svg:g\\n          ngx-charts-svg-linear-gradient\\n          *ngIf=\\\"hasGradient\\\"\\n          [orientation]=\\\"barOrientation.Vertical\\\"\\n          [name]=\\\"gradientId\\\"\\n          [stops]=\\\"gradientStops\\\"\\n        />\\n      </defs>\\n      <svg:g\\n        ngx-charts-area\\n        class=\\\"line-highlight\\\"\\n        [data]=\\\"data\\\"\\n        [path]=\\\"areaPath\\\"\\n        [fill]=\\\"hasGradient ? gradientUrl : colors.getColor(data.name)\\\"\\n        [opacity]=\\\"0.25\\\"\\n        [startOpacity]=\\\"0\\\"\\n        [gradient]=\\\"true\\\"\\n        [stops]=\\\"areaGradientStops\\\"\\n        [class.active]=\\\"isActive(data)\\\"\\n        [class.inactive]=\\\"isInactive(data)\\\"\\n        [animations]=\\\"animations\\\"\\n      />\\n      <svg:g\\n        ngx-charts-line\\n        class=\\\"line-series\\\"\\n        [data]=\\\"data\\\"\\n        [path]=\\\"path\\\"\\n        [stroke]=\\\"stroke\\\"\\n        [animations]=\\\"animations\\\"\\n        [class.active]=\\\"isActive(data)\\\"\\n        [class.inactive]=\\\"isInactive(data)\\\"\\n      />\\n      <svg:g\\n        ngx-charts-area\\n        *ngIf=\\\"hasRange\\\"\\n        class=\\\"line-series-range\\\"\\n        [data]=\\\"data\\\"\\n        [path]=\\\"outerPath\\\"\\n        [fill]=\\\"hasGradient ? gradientUrl : colors.getColor(data.name)\\\"\\n        [class.active]=\\\"isActive(data)\\\"\\n        [class.inactive]=\\\"isInactive(data)\\\"\\n        [opacity]=\\\"rangeFillOpacity\\\"\\n        [animations]=\\\"animations\\\"\\n      />\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    hasRange: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }]\n  });\n})();\n\nvar LineChartComponent = /*#__PURE__*/function (_BaseChartComponent15) {\n  _inherits(LineChartComponent, _BaseChartComponent15);\n\n  var _super16 = _createSuper(LineChartComponent);\n\n  function LineChartComponent() {\n    var _this58;\n\n    _classCallCheck(this, LineChartComponent);\n\n    _this58 = _super16.apply(this, arguments);\n    _this58.legendTitle = 'Legend';\n    _this58.legendPosition = LegendPosition.Right;\n    _this58.showGridLines = true;\n    _this58.curve = curveLinear;\n    _this58.activeEntries = [];\n    _this58.trimXAxisTicks = true;\n    _this58.trimYAxisTicks = true;\n    _this58.rotateXAxisTicks = true;\n    _this58.maxXAxisTickLength = 16;\n    _this58.maxYAxisTickLength = 16;\n    _this58.roundDomains = false;\n    _this58.tooltipDisabled = false;\n    _this58.showRefLines = false;\n    _this58.showRefLabels = true;\n    _this58.activate = new EventEmitter();\n    _this58.deactivate = new EventEmitter();\n    _this58.margin = [10, 20, 10, 20];\n    _this58.xAxisHeight = 0;\n    _this58.yAxisWidth = 0;\n    _this58.timelineHeight = 50;\n    _this58.timelinePadding = 10;\n    _this58.isSSR = false;\n    return _this58;\n  }\n\n  _createClass(LineChartComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(LineChartComponent.prototype), \"update\", this).call(this);\n\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n\n      if (this.timeline) {\n        this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n      }\n\n      this.xDomain = this.getXDomain();\n\n      if (this.filteredDomain) {\n        this.xDomain = this.filteredDomain;\n      }\n\n      this.yDomain = this.getYDomain();\n      this.seriesDomain = this.getSeriesDomain();\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n      this.yScale = this.getYScale(this.yDomain, this.dims.height);\n      this.updateTimeline();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \" , \").concat(this.margin[0], \")\");\n      this.clipPathId = 'clip' + id().toString();\n      this.clipPath = \"url(#\".concat(this.clipPathId, \")\");\n    }\n  }, {\n    key: \"updateTimeline\",\n    value: function updateTimeline() {\n      if (this.timeline) {\n        this.timelineWidth = this.dims.width;\n        this.timelineXDomain = this.getXDomain();\n        this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n        this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n        this.timelineTransform = \"translate(\".concat(this.dims.xOffset, \", \").concat(-this.margin[2], \")\");\n      }\n    }\n  }, {\n    key: \"getXDomain\",\n    value: function getXDomain() {\n      var values = getUniqueXDomainValues(this.results);\n      this.scaleType = getScaleType(values);\n      var domain = [];\n\n      if (this.scaleType === ScaleType.Linear) {\n        values = values.map(function (v) {\n          return Number(v);\n        });\n      }\n\n      var min;\n      var max;\n\n      if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n        min = this.xScaleMin ? this.xScaleMin : Math.min.apply(Math, _toConsumableArray(values));\n        max = this.xScaleMax ? this.xScaleMax : Math.max.apply(Math, _toConsumableArray(values));\n      }\n\n      if (this.scaleType === ScaleType.Time) {\n        domain = [new Date(min), new Date(max)];\n        this.xSet = _toConsumableArray(values).sort(function (a, b) {\n          var aDate = a.getTime();\n          var bDate = b.getTime();\n          if (aDate > bDate) return 1;\n          if (bDate > aDate) return -1;\n          return 0;\n        });\n      } else if (this.scaleType === ScaleType.Linear) {\n        domain = [min, max]; // Use compare function to sort numbers numerically\n\n        this.xSet = _toConsumableArray(values).sort(function (a, b) {\n          return a - b;\n        });\n      } else {\n        domain = values;\n        this.xSet = values;\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getYDomain\",\n    value: function getYDomain() {\n      var domain = [];\n\n      var _iterator65 = _createForOfIteratorHelper(this.results),\n          _step65;\n\n      try {\n        for (_iterator65.s(); !(_step65 = _iterator65.n()).done;) {\n          var results = _step65.value;\n\n          var _iterator66 = _createForOfIteratorHelper(results.series),\n              _step66;\n\n          try {\n            for (_iterator66.s(); !(_step66 = _iterator66.n()).done;) {\n              var d = _step66.value;\n\n              if (domain.indexOf(d.value) < 0) {\n                domain.push(d.value);\n              }\n\n              if (d.min !== undefined) {\n                this.hasRange = true;\n\n                if (domain.indexOf(d.min) < 0) {\n                  domain.push(d.min);\n                }\n              }\n\n              if (d.max !== undefined) {\n                this.hasRange = true;\n\n                if (domain.indexOf(d.max) < 0) {\n                  domain.push(d.max);\n                }\n              }\n            }\n          } catch (err) {\n            _iterator66.e(err);\n          } finally {\n            _iterator66.f();\n          }\n        }\n      } catch (err) {\n        _iterator65.e(err);\n      } finally {\n        _iterator65.f();\n      }\n\n      var values = [].concat(domain);\n\n      if (!this.autoScale) {\n        values.push(0);\n      }\n\n      var min = this.yScaleMin ? this.yScaleMin : Math.min.apply(Math, _toConsumableArray(values));\n      var max = this.yScaleMax ? this.yScaleMax : Math.max.apply(Math, _toConsumableArray(values));\n      return [min, max];\n    }\n  }, {\n    key: \"getSeriesDomain\",\n    value: function getSeriesDomain() {\n      return this.results.map(function (d) {\n        return d.name;\n      });\n    }\n  }, {\n    key: \"getXScale\",\n    value: function getXScale(domain, width) {\n      var scale;\n\n      if (this.scaleType === ScaleType.Time) {\n        scale = scaleTime().range([0, width]).domain(domain);\n      } else if (this.scaleType === ScaleType.Linear) {\n        scale = scaleLinear().range([0, width]).domain(domain);\n\n        if (this.roundDomains) {\n          scale = scale.nice();\n        }\n      } else if (this.scaleType === ScaleType.Ordinal) {\n        scale = scalePoint().range([0, width]).padding(0.1).domain(domain);\n      }\n\n      return scale;\n    }\n  }, {\n    key: \"getYScale\",\n    value: function getYScale(domain, height) {\n      var scale = scaleLinear().range([height, 0]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"updateDomain\",\n    value: function updateDomain(domain) {\n      this.filteredDomain = domain;\n      this.xDomain = this.filteredDomain;\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n  }, {\n    key: \"updateHoveredVertical\",\n    value: function updateHoveredVertical(item) {\n      this.hoveredVertical = item.value;\n      this.deactivateAll();\n    }\n  }, {\n    key: \"hideCircles\",\n    value: function hideCircles() {\n      this.hoveredVertical = null;\n      this.deactivateAll();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, item) {\n      return \"\".concat(item.name);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      var domain;\n\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.seriesDomain;\n      } else {\n        domain = this.yDomain;\n      }\n\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      var opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.seriesDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.yDomain;\n        opts.colors = this.colors.scale;\n      }\n\n      return opts;\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref38) {\n      var width = _ref38.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref39) {\n      var height = _ref39.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(item) {\n      this.deactivateAll();\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value;\n      });\n\n      if (idx > -1) {\n        return;\n      }\n\n      this.activeEntries = [item];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(item) {\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"deactivateAll\",\n    value: function deactivateAll() {\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n\n      var _iterator67 = _createForOfIteratorHelper(this.activeEntries),\n          _step67;\n\n      try {\n        for (_iterator67.s(); !(_step67 = _iterator67.n()).done;) {\n          var entry = _step67.value;\n          this.deactivate.emit({\n            value: entry,\n            entries: []\n          });\n        }\n      } catch (err) {\n        _iterator67.e(err);\n      } finally {\n        _iterator67.f();\n      }\n\n      this.activeEntries = [];\n    }\n  }]);\n\n  return LineChartComponent;\n}(BaseChartComponent);\n\nLineChartComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵLineChartComponent_BaseFactory;\n  return function LineChartComponent_Factory(t) {\n    return (ɵLineChartComponent_BaseFactory || (ɵLineChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(LineChartComponent)))(t || LineChartComponent);\n  };\n}();\n\nLineChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineChartComponent,\n  selectors: [[\"ngx-charts-line-chart\"]],\n  contentQueries: function LineChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function LineChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function LineChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    autoScale: \"autoScale\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    showRefLines: \"showRefLines\",\n    referenceLines: \"referenceLines\",\n    showRefLabels: \"showRefLabels\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 12,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"line-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"scaleType\", \"legend\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-line-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"curve\", \"rangeFillOpacity\", \"hasRange\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"scaleType\", \"legend\", \"onDomainChange\"], [\"ngx-charts-line-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"curve\", \"hasRange\", \"animations\"]],\n  template: function LineChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function LineChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function LineChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function LineChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, LineChartComponent__svg_g_5_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(6, LineChartComponent__svg_g_6_Template, 1, 12, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, LineChartComponent__svg_g_8_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(9, LineChartComponent__svg_g_9_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(10, LineChartComponent__svg_g_10_Template, 3, 9, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, LineChartComponent__svg_g_11_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, LineSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-line-chart',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:defs>\\n        <svg:clipPath [attr.id]=\\\"clipPathId\\\">\\n          <svg:rect\\n            [attr.width]=\\\"dims.width + 10\\\"\\n            [attr.height]=\\\"dims.height + 10\\\"\\n            [attr.transform]=\\\"'translate(-5, -5)'\\\"\\n          />\\n        </svg:clipPath>\\n      </svg:defs>\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"line-chart chart\\\">\\n        <svg:g\\n          ngx-charts-x-axis\\n          *ngIf=\\\"xAxis\\\"\\n          [xScale]=\\\"xScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showXAxisLabel\\\"\\n          [labelText]=\\\"xAxisLabel\\\"\\n          [trimTicks]=\\\"trimXAxisTicks\\\"\\n          [rotateTicks]=\\\"rotateXAxisTicks\\\"\\n          [maxTickLength]=\\\"maxXAxisTickLength\\\"\\n          [tickFormatting]=\\\"xAxisTickFormatting\\\"\\n          [ticks]=\\\"xAxisTicks\\\"\\n          (dimensionsChanged)=\\\"updateXAxisHeight($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yScale\\\"\\n          [dims]=\\\"dims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          [ticks]=\\\"yAxisTicks\\\"\\n          [referenceLines]=\\\"referenceLines\\\"\\n          [showRefLines]=\\\"showRefLines\\\"\\n          [showRefLabels]=\\\"showRefLabels\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g [attr.clip-path]=\\\"clipPath\\\">\\n          <svg:g *ngIf=\\\"!isSSR\\\">\\n            <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\" [@animationState]=\\\"'active'\\\">\\n              <svg:g\\n                ngx-charts-line-series\\n                [xScale]=\\\"xScale\\\"\\n                [yScale]=\\\"yScale\\\"\\n                [colors]=\\\"colors\\\"\\n                [data]=\\\"series\\\"\\n                [activeEntries]=\\\"activeEntries\\\"\\n                [scaleType]=\\\"scaleType\\\"\\n                [curve]=\\\"curve\\\"\\n                [rangeFillOpacity]=\\\"rangeFillOpacity\\\"\\n                [hasRange]=\\\"hasRange\\\"\\n                [animations]=\\\"animations\\\"\\n              />\\n            </svg:g>\\n          </svg:g>\\n          <svg:g *ngIf=\\\"isSSR\\\">\\n            <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n              <svg:g\\n                ngx-charts-line-series\\n                [xScale]=\\\"xScale\\\"\\n                [yScale]=\\\"yScale\\\"\\n                [colors]=\\\"colors\\\"\\n                [data]=\\\"series\\\"\\n                [activeEntries]=\\\"activeEntries\\\"\\n                [scaleType]=\\\"scaleType\\\"\\n                [curve]=\\\"curve\\\"\\n                [rangeFillOpacity]=\\\"rangeFillOpacity\\\"\\n                [hasRange]=\\\"hasRange\\\"\\n                [animations]=\\\"animations\\\"\\n              />\\n            </svg:g>\\n          </svg:g>\\n\\n          <svg:g *ngIf=\\\"!tooltipDisabled\\\" (mouseleave)=\\\"hideCircles()\\\">\\n            <svg:g\\n              ngx-charts-tooltip-area\\n              [dims]=\\\"dims\\\"\\n              [xSet]=\\\"xSet\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [results]=\\\"results\\\"\\n              [colors]=\\\"colors\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"seriesTooltipTemplate\\\"\\n              (hover)=\\\"updateHoveredVertical($event)\\\"\\n            />\\n\\n            <svg:g *ngFor=\\\"let series of results\\\">\\n              <svg:g\\n                ngx-charts-circle-series\\n                [xScale]=\\\"xScale\\\"\\n                [yScale]=\\\"yScale\\\"\\n                [colors]=\\\"colors\\\"\\n                [data]=\\\"series\\\"\\n                [scaleType]=\\\"scaleType\\\"\\n                [visibleValue]=\\\"hoveredVertical\\\"\\n                [activeEntries]=\\\"activeEntries\\\"\\n                [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n                [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n                (select)=\\\"onClick($event)\\\"\\n                (activate)=\\\"onActivate($event)\\\"\\n                (deactivate)=\\\"onDeactivate($event)\\\"\\n              />\\n            </svg:g>\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n      <svg:g\\n        ngx-charts-timeline\\n        *ngIf=\\\"timeline && scaleType != 'ordinal'\\\"\\n        [attr.transform]=\\\"timelineTransform\\\"\\n        [results]=\\\"results\\\"\\n        [view]=\\\"[timelineWidth, height]\\\"\\n        [height]=\\\"timelineHeight\\\"\\n        [scheme]=\\\"scheme\\\"\\n        [customColors]=\\\"customColors\\\"\\n        [scaleType]=\\\"scaleType\\\"\\n        [legend]=\\\"legend\\\"\\n        (onDomainChange)=\\\"updateDomain($event)\\\"\\n      >\\n        <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n          <svg:g\\n            ngx-charts-line-series\\n            [xScale]=\\\"timelineXScale\\\"\\n            [yScale]=\\\"timelineYScale\\\"\\n            [colors]=\\\"colors\\\"\\n            [data]=\\\"series\\\"\\n            [scaleType]=\\\"scaleType\\\"\\n            [curve]=\\\"curve\\\"\\n            [hasRange]=\\\"hasRange\\\"\\n            [animations]=\\\"animations\\\"\\n          />\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nvar LineChartModule = /*#__PURE__*/_createClass(function LineChartModule() {\n  _classCallCheck(this, LineChartModule);\n});\n\nLineChartModule.ɵfac = function LineChartModule_Factory(t) {\n  return new (t || LineChartModule)();\n};\n\nLineChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LineChartModule\n});\nLineChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\n      exports: [LineComponent, LineChartComponent, LineSeriesComponent]\n    }]\n  }], null, null);\n})();\n\nvar PieLabelComponent = /*#__PURE__*/function () {\n  function PieLabelComponent(platformId) {\n    _classCallCheck(this, PieLabelComponent);\n\n    this.platformId = platformId;\n    this.animations = true;\n    this.labelTrim = true;\n    this.labelTrimSize = 10;\n    this.trimLabel = trimLabel;\n  }\n\n  _createClass(PieLabelComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.setTransforms();\n      this.update();\n    }\n  }, {\n    key: \"setTransforms\",\n    value: function setTransforms() {\n      if (isPlatformServer(this.platformId)) {\n        this.styleTransform = \"translate3d(\".concat(this.textX, \"px,\").concat(this.textY, \"px, 0)\");\n        this.attrTransform = \"translate(\".concat(this.textX, \",\").concat(this.textY, \")\");\n        this.textTransition = !this.animations ? null : 'transform 0.75s';\n      } else {\n        var isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n        this.styleTransform = isIE ? null : \"translate3d(\".concat(this.textX, \"px,\").concat(this.textY, \"px, 0)\");\n        this.attrTransform = !isIE ? null : \"translate(\".concat(this.textX, \",\").concat(this.textY, \")\");\n        this.textTransition = isIE || !this.animations ? null : 'transform 0.75s';\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var startRadius = this.radius;\n\n      if (this.explodeSlices) {\n        startRadius = this.radius * this.value / this.max;\n      }\n\n      var innerArc = arc().innerRadius(startRadius).outerRadius(startRadius); // Calculate innerPos then scale outer position to match label position\n\n      var innerPos = innerArc.centroid(this.data);\n      var scale = this.data.pos[1] / innerPos[1];\n\n      if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n        scale = 1;\n      }\n\n      var outerPos = [scale * innerPos[0], scale * innerPos[1]];\n      this.line = \"M\".concat(innerPos, \"L\").concat(outerPos, \"L\").concat(this.data.pos);\n    }\n  }, {\n    key: \"textX\",\n    get: function get() {\n      return this.data.pos[0];\n    }\n  }, {\n    key: \"textY\",\n    get: function get() {\n      return this.data.pos[1];\n    }\n  }, {\n    key: \"textAnchor\",\n    value: function textAnchor() {\n      return this.midAngle(this.data) < Math.PI ? TextAnchor.Start : TextAnchor.End;\n    }\n  }, {\n    key: \"midAngle\",\n    value: function midAngle(d) {\n      return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n  }]);\n\n  return PieLabelComponent;\n}();\n\nPieLabelComponent.ɵfac = function PieLabelComponent_Factory(t) {\n  return new (t || PieLabelComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nPieLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-label\", \"\"]],\n  inputs: {\n    data: \"data\",\n    radius: \"radius\",\n    label: \"label\",\n    color: \"color\",\n    max: \"max\",\n    value: \"value\",\n    explodeSlices: \"explodeSlices\",\n    animations: \"animations\",\n    labelTrim: \"labelTrim\",\n    labelTrimSize: \"labelTrimSize\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c38,\n  decls: 6,\n  vars: 17,\n  consts: [[\"dy\", \".35em\", 1, \"pie-label\"], [\"fill\", \"none\", 1, \"pie-label-line\", \"line\"]],\n  template: function PieLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"title\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(2, \"g\")(3, \"text\", 0);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(5, \"path\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"transform\", ctx.styleTransform)(\"transition\", ctx.textTransition);\n      i0.ɵɵattribute(\"transform\", ctx.attrTransform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"text-anchor\", ctx.textAnchor())(\"shape-rendering\", \"crispEdges\");\n      i0.ɵɵclassProp(\"animation\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.labelTrim ? ctx.trimLabel(ctx.label, ctx.labelTrimSize) : ctx.label, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"animation\", ctx.animations);\n      i0.ɵɵattribute(\"d\", ctx.line)(\"stroke\", ctx.color);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-label]',\n      template: \"\\n    <title>{{ label }}</title>\\n    <svg:g [attr.transform]=\\\"attrTransform\\\" [style.transform]=\\\"styleTransform\\\" [style.transition]=\\\"textTransition\\\">\\n      <svg:text\\n        class=\\\"pie-label\\\"\\n        [class.animation]=\\\"animations\\\"\\n        dy=\\\".35em\\\"\\n        [style.textAnchor]=\\\"textAnchor()\\\"\\n        [style.shapeRendering]=\\\"'crispEdges'\\\"\\n      >\\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\\n      </svg:text>\\n    </svg:g>\\n    <svg:path\\n      [attr.d]=\\\"line\\\"\\n      [attr.stroke]=\\\"color\\\"\\n      fill=\\\"none\\\"\\n      class=\\\"pie-label-line line\\\"\\n      [class.animation]=\\\"animations\\\"\\n    ></svg:path>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    labelTrim: [{\n      type: Input\n    }],\n    labelTrimSize: [{\n      type: Input\n    }]\n  });\n})();\n\nvar PolarSeriesComponent = /*#__PURE__*/function () {\n  function PolarSeriesComponent() {\n    _classCallCheck(this, PolarSeriesComponent);\n\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.circleRadius = 3;\n    this.barOrientation = BarOrientation;\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n\n  _createClass(PolarSeriesComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this59 = this;\n\n      this.updateGradients();\n      var line = this.getLineGenerator();\n      var data = this.sortData(this.data.series);\n      var seriesName = this.data.name;\n      var linearScaleType = this.colors.scaleType === ScaleType.Linear;\n      var min = this.yScale.domain()[0];\n      this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n      this.path = line(data) || '';\n      this.circles = data.map(function (d) {\n        var a = _this59.getAngle(d);\n\n        var r = _this59.getRadius(d);\n\n        var value = d.value;\n\n        var color = _this59.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n\n        var cData = Object.assign({}, d, {\n          series: seriesName,\n          value: value,\n          name: d.name\n        });\n        return {\n          data: cData,\n          cx: r * Math.sin(a),\n          cy: -r * Math.cos(a),\n          value: value,\n          color: color,\n          label: d.name\n        };\n      });\n      this.active = this.isActive(this.data);\n      this.inactive = this.isInactive(this.data);\n\n      this.tooltipText = this.tooltipText || function (c) {\n        return _this59.defaultTooltipText(c);\n      };\n    }\n  }, {\n    key: \"getAngle\",\n    value: function getAngle(d) {\n      var label = d.name;\n\n      if (this.scaleType === ScaleType.Time) {\n        return this.xScale(label);\n      } else if (this.scaleType === ScaleType.Linear) {\n        return this.xScale(Number(label));\n      }\n\n      return this.xScale(label);\n    }\n  }, {\n    key: \"getRadius\",\n    value: function getRadius(d) {\n      return this.yScale(d.value);\n    }\n  }, {\n    key: \"getLineGenerator\",\n    value: function getLineGenerator() {\n      var _this60 = this;\n\n      return lineRadial().angle(function (d) {\n        return _this60.getAngle(d);\n      }).radius(function (d) {\n        return _this60.getRadius(d);\n      }).curve(this.curve);\n    }\n  }, {\n    key: \"sortData\",\n    value: function sortData(data) {\n      if (this.scaleType === ScaleType.Linear) {\n        return sortLinear(data, 'name');\n      } else if (this.scaleType === ScaleType.Time) {\n        return sortByTime(data, 'name');\n      }\n\n      return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive(entry) {\n      if (!this.activeEntries) return false;\n      var item = this.activeEntries.find(function (d) {\n        return entry.name === d.name;\n      });\n      return item !== undefined;\n    }\n  }, {\n    key: \"isInactive\",\n    value: function isInactive(entry) {\n      if (!this.activeEntries || this.activeEntries.length === 0) return false;\n      var item = this.activeEntries.find(function (d) {\n        return entry.name === d.name;\n      });\n      return item === undefined;\n    }\n  }, {\n    key: \"defaultTooltipText\",\n    value: function defaultTooltipText(_ref40) {\n      var label = _ref40.label,\n          value = _ref40.value;\n      return \"\\n      <span class=\\\"tooltip-label\\\">\".concat(escapeLabel(this.data.name), \" \\u2022 \").concat(escapeLabel(label), \"</span>\\n      <span class=\\\"tooltip-val\\\">\").concat(value.toLocaleString(), \"</span>\\n    \");\n    }\n  }, {\n    key: \"updateGradients\",\n    value: function updateGradients() {\n      this.hasGradient = this.gradient || this.colors.scaleType === ScaleType.Linear;\n\n      if (!this.hasGradient) {\n        return;\n      }\n\n      this.gradientId = 'grad' + id().toString();\n      this.gradientUrl = \"url(#\".concat(this.gradientId, \")\");\n\n      if (this.colors.scaleType === ScaleType.Linear) {\n        var values = this.data.series.map(function (d) {\n          return d.value;\n        });\n\n        var _max11 = Math.max.apply(Math, _toConsumableArray(values));\n\n        var _min10 = Math.min.apply(Math, _toConsumableArray(values));\n\n        this.gradientStops = this.colors.getLinearGradientStops(_max11, _min10);\n      } else {\n        this.gradientStops = undefined;\n      }\n    }\n  }]);\n\n  return PolarSeriesComponent;\n}();\n\nPolarSeriesComponent.ɵfac = function PolarSeriesComponent_Factory(t) {\n  return new (t || PolarSeriesComponent)();\n};\n\nPolarSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PolarSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-polar-series\", \"\"]],\n  inputs: {\n    name: \"name\",\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    gradient: \"gradient\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c39,\n  decls: 5,\n  vars: 11,\n  consts: [[1, \"polar-charts-series\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\", \"endOpacity\", \"stops\", 4, \"ngIf\"], [\"ngx-charts-line\", \"\", 1, \"polar-series-path\", 3, \"path\", \"stroke\", \"fill\", \"animations\"], [\"ngx-charts-circle\", \"\", \"class\", \"circle\", \"ngx-tooltip\", \"\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"opacity\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\", \"endOpacity\", \"stops\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PolarSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0)(1, \"defs\");\n      i0.ɵɵtemplate(2, PolarSeriesComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"g\", 2);\n      i0.ɵɵtemplate(4, PolarSeriesComponent__svg_g_4_Template, 1, 12, \"g\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.active)(\"inactive\", ctx.inactive);\n      i0.ɵɵproperty(\"path\", ctx.path)(\"stroke\", ctx.hasGradient ? ctx.gradientUrl : ctx.seriesColor)(\"fill\", ctx.hasGradient ? ctx.gradientUrl : ctx.seriesColor)(\"animations\", ctx.animations);\n      i0.ɵɵattribute(\"fill-opacity\", ctx.rangeFillOpacity);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.circles);\n    }\n  },\n  dependencies: [SvgRadialGradientComponent, LineComponent, CircleComponent, i2.NgIf, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-polar-series]',\n      template: \"\\n    <svg:g class=\\\"polar-charts-series\\\">\\n      <defs>\\n        <svg:g\\n          ngx-charts-svg-radial-gradient\\n          *ngIf=\\\"hasGradient\\\"\\n          [color]=\\\"seriesColor\\\"\\n          [name]=\\\"gradientId\\\"\\n          [startOpacity]=\\\"0.25\\\"\\n          [endOpacity]=\\\"1\\\"\\n          [stops]=\\\"gradientStops\\\"\\n        />\\n      </defs>\\n      <svg:g\\n        ngx-charts-line\\n        class=\\\"polar-series-path\\\"\\n        [path]=\\\"path\\\"\\n        [stroke]=\\\"hasGradient ? gradientUrl : seriesColor\\\"\\n        [class.active]=\\\"active\\\"\\n        [class.inactive]=\\\"inactive\\\"\\n        [attr.fill-opacity]=\\\"rangeFillOpacity\\\"\\n        [fill]=\\\"hasGradient ? gradientUrl : seriesColor\\\"\\n        [animations]=\\\"animations\\\"\\n      />\\n      <svg:g\\n        ngx-charts-circle\\n        *ngFor=\\\"let circle of circles\\\"\\n        class=\\\"circle\\\"\\n        [cx]=\\\"circle.cx\\\"\\n        [cy]=\\\"circle.cy\\\"\\n        [r]=\\\"circleRadius\\\"\\n        [fill]=\\\"circle.color\\\"\\n        [style.opacity]=\\\"inactive ? 0.2 : 1\\\"\\n        ngx-tooltip\\n        [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n        [tooltipPlacement]=\\\"placementTypes.Top\\\"\\n        [tooltipType]=\\\"styleTypes.tooltip\\\"\\n        [tooltipTitle]=\\\"tooltipTemplate ? undefined : tooltipText(circle)\\\"\\n        [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n        [tooltipContext]=\\\"circle.data\\\"\\n        (select)=\\\"select.emit(circle.data)\\\"\\n        (activate)=\\\"activate.emit({ name: circle.data.series })\\\"\\n        (deactivate)=\\\"deactivate.emit({ name: circle.data.series })\\\"\\n      ></svg:g>\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    name: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nvar twoPI = 2 * Math.PI;\n\nvar PolarChartComponent = /*#__PURE__*/function (_BaseChartComponent16) {\n  _inherits(PolarChartComponent, _BaseChartComponent16);\n\n  var _super17 = _createSuper(PolarChartComponent);\n\n  function PolarChartComponent() {\n    var _this61;\n\n    _classCallCheck(this, PolarChartComponent);\n\n    _this61 = _super17.apply(this, arguments);\n    _this61.legendTitle = 'Legend';\n    _this61.legendPosition = LegendPosition.Right;\n    _this61.showGridLines = true;\n    _this61.curve = curveCardinalClosed;\n    _this61.activeEntries = [];\n    _this61.rangeFillOpacity = 0.15;\n    _this61.trimYAxisTicks = true;\n    _this61.maxYAxisTickLength = 16;\n    _this61.roundDomains = false;\n    _this61.tooltipDisabled = false;\n    _this61.showSeriesOnHover = true;\n    _this61.gradient = false;\n    _this61.yAxisMinScale = 0;\n    _this61.labelTrim = true;\n    _this61.labelTrimSize = 10;\n    _this61.activate = new EventEmitter();\n    _this61.deactivate = new EventEmitter(); // series: any; // ???\n\n    _this61.margin = [10, 20, 10, 20];\n    _this61.xAxisHeight = 0;\n    _this61.yAxisWidth = 0;\n    _this61.orientation = Orientation;\n    _this61.isSSR = false;\n    return _this61;\n  }\n\n  _createClass(PolarChartComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(PolarChartComponent.prototype), \"update\", this).call(this);\n\n      this.setDims();\n      this.setScales();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.setTicks();\n    }\n  }, {\n    key: \"setDims\",\n    value: function setDims() {\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      var halfWidth = Math.floor(this.dims.width / 2);\n      var halfHeight = Math.floor(this.dims.height / 2);\n      var outerRadius = this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5);\n      var yOffset = Math.max(0, halfHeight - outerRadius);\n      this.yAxisDims = _objectSpread(_objectSpread({}, this.dims), {}, {\n        width: halfWidth\n      });\n      this.transform = \"translate(\".concat(this.dims.xOffset, \", \").concat(this.margin[0], \")\");\n      this.transformYAxis = \"translate(0, \".concat(yOffset, \")\");\n      this.labelOffset = this.dims.height + 40;\n      this.transformPlot = \"translate(\".concat(halfWidth, \", \").concat(halfHeight, \")\");\n    }\n  }, {\n    key: \"setScales\",\n    value: function setScales() {\n      var xValues = this.getXValues();\n      this.scaleType = getScaleType(xValues);\n      this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n      this.yDomain = this.getYDomain();\n      this.seriesDomain = this.getSeriesDomain();\n      this.xScale = this.getXScale(this.xDomain, twoPI);\n      this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n      this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n    }\n  }, {\n    key: \"setTicks\",\n    value: function setTicks() {\n      var _this62 = this;\n\n      var tickFormat;\n\n      if (this.xAxisTickFormatting) {\n        tickFormat = this.xAxisTickFormatting;\n      } else if (this.xScale.tickFormat) {\n        tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n      } else {\n        tickFormat = function tickFormat(d) {\n          if (isDate(d)) {\n            return d.toLocaleDateString();\n          }\n\n          return d.toLocaleString();\n        };\n      }\n\n      var outerRadius = this.outerRadius;\n      var s = 1.1;\n      this.thetaTicks = this.xDomain.map(function (d) {\n        var startAngle = _this62.xScale(d);\n\n        var dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n        var label = tickFormat(d);\n        var startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n        var pos = [dd, s * startPos[1]];\n        return {\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: startAngle,\n          value: outerRadius,\n          label: label,\n          startPos: startPos,\n          pos: pos\n        };\n      });\n      var minDistance = 10;\n      /* from pie chart, abstract out -*/\n\n      for (var i = 0; i < this.thetaTicks.length - 1; i++) {\n        var a = this.thetaTicks[i];\n\n        for (var j = i + 1; j < this.thetaTicks.length; j++) {\n          var b = this.thetaTicks[j]; // if they're on the same side\n\n          if (b.pos[0] * a.pos[0] > 0) {\n            // if they're overlapping\n            var o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n\n            if (o > 0) {\n              // push the second up or down\n              b.pos[1] += Math.sign(b.pos[0]) * o;\n            }\n          }\n        }\n      }\n\n      this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(function (d) {\n        return _this62.yScale(d);\n      });\n    }\n  }, {\n    key: \"getXValues\",\n    value: function getXValues() {\n      var values = [];\n\n      var _iterator68 = _createForOfIteratorHelper(this.results),\n          _step68;\n\n      try {\n        for (_iterator68.s(); !(_step68 = _iterator68.n()).done;) {\n          var results = _step68.value;\n\n          var _iterator69 = _createForOfIteratorHelper(results.series),\n              _step69;\n\n          try {\n            for (_iterator69.s(); !(_step69 = _iterator69.n()).done;) {\n              var d = _step69.value;\n\n              if (!values.includes(d.name)) {\n                values.push(d.name);\n              }\n            }\n          } catch (err) {\n            _iterator69.e(err);\n          } finally {\n            _iterator69.f();\n          }\n        }\n      } catch (err) {\n        _iterator68.e(err);\n      } finally {\n        _iterator68.f();\n      }\n\n      return values;\n    }\n  }, {\n    key: \"getXDomain\",\n    value: function getXDomain() {\n      var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getXValues();\n\n      if (this.scaleType === ScaleType.Time) {\n        var _min11 = Math.min.apply(Math, _toConsumableArray(values));\n\n        var _max12 = Math.max.apply(Math, _toConsumableArray(values));\n\n        return [_min11, _max12];\n      } else if (this.scaleType === ScaleType.Linear) {\n        values = values.map(function (v) {\n          return Number(v);\n        });\n\n        var _min12 = Math.min.apply(Math, _toConsumableArray(values));\n\n        var _max13 = Math.max.apply(Math, _toConsumableArray(values));\n\n        return [_min12, _max13];\n      }\n\n      return values;\n    }\n  }, {\n    key: \"getYValues\",\n    value: function getYValues() {\n      var domain = [];\n\n      var _iterator70 = _createForOfIteratorHelper(this.results),\n          _step70;\n\n      try {\n        for (_iterator70.s(); !(_step70 = _iterator70.n()).done;) {\n          var results = _step70.value;\n\n          var _iterator71 = _createForOfIteratorHelper(results.series),\n              _step71;\n\n          try {\n            for (_iterator71.s(); !(_step71 = _iterator71.n()).done;) {\n              var d = _step71.value;\n\n              if (domain.indexOf(d.value) < 0) {\n                domain.push(d.value);\n              }\n\n              if (d.min !== undefined) {\n                if (domain.indexOf(d.min) < 0) {\n                  domain.push(d.min);\n                }\n              }\n\n              if (d.max !== undefined) {\n                if (domain.indexOf(d.max) < 0) {\n                  domain.push(d.max);\n                }\n              }\n            }\n          } catch (err) {\n            _iterator71.e(err);\n          } finally {\n            _iterator71.f();\n          }\n        }\n      } catch (err) {\n        _iterator70.e(err);\n      } finally {\n        _iterator70.f();\n      }\n\n      return domain;\n    }\n  }, {\n    key: \"getYDomain\",\n    value: function getYDomain() {\n      var domain = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getYValues();\n      var min = Math.min.apply(Math, _toConsumableArray(domain));\n      var max = Math.max.apply(Math, [this.yAxisMinScale].concat(_toConsumableArray(domain)));\n      min = Math.max(0, min);\n\n      if (!this.autoScale) {\n        min = Math.min(0, min);\n      }\n\n      return [min, max];\n    }\n  }, {\n    key: \"getSeriesDomain\",\n    value: function getSeriesDomain() {\n      return this.results.map(function (d) {\n        return d.name;\n      });\n    }\n  }, {\n    key: \"getXScale\",\n    value: function getXScale(domain, width) {\n      switch (this.scaleType) {\n        case ScaleType.Time:\n          return scaleTime().range([0, width]).domain(domain);\n\n        case ScaleType.Linear:\n          {\n            var scale = scaleLinear().range([0, width]).domain(domain);\n            return this.roundDomains ? scale.nice() : scale;\n          }\n\n        default:\n          return scalePoint().range([0, width - twoPI / domain.length]).padding(0).domain(domain);\n      }\n    }\n  }, {\n    key: \"getYScale\",\n    value: function getYScale(domain, height) {\n      var scale = scaleLinear().range([0, height]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data, series) {\n      if (series) {\n        data.series = series.name;\n      }\n\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      var domain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.yDomain.reverse();\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      if (this.schemeType === ScaleType.Ordinal) {\n        return {\n          scaleType: this.schemeType,\n          colors: this.colors,\n          domain: this.seriesDomain,\n          title: this.legendTitle,\n          position: this.legendPosition\n        };\n      }\n\n      return {\n        scaleType: this.schemeType,\n        colors: this.colors.scale,\n        domain: this.yDomain,\n        title: undefined,\n        position: this.legendPosition\n      };\n    }\n  }, {\n    key: \"updateYAxisWidth\",\n    value: function updateYAxisWidth(_ref41) {\n      var width = _ref41.width;\n      this.yAxisWidth = width;\n      this.update();\n    }\n  }, {\n    key: \"updateXAxisHeight\",\n    value: function updateXAxisHeight(_ref42) {\n      var height = _ref42.height;\n      this.xAxisHeight = height;\n      this.update();\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(item) {\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value;\n      });\n\n      if (idx > -1) {\n        return;\n      }\n\n      this.activeEntries = this.showSeriesOnHover ? [item].concat(_toConsumableArray(this.activeEntries)) : this.activeEntries;\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(item) {\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"deactivateAll\",\n    value: function deactivateAll() {\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n\n      var _iterator72 = _createForOfIteratorHelper(this.activeEntries),\n          _step72;\n\n      try {\n        for (_iterator72.s(); !(_step72 = _iterator72.n()).done;) {\n          var entry = _step72.value;\n          this.deactivate.emit({\n            value: entry,\n            entries: []\n          });\n        }\n      } catch (err) {\n        _iterator72.e(err);\n      } finally {\n        _iterator72.f();\n      }\n\n      this.activeEntries = [];\n    }\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, item) {\n      return \"\".concat(item.name);\n    }\n  }]);\n\n  return PolarChartComponent;\n}(BaseChartComponent);\n\nPolarChartComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵPolarChartComponent_BaseFactory;\n  return function PolarChartComponent_Factory(t) {\n    return (ɵPolarChartComponent_BaseFactory || (ɵPolarChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PolarChartComponent)))(t || PolarChartComponent);\n  };\n}();\n\nPolarChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PolarChartComponent,\n  selectors: [[\"ngx-charts-polar-chart\"]],\n  contentQueries: function PolarChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    autoScale: \"autoScale\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    showSeriesOnHover: \"showSeriesOnHover\",\n    gradient: \"gradient\",\n    yAxisMinScale: \"yAxisMinScale\",\n    labelTrim: \"labelTrim\",\n    labelTrimSize: \"labelTrimSize\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 17,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"polar-chart\", \"chart\"], [\"cx\", \"0\", \"cy\", \"0\", 1, \"polar-chart-background\"], [4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"class\", \"gridline-path radial-gridline-path\", \"cx\", \"0\", \"cy\", \"0\", 4, \"ngFor\", \"ngForOf\"], [\"cx\", \"0\", \"cy\", \"0\", 1, \"gridline-path\", \"radial-gridline-path\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"label\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"label\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"dimensionsChanged\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-polar-series\", \"\", 3, \"gradient\", \"xScale\", \"yScale\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"curve\", \"rangeFillOpacity\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PolarChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\");\n      i0.ɵɵelement(3, \"circle\", 2);\n      i0.ɵɵtemplate(4, PolarChartComponent__svg_g_4_Template, 2, 1, \"g\", 3);\n      i0.ɵɵtemplate(5, PolarChartComponent__svg_g_5_Template, 2, 1, \"g\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, PolarChartComponent__svg_g_6_Template, 1, 9, \"g\", 4);\n      i0.ɵɵtemplate(7, PolarChartComponent__svg_g_7_Template, 1, 5, \"g\", 5);\n      i0.ɵɵtemplate(8, PolarChartComponent__svg_g_8_Template, 2, 3, \"g\", 3);\n      i0.ɵɵtemplate(9, PolarChartComponent__svg_g_9_Template, 2, 3, \"g\", 3);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(14, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transformPlot);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"r\", ctx.outerRadius);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showGridLines);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis && ctx.showXAxisLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, PieLabelComponent, YAxisComponent, AxisLabelComponent, PolarSeriesComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25, \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-polar-chart',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:g class=\\\"polar-chart chart\\\" [attr.transform]=\\\"transform\\\">\\n        <svg:g [attr.transform]=\\\"transformPlot\\\">\\n          <svg:circle class=\\\"polar-chart-background\\\" cx=\\\"0\\\" cy=\\\"0\\\" [attr.r]=\\\"this.outerRadius\\\" />\\n          <svg:g *ngIf=\\\"showGridLines\\\">\\n            <svg:circle\\n              *ngFor=\\\"let r of radiusTicks\\\"\\n              class=\\\"gridline-path radial-gridline-path\\\"\\n              cx=\\\"0\\\"\\n              cy=\\\"0\\\"\\n              [attr.r]=\\\"r\\\"\\n            />\\n          </svg:g>\\n          <svg:g *ngIf=\\\"xAxis\\\">\\n            <svg:g\\n              ngx-charts-pie-label\\n              *ngFor=\\\"let tick of thetaTicks\\\"\\n              [data]=\\\"tick\\\"\\n              [radius]=\\\"outerRadius\\\"\\n              [label]=\\\"tick.label\\\"\\n              [max]=\\\"outerRadius\\\"\\n              [value]=\\\"showGridLines ? 1 : outerRadius\\\"\\n              [explodeSlices]=\\\"true\\\"\\n              [animations]=\\\"animations\\\"\\n              [labelTrim]=\\\"labelTrim\\\"\\n              [labelTrimSize]=\\\"labelTrimSize\\\"\\n            ></svg:g>\\n          </svg:g>\\n        </svg:g>\\n        <svg:g\\n          ngx-charts-y-axis\\n          [attr.transform]=\\\"transformYAxis\\\"\\n          *ngIf=\\\"yAxis\\\"\\n          [yScale]=\\\"yAxisScale\\\"\\n          [dims]=\\\"yAxisDims\\\"\\n          [showGridLines]=\\\"showGridLines\\\"\\n          [showLabel]=\\\"showYAxisLabel\\\"\\n          [labelText]=\\\"yAxisLabel\\\"\\n          [trimTicks]=\\\"trimYAxisTicks\\\"\\n          [maxTickLength]=\\\"maxYAxisTickLength\\\"\\n          [tickFormatting]=\\\"yAxisTickFormatting\\\"\\n          (dimensionsChanged)=\\\"updateYAxisWidth($event)\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-axis-label\\n          *ngIf=\\\"xAxis && showXAxisLabel\\\"\\n          [label]=\\\"xAxisLabel\\\"\\n          [offset]=\\\"labelOffset\\\"\\n          [orient]=\\\"orientation.Bottom\\\"\\n          [height]=\\\"dims.height\\\"\\n          [width]=\\\"dims.width\\\"\\n        ></svg:g>\\n        <svg:g *ngIf=\\\"!isSSR\\\" [attr.transform]=\\\"transformPlot\\\">\\n          <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\" [@animationState]=\\\"'active'\\\">\\n            <svg:g\\n              ngx-charts-polar-series\\n              [gradient]=\\\"gradient\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [colors]=\\\"colors\\\"\\n              [data]=\\\"series\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [scaleType]=\\\"scaleType\\\"\\n              [curve]=\\\"curve\\\"\\n              [rangeFillOpacity]=\\\"rangeFillOpacity\\\"\\n              [animations]=\\\"animations\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              (select)=\\\"onClick($event)\\\"\\n              (activate)=\\\"onActivate($event)\\\"\\n              (deactivate)=\\\"onDeactivate($event)\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n        <svg:g *ngIf=\\\"isSSR\\\" [attr.transform]=\\\"transformPlot\\\">\\n          <svg:g *ngFor=\\\"let series of results; trackBy: trackBy\\\">\\n            <svg:g\\n              ngx-charts-polar-series\\n              [gradient]=\\\"gradient\\\"\\n              [xScale]=\\\"xScale\\\"\\n              [yScale]=\\\"yScale\\\"\\n              [colors]=\\\"colors\\\"\\n              [data]=\\\"series\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [scaleType]=\\\"scaleType\\\"\\n              [curve]=\\\"curve\\\"\\n              [rangeFillOpacity]=\\\"rangeFillOpacity\\\"\\n              [animations]=\\\"animations\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              (select)=\\\"onClick($event)\\\"\\n              (activate)=\\\"onActivate($event)\\\"\\n              (deactivate)=\\\"onDeactivate($event)\\\"\\n            />\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    showSeriesOnHover: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    yAxisMinScale: [{\n      type: Input\n    }],\n    labelTrim: [{\n      type: Input\n    }],\n    labelTrimSize: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nvar PieArcComponent = /*#__PURE__*/function () {\n  function PieArcComponent(element) {\n    _classCallCheck(this, PieArcComponent);\n\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.cornerRadius = 0;\n    this.explodeSlices = false;\n    this.gradient = false;\n    this.animate = true;\n    this.pointerEvents = true;\n    this.isActive = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dblclick = new EventEmitter();\n    this.barOrientation = BarOrientation;\n    this.initialized = false;\n    this.element = element.nativeElement;\n  }\n\n  _createClass(PieArcComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"getGradient\",\n    value: function getGradient() {\n      return this.gradient ? this.gradientFill : this.fill;\n    }\n  }, {\n    key: \"getPointerEvents\",\n    value: function getPointerEvents() {\n      return this.pointerEvents ? 'auto' : 'none';\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var calc = this.calculateArc();\n      this.startOpacity = 0.5;\n      this.radialGradientId = 'linearGrad' + id().toString();\n      this.gradientFill = \"url(#\".concat(this.radialGradientId, \")\");\n\n      if (this.animate) {\n        if (this.initialized) {\n          this.updateAnimation();\n        } else {\n          this.loadAnimation();\n          this.initialized = true;\n        }\n      } else {\n        this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n      }\n    }\n  }, {\n    key: \"calculateArc\",\n    value: function calculateArc() {\n      var outerRadius = this.outerRadius;\n\n      if (this.explodeSlices && this.innerRadius === 0) {\n        outerRadius = this.outerRadius * this.value / this.max;\n      }\n\n      return arc().innerRadius(this.innerRadius).outerRadius(outerRadius).cornerRadius(this.cornerRadius);\n    }\n  }, {\n    key: \"loadAnimation\",\n    value: function loadAnimation() {\n      var node = select(this.element).selectAll('.arc').data([{\n        startAngle: this.startAngle,\n        endAngle: this.endAngle\n      }]);\n      var calc = this.calculateArc();\n      node.transition().attrTween('d', function (d) {\n        this._current = this._current || d;\n        var copyOfD = Object.assign({}, d);\n        copyOfD.endAngle = copyOfD.startAngle;\n        var interpolater = interpolate(copyOfD, copyOfD);\n        this._current = interpolater(0);\n        return function (t) {\n          return calc(interpolater(t));\n        };\n      }).transition().duration(750).attrTween('d', function (d) {\n        this._current = this._current || d;\n        var interpolater = interpolate(this._current, d);\n        this._current = interpolater(0);\n        return function (t) {\n          return calc(interpolater(t));\n        };\n      });\n    }\n  }, {\n    key: \"updateAnimation\",\n    value: function updateAnimation() {\n      var node = select(this.element).selectAll('.arc').data([{\n        startAngle: this.startAngle,\n        endAngle: this.endAngle\n      }]);\n      var calc = this.calculateArc();\n      node.transition().duration(750).attrTween('d', function (d) {\n        this._current = this._current || d;\n        var interpolater = interpolate(this._current, d);\n        this._current = interpolater(0);\n        return function (t) {\n          return calc(interpolater(t));\n        };\n      });\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      var _this63 = this;\n\n      clearTimeout(this._timeout);\n      this._timeout = setTimeout(function () {\n        return _this63.select.emit(_this63.data);\n      }, 200);\n    }\n  }, {\n    key: \"onDblClick\",\n    value: function onDblClick(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      clearTimeout(this._timeout);\n      this.dblclick.emit({\n        data: this.data,\n        nativeEvent: event\n      });\n    }\n  }]);\n\n  return PieArcComponent;\n}();\n\nPieArcComponent.ɵfac = function PieArcComponent_Factory(t) {\n  return new (t || PieArcComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nPieArcComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieArcComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-arc\", \"\"]],\n  inputs: {\n    fill: \"fill\",\n    startAngle: \"startAngle\",\n    endAngle: \"endAngle\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    cornerRadius: \"cornerRadius\",\n    value: \"value\",\n    max: \"max\",\n    data: \"data\",\n    explodeSlices: \"explodeSlices\",\n    gradient: \"gradient\",\n    animate: \"animate\",\n    pointerEvents: \"pointerEvents\",\n    isActive: \"isActive\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dblclick: \"dblclick\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c40,\n  decls: 3,\n  vars: 7,\n  consts: [[1, \"arc-group\"], [4, \"ngIf\"], [1, \"arc\", 3, \"click\", \"dblclick\", \"mouseenter\", \"mouseleave\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\"]],\n  template: function PieArcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, PieArcComponent__svg_defs_1_Template, 2, 3, \"defs\", 1);\n      i0.ɵɵelementStart(2, \"path\", 2);\n      i0.ɵɵlistener(\"click\", function PieArcComponent_Template__svg_path_click_2_listener() {\n        return ctx.onClick();\n      })(\"dblclick\", function PieArcComponent_Template__svg_path_dblclick_2_listener($event) {\n        return ctx.onDblClick($event);\n      })(\"mouseenter\", function PieArcComponent_Template__svg_path_mouseenter_2_listener() {\n        return ctx.activate.emit(ctx.data);\n      })(\"mouseleave\", function PieArcComponent_Template__svg_path_mouseleave_2_listener() {\n        return ctx.deactivate.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"pointer-events\", ctx.getPointerEvents());\n      i0.ɵɵclassProp(\"active\", ctx.isActive);\n      i0.ɵɵattribute(\"d\", ctx.path)(\"fill\", ctx.getGradient());\n    }\n  },\n  dependencies: [SvgRadialGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieArcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-arc]',\n      template: \"\\n    <svg:g class=\\\"arc-group\\\">\\n      <svg:defs *ngIf=\\\"gradient\\\">\\n        <svg:g ngx-charts-svg-radial-gradient [color]=\\\"fill\\\" [name]=\\\"radialGradientId\\\" [startOpacity]=\\\"startOpacity\\\" />\\n      </svg:defs>\\n      <svg:path\\n        [attr.d]=\\\"path\\\"\\n        class=\\\"arc\\\"\\n        [class.active]=\\\"isActive\\\"\\n        [attr.fill]=\\\"getGradient()\\\"\\n        (click)=\\\"onClick()\\\"\\n        (dblclick)=\\\"onDblClick($event)\\\"\\n        (mouseenter)=\\\"activate.emit(data)\\\"\\n        (mouseleave)=\\\"deactivate.emit(data)\\\"\\n        [style.pointer-events]=\\\"getPointerEvents()\\\"\\n      />\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    endAngle: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    cornerRadius: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animate: [{\n      type: Input\n    }],\n    pointerEvents: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dblclick: [{\n      type: Output\n    }]\n  });\n})();\n\nvar PieSeriesComponent = /*#__PURE__*/function () {\n  function PieSeriesComponent() {\n    _classCallCheck(this, PieSeriesComponent);\n\n    this.series = [];\n    this.innerRadius = 60;\n    this.outerRadius = 80;\n    this.trimLabels = true;\n    this.maxLabelLength = 10;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dblclick = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n\n  _createClass(PieSeriesComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var pieGenerator = pie().value(function (d) {\n        return d.value;\n      }).sort(null);\n      var arcData = pieGenerator(this.series);\n      this.max = max(arcData, function (d) {\n        return d.value;\n      });\n      this.data = this.calculateLabelPositions(arcData);\n      this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n  }, {\n    key: \"midAngle\",\n    value: function midAngle(d) {\n      return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n  }, {\n    key: \"outerArc\",\n    value: function outerArc() {\n      var factor = 1.5;\n      return arc().innerRadius(this.outerRadius * factor).outerRadius(this.outerRadius * factor);\n    }\n  }, {\n    key: \"calculateLabelPositions\",\n    value: function calculateLabelPositions(pieData) {\n      var _this64 = this;\n\n      var factor = 1.5;\n      var minDistance = 10;\n      var labelPositions = pieData;\n      labelPositions.forEach(function (d) {\n        d.pos = _this64.outerArc().centroid(d);\n        d.pos[0] = factor * _this64.outerRadius * (_this64.midAngle(d) < Math.PI ? 1 : -1);\n      });\n\n      for (var i = 0; i < labelPositions.length - 1; i++) {\n        var a = labelPositions[i];\n\n        if (!this.labelVisible(a)) {\n          continue;\n        }\n\n        for (var j = i + 1; j < labelPositions.length; j++) {\n          var b = labelPositions[j];\n\n          if (!this.labelVisible(b)) {\n            continue;\n          } // if they're on the same side\n\n\n          if (b.pos[0] * a.pos[0] > 0) {\n            // if they're overlapping\n            var o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n\n            if (o > 0) {\n              // push the second up or down\n              b.pos[1] += Math.sign(b.pos[0]) * o;\n            }\n          }\n        }\n      }\n\n      return labelPositions;\n    }\n  }, {\n    key: \"labelVisible\",\n    value: function labelVisible(myArc) {\n      return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n    }\n  }, {\n    key: \"getTooltipTitle\",\n    value: function getTooltipTitle(a) {\n      return this.tooltipTemplate ? undefined : this.tooltipText(a);\n    }\n  }, {\n    key: \"labelText\",\n    value: function labelText(myArc) {\n      if (this.labelFormatting) {\n        return this.labelFormatting(myArc.data.name);\n      }\n\n      return this.label(myArc);\n    }\n  }, {\n    key: \"label\",\n    value: function label(myArc) {\n      return formatLabel(myArc.data.name);\n    }\n  }, {\n    key: \"defaultTooltipText\",\n    value: function defaultTooltipText(myArc) {\n      var label = this.label(myArc);\n      var val = formatLabel(myArc.data.value);\n      return \"\\n      <span class=\\\"tooltip-label\\\">\".concat(escapeLabel(label), \"</span>\\n      <span class=\\\"tooltip-val\\\">\").concat(val, \"</span>\\n    \");\n    }\n  }, {\n    key: \"color\",\n    value: function color(myArc) {\n      return this.colors.getColor(this.label(myArc));\n    }\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, item) {\n      return item.data.name;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive(entry) {\n      if (!this.activeEntries) return false;\n      var item = this.activeEntries.find(function (d) {\n        return entry.name === d.name && entry.series === d.series;\n      });\n      return item !== undefined;\n    }\n  }]);\n\n  return PieSeriesComponent;\n}();\n\nPieSeriesComponent.ɵfac = function PieSeriesComponent_Factory(t) {\n  return new (t || PieSeriesComponent)();\n};\n\nPieSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-series\", \"\"]],\n  inputs: {\n    colors: \"colors\",\n    series: \"series\",\n    dims: \"dims\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    explodeSlices: \"explodeSlices\",\n    showLabels: \"showLabels\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    labelFormatting: \"labelFormatting\",\n    trimLabels: \"trimLabels\",\n    maxLabelLength: \"maxLabelLength\",\n    tooltipText: \"tooltipText\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dblclick: \"dblclick\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c41,\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"color\", \"label\", \"labelTrim\", \"labelTrimSize\", \"max\", \"value\", \"explodeSlices\", \"animations\", 4, \"ngIf\"], [\"ngx-charts-pie-arc\", \"\", \"ngx-tooltip\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"gradient\", \"data\", \"max\", \"explodeSlices\", \"isActive\", \"animate\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", \"dblclick\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"color\", \"label\", \"labelTrim\", \"labelTrimSize\", \"max\", \"value\", \"explodeSlices\", \"animations\"]],\n  template: function PieSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PieSeriesComponent__svg_g_0_Template, 3, 19, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.data)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [PieLabelComponent, PieArcComponent, i2.NgForOf, i2.NgIf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-series]',\n      template: \"\\n    <svg:g *ngFor=\\\"let arc of data; trackBy: trackBy\\\">\\n      <svg:g\\n        ngx-charts-pie-label\\n        *ngIf=\\\"labelVisible(arc)\\\"\\n        [data]=\\\"arc\\\"\\n        [radius]=\\\"outerRadius\\\"\\n        [color]=\\\"color(arc)\\\"\\n        [label]=\\\"labelText(arc)\\\"\\n        [labelTrim]=\\\"trimLabels\\\"\\n        [labelTrimSize]=\\\"maxLabelLength\\\"\\n        [max]=\\\"max\\\"\\n        [value]=\\\"arc.value\\\"\\n        [explodeSlices]=\\\"explodeSlices\\\"\\n        [animations]=\\\"animations\\\"\\n      ></svg:g>\\n      <svg:g\\n        ngx-charts-pie-arc\\n        [startAngle]=\\\"arc.startAngle\\\"\\n        [endAngle]=\\\"arc.endAngle\\\"\\n        [innerRadius]=\\\"innerRadius\\\"\\n        [outerRadius]=\\\"outerRadius\\\"\\n        [fill]=\\\"color(arc)\\\"\\n        [value]=\\\"arc.data.value\\\"\\n        [gradient]=\\\"gradient\\\"\\n        [data]=\\\"arc.data\\\"\\n        [max]=\\\"max\\\"\\n        [explodeSlices]=\\\"explodeSlices\\\"\\n        [isActive]=\\\"isActive(arc.data)\\\"\\n        [animate]=\\\"animations\\\"\\n        (select)=\\\"onClick($event)\\\"\\n        (activate)=\\\"activate.emit($event)\\\"\\n        (deactivate)=\\\"deactivate.emit($event)\\\"\\n        (dblclick)=\\\"dblclick.emit($event)\\\"\\n        ngx-tooltip\\n        [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n        [tooltipPlacement]=\\\"placementTypes.Top\\\"\\n        [tooltipType]=\\\"styleTypes.tooltip\\\"\\n        [tooltipTitle]=\\\"getTooltipTitle(arc)\\\"\\n        [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n        [tooltipContext]=\\\"arc.data\\\"\\n      ></svg:g>\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    colors: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    showLabels: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    trimLabels: [{\n      type: Input\n    }],\n    maxLabelLength: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dblclick: [{\n      type: Output\n    }]\n  });\n})();\n\nvar AdvancedPieChartComponent = /*#__PURE__*/function (_BaseChartComponent17) {\n  _inherits(AdvancedPieChartComponent, _BaseChartComponent17);\n\n  var _super18 = _createSuper(AdvancedPieChartComponent);\n\n  function AdvancedPieChartComponent() {\n    var _this65;\n\n    _classCallCheck(this, AdvancedPieChartComponent);\n\n    _this65 = _super18.apply(this, arguments);\n    _this65.activeEntries = [];\n    _this65.tooltipDisabled = false;\n    _this65.label = 'Total';\n    _this65.activate = new EventEmitter();\n    _this65.deactivate = new EventEmitter();\n    _this65.margin = [20, 20, 20, 20];\n    return _this65;\n  }\n\n  _createClass(AdvancedPieChartComponent, [{\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(AdvancedPieChartComponent.prototype), \"update\", this).call(this);\n\n      this.dims = calculateViewDimensions({\n        width: this.width * 4 / 12.0,\n        height: this.height,\n        margins: this.margin\n      });\n      this.formatDates();\n      this.domain = this.getDomain();\n      this.setColors();\n      var xOffset = this.dims.width / 2;\n      var yOffset = this.margin[0] + this.dims.height / 2;\n      this.legendWidth = this.width - this.dims.width - this.margin[1];\n      this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n      this.innerRadius = this.outerRadius * 0.75;\n      this.transform = \"translate(\".concat(xOffset, \" , \").concat(yOffset, \")\");\n    }\n  }, {\n    key: \"getDomain\",\n    value: function getDomain() {\n      return this.results.map(function (d) {\n        return d.label;\n      });\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(item) {\n      var fromLegend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      item = this.results.find(function (d) {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n\n      if (idx > -1) {\n        return;\n      }\n\n      this.activeEntries = [item].concat(_toConsumableArray(this.activeEntries));\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(item) {\n      var fromLegend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      item = this.results.find(function (d) {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }]);\n\n  return AdvancedPieChartComponent;\n}(BaseChartComponent);\n\nAdvancedPieChartComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵAdvancedPieChartComponent_BaseFactory;\n  return function AdvancedPieChartComponent_Factory(t) {\n    return (ɵAdvancedPieChartComponent_BaseFactory || (ɵAdvancedPieChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AdvancedPieChartComponent)))(t || AdvancedPieChartComponent);\n  };\n}();\n\nAdvancedPieChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AdvancedPieChartComponent,\n  selectors: [[\"ngx-charts-advanced-pie-chart\"]],\n  contentQueries: function AdvancedPieChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    label: \"label\",\n    valueFormatting: \"valueFormatting\",\n    nameFormatting: \"nameFormatting\",\n    percentageFormatting: \"percentageFormatting\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 37,\n  consts: [[1, \"advanced-pie\", \"chart\"], [3, \"view\", \"showLegend\", \"animations\"], [1, \"pie\", \"chart\"], [\"ngx-charts-pie-series\", \"\", 3, \"colors\", \"series\", \"innerRadius\", \"activeEntries\", \"outerRadius\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"animations\", \"select\", \"activate\", \"deactivate\"], [1, \"advanced-pie-legend-wrapper\"], [3, \"data\", \"colors\", \"width\", \"label\", \"animations\", \"valueFormatting\", \"labelFormatting\", \"percentageFormatting\", \"select\", \"activate\", \"deactivate\"]],\n  template: function AdvancedPieChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"ngx-charts-chart\", 1);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(3, \"g\", 2)(4, \"g\", 3);\n      i0.ɵɵlistener(\"select\", function AdvancedPieChartComponent_Template__svg_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function AdvancedPieChartComponent_Template__svg_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function AdvancedPieChartComponent_Template__svg_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"ngx-charts-advanced-legend\", 5);\n      i0.ɵɵlistener(\"select\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_select_6_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_activate_6_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"deactivate\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_deactivate_6_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\")(\"height\", ctx.height, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"width\", ctx.dims.width, \"px\")(\"height\", ctx.dims.height, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(34, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"series\", ctx.results)(\"innerRadius\", ctx.innerRadius)(\"activeEntries\", ctx.activeEntries)(\"outerRadius\", ctx.outerRadius)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"width\", ctx.width - ctx.dims.width, \"px\")(\"height\", ctx.height, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"data\", ctx.results)(\"colors\", ctx.colors)(\"width\", ctx.width - ctx.dims.width - ctx.margin[1])(\"label\", ctx.label)(\"animations\", ctx.animations)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.nameFormatting)(\"percentageFormatting\", ctx.percentageFormatting);\n    }\n  },\n  dependencies: [ChartComponent, PieSeriesComponent, AdvancedLegendComponent],\n  styles: [_c25, \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AdvancedPieChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-advanced-pie-chart',\n      template: \"\\n    <div [style.width.px]=\\\"width\\\" [style.height.px]=\\\"height\\\">\\n      <div class=\\\"advanced-pie chart\\\" [style.width.px]=\\\"dims.width\\\" [style.height.px]=\\\"dims.height\\\">\\n        <ngx-charts-chart [view]=\\\"[width, height]\\\" [showLegend]=\\\"false\\\" [animations]=\\\"animations\\\">\\n          <svg:g [attr.transform]=\\\"transform\\\" class=\\\"pie chart\\\">\\n            <svg:g\\n              ngx-charts-pie-series\\n              [colors]=\\\"colors\\\"\\n              [series]=\\\"results\\\"\\n              [innerRadius]=\\\"innerRadius\\\"\\n              [activeEntries]=\\\"activeEntries\\\"\\n              [outerRadius]=\\\"outerRadius\\\"\\n              [gradient]=\\\"gradient\\\"\\n              [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              [tooltipText]=\\\"tooltipText\\\"\\n              (select)=\\\"onClick($event)\\\"\\n              (activate)=\\\"onActivate($event)\\\"\\n              (deactivate)=\\\"onDeactivate($event)\\\"\\n              [animations]=\\\"animations\\\"\\n            ></svg:g>\\n          </svg:g>\\n        </ngx-charts-chart>\\n      </div>\\n      <div class=\\\"advanced-pie-legend-wrapper\\\" [style.width.px]=\\\"width - dims.width\\\" [style.height.px]=\\\"height\\\">\\n        <ngx-charts-advanced-legend\\n          [data]=\\\"results\\\"\\n          [colors]=\\\"colors\\\"\\n          [width]=\\\"width - dims.width - margin[1]\\\"\\n          [label]=\\\"label\\\"\\n          [animations]=\\\"animations\\\"\\n          [valueFormatting]=\\\"valueFormatting\\\"\\n          [labelFormatting]=\\\"nameFormatting\\\"\\n          [percentageFormatting]=\\\"percentageFormatting\\\"\\n          (select)=\\\"onClick($event)\\\"\\n          (activate)=\\\"onActivate($event, true)\\\"\\n          (deactivate)=\\\"onDeactivate($event, true)\\\"\\n        >\\n        </ngx-charts-advanced-legend>\\n      </div>\\n    </div>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"]\n    }]\n  }], null, {\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    nameFormatting: [{\n      type: Input\n    }],\n    percentageFormatting: [{\n      type: Input\n    }]\n  });\n})();\n\nvar PieChartComponent = /*#__PURE__*/function (_BaseChartComponent18) {\n  _inherits(PieChartComponent, _BaseChartComponent18);\n\n  var _super19 = _createSuper(PieChartComponent);\n\n  function PieChartComponent() {\n    var _this66;\n\n    _classCallCheck(this, PieChartComponent);\n\n    _this66 = _super19.apply(this, arguments);\n    _this66.labels = false;\n    _this66.legend = false;\n    _this66.legendTitle = 'Legend';\n    _this66.legendPosition = LegendPosition.Right;\n    _this66.explodeSlices = false;\n    _this66.doughnut = false;\n    _this66.arcWidth = 0.25;\n    _this66.activeEntries = [];\n    _this66.tooltipDisabled = false;\n    _this66.trimLabels = true;\n    _this66.maxLabelLength = 10;\n    _this66.dblclick = new EventEmitter();\n    _this66.select = new EventEmitter();\n    _this66.activate = new EventEmitter();\n    _this66.deactivate = new EventEmitter();\n    return _this66;\n  }\n\n  _createClass(PieChartComponent, [{\n    key: \"update\",\n    value: function update() {\n      var _this67 = this;\n\n      _get(_getPrototypeOf(PieChartComponent.prototype), \"update\", this).call(this);\n\n      if (this.labels && this.hasNoOptionalMarginsSet()) {\n        this.margins = [30, 80, 30, 80];\n      } else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n        // default value for margins\n        this.margins = [20, 20, 20, 20];\n      }\n\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margins,\n        showLegend: this.legend,\n        legendPosition: this.legendPosition\n      });\n      this.formatDates();\n      var xOffset = this.margins[3] + this.dims.width / 2;\n      var yOffset = this.margins[0] + this.dims.height / 2;\n      this.translation = \"translate(\".concat(xOffset, \", \").concat(yOffset, \")\");\n      this.outerRadius = Math.min(this.dims.width, this.dims.height);\n\n      if (this.labels) {\n        // make room for labels\n        this.outerRadius /= 3;\n      } else {\n        this.outerRadius /= 2;\n      }\n\n      this.innerRadius = 0;\n\n      if (this.doughnut) {\n        this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n      }\n\n      this.domain = this.getDomain(); // sort data according to domain\n\n      this.data = this.results.sort(function (a, b) {\n        return _this67.domain.indexOf(a.name) - _this67.domain.indexOf(b.name);\n      });\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n    }\n  }, {\n    key: \"getDomain\",\n    value: function getDomain() {\n      return this.results.map(function (d) {\n        return d.label;\n      });\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      return {\n        scaleType: ScaleType.Ordinal,\n        domain: this.domain,\n        colors: this.colors,\n        title: this.legendTitle,\n        position: this.legendPosition\n      };\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(item) {\n      var fromLegend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      item = this.results.find(function (d) {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n\n      if (idx > -1) {\n        return;\n      }\n\n      this.activeEntries = [item].concat(_toConsumableArray(this.activeEntries));\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(item) {\n      var fromLegend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      item = this.results.find(function (d) {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"hasNoOptionalMarginsSet\",\n    value: function hasNoOptionalMarginsSet() {\n      return !this.margins || this.margins.length <= 0;\n    }\n  }]);\n\n  return PieChartComponent;\n}(BaseChartComponent);\n\nPieChartComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵPieChartComponent_BaseFactory;\n  return function PieChartComponent_Factory(t) {\n    return (ɵPieChartComponent_BaseFactory || (ɵPieChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PieChartComponent)))(t || PieChartComponent);\n  };\n}();\n\nPieChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieChartComponent,\n  selectors: [[\"ngx-charts-pie-chart\"]],\n  contentQueries: function PieChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    labels: \"labels\",\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    explodeSlices: \"explodeSlices\",\n    doughnut: \"doughnut\",\n    arcWidth: \"arcWidth\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    labelFormatting: \"labelFormatting\",\n    trimLabels: \"trimLabels\",\n    maxLabelLength: \"maxLabelLength\",\n    tooltipText: \"tooltipText\",\n    margins: \"margins\"\n  },\n  outputs: {\n    dblclick: \"dblclick\",\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 24,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"pie-chart\", \"chart\"], [\"ngx-charts-pie-series\", \"\", 3, \"colors\", \"series\", \"showLabels\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"activeEntries\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"dblclick\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PieChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function PieChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function PieChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      })(\"legendLabelClick\", function PieChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"dblclick\", function PieChartComponent_Template__svg_g_dblclick_2_listener($event) {\n        return ctx.dblclick.emit($event);\n      })(\"select\", function PieChartComponent_Template__svg_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function PieChartComponent_Template__svg_g_activate_2_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function PieChartComponent_Template__svg_g_deactivate_2_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(21, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.translation);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"series\", ctx.data)(\"showLabels\", ctx.labels)(\"labelFormatting\", ctx.labelFormatting)(\"trimLabels\", ctx.trimLabels)(\"maxLabelLength\", ctx.maxLabelLength)(\"activeEntries\", ctx.activeEntries)(\"innerRadius\", ctx.innerRadius)(\"outerRadius\", ctx.outerRadius)(\"explodeSlices\", ctx.explodeSlices)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText);\n    }\n  },\n  dependencies: [ChartComponent, PieSeriesComponent],\n  styles: [_c25, _c42],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-pie-chart',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelActivate)=\\\"onActivate($event, true)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event, true)\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"translation\\\" class=\\\"pie-chart chart\\\">\\n        <svg:g\\n          ngx-charts-pie-series\\n          [colors]=\\\"colors\\\"\\n          [series]=\\\"data\\\"\\n          [showLabels]=\\\"labels\\\"\\n          [labelFormatting]=\\\"labelFormatting\\\"\\n          [trimLabels]=\\\"trimLabels\\\"\\n          [maxLabelLength]=\\\"maxLabelLength\\\"\\n          [activeEntries]=\\\"activeEntries\\\"\\n          [innerRadius]=\\\"innerRadius\\\"\\n          [outerRadius]=\\\"outerRadius\\\"\\n          [explodeSlices]=\\\"explodeSlices\\\"\\n          [gradient]=\\\"gradient\\\"\\n          [animations]=\\\"animations\\\"\\n          [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [tooltipText]=\\\"tooltipText\\\"\\n          (dblclick)=\\\"dblclick.emit($event)\\\"\\n          (select)=\\\"onClick($event)\\\"\\n          (activate)=\\\"onActivate($event)\\\"\\n          (deactivate)=\\\"onDeactivate($event)\\\"\\n        />\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"]\n    }]\n  }], null, {\n    labels: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    doughnut: [{\n      type: Input\n    }],\n    arcWidth: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    trimLabels: [{\n      type: Input\n    }],\n    maxLabelLength: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    dblclick: [{\n      type: Output\n    }],\n    margins: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nfunction gridSize(dims, len, minWidth) {\n  var rows = 1;\n  var cols = len;\n  var width = dims.width;\n\n  if (width > minWidth) {\n    while (width / cols < minWidth) {\n      rows += 1;\n      cols = Math.ceil(len / rows);\n    }\n  }\n\n  return [cols, rows];\n}\n\nfunction gridLayout(dims, data, minWidth, designatedTotal) {\n  var xScale = scaleBand();\n  var yScale = scaleBand();\n  var width = dims.width;\n  var height = dims.height;\n\n  var _gridSize = gridSize(dims, data.length, minWidth),\n      _gridSize2 = _slicedToArray(_gridSize, 2),\n      columns = _gridSize2[0],\n      rows = _gridSize2[1];\n\n  var xDomain = [];\n  var yDomain = [];\n\n  for (var i = 0; i < rows; i++) {\n    yDomain.push(i);\n  }\n\n  for (var _i = 0; _i < columns; _i++) {\n    xDomain.push(_i);\n  }\n\n  xScale.domain(xDomain);\n  yScale.domain(yDomain);\n  xScale.rangeRound([0, width], 0.1);\n  yScale.rangeRound([0, height], 0.1);\n  var res = [];\n  var total = designatedTotal ? designatedTotal : getTotal(data);\n  var cardWidth = xScale.bandwidth();\n  var cardHeight = yScale.bandwidth();\n\n  for (var _i2 = 0; _i2 < data.length; _i2++) {\n    res[_i2] = {};\n    res[_i2].data = {\n      name: data[_i2] ? data[_i2].name : '',\n      value: data[_i2] ? data[_i2].value : undefined,\n      extra: data[_i2] ? data[_i2].extra : undefined,\n      label: data[_i2] ? data[_i2].label : ''\n    };\n    res[_i2].x = xScale(_i2 % columns);\n    res[_i2].y = yScale(Math.floor(_i2 / columns));\n    res[_i2].width = cardWidth;\n    res[_i2].height = cardHeight;\n    res[_i2].data.percent = total > 0 ? res[_i2].data.value / total : 0;\n    res[_i2].data.total = total;\n  }\n\n  return res;\n}\n\nfunction getTotal(results) {\n  return results.map(function (d) {\n    return d ? d.value : 0;\n  }).reduce(function (sum, val) {\n    return sum + val;\n  }, 0);\n}\n\nvar PieGridSeriesComponent = /*#__PURE__*/function () {\n  function PieGridSeriesComponent(element) {\n    _classCallCheck(this, PieGridSeriesComponent);\n\n    this.innerRadius = 70;\n    this.outerRadius = 80;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.element = element.nativeElement;\n  }\n\n  _createClass(PieGridSeriesComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.layout = pie().value(function (d) {\n        return d.data.value;\n      }).sort(null);\n      this.arcs = this.getArcs();\n    }\n  }, {\n    key: \"getArcs\",\n    value: function getArcs() {\n      var _this68 = this;\n\n      return this.layout(this.data).map(function (arc, index) {\n        var label = arc.data.data.name;\n        var other = arc.data.data.other;\n\n        if (index === 0) {\n          arc.startAngle = 0;\n        }\n\n        var color = _this68.colors(label);\n\n        return {\n          data: arc.data.data,\n          class: 'arc ' + 'arc' + index,\n          fill: color,\n          startAngle: other ? 0 : arc.startAngle,\n          endAngle: arc.endAngle,\n          animate: _this68.animations && !other,\n          pointerEvents: !other\n        };\n      });\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(this.data[0].data);\n    }\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, item) {\n      return item.data.name;\n    }\n  }, {\n    key: \"label\",\n    value: function label(arc) {\n      return arc.data.name;\n    }\n  }, {\n    key: \"color\",\n    value: function color(arc) {\n      return this.colors(this.label(arc));\n    }\n  }]);\n\n  return PieGridSeriesComponent;\n}();\n\nPieGridSeriesComponent.ɵfac = function PieGridSeriesComponent_Factory(t) {\n  return new (t || PieGridSeriesComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nPieGridSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieGridSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-grid-series\", \"\"]],\n  inputs: {\n    colors: \"colors\",\n    data: \"data\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c43,\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"pie-grid-arcs\"], [\"ngx-charts-pie-arc\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"data\", \"gradient\", \"pointerEvents\", \"animate\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-pie-arc\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"data\", \"gradient\", \"pointerEvents\", \"animate\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PieGridSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, PieGridSeriesComponent__svg_g_1_Template, 1, 11, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.arcs)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [PieArcComponent, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieGridSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-grid-series]',\n      template: \"\\n    <svg:g class=\\\"pie-grid-arcs\\\">\\n      <svg:g\\n        ngx-charts-pie-arc\\n        *ngFor=\\\"let arc of arcs; trackBy: trackBy\\\"\\n        [attr.class]=\\\"arc.class\\\"\\n        [startAngle]=\\\"arc.startAngle\\\"\\n        [endAngle]=\\\"arc.endAngle\\\"\\n        [innerRadius]=\\\"innerRadius\\\"\\n        [outerRadius]=\\\"outerRadius\\\"\\n        [fill]=\\\"color(arc)\\\"\\n        [value]=\\\"arc.data.value\\\"\\n        [data]=\\\"arc.data\\\"\\n        [gradient]=\\\"false\\\"\\n        [pointerEvents]=\\\"arc.pointerEvents\\\"\\n        [animate]=\\\"arc.animate\\\"\\n        (select)=\\\"onClick($event)\\\"\\n        (activate)=\\\"activate.emit($event)\\\"\\n        (deactivate)=\\\"deactivate.emit($event)\\\"\\n      ></svg:g>\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    colors: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nvar PieGridComponent = /*#__PURE__*/function (_BaseChartComponent19) {\n  _inherits(PieGridComponent, _BaseChartComponent19);\n\n  var _super20 = _createSuper(PieGridComponent);\n\n  function PieGridComponent() {\n    var _this69;\n\n    _classCallCheck(this, PieGridComponent);\n\n    _this69 = _super20.apply(this, arguments);\n    _this69.tooltipDisabled = false;\n    _this69.label = 'Total';\n    _this69.minWidth = 150;\n    _this69.activeEntries = [];\n    _this69.activate = new EventEmitter();\n    _this69.deactivate = new EventEmitter();\n    _this69.margin = [20, 20, 20, 20];\n    _this69.placementTypes = PlacementTypes;\n    _this69.styleTypes = StyleTypes;\n    return _this69;\n  }\n\n  _createClass(PieGridComponent, [{\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(PieGridComponent.prototype), \"update\", this).call(this);\n\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin\n      });\n      this.formatDates();\n      this.domain = this.getDomain();\n      this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n      this.transform = \"translate(\".concat(this.margin[3], \" , \").concat(this.margin[0], \")\");\n      this.series = this.getSeries();\n      this.setColors();\n      this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n  }, {\n    key: \"defaultTooltipText\",\n    value: function defaultTooltipText(_ref43) {\n      var data = _ref43.data;\n      var label = trimLabel(formatLabel(data.name));\n      var val = data.value.toLocaleString();\n      return \"\\n      <span class=\\\"tooltip-label\\\">\".concat(label, \"</span>\\n      <span class=\\\"tooltip-val\\\">\").concat(val, \"</span>\\n    \");\n    }\n  }, {\n    key: \"getDomain\",\n    value: function getDomain() {\n      return this.results.map(function (d) {\n        return d.label;\n      });\n    }\n  }, {\n    key: \"getSeries\",\n    value: function getSeries() {\n      var _this70 = this;\n\n      var total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n      return this.data.map(function (d) {\n        var baselineLabelHeight = 20;\n        var padding = 10;\n        var name = d.data.name;\n        var label = formatLabel(name);\n        var value = d.data.value;\n        var radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n        var innerRadius = radius * 0.9;\n        var count = 0;\n\n        var colors = function colors() {\n          count += 1;\n\n          if (count === 1) {\n            return 'rgba(100,100,100,0.3)';\n          } else {\n            return _this70.colorScale.getColor(label);\n          }\n        };\n\n        var xPos = d.x + (d.width - padding) / 2;\n        var yPos = d.y + (d.height - baselineLabelHeight) / 2;\n        return {\n          transform: \"translate(\".concat(xPos, \", \").concat(yPos, \")\"),\n          colors: colors,\n          innerRadius: innerRadius,\n          outerRadius: radius,\n          name: name,\n          label: trimLabel(label),\n          total: value,\n          value: value,\n          percent: format('.1%')(d.data.percent),\n          data: [d, {\n            data: {\n              other: true,\n              value: total - value,\n              name: d.data.name\n            }\n          }]\n        };\n      });\n    }\n  }, {\n    key: \"getTotal\",\n    value: function getTotal() {\n      return this.results.map(function (d) {\n        return d.value;\n      }).reduce(function (sum, d) {\n        return sum + d;\n      }, 0);\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      this.colorScale = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(item) {\n      var fromLegend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      item = this.results.find(function (d) {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n\n      if (idx > -1) {\n        return;\n      }\n\n      this.activeEntries = [item].concat(_toConsumableArray(this.activeEntries));\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(item) {\n      var fromLegend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      item = this.results.find(function (d) {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }]);\n\n  return PieGridComponent;\n}(BaseChartComponent);\n\nPieGridComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵPieGridComponent_BaseFactory;\n  return function PieGridComponent_Factory(t) {\n    return (ɵPieGridComponent_BaseFactory || (ɵPieGridComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PieGridComponent)))(t || PieGridComponent);\n  };\n}();\n\nPieGridComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieGridComponent,\n  selectors: [[\"ngx-charts-pie-grid\"]],\n  contentQueries: function PieGridComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    designatedTotal: \"designatedTotal\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    label: \"label\",\n    minWidth: \"minWidth\",\n    activeEntries: \"activeEntries\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 8,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"pie-grid\", \"chart\"], [\"class\", \"pie-grid-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"pie-grid-item\"], [\"ngx-charts-pie-grid-series\", \"\", \"ngx-tooltip\", \"\", 3, \"colors\", \"data\", \"innerRadius\", \"outerRadius\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"], [\"class\", \"label percent-label\", \"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"ngx-charts-count-up\", \"\", \"text-anchor\", \"middle\", 3, \"countTo\", \"countSuffix\", 4, \"ngIf\"], [\"class\", \"label percent-label\", \"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 4, \"ngIf\"], [\"dy\", \"0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 1, \"label\"], [\"class\", \"label\", \"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"countPrefix\", 4, \"ngIf\"], [\"class\", \"label\", \"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", 4, \"ngIf\"], [\"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"ngx-charts-count-up\", \"\", \"text-anchor\", \"middle\", 1, \"label\", \"percent-label\", 3, \"countTo\", \"countSuffix\"], [\"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 1, \"label\", \"percent-label\"], [\"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", \"ngx-charts-count-up\", \"\", 1, \"label\", 3, \"countTo\", \"countPrefix\"], [\"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", 1, \"label\"]],\n  template: function PieGridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, PieGridComponent__svg_g_2_Template, 8, 19, \"g\", 2);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(5, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.series);\n    }\n  },\n  dependencies: [ChartComponent, PieGridSeriesComponent, CountUpDirective, i2.NgForOf, TooltipDirective, i2.NgIf],\n  styles: [_c25, \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieGridComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-pie-grid',\n      template: \"\\n    <ngx-charts-chart [view]=\\\"[width, height]\\\" [showLegend]=\\\"false\\\" [animations]=\\\"animations\\\">\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"pie-grid chart\\\">\\n        <svg:g *ngFor=\\\"let series of series\\\" class=\\\"pie-grid-item\\\" [attr.transform]=\\\"series.transform\\\">\\n          <svg:g\\n            ngx-charts-pie-grid-series\\n            [colors]=\\\"series.colors\\\"\\n            [data]=\\\"series.data\\\"\\n            [innerRadius]=\\\"series.innerRadius\\\"\\n            [outerRadius]=\\\"series.outerRadius\\\"\\n            [animations]=\\\"animations\\\"\\n            (select)=\\\"onClick($event)\\\"\\n            ngx-tooltip\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            [tooltipPlacement]=\\\"placementTypes.Top\\\"\\n            [tooltipType]=\\\"styleTypes.tooltip\\\"\\n            [tooltipTitle]=\\\"tooltipTemplate ? undefined : tooltipText({ data: series })\\\"\\n            [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n            [tooltipContext]=\\\"series.data[0].data\\\"\\n            (activate)=\\\"onActivate($event)\\\"\\n            (deactivate)=\\\"onDeactivate($event)\\\"\\n          />\\n          <svg:text\\n            *ngIf=\\\"animations\\\"\\n            class=\\\"label percent-label\\\"\\n            dy=\\\"-0.5em\\\"\\n            x=\\\"0\\\"\\n            y=\\\"5\\\"\\n            ngx-charts-count-up\\n            [countTo]=\\\"series.percent\\\"\\n            [countSuffix]=\\\"'%'\\\"\\n            text-anchor=\\\"middle\\\"\\n          ></svg:text>\\n          <svg:text *ngIf=\\\"!animations\\\" class=\\\"label percent-label\\\" dy=\\\"-0.5em\\\" x=\\\"0\\\" y=\\\"5\\\" text-anchor=\\\"middle\\\">\\n            {{ series.percent.toLocaleString() }}\\n          </svg:text>\\n          <svg:text class=\\\"label\\\" dy=\\\"0.5em\\\" x=\\\"0\\\" y=\\\"5\\\" text-anchor=\\\"middle\\\">\\n            {{ series.label }}\\n          </svg:text>\\n          <svg:text\\n            *ngIf=\\\"animations\\\"\\n            class=\\\"label\\\"\\n            dy=\\\"1.23em\\\"\\n            x=\\\"0\\\"\\n            [attr.y]=\\\"series.outerRadius\\\"\\n            text-anchor=\\\"middle\\\"\\n            ngx-charts-count-up\\n            [countTo]=\\\"series.total\\\"\\n            [countPrefix]=\\\"label + ': '\\\"\\n          ></svg:text>\\n          <svg:text\\n            *ngIf=\\\"!animations\\\"\\n            class=\\\"label\\\"\\n            dy=\\\"1.23em\\\"\\n            x=\\\"0\\\"\\n            [attr.y]=\\\"series.outerRadius\\\"\\n            text-anchor=\\\"middle\\\"\\n          >\\n            {{ label }}: {{ series.total.toLocaleString() }}\\n          </svg:text>\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"]\n    }]\n  }], null, {\n    designatedTotal: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    minWidth: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nvar PieChartModule = /*#__PURE__*/_createClass(function PieChartModule() {\n  _classCallCheck(this, PieChartModule);\n});\n\nPieChartModule.ɵfac = function PieChartModule_Factory(t) {\n  return new (t || PieChartModule)();\n};\n\nPieChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PieChartModule\n});\nPieChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [AdvancedPieChartComponent, PieLabelComponent, PieArcComponent, PieChartComponent, PieGridComponent, PieGridSeriesComponent, PieSeriesComponent],\n      exports: [AdvancedPieChartComponent, PieLabelComponent, PieArcComponent, PieChartComponent, PieGridComponent, PieGridSeriesComponent, PieSeriesComponent]\n    }]\n  }], null, null);\n})();\n\nvar PolarChartModule = /*#__PURE__*/_createClass(function PolarChartModule() {\n  _classCallCheck(this, PolarChartModule);\n});\n\nPolarChartModule.ɵfac = function PolarChartModule_Factory(t) {\n  return new (t || PolarChartModule)();\n};\n\nPolarChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PolarChartModule\n});\nPolarChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule, PieChartModule, LineChartModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule, PieChartModule, LineChartModule],\n      declarations: [PolarChartComponent, PolarSeriesComponent],\n      exports: [PolarChartComponent, PolarSeriesComponent]\n    }]\n  }], null, null);\n})();\n\nfunction calculateTextWidth(fontFamilyKey, text) {\n  var defaultWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;\n  return text.split('').reduce(function (acc, curr) {\n    var width = fontFamilyKey[curr] || defaultWidth;\n    return acc + width;\n  }, 0);\n}\n\nvar VERDANA_FONT_WIDTHS_16_PX = {\n  '0': 10,\n  '1': 10,\n  '2': 10,\n  '3': 10,\n  '4': 10,\n  '5': 10,\n  '6': 10,\n  '7': 10,\n  '8': 10,\n  '9': 10,\n  A: 11,\n  B: 11,\n  C: 11,\n  D: 12,\n  E: 10,\n  F: 9,\n  G: 12,\n  H: 12,\n  I: 7,\n  J: 7,\n  K: 11,\n  L: 9,\n  M: 13,\n  N: 12,\n  O: 13,\n  P: 10,\n  Q: 13,\n  R: 11,\n  S: 11,\n  T: 10,\n  U: 12,\n  V: 11,\n  W: 16,\n  X: 11,\n  Y: 10,\n  Z: 11,\n  a: 10,\n  b: 10,\n  c: 8,\n  d: 10,\n  e: 10,\n  f: 6,\n  g: 10,\n  h: 10,\n  i: 4,\n  j: 6,\n  k: 9,\n  l: 4,\n  m: 16,\n  n: 10,\n  o: 10,\n  p: 10,\n  q: 10,\n  r: 7,\n  s: 8,\n  t: 6,\n  u: 10,\n  v: 9,\n  w: 13,\n  x: 9,\n  y: 9,\n  z: 8,\n  '!': 6,\n  '@': 16,\n  '#': 13,\n  $: 10,\n  '%': 17,\n  '^': 13,\n  '&': 12,\n  '*': 10,\n  '(': 7,\n  ')': 7,\n  _: 10,\n  '-': 7,\n  '+': 13,\n  '=': 13,\n  ',': 6,\n  '.': 6,\n  '/': 7,\n  \"'\": 4,\n  ':': 7,\n  '|': 7,\n  '?': 9,\n  ';': 7,\n  '<': 13,\n  '>': 13\n};\n\nvar CardComponent = /*#__PURE__*/function () {\n  function CardComponent(element, cd, zone, platformId) {\n    _classCallCheck(this, CardComponent);\n\n    this.cd = cd;\n    this.zone = zone;\n    this.platformId = platformId;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.value = '';\n    this.textFontSize = 12;\n    this.textTransform = '';\n    this.initialized = false;\n    this.bandHeight = 10;\n    this.textPadding = [10, 20, 5, 20];\n    this.labelFontSize = 15;\n    this.element = element.nativeElement;\n  }\n\n  _createClass(CardComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.scaleTextSSR();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (isPlatformBrowser(this.platformId)) {\n        cancelAnimationFrame(this.animationReq);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this71 = this;\n\n      this.zone.run(function () {\n        var hasValue = _this71.data && typeof _this71.data.value !== 'undefined';\n\n        var valueFormatting = _this71.valueFormatting || function (card) {\n          return card.value.toLocaleString();\n        };\n\n        var labelFormatting = _this71.labelFormatting || function (card) {\n          return escapeLabel(trimLabel(card.label, 55));\n        };\n\n        _this71.transform = \"translate(\".concat(_this71.x, \" , \").concat(_this71.y, \")\");\n        _this71.textWidth = Math.max(0, _this71.width) - _this71.textPadding[1] - _this71.textPadding[3];\n        _this71.cardWidth = Math.max(0, _this71.width);\n        _this71.cardHeight = Math.max(0, _this71.height);\n        _this71.label = _this71.label ? _this71.label : _this71.data.name;\n        var cardData = {\n          label: _this71.label,\n          data: _this71.data,\n          value: _this71.data.value\n        };\n        _this71.formattedLabel = labelFormatting(cardData);\n        _this71.transformBand = \"translate(0 , \".concat(_this71.cardHeight - _this71.bandHeight, \")\");\n        var value = hasValue ? valueFormatting(cardData) : '';\n        _this71.value = _this71.paddedValue(value);\n\n        _this71.setPadding();\n\n        _this71.bandPath = roundedRect(0, 0, _this71.cardWidth, _this71.bandHeight, 3, [false, false, true, true]);\n        setTimeout(function () {\n          if (isPlatformBrowser(_this71.platformId)) {\n            _this71.scaleText();\n          }\n\n          _this71.value = value;\n\n          if (hasValue && !_this71.initialized) {\n            setTimeout(function () {\n              return _this71.startCount();\n            }, 20);\n          }\n        }, 8);\n      });\n    }\n  }, {\n    key: \"paddedValue\",\n    value: function paddedValue(value) {\n      if (this.medianSize && this.medianSize > value.length) {\n        value += \"\\u2007\".repeat(this.medianSize - value.length);\n      }\n\n      return value;\n    }\n  }, {\n    key: \"startCount\",\n    value: function startCount() {\n      var _this72 = this;\n\n      if (!this.initialized && this.animations) {\n        cancelAnimationFrame(this.animationReq);\n        var val = this.data.value;\n        var decs = decimalChecker(val);\n\n        var valueFormatting = this.valueFormatting || function (card) {\n          return card.value.toLocaleString();\n        };\n\n        var callback = function callback(_ref44) {\n          var value = _ref44.value,\n              finished = _ref44.finished;\n\n          _this72.zone.run(function () {\n            value = finished ? val : value;\n            _this72.value = valueFormatting({\n              label: _this72.label,\n              data: _this72.data,\n              value: value\n            });\n\n            if (!finished) {\n              _this72.value = _this72.paddedValue(_this72.value);\n            }\n\n            _this72.cd.markForCheck();\n          });\n        };\n\n        this.animationReq = count(0, val, decs, 1, callback);\n        this.initialized = true;\n      }\n    }\n  }, {\n    key: \"scaleText\",\n    value: function scaleText() {\n      var _this73 = this;\n\n      this.zone.run(function () {\n        var _this73$textEl$native = _this73.textEl.nativeElement.getBoundingClientRect(),\n            width = _this73$textEl$native.width,\n            height = _this73$textEl$native.height;\n\n        if (width === 0 || height === 0) {\n          return;\n        }\n\n        var textPadding = _this73.textPadding[1] = _this73.textPadding[3] = _this73.cardWidth / 8;\n        var availableWidth = _this73.cardWidth - 2 * textPadding;\n        var availableHeight = _this73.cardHeight / 3;\n        var resizeScale = Math.min(availableWidth / width, availableHeight / height);\n        _this73.textFontSize = Math.floor(_this73.textFontSize * resizeScale);\n        _this73.labelFontSize = Math.min(_this73.textFontSize, 15);\n\n        _this73.setPadding();\n\n        _this73.cd.markForCheck();\n      });\n    }\n  }, {\n    key: \"scaleTextSSR\",\n    value: function scaleTextSSR() {\n      var width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, this.value, 10);\n      var height = 18;\n      var textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n      var availableWidth = this.cardWidth - 2 * textPadding;\n      var availableHeight = this.cardHeight / 3;\n      var resizeScale = Math.min(availableWidth / width, availableHeight / height);\n      this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n      this.labelFontSize = Math.min(this.textFontSize, 15);\n      this.setPadding();\n    }\n  }, {\n    key: \"setPadding\",\n    value: function setPadding() {\n      this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n      var padding = this.cardHeight / 2;\n      this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n      this.textPadding[2] = padding - this.labelFontSize;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      this.select.emit(this.data);\n    }\n  }]);\n\n  return CardComponent;\n}();\n\nCardComponent.ɵfac = function CardComponent_Factory(t) {\n  return new (t || CardComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CardComponent,\n  selectors: [[\"g\", \"ngx-charts-card\", \"\"]],\n  viewQuery: function CardComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c45, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    bandColor: \"bandColor\",\n    textColor: \"textColor\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    label: \"label\",\n    data: \"data\",\n    medianSize: \"medianSize\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c46,\n  decls: 10,\n  vars: 25,\n  consts: [[1, \"cell\", 3, \"click\"], [\"rx\", \"3\", \"ry\", \"3\", 1, \"card\"], [\"class\", \"card-band\", \"stroke\", \"none\", 4, \"ngIf\"], [\"x\", \"5\", \"alignment-baseline\", \"hanging\", 1, \"trimmed-label\"], [3, \"innerHTML\"], [\"text-anchor\", \"start\", \"alignment-baseline\", \"hanging\", 1, \"value-text\"], [\"textEl\", \"\"], [\"stroke\", \"none\", 1, \"card-band\"]],\n  template: function CardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵlistener(\"click\", function CardComponent_Template__svg_g_click_0_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelement(1, \"rect\", 1);\n      i0.ɵɵtemplate(2, CardComponent__svg_path_2_Template, 1, 3, \"path\", 2);\n      i0.ɵɵelementStart(3, \"title\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"foreignObject\", 3);\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelement(6, \"p\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(7, \"text\", 5, 6);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"fill\", ctx.color);\n      i0.ɵɵattribute(\"width\", ctx.cardWidth)(\"height\", ctx.cardHeight);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.bandColor && ctx.bandColor !== ctx.color);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"x\", ctx.textPadding[3])(\"y\", ctx.cardHeight - ctx.textPadding[2])(\"width\", ctx.textWidth)(\"height\", ctx.labelFontSize + ctx.textPadding[2]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"color\", ctx.textColor)(\"font-size\", ctx.labelFontSize, \"px\")(\"line-height\", ctx.labelFontSize, \"px\");\n      i0.ɵɵproperty(\"innerHTML\", ctx.formattedLabel, i0.ɵɵsanitizeHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"fill\", ctx.textColor)(\"font-size\", ctx.textFontSize, \"pt\");\n      i0.ɵɵattribute(\"x\", ctx.textPadding[3])(\"y\", ctx.textPadding[0]);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.value, \" \");\n    }\n  },\n  dependencies: [i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-card]',\n      template: \"\\n    <svg:g [attr.transform]=\\\"transform\\\" class=\\\"cell\\\" (click)=\\\"onClick()\\\">\\n      <svg:rect class=\\\"card\\\" [style.fill]=\\\"color\\\" [attr.width]=\\\"cardWidth\\\" [attr.height]=\\\"cardHeight\\\" rx=\\\"3\\\" ry=\\\"3\\\" />\\n      <svg:path\\n        *ngIf=\\\"bandColor && bandColor !== color\\\"\\n        class=\\\"card-band\\\"\\n        [attr.fill]=\\\"bandColor\\\"\\n        [attr.transform]=\\\"transformBand\\\"\\n        stroke=\\\"none\\\"\\n        [attr.d]=\\\"bandPath\\\"\\n      />\\n      <title>{{ label }}</title>\\n      <svg:foreignObject\\n        class=\\\"trimmed-label\\\"\\n        x=\\\"5\\\"\\n        [attr.x]=\\\"textPadding[3]\\\"\\n        [attr.y]=\\\"cardHeight - textPadding[2]\\\"\\n        [attr.width]=\\\"textWidth\\\"\\n        [attr.height]=\\\"labelFontSize + textPadding[2]\\\"\\n        alignment-baseline=\\\"hanging\\\"\\n      >\\n        <xhtml:p\\n          [style.color]=\\\"textColor\\\"\\n          [style.fontSize.px]=\\\"labelFontSize\\\"\\n          [style.lineHeight.px]=\\\"labelFontSize\\\"\\n          [innerHTML]=\\\"formattedLabel\\\"\\n        >\\n        </xhtml:p>\\n      </svg:foreignObject>\\n      <svg:text\\n        #textEl\\n        class=\\\"value-text\\\"\\n        [attr.x]=\\\"textPadding[3]\\\"\\n        [attr.y]=\\\"textPadding[0]\\\"\\n        [style.fill]=\\\"textColor\\\"\\n        text-anchor=\\\"start\\\"\\n        alignment-baseline=\\\"hanging\\\"\\n        [style.font-size.pt]=\\\"textFontSize\\\"\\n      >\\n        {{ value }}\\n      </svg:text>\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    color: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    medianSize: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    textEl: [{\n      type: ViewChild,\n      args: ['textEl', {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Converts a hex to RGB\n *\n * @export\n */\n\n\nfunction hexToRgb(value) {\n  // deprecated, use d3.color()\n  return d3_color.rgb(value);\n}\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\n\n\nfunction invertColor(value) {\n  var color = d3_color.rgb(value);\n  var r = color.r,\n      g = color.g,\n      b = color.b,\n      opacity = color.opacity;\n\n  if (opacity === 0) {\n    return color.toString();\n  }\n\n  var yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  var depth = yiq >= 128 ? -0.8 : 0.8;\n  return shadeRGBColor(color, depth);\n}\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param \\{ r, g, b }\n */\n\n\nfunction shadeRGBColor(_ref45, percent) {\n  var r = _ref45.r,\n      g = _ref45.g,\n      b = _ref45.b;\n  var t = percent < 0 ? 0 : 255;\n  var p = percent < 0 ? percent * -1 : percent;\n  r = Math.round((t - r) * p) + r;\n  g = Math.round((t - g) * p) + g;\n  b = Math.round((t - b) * p) + b;\n  return \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n}\n\nvar CardSeriesComponent = /*#__PURE__*/function () {\n  function CardSeriesComponent() {\n    _classCallCheck(this, CardSeriesComponent);\n\n    this.innerPadding = 15;\n    this.emptyColor = 'rgba(0, 0, 0, 0)';\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n\n  _createClass(CardSeriesComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.data.length > 2) {\n        var valueFormatting = this.valueFormatting || function (card) {\n          return card.value.toLocaleString();\n        };\n\n        var sortedLengths = this.data.map(function (d) {\n          var hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n          return hasValue ? valueFormatting({\n            data: d.data,\n            label: d ? d.data.name : '',\n            value: d && d.data ? d.data.value : ''\n          }).length : 0;\n        }).sort(function (a, b) {\n          return b - a;\n        });\n        var idx = Math.ceil(this.data.length / 2);\n        this.medianSize = sortedLengths[idx];\n      }\n\n      var cards = this.getCards();\n      this.cards = cards.filter(function (d) {\n        return d.data.value !== null;\n      });\n      this.emptySlots = cards.filter(function (d) {\n        return d.data.value === null;\n      });\n    }\n  }, {\n    key: \"getCards\",\n    value: function getCards() {\n      var _this74 = this;\n\n      var yPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n      var xPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n      return this.data.map(function (d, index) {\n        var label = d.data.name;\n\n        if (label && label.constructor.name === 'Date') {\n          label = label.toLocaleDateString();\n        } else {\n          label = label ? label.toLocaleString() : label;\n        }\n\n        var value = d.data.value;\n        var valueColor = label ? _this74.colors.getColor(label) : _this74.emptyColor;\n        var color = _this74.cardColor || valueColor || '#000';\n        return {\n          x: d.x,\n          y: d.y,\n          width: d.width - xPadding,\n          height: d.height - yPadding,\n          color: color,\n          bandColor: _this74.bandColor || valueColor,\n          textColor: _this74.textColor || invertColor(color),\n          label: label,\n          data: d.data,\n          tooltipText: \"\".concat(label, \": \").concat(value)\n        };\n      });\n    }\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, card) {\n      return card.label;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }]);\n\n  return CardSeriesComponent;\n}();\n\nCardSeriesComponent.ɵfac = function CardSeriesComponent_Factory(t) {\n  return new (t || CardSeriesComponent)();\n};\n\nCardSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CardSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-card-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    colors: \"colors\",\n    innerPadding: \"innerPadding\",\n    cardColor: \"cardColor\",\n    bandColor: \"bandColor\",\n    emptyColor: \"emptyColor\",\n    textColor: \"textColor\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c47,\n  decls: 2,\n  vars: 4,\n  consts: [[\"class\", \"card-empty\", \"rx\", \"3\", \"ry\", \"3\", 3, \"fill\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-card\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"color\", \"bandColor\", \"textColor\", \"data\", \"label\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"rx\", \"3\", \"ry\", \"3\", 1, \"card-empty\"], [\"ngx-charts-card\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"color\", \"bandColor\", \"textColor\", \"data\", \"label\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\"]],\n  template: function CardSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CardSeriesComponent__svg_rect_0_Template, 1, 6, \"rect\", 0);\n      i0.ɵɵtemplate(1, CardSeriesComponent__svg_g_1_Template, 1, 13, \"g\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.emptySlots)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cards)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [CardComponent, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CardSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-card-series]',\n      template: \"\\n    <svg:rect\\n      *ngFor=\\\"let c of emptySlots; trackBy: trackBy\\\"\\n      class=\\\"card-empty\\\"\\n      [attr.x]=\\\"c.x\\\"\\n      [attr.y]=\\\"c.y\\\"\\n      [style.fill]=\\\"emptyColor\\\"\\n      [attr.width]=\\\"c.width\\\"\\n      [attr.height]=\\\"c.height\\\"\\n      rx=\\\"3\\\"\\n      ry=\\\"3\\\"\\n    />\\n    <svg:g\\n      ngx-charts-card\\n      *ngFor=\\\"let c of cards; trackBy: trackBy\\\"\\n      [x]=\\\"c.x\\\"\\n      [y]=\\\"c.y\\\"\\n      [width]=\\\"c.width\\\"\\n      [height]=\\\"c.height\\\"\\n      [color]=\\\"c.color\\\"\\n      [bandColor]=\\\"c.bandColor\\\"\\n      [textColor]=\\\"c.textColor\\\"\\n      [data]=\\\"c.data\\\"\\n      [label]=\\\"c.label\\\"\\n      [medianSize]=\\\"medianSize\\\"\\n      [valueFormatting]=\\\"valueFormatting\\\"\\n      [labelFormatting]=\\\"labelFormatting\\\"\\n      [animations]=\\\"animations\\\"\\n      (select)=\\\"onClick($event)\\\"\\n    />\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    cardColor: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    emptyColor: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\nvar NumberCardComponent = /*#__PURE__*/function (_BaseChartComponent20) {\n  _inherits(NumberCardComponent, _BaseChartComponent20);\n\n  var _super21 = _createSuper(NumberCardComponent);\n\n  function NumberCardComponent() {\n    var _this75;\n\n    _classCallCheck(this, NumberCardComponent);\n\n    _this75 = _super21.apply(this, arguments);\n    _this75.emptyColor = 'rgba(0, 0, 0, 0)';\n    _this75.innerPadding = 15;\n    _this75.margin = [10, 10, 10, 10];\n    return _this75;\n  }\n\n  _createClass(NumberCardComponent, [{\n    key: \"clickable\",\n    get: function get() {\n      return !!this.select.observers.length;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(NumberCardComponent.prototype), \"update\", this).call(this);\n\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin\n      });\n      this.formatDates();\n      this.domain = this.getDomain();\n      this.setColors();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \" , \").concat(this.margin[0], \")\");\n      var size = gridSize(this.dims, this.results.length, 150);\n      var N = size[0] * size[1];\n      var data = this.results.slice();\n\n      while (data.length < N) {\n        data.push({\n          value: null\n        });\n      }\n\n      this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n    }\n  }, {\n    key: \"getDomain\",\n    value: function getDomain() {\n      return this.results.map(function (d) {\n        return d.label;\n      });\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n  }]);\n\n  return NumberCardComponent;\n}(BaseChartComponent);\n\nNumberCardComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵNumberCardComponent_BaseFactory;\n  return function NumberCardComponent_Factory(t) {\n    return (ɵNumberCardComponent_BaseFactory || (ɵNumberCardComponent_BaseFactory = i0.ɵɵgetInheritedFactory(NumberCardComponent)))(t || NumberCardComponent);\n  };\n}();\n\nNumberCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NumberCardComponent,\n  selectors: [[\"ngx-charts-number-card\"]],\n  inputs: {\n    cardColor: \"cardColor\",\n    bandColor: \"bandColor\",\n    emptyColor: \"emptyColor\",\n    innerPadding: \"innerPadding\",\n    textColor: \"textColor\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    designatedTotal: \"designatedTotal\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"number-card\", \"chart\"], [\"ngx-charts-card-series\", \"\", 3, \"colors\", \"cardColor\", \"bandColor\", \"textColor\", \"emptyColor\", \"data\", \"dims\", \"innerPadding\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\"]],\n  template: function NumberCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"select\", function NumberCardComponent_Template__svg_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"clickable\", ctx.clickable);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"cardColor\", ctx.cardColor)(\"bandColor\", ctx.bandColor)(\"textColor\", ctx.textColor)(\"emptyColor\", ctx.emptyColor)(\"data\", ctx.data)(\"dims\", ctx.dims)(\"innerPadding\", ctx.innerPadding)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.labelFormatting)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [ChartComponent, CardSeriesComponent],\n  styles: [_c25, \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberCardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-number-card',\n      template: \"\\n    <ngx-charts-chart [view]=\\\"[width, height]\\\" [showLegend]=\\\"false\\\" [animations]=\\\"animations\\\">\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"number-card chart\\\" [class.clickable]=\\\"clickable\\\">\\n        <svg:g\\n          ngx-charts-card-series\\n          [colors]=\\\"colors\\\"\\n          [cardColor]=\\\"cardColor\\\"\\n          [bandColor]=\\\"bandColor\\\"\\n          [textColor]=\\\"textColor\\\"\\n          [emptyColor]=\\\"emptyColor\\\"\\n          [data]=\\\"data\\\"\\n          [dims]=\\\"dims\\\"\\n          [innerPadding]=\\\"innerPadding\\\"\\n          [valueFormatting]=\\\"valueFormatting\\\"\\n          [labelFormatting]=\\\"labelFormatting\\\"\\n          [animations]=\\\"animations\\\"\\n          (select)=\\\"onClick($event)\\\"\\n        />\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"]\n    }]\n  }], null, {\n    cardColor: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    emptyColor: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    designatedTotal: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NumberCardModule = /*#__PURE__*/_createClass(function NumberCardModule() {\n  _classCallCheck(this, NumberCardModule);\n});\n\nNumberCardModule.ɵfac = function NumberCardModule_Factory(t) {\n  return new (t || NumberCardModule)();\n};\n\nNumberCardModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NumberCardModule\n});\nNumberCardModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberCardModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\n      exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\n    }]\n  }], null, null);\n})();\n\nvar TreeMapCellComponent = /*#__PURE__*/function () {\n  function TreeMapCellComponent(element) {\n    _classCallCheck(this, TreeMapCellComponent);\n\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.initialized = false;\n    this.orientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n\n  _createClass(TreeMapCellComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.update();\n\n      this.valueFormatting = this.valueFormatting || function (value) {\n        return value.toLocaleString();\n      };\n\n      var labelFormatting = this.labelFormatting || function (cell) {\n        return escapeLabel(trimLabel(cell.label, 55));\n      };\n\n      var cellData = {\n        data: this.data,\n        label: this.label,\n        value: this.value\n      };\n      this.formattedValue = this.valueFormatting(cellData.value);\n      this.formattedLabel = labelFormatting(cellData);\n      this.gradientId = 'grad' + id().toString();\n      this.gradientUrl = \"url(#\".concat(this.gradientId, \")\");\n      this.gradientStops = this.getGradientStops();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.initialized) {\n        this.animateToCurrentForm();\n      } else {\n        if (this.animations) {\n          this.loadAnimation();\n        }\n\n        this.initialized = true;\n      }\n    }\n  }, {\n    key: \"loadAnimation\",\n    value: function loadAnimation() {\n      var node = select(this.element).select('.cell');\n      node.attr('opacity', 0).attr('x', this.x).attr('y', this.y);\n      this.animateToCurrentForm();\n    }\n  }, {\n    key: \"getTextColor\",\n    value: function getTextColor() {\n      return invertColor(this.fill);\n    }\n  }, {\n    key: \"animateToCurrentForm\",\n    value: function animateToCurrentForm() {\n      var node = select(this.element).select('.cell');\n\n      if (this.animations) {\n        node.transition().duration(750).attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n      } else {\n        node.attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n      }\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      this.select.emit(this.data);\n    }\n  }, {\n    key: \"getGradientStops\",\n    value: function getGradientStops() {\n      return [{\n        offset: 0,\n        color: this.fill,\n        opacity: 0.3\n      }, {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n      }];\n    }\n  }]);\n\n  return TreeMapCellComponent;\n}();\n\nTreeMapCellComponent.ɵfac = function TreeMapCellComponent_Factory(t) {\n  return new (t || TreeMapCellComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nTreeMapCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapCellComponent,\n  selectors: [[\"g\", \"ngx-charts-tree-map-cell\", \"\"]],\n  inputs: {\n    data: \"data\",\n    fill: \"fill\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    label: \"label\",\n    value: \"value\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c48,\n  decls: 4,\n  vars: 7,\n  consts: [[4, \"ngIf\"], [1, \"cell\", 3, \"click\"], [\"class\", \"treemap-label\", 3, \"pointer-events\", 4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [1, \"treemap-label\"], [1, \"treemap-label\", 3, \"innerHTML\"], [\"class\", \"treemap-val\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"treemap-val\", 4, \"ngIf\"], [\"ngx-charts-count-up\", \"\", 1, \"treemap-val\", 3, \"countTo\", \"valueFormatting\"], [1, \"treemap-val\"]],\n  template: function TreeMapCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, TreeMapCellComponent__svg_defs_1_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵelementStart(2, \"rect\", 1);\n      i0.ɵɵlistener(\"click\", function TreeMapCellComponent_Template__svg_rect_click_2_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, TreeMapCellComponent__svg_foreignObject_3_Template, 6, 15, \"foreignObject\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"fill\", ctx.gradient ? ctx.gradientUrl : ctx.fill)(\"width\", ctx.width)(\"height\", ctx.height)(\"x\", ctx.x)(\"y\", ctx.y);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.width >= 70 && ctx.height >= 35);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, CountUpDirective, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tree-map-cell]',\n      template: \"\\n    <svg:g>\\n      <defs *ngIf=\\\"gradient\\\">\\n        <svg:g\\n          ngx-charts-svg-linear-gradient\\n          [orientation]=\\\"orientation.Vertical\\\"\\n          [name]=\\\"gradientId\\\"\\n          [stops]=\\\"gradientStops\\\"\\n        />\\n      </defs>\\n      <svg:rect\\n        [attr.fill]=\\\"gradient ? gradientUrl : fill\\\"\\n        [attr.width]=\\\"width\\\"\\n        [attr.height]=\\\"height\\\"\\n        [attr.x]=\\\"x\\\"\\n        [attr.y]=\\\"y\\\"\\n        class=\\\"cell\\\"\\n        (click)=\\\"onClick()\\\"\\n      />\\n      <svg:foreignObject\\n        *ngIf=\\\"width >= 70 && height >= 35\\\"\\n        [attr.x]=\\\"x\\\"\\n        [attr.y]=\\\"y\\\"\\n        [attr.width]=\\\"width\\\"\\n        [attr.height]=\\\"height\\\"\\n        class=\\\"treemap-label\\\"\\n        [style.pointer-events]=\\\"'none'\\\"\\n      >\\n        <xhtml:p [style.color]=\\\"getTextColor()\\\" [style.height]=\\\"height + 'px'\\\" [style.width]=\\\"width + 'px'\\\">\\n          <xhtml:span class=\\\"treemap-label\\\" [innerHTML]=\\\"formattedLabel\\\"> </xhtml:span>\\n          <xhtml:br />\\n          <xhtml:span\\n            *ngIf=\\\"animations\\\"\\n            class=\\\"treemap-val\\\"\\n            ngx-charts-count-up\\n            [countTo]=\\\"value\\\"\\n            [valueFormatting]=\\\"valueFormatting\\\"\\n          >\\n          </xhtml:span>\\n          <xhtml:span *ngIf=\\\"!animations\\\" class=\\\"treemap-val\\\">\\n            {{ formattedValue }}\\n          </xhtml:span>\\n        </xhtml:p>\\n      </svg:foreignObject>\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\nvar TreeMapCellSeriesComponent = /*#__PURE__*/function () {\n  function TreeMapCellSeriesComponent() {\n    _classCallCheck(this, TreeMapCellSeriesComponent);\n\n    this.gradient = false;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.styleTypes = StyleTypes;\n    this.placementTypes = PlacementTypes;\n  }\n\n  _createClass(TreeMapCellSeriesComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.cells = this.getCells();\n    }\n  }, {\n    key: \"getCells\",\n    value: function getCells() {\n      var _this76 = this;\n\n      return this.data.children.filter(function (d) {\n        return d.depth === 1;\n      }).map(function (d, index) {\n        var label = d.id;\n        return {\n          data: d.data,\n          x: d.x0,\n          y: d.y0,\n          width: d.x1 - d.x0,\n          height: d.y1 - d.y0,\n          fill: _this76.colors.getColor(label),\n          label: label,\n          value: d.value\n        };\n      });\n    }\n  }, {\n    key: \"getTooltipText\",\n    value: function getTooltipText(_ref46) {\n      var label = _ref46.label,\n          value = _ref46.value;\n      return \"\\n      <span class=\\\"tooltip-label\\\">\".concat(escapeLabel(label), \"</span>\\n      <span class=\\\"tooltip-val\\\">\").concat(value.toLocaleString(), \"</span>\\n    \");\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, item) {\n      return item.label;\n    }\n  }]);\n\n  return TreeMapCellSeriesComponent;\n}();\n\nTreeMapCellSeriesComponent.ɵfac = function TreeMapCellSeriesComponent_Factory(t) {\n  return new (t || TreeMapCellSeriesComponent)();\n};\n\nTreeMapCellSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapCellSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-tree-map-cell-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    colors: \"colors\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c49,\n  decls: 1,\n  vars: 2,\n  consts: [[\"ngx-charts-tree-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"data\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-tree-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"data\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\"]],\n  template: function TreeMapCellSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TreeMapCellSeriesComponent__svg_g_0_Template, 1, 18, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.cells)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [TreeMapCellComponent, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapCellSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tree-map-cell-series]',\n      template: \"\\n    <svg:g\\n      ngx-charts-tree-map-cell\\n      *ngFor=\\\"let c of cells; trackBy: trackBy\\\"\\n      [data]=\\\"c.data\\\"\\n      [x]=\\\"c.x\\\"\\n      [y]=\\\"c.y\\\"\\n      [width]=\\\"c.width\\\"\\n      [height]=\\\"c.height\\\"\\n      [fill]=\\\"c.fill\\\"\\n      [label]=\\\"c.label\\\"\\n      [value]=\\\"c.value\\\"\\n      [valueFormatting]=\\\"valueFormatting\\\"\\n      [labelFormatting]=\\\"labelFormatting\\\"\\n      [gradient]=\\\"gradient\\\"\\n      [animations]=\\\"animations\\\"\\n      (select)=\\\"onClick($event)\\\"\\n      ngx-tooltip\\n      [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n      [tooltipPlacement]=\\\"placementTypes.Top\\\"\\n      [tooltipType]=\\\"styleTypes.tooltip\\\"\\n      [tooltipTitle]=\\\"tooltipTemplate ? undefined : getTooltipText(c)\\\"\\n      [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n      [tooltipContext]=\\\"c.data\\\"\\n    ></svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\nvar TreeMapComponent = /*#__PURE__*/function (_BaseChartComponent21) {\n  _inherits(TreeMapComponent, _BaseChartComponent21);\n\n  var _super22 = _createSuper(TreeMapComponent);\n\n  function TreeMapComponent() {\n    var _this77;\n\n    _classCallCheck(this, TreeMapComponent);\n\n    _this77 = _super22.apply(this, arguments);\n    _this77.tooltipDisabled = false;\n    _this77.gradient = false;\n    _this77.select = new EventEmitter();\n    _this77.margin = [10, 10, 10, 10];\n    return _this77;\n  }\n\n  _createClass(TreeMapComponent, [{\n    key: \"update\",\n    value: function update() {\n      _get(_getPrototypeOf(TreeMapComponent.prototype), \"update\", this).call(this);\n\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin\n      });\n      this.domain = this.getDomain();\n      this.treemap = treemap().size([this.dims.width, this.dims.height]);\n      var rootNode = {\n        name: 'root',\n        value: 0,\n        isRoot: true\n      };\n      var root = stratify().id(function (d) {\n        var label = d.name;\n\n        if (label.constructor.name === 'Date') {\n          label = label.toLocaleDateString();\n        } else {\n          label = label.toLocaleString();\n        }\n\n        return label;\n      }).parentId(function (d) {\n        return d.isRoot ? null : 'root';\n      })([rootNode].concat(_toConsumableArray(this.results))).sum(function (d) {\n        return d.value;\n      });\n      this.data = this.treemap(root);\n      this.setColors();\n      this.transform = \"translate(\".concat(this.dims.xOffset, \" , \").concat(this.margin[0], \")\");\n    }\n  }, {\n    key: \"getDomain\",\n    value: function getDomain() {\n      return this.results.map(function (d) {\n        return d.name;\n      });\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n  }]);\n\n  return TreeMapComponent;\n}(BaseChartComponent);\n\nTreeMapComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵTreeMapComponent_BaseFactory;\n  return function TreeMapComponent_Factory(t) {\n    return (ɵTreeMapComponent_BaseFactory || (ɵTreeMapComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TreeMapComponent)))(t || TreeMapComponent);\n  };\n}();\n\nTreeMapComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapComponent,\n  selectors: [[\"ngx-charts-tree-map\"]],\n  contentQueries: function TreeMapComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    results: \"results\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 16,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"tree-map\", \"chart\"], [\"ngx-charts-tree-map-cell-series\", \"\", 3, \"colors\", \"data\", \"dims\", \"tooltipDisabled\", \"tooltipTemplate\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"select\"]],\n  template: function TreeMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"select\", function TreeMapComponent_Template__svg_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(13, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"data\", ctx.data)(\"dims\", ctx.dims)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.labelFormatting)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [ChartComponent, TreeMapCellSeriesComponent],\n  styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-tree-map',\n      template: \"\\n    <ngx-charts-chart [view]=\\\"[width, height]\\\" [showLegend]=\\\"false\\\" [animations]=\\\"animations\\\">\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"tree-map chart\\\">\\n        <svg:g\\n          ngx-charts-tree-map-cell-series\\n          [colors]=\\\"colors\\\"\\n          [data]=\\\"data\\\"\\n          [dims]=\\\"dims\\\"\\n          [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [valueFormatting]=\\\"valueFormatting\\\"\\n          [labelFormatting]=\\\"labelFormatting\\\"\\n          [gradient]=\\\"gradient\\\"\\n          [animations]=\\\"animations\\\"\\n          (select)=\\\"onClick($event)\\\"\\n        />\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"]\n    }]\n  }], null, {\n    results: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nvar TreeMapModule = /*#__PURE__*/_createClass(function TreeMapModule() {\n  _classCallCheck(this, TreeMapModule);\n});\n\nTreeMapModule.ɵfac = function TreeMapModule_Factory(t) {\n  return new (t || TreeMapModule)();\n};\n\nTreeMapModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TreeMapModule\n});\nTreeMapModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\n      exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\n    }]\n  }], null, null);\n})();\n\nvar ElementType;\n\n(function (ElementType) {\n  ElementType[\"Value\"] = \"value\";\n  ElementType[\"Units\"] = \"units\";\n})(ElementType || (ElementType = {}));\n\nvar LinearGaugeComponent = /*#__PURE__*/function (_BaseChartComponent22) {\n  _inherits(LinearGaugeComponent, _BaseChartComponent22);\n\n  var _super23 = _createSuper(LinearGaugeComponent);\n\n  function LinearGaugeComponent() {\n    var _this78;\n\n    _classCallCheck(this, LinearGaugeComponent);\n\n    _this78 = _super23.apply(this, arguments);\n    _this78.min = 0;\n    _this78.max = 100;\n    _this78.value = 0;\n    _this78.margin = [10, 20, 10, 20];\n    _this78.valueResizeScale = 1;\n    _this78.unitsResizeScale = 1;\n    _this78.valueTextTransform = '';\n    _this78.valueTranslate = '';\n    _this78.unitsTextTransform = '';\n    _this78.unitsTranslate = '';\n    _this78.barOrientation = BarOrientation;\n    return _this78;\n  }\n\n  _createClass(LinearGaugeComponent, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this79 = this;\n\n      _get(_getPrototypeOf(LinearGaugeComponent.prototype), \"ngAfterViewInit\", this).call(this);\n\n      setTimeout(function () {\n        _this79.scaleText(ElementType.Value);\n\n        _this79.scaleText(ElementType.Units);\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this80 = this;\n\n      _get(_getPrototypeOf(LinearGaugeComponent.prototype), \"update\", this).call(this);\n\n      this.hasPreviousValue = this.previousValue !== undefined;\n      this.max = Math.max(this.max, this.value);\n      this.min = Math.min(this.min, this.value);\n\n      if (this.hasPreviousValue) {\n        this.max = Math.max(this.max, this.previousValue);\n        this.min = Math.min(this.min, this.previousValue);\n      }\n\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin\n      });\n      this.valueDomain = this.getValueDomain();\n      this.valueScale = this.getValueScale();\n      this.displayValue = this.getDisplayValue();\n      this.setColors();\n      var xOffset = this.margin[3] + this.dims.width / 2;\n      var yOffset = this.margin[0] + this.dims.height / 2;\n      this.transform = \"translate(\".concat(xOffset, \", \").concat(yOffset, \")\");\n      this.transformLine = \"translate(\".concat(this.margin[3] + this.valueScale(this.previousValue), \", \").concat(yOffset, \")\");\n      this.valueTranslate = \"translate(0, -15)\";\n      this.unitsTranslate = \"translate(0, 15)\";\n\n      if (isPlatformServer(this.platformId)) {\n        this.scaleTextSSR('value');\n        this.scaleTextSSR('units');\n      } else {\n        setTimeout(function () {\n          return _this80.scaleText(ElementType.Value);\n        }, 50);\n        setTimeout(function () {\n          return _this80.scaleText(ElementType.Units);\n        }, 50);\n      }\n    }\n  }, {\n    key: \"getValueDomain\",\n    value: function getValueDomain() {\n      return [this.min, this.max];\n    }\n  }, {\n    key: \"getValueScale\",\n    value: function getValueScale() {\n      return scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    }\n  }, {\n    key: \"getDisplayValue\",\n    value: function getDisplayValue() {\n      if (this.valueFormatting) {\n        return this.valueFormatting(this.value);\n      }\n\n      return this.value.toLocaleString();\n    }\n  }, {\n    key: \"scaleText\",\n    value: function scaleText(element) {\n      var _this81 = this;\n\n      var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var el;\n      var resizeScale;\n\n      if (element === ElementType.Value) {\n        el = this.valueTextEl;\n        resizeScale = this.valueResizeScale;\n      } else {\n        el = this.unitsTextEl;\n        resizeScale = this.unitsResizeScale;\n      }\n\n      var _el$nativeElement$get = el.nativeElement.getBoundingClientRect(),\n          width = _el$nativeElement$get.width,\n          height = _el$nativeElement$get.height;\n\n      if (width === 0 || height === 0) return;\n      var oldScale = resizeScale;\n      var availableWidth = this.dims.width;\n      var availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n      var resizeScaleWidth = Math.floor(availableWidth / (width / resizeScale) * 100) / 100;\n      var resizeScaleHeight = Math.floor(availableHeight / (height / resizeScale) * 100) / 100;\n      resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n\n      if (resizeScale !== oldScale) {\n        if (element === ElementType.Value) {\n          this.valueResizeScale = resizeScale;\n          this.valueTextTransform = \"scale(\".concat(resizeScale, \", \").concat(resizeScale, \")\");\n        } else {\n          this.unitsResizeScale = resizeScale;\n          this.unitsTextTransform = \"scale(\".concat(resizeScale, \", \").concat(resizeScale, \")\");\n        }\n\n        this.cd.markForCheck();\n\n        if (repeat && isPlatformBrowser(this.platformId)) {\n          setTimeout(function () {\n            _this81.scaleText(element, false);\n          }, 50);\n        }\n      }\n    }\n  }, {\n    key: \"scaleTextSSR\",\n    value: function scaleTextSSR(element) {\n      var resizeScale = 1;\n      var value = element === 'value' ? this.displayValue : this.units;\n      var width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, value, 10);\n      var height = 25;\n      var availableWidth = this.dims.width;\n      var availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n      var resizeScaleWidth = Math.floor(availableWidth / (width / resizeScale) * 100) / 100;\n      var resizeScaleHeight = Math.floor(availableHeight / (height / resizeScale) * 100) / 100;\n      resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n\n      if (element === 'value') {\n        this.valueResizeScale = resizeScale;\n        this.valueTextTransform = \"scale(\".concat(resizeScale, \", \").concat(resizeScale, \")\");\n      } else {\n        this.unitsResizeScale = resizeScale;\n        this.unitsTextTransform = \"scale(\".concat(resizeScale, \", \").concat(resizeScale, \")\");\n      }\n\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      this.select.emit({\n        name: 'Value',\n        value: this.value\n      });\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, [this.value], this.customColors);\n    }\n  }]);\n\n  return LinearGaugeComponent;\n}(BaseChartComponent);\n\nLinearGaugeComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵLinearGaugeComponent_BaseFactory;\n  return function LinearGaugeComponent_Factory(t) {\n    return (ɵLinearGaugeComponent_BaseFactory || (ɵLinearGaugeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(LinearGaugeComponent)))(t || LinearGaugeComponent);\n  };\n}();\n\nLinearGaugeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LinearGaugeComponent,\n  selectors: [[\"ngx-charts-linear-gauge\"]],\n  viewQuery: function LinearGaugeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c50, 5);\n      i0.ɵɵviewQuery(_c51, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.valueTextEl = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.unitsTextEl = _t.first);\n    }\n  },\n  inputs: {\n    min: \"min\",\n    max: \"max\",\n    value: \"value\",\n    units: \"units\",\n    previousValue: \"previousValue\",\n    valueFormatting: \"valueFormatting\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 15,\n  vars: 38,\n  consts: [[3, \"view\", \"showLegend\", \"animations\", \"click\"], [1, \"linear-gauge\", \"chart\"], [\"ngx-charts-bar\", \"\", 1, \"background-bar\", 3, \"width\", \"height\", \"x\", \"y\", \"data\", \"orientation\", \"roundEdges\", \"animations\"], [\"ngx-charts-bar\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"data\", \"orientation\", \"roundEdges\", \"animations\"], [\"x1\", \"0\", \"y1\", \"5\", \"x2\", \"0\", \"y2\", \"15\", 4, \"ngIf\"], [\"x1\", \"0\", \"y1\", \"-5\", \"x2\", \"0\", \"y2\", \"-15\", 4, \"ngIf\"], [\"alignment-baseline\", \"after-edge\", 1, \"value\"], [\"valueTextEl\", \"\"], [\"alignment-baseline\", \"before-edge\", 1, \"units\"], [\"unitsTextEl\", \"\"], [\"x1\", \"0\", \"y1\", \"5\", \"x2\", \"0\", \"y2\", \"15\"], [\"x1\", \"0\", \"y1\", \"-5\", \"x2\", \"0\", \"y2\", \"-15\"]],\n  template: function LinearGaugeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"click\", function LinearGaugeComponent_Template_ngx_charts_chart_click_0_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2)(3, \"g\", 3);\n      i0.ɵɵtemplate(4, LinearGaugeComponent__svg_line_4_Template, 1, 2, \"line\", 4);\n      i0.ɵɵtemplate(5, LinearGaugeComponent__svg_line_5_Template, 1, 2, \"line\", 5);\n      i0.ɵɵelementStart(6, \"g\")(7, \"g\")(8, \"text\", 6, 7);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"g\")(12, \"text\", 8, 9);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(33, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"width\", ctx.dims.width)(\"height\", 3)(\"x\", ctx.margin[3])(\"y\", ctx.dims.height / 2 + ctx.margin[0] - 2)(\"data\", i0.ɵɵpureFunction0(36, _c52))(\"orientation\", ctx.barOrientation.Horizontal)(\"roundEdges\", true)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"width\", ctx.valueScale(ctx.value))(\"height\", 3)(\"x\", ctx.margin[3])(\"y\", ctx.dims.height / 2 + ctx.margin[0] - 2)(\"fill\", ctx.colors.getColor(ctx.units))(\"data\", i0.ɵɵpureFunction0(37, _c52))(\"orientation\", ctx.barOrientation.Horizontal)(\"roundEdges\", true)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasPreviousValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasPreviousValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.valueTranslate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n      i0.ɵɵattribute(\"transform\", ctx.valueTextTransform);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayValue, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.unitsTranslate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n      i0.ɵɵattribute(\"transform\", ctx.unitsTextTransform);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.units, \" \");\n    }\n  },\n  dependencies: [ChartComponent, BarComponent, i2.NgIf],\n  styles: [_c25, \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LinearGaugeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-linear-gauge',\n      template: \"\\n    <ngx-charts-chart [view]=\\\"[width, height]\\\" [showLegend]=\\\"false\\\" [animations]=\\\"animations\\\" (click)=\\\"onClick()\\\">\\n      <svg:g class=\\\"linear-gauge chart\\\">\\n        <svg:g\\n          ngx-charts-bar\\n          class=\\\"background-bar\\\"\\n          [width]=\\\"dims.width\\\"\\n          [height]=\\\"3\\\"\\n          [x]=\\\"margin[3]\\\"\\n          [y]=\\\"dims.height / 2 + margin[0] - 2\\\"\\n          [data]=\\\"{}\\\"\\n          [orientation]=\\\"barOrientation.Horizontal\\\"\\n          [roundEdges]=\\\"true\\\"\\n          [animations]=\\\"animations\\\"\\n        ></svg:g>\\n        <svg:g\\n          ngx-charts-bar\\n          [width]=\\\"valueScale(value)\\\"\\n          [height]=\\\"3\\\"\\n          [x]=\\\"margin[3]\\\"\\n          [y]=\\\"dims.height / 2 + margin[0] - 2\\\"\\n          [fill]=\\\"colors.getColor(units)\\\"\\n          [data]=\\\"{}\\\"\\n          [orientation]=\\\"barOrientation.Horizontal\\\"\\n          [roundEdges]=\\\"true\\\"\\n          [animations]=\\\"animations\\\"\\n        ></svg:g>\\n\\n        <svg:line\\n          *ngIf=\\\"hasPreviousValue\\\"\\n          [attr.transform]=\\\"transformLine\\\"\\n          x1=\\\"0\\\"\\n          y1=\\\"5\\\"\\n          x2=\\\"0\\\"\\n          y2=\\\"15\\\"\\n          [attr.stroke]=\\\"colors.getColor(units)\\\"\\n        />\\n\\n        <svg:line\\n          *ngIf=\\\"hasPreviousValue\\\"\\n          [attr.transform]=\\\"transformLine\\\"\\n          x1=\\\"0\\\"\\n          y1=\\\"-5\\\"\\n          x2=\\\"0\\\"\\n          y2=\\\"-15\\\"\\n          [attr.stroke]=\\\"colors.getColor(units)\\\"\\n        />\\n\\n        <svg:g [attr.transform]=\\\"transform\\\">\\n          <svg:g [attr.transform]=\\\"valueTranslate\\\">\\n            <svg:text\\n              #valueTextEl\\n              class=\\\"value\\\"\\n              [style.textAnchor]=\\\"'middle'\\\"\\n              [attr.transform]=\\\"valueTextTransform\\\"\\n              alignment-baseline=\\\"after-edge\\\"\\n            >\\n              {{ displayValue }}\\n            </svg:text>\\n          </svg:g>\\n\\n          <svg:g [attr.transform]=\\\"unitsTranslate\\\">\\n            <svg:text\\n              #unitsTextEl\\n              class=\\\"units\\\"\\n              [style.textAnchor]=\\\"'middle'\\\"\\n              [attr.transform]=\\\"unitsTextTransform\\\"\\n              alignment-baseline=\\\"before-edge\\\"\\n            >\\n              {{ units }}\\n            </svg:text>\\n          </svg:g>\\n        </svg:g>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"]\n    }]\n  }], null, {\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    units: [{\n      type: Input\n    }],\n    previousValue: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    valueTextEl: [{\n      type: ViewChild,\n      args: ['valueTextEl']\n    }],\n    unitsTextEl: [{\n      type: ViewChild,\n      args: ['unitsTextEl']\n    }]\n  });\n})();\n\nvar GaugeArcComponent = /*#__PURE__*/function () {\n  function GaugeArcComponent() {\n    _classCallCheck(this, GaugeArcComponent);\n\n    this.isActive = false;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n\n  _createClass(GaugeArcComponent, [{\n    key: \"tooltipText\",\n    value: function tooltipText(arc) {\n      var label = formatLabel(arc.data.name);\n      var val;\n\n      if (this.valueFormatting) {\n        val = this.valueFormatting(arc.data.value);\n      } else {\n        val = formatLabel(arc.data.value);\n      }\n\n      return \"\\n      <span class=\\\"tooltip-label\\\">\".concat(escapeLabel(label), \"</span>\\n      <span class=\\\"tooltip-val\\\">\").concat(val, \"</span>\\n    \");\n    }\n  }]);\n\n  return GaugeArcComponent;\n}();\n\nGaugeArcComponent.ɵfac = function GaugeArcComponent_Factory(t) {\n  return new (t || GaugeArcComponent)();\n};\n\nGaugeArcComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeArcComponent,\n  selectors: [[\"g\", \"ngx-charts-gauge-arc\", \"\"]],\n  inputs: {\n    backgroundArc: \"backgroundArc\",\n    valueArc: \"valueArc\",\n    cornerRadius: \"cornerRadius\",\n    colors: \"colors\",\n    isActive: \"isActive\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  attrs: _c53,\n  decls: 2,\n  vars: 23,\n  consts: [[\"ngx-charts-pie-arc\", \"\", 1, \"background-arc\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"data\", \"animate\", \"pointerEvents\"], [\"ngx-charts-pie-arc\", \"\", \"ngx-tooltip\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"fill\", \"data\", \"animate\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function GaugeArcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"g\", 0);\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵlistener(\"select\", function GaugeArcComponent_Template__svg_g_select_1_listener($event) {\n        return ctx.select.emit($event);\n      })(\"activate\", function GaugeArcComponent_Template__svg_g_activate_1_listener($event) {\n        return ctx.activate.emit($event);\n      })(\"deactivate\", function GaugeArcComponent_Template__svg_g_deactivate_1_listener($event) {\n        return ctx.deactivate.emit($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"startAngle\", 0)(\"endAngle\", ctx.backgroundArc.endAngle)(\"innerRadius\", ctx.backgroundArc.innerRadius)(\"outerRadius\", ctx.backgroundArc.outerRadius)(\"cornerRadius\", ctx.cornerRadius)(\"data\", ctx.backgroundArc.data)(\"animate\", false)(\"pointerEvents\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"startAngle\", 0)(\"endAngle\", ctx.valueArc.endAngle)(\"innerRadius\", ctx.valueArc.innerRadius)(\"outerRadius\", ctx.valueArc.outerRadius)(\"cornerRadius\", ctx.cornerRadius)(\"fill\", ctx.colors.getColor(ctx.valueArc.data.name))(\"data\", ctx.valueArc.data)(\"animate\", ctx.animations)(\"isActive\", ctx.isActive)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.placementTypes.Top)(\"tooltipType\", ctx.styleTypes.tooltip)(\"tooltipTitle\", ctx.tooltipTemplate ? undefined : ctx.tooltipText(ctx.valueArc))(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipContext\", ctx.valueArc.data);\n    }\n  },\n  dependencies: [PieArcComponent, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeArcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-gauge-arc]',\n      template: \"\\n    <svg:g\\n      ngx-charts-pie-arc\\n      class=\\\"background-arc\\\"\\n      [startAngle]=\\\"0\\\"\\n      [endAngle]=\\\"backgroundArc.endAngle\\\"\\n      [innerRadius]=\\\"backgroundArc.innerRadius\\\"\\n      [outerRadius]=\\\"backgroundArc.outerRadius\\\"\\n      [cornerRadius]=\\\"cornerRadius\\\"\\n      [data]=\\\"backgroundArc.data\\\"\\n      [animate]=\\\"false\\\"\\n      [pointerEvents]=\\\"false\\\"\\n    ></svg:g>\\n    <svg:g\\n      ngx-charts-pie-arc\\n      [startAngle]=\\\"0\\\"\\n      [endAngle]=\\\"valueArc.endAngle\\\"\\n      [innerRadius]=\\\"valueArc.innerRadius\\\"\\n      [outerRadius]=\\\"valueArc.outerRadius\\\"\\n      [cornerRadius]=\\\"cornerRadius\\\"\\n      [fill]=\\\"colors.getColor(valueArc.data.name)\\\"\\n      [data]=\\\"valueArc.data\\\"\\n      [animate]=\\\"animations\\\"\\n      [isActive]=\\\"isActive\\\"\\n      (select)=\\\"select.emit($event)\\\"\\n      (activate)=\\\"activate.emit($event)\\\"\\n      (deactivate)=\\\"deactivate.emit($event)\\\"\\n      ngx-tooltip\\n      [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n      [tooltipPlacement]=\\\"placementTypes.Top\\\"\\n      [tooltipType]=\\\"styleTypes.tooltip\\\"\\n      [tooltipTitle]=\\\"tooltipTemplate ? undefined : tooltipText(valueArc)\\\"\\n      [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n      [tooltipContext]=\\\"valueArc.data\\\"\\n    ></svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    backgroundArc: [{\n      type: Input\n    }],\n    valueArc: [{\n      type: Input\n    }],\n    cornerRadius: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nvar GaugeAxisComponent = /*#__PURE__*/function () {\n  function GaugeAxisComponent() {\n    _classCallCheck(this, GaugeAxisComponent);\n\n    this.rotate = '';\n  }\n\n  _createClass(GaugeAxisComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.rotationAngle = -90 + this.startAngle;\n      this.rotate = \"rotate(\".concat(this.rotationAngle, \")\");\n      this.ticks = this.getTicks();\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      var bigTickSegment = this.angleSpan / this.bigSegments;\n      var smallTickSegment = bigTickSegment / this.smallSegments;\n      var tickLength = 20;\n      var ticks = {\n        big: [],\n        small: []\n      };\n      var startDistance = this.radius + 10;\n      var textDist = startDistance + tickLength + 10;\n\n      for (var i = 0; i <= this.bigSegments; i++) {\n        var angleDeg = i * bigTickSegment;\n        var angle = angleDeg * Math.PI / 180;\n        var textAnchor = this.getTextAnchor(angleDeg);\n        var skip = false;\n\n        if (i === 0 && this.angleSpan === 360) {\n          skip = true;\n        }\n\n        if (!skip) {\n          var text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n\n          if (this.tickFormatting) {\n            text = this.tickFormatting(text);\n          }\n\n          ticks.big.push({\n            line: this.getTickPath(startDistance, tickLength, angle),\n            textAnchor: textAnchor,\n            text: text,\n            textTransform: \"\\n            translate(\".concat(textDist * Math.cos(angle), \", \").concat(textDist * Math.sin(angle), \") rotate(\").concat(-this.rotationAngle, \")\\n          \")\n          });\n        }\n\n        if (i === this.bigSegments) {\n          continue;\n        }\n\n        for (var j = 1; j <= this.smallSegments; j++) {\n          var smallAngleDeg = angleDeg + j * smallTickSegment;\n          var smallAngle = smallAngleDeg * Math.PI / 180;\n          ticks.small.push({\n            line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n          });\n        }\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getTextAnchor\",\n    value: function getTextAnchor(angle) {\n      // [0, 45] = 'middle';\n      // [46, 135] = 'start';\n      // [136, 225] = 'middle';\n      // [226, 315] = 'end';\n      angle = (this.startAngle + angle) % 360;\n      var textAnchor = TextAnchor.Middle;\n\n      if (angle > 45 && angle <= 135) {\n        textAnchor = TextAnchor.Start;\n      } else if (angle > 225 && angle <= 315) {\n        textAnchor = TextAnchor.End;\n      }\n\n      return textAnchor;\n    }\n  }, {\n    key: \"getTickPath\",\n    value: function getTickPath(startDistance, tickLength, angle) {\n      var y1 = startDistance * Math.sin(angle);\n      var y2 = (startDistance + tickLength) * Math.sin(angle);\n      var x1 = startDistance * Math.cos(angle);\n      var x2 = (startDistance + tickLength) * Math.cos(angle);\n      var points = [{\n        x: x1,\n        y: y1\n      }, {\n        x: x2,\n        y: y2\n      }];\n      var lineGenerator = line().x(function (d) {\n        return d.x;\n      }).y(function (d) {\n        return d.y;\n      });\n      return lineGenerator(points);\n    }\n  }]);\n\n  return GaugeAxisComponent;\n}();\n\nGaugeAxisComponent.ɵfac = function GaugeAxisComponent_Factory(t) {\n  return new (t || GaugeAxisComponent)();\n};\n\nGaugeAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-gauge-axis\", \"\"]],\n  inputs: {\n    bigSegments: \"bigSegments\",\n    smallSegments: \"smallSegments\",\n    min: \"min\",\n    max: \"max\",\n    angleSpan: \"angleSpan\",\n    startAngle: \"startAngle\",\n    radius: \"radius\",\n    valueScale: \"valueScale\",\n    tickFormatting: \"tickFormatting\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c54,\n  decls: 4,\n  vars: 4,\n  consts: [[\"class\", \"gauge-tick gauge-tick-large\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"gauge-tick gauge-tick-small\", 4, \"ngFor\", \"ngForOf\"], [1, \"gauge-tick\", \"gauge-tick-large\"], [\"alignment-baseline\", \"central\"], [1, \"gauge-tick\", \"gauge-tick-small\"]],\n  template: function GaugeAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, GaugeAxisComponent__svg_g_1_Template, 2, 1, \"g\", 0);\n      i0.ɵɵtemplate(2, GaugeAxisComponent__svg_g_2_Template, 3, 4, \"g\", 0);\n      i0.ɵɵtemplate(3, GaugeAxisComponent__svg_g_3_Template, 2, 1, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.rotate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.big);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.big);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.small);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-gauge-axis]',\n      template: \"\\n    <svg:g [attr.transform]=\\\"rotate\\\">\\n      <svg:g *ngFor=\\\"let tick of ticks.big\\\" class=\\\"gauge-tick gauge-tick-large\\\">\\n        <svg:path [attr.d]=\\\"tick.line\\\" />\\n      </svg:g>\\n      <svg:g *ngFor=\\\"let tick of ticks.big\\\" class=\\\"gauge-tick gauge-tick-large\\\">\\n        <svg:text\\n          [style.textAnchor]=\\\"tick.textAnchor\\\"\\n          [attr.transform]=\\\"tick.textTransform\\\"\\n          alignment-baseline=\\\"central\\\"\\n        >\\n          {{ tick.text }}\\n        </svg:text>\\n      </svg:g>\\n      <svg:g *ngFor=\\\"let tick of ticks.small\\\" class=\\\"gauge-tick gauge-tick-small\\\">\\n        <svg:path [attr.d]=\\\"tick.line\\\" />\\n      </svg:g>\\n    </svg:g>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    bigSegments: [{\n      type: Input\n    }],\n    smallSegments: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    angleSpan: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    valueScale: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }]\n  });\n})();\n\nvar GaugeComponent = /*#__PURE__*/function (_BaseChartComponent23) {\n  _inherits(GaugeComponent, _BaseChartComponent23);\n\n  var _super24 = _createSuper(GaugeComponent);\n\n  function GaugeComponent() {\n    var _this82;\n\n    _classCallCheck(this, GaugeComponent);\n\n    _this82 = _super24.apply(this, arguments);\n    _this82.legend = false;\n    _this82.legendTitle = 'Legend';\n    _this82.legendPosition = LegendPosition.Right;\n    _this82.min = 0;\n    _this82.max = 100;\n    _this82.bigSegments = 10;\n    _this82.smallSegments = 5;\n    _this82.showAxis = true;\n    _this82.startAngle = -120;\n    _this82.angleSpan = 240;\n    _this82.activeEntries = [];\n    _this82.tooltipDisabled = false;\n    _this82.showText = true;\n    _this82.activate = new EventEmitter();\n    _this82.deactivate = new EventEmitter();\n    _this82.resizeScale = 1;\n    _this82.rotation = '';\n    _this82.textTransform = 'scale(1, 1)';\n    _this82.cornerRadius = 10;\n    return _this82;\n  }\n\n  _createClass(GaugeComponent, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this83 = this;\n\n      _get(_getPrototypeOf(GaugeComponent.prototype), \"ngAfterViewInit\", this).call(this);\n\n      setTimeout(function () {\n        return _this83.scaleText();\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this84 = this;\n\n      _get(_getPrototypeOf(GaugeComponent.prototype), \"update\", this).call(this);\n\n      if (!this.showAxis) {\n        if (!this.margin) {\n          this.margin = [10, 20, 10, 20];\n        }\n      } else {\n        if (!this.margin) {\n          this.margin = [60, 100, 60, 100];\n        }\n      } // make the starting angle positive\n\n\n      if (this.startAngle < 0) {\n        this.startAngle = this.startAngle % 360 + 360;\n      }\n\n      this.angleSpan = Math.min(this.angleSpan, 360);\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showLegend: this.legend,\n        legendPosition: this.legendPosition\n      });\n      this.domain = this.getDomain();\n      this.valueDomain = this.getValueDomain();\n      this.valueScale = this.getValueScale();\n      this.displayValue = this.getDisplayValue();\n      this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n      this.arcs = this.getArcs();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      var xOffset = this.margin[3] + this.dims.width / 2;\n      var yOffset = this.margin[0] + this.dims.height / 2;\n      this.transform = \"translate(\".concat(xOffset, \", \").concat(yOffset, \")\");\n      this.rotation = \"rotate(\".concat(this.startAngle, \")\");\n      setTimeout(function () {\n        return _this84.scaleText();\n      }, 50);\n    }\n  }, {\n    key: \"getArcs\",\n    value: function getArcs() {\n      var arcs = [];\n      var availableRadius = this.outerRadius * 0.7;\n      var radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n      var arcWidth = radiusPerArc * 0.7;\n      this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n      this.cornerRadius = Math.floor(arcWidth / 2);\n      var i = 0;\n\n      var _iterator73 = _createForOfIteratorHelper(this.results),\n          _step73;\n\n      try {\n        for (_iterator73.s(); !(_step73 = _iterator73.n()).done;) {\n          var d = _step73.value;\n          var outerRadius = this.outerRadius - i * radiusPerArc;\n          var innerRadius = outerRadius - arcWidth;\n          var backgroundArc = {\n            endAngle: this.angleSpan * Math.PI / 180,\n            innerRadius: innerRadius,\n            outerRadius: outerRadius,\n            data: {\n              value: this.max,\n              name: d.name\n            }\n          };\n          var valueArc = {\n            endAngle: Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI / 180,\n            innerRadius: innerRadius,\n            outerRadius: outerRadius,\n            data: {\n              value: d.value,\n              name: d.name\n            }\n          };\n          var _arc = {\n            backgroundArc: backgroundArc,\n            valueArc: valueArc\n          };\n          arcs.push(_arc);\n          i++;\n        }\n      } catch (err) {\n        _iterator73.e(err);\n      } finally {\n        _iterator73.f();\n      }\n\n      return arcs;\n    }\n  }, {\n    key: \"getDomain\",\n    value: function getDomain() {\n      return this.results.map(function (d) {\n        return d.name;\n      });\n    }\n  }, {\n    key: \"getValueDomain\",\n    value: function getValueDomain() {\n      var values = this.results.map(function (d) {\n        return d.value;\n      });\n      var dataMin = Math.min.apply(Math, _toConsumableArray(values));\n      var dataMax = Math.max.apply(Math, _toConsumableArray(values));\n\n      if (this.min !== undefined) {\n        this.min = Math.min(this.min, dataMin);\n      } else {\n        this.min = dataMin;\n      }\n\n      if (this.max !== undefined) {\n        this.max = Math.max(this.max, dataMax);\n      } else {\n        this.max = dataMax;\n      }\n\n      return [this.min, this.max];\n    }\n  }, {\n    key: \"getValueScale\",\n    value: function getValueScale() {\n      return scaleLinear().range([0, this.angleSpan]).nice().domain(this.valueDomain);\n    }\n  }, {\n    key: \"getDisplayValue\",\n    value: function getDisplayValue() {\n      var value = this.results.map(function (d) {\n        return d.value;\n      }).reduce(function (a, b) {\n        return a + b;\n      }, 0);\n\n      if (this.textValue && 0 !== this.textValue.length) {\n        return this.textValue.toLocaleString();\n      }\n\n      if (this.valueFormatting) {\n        return this.valueFormatting(value);\n      }\n\n      return value.toLocaleString();\n    }\n  }, {\n    key: \"scaleText\",\n    value: function scaleText() {\n      var _this85 = this;\n\n      var repeat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!this.showText) {\n        return;\n      }\n\n      var _this$textEl$nativeEl = this.textEl.nativeElement.getBoundingClientRect(),\n          width = _this$textEl$nativeEl.width;\n\n      var oldScale = this.resizeScale;\n\n      if (width === 0) {\n        this.resizeScale = 1;\n      } else {\n        var availableSpace = this.textRadius;\n        this.resizeScale = Math.floor(availableSpace / (width / this.resizeScale) * 100) / 100;\n      }\n\n      if (this.resizeScale !== oldScale) {\n        this.textTransform = \"scale(\".concat(this.resizeScale, \", \").concat(this.resizeScale, \")\");\n        this.cd.markForCheck();\n\n        if (repeat) {\n          setTimeout(function () {\n            return _this85.scaleText(false);\n          }, 50);\n        }\n      }\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(data) {\n      this.select.emit(data);\n    }\n  }, {\n    key: \"getLegendOptions\",\n    value: function getLegendOptions() {\n      return {\n        scaleType: ScaleType.Ordinal,\n        colors: this.colors,\n        domain: this.domain,\n        title: this.legendTitle,\n        position: this.legendPosition\n      };\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors() {\n      this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n  }, {\n    key: \"onActivate\",\n    value: function onActivate(item) {\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value;\n      });\n\n      if (idx > -1) {\n        return;\n      }\n\n      this.activeEntries = [item].concat(_toConsumableArray(this.activeEntries));\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"onDeactivate\",\n    value: function onDeactivate(item) {\n      var idx = this.activeEntries.findIndex(function (d) {\n        return d.name === item.name && d.value === item.value;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = _toConsumableArray(this.activeEntries);\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive(entry) {\n      if (!this.activeEntries) return false;\n      var item = this.activeEntries.find(function (d) {\n        return entry.name === d.name && entry.series === d.series;\n      });\n      return item !== undefined;\n    }\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, item) {\n      return item.valueArc.data.name;\n    }\n  }]);\n\n  return GaugeComponent;\n}(BaseChartComponent);\n\nGaugeComponent.ɵfac = /* @__PURE__ */function () {\n  var ɵGaugeComponent_BaseFactory;\n  return function GaugeComponent_Factory(t) {\n    return (ɵGaugeComponent_BaseFactory || (ɵGaugeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(GaugeComponent)))(t || GaugeComponent);\n  };\n}();\n\nGaugeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeComponent,\n  selectors: [[\"ngx-charts-gauge\"]],\n  contentQueries: function GaugeComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  viewQuery: function GaugeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c45, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    min: \"min\",\n    max: \"max\",\n    textValue: \"textValue\",\n    units: \"units\",\n    bigSegments: \"bigSegments\",\n    smallSegments: \"smallSegments\",\n    results: \"results\",\n    showAxis: \"showAxis\",\n    startAngle: \"startAngle\",\n    angleSpan: \"angleSpan\",\n    activeEntries: \"activeEntries\",\n    axisTickFormatting: \"axisTickFormatting\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    showText: \"showText\",\n    margin: \"margin\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"gauge\", \"chart\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-gauge-axis\", \"\", 3, \"bigSegments\", \"smallSegments\", \"min\", \"max\", \"radius\", \"angleSpan\", \"valueScale\", \"startAngle\", \"tickFormatting\", 4, \"ngIf\"], [\"alignment-baseline\", \"central\", 3, \"textAnchor\", 4, \"ngIf\"], [\"ngx-charts-gauge-arc\", \"\", 3, \"backgroundArc\", \"valueArc\", \"cornerRadius\", \"colors\", \"isActive\", \"tooltipDisabled\", \"tooltipTemplate\", \"valueFormatting\", \"animations\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-gauge-axis\", \"\", 3, \"bigSegments\", \"smallSegments\", \"min\", \"max\", \"radius\", \"angleSpan\", \"valueScale\", \"startAngle\", \"tickFormatting\"], [\"alignment-baseline\", \"central\"], [\"textEl\", \"\"], [\"x\", \"0\", \"dy\", \"0\"], [\"x\", \"0\", \"dy\", \"1.2em\"]],\n  template: function GaugeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function GaugeComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function GaugeComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function GaugeComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, GaugeComponent__svg_g_2_Template, 2, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, GaugeComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, GaugeComponent__svg_text_4_Template, 6, 5, \"text\", 4);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.arcs)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showText);\n    }\n  },\n  dependencies: [ChartComponent, GaugeArcComponent, GaugeAxisComponent, i2.NgForOf, i2.NgIf],\n  styles: [_c25, \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-gauge',\n      template: \"\\n    <ngx-charts-chart\\n      [view]=\\\"[width, height]\\\"\\n      [showLegend]=\\\"legend\\\"\\n      [legendOptions]=\\\"legendOptions\\\"\\n      [activeEntries]=\\\"activeEntries\\\"\\n      [animations]=\\\"animations\\\"\\n      (legendLabelClick)=\\\"onClick($event)\\\"\\n      (legendLabelActivate)=\\\"onActivate($event)\\\"\\n      (legendLabelDeactivate)=\\\"onDeactivate($event)\\\"\\n    >\\n      <svg:g [attr.transform]=\\\"transform\\\" class=\\\"gauge chart\\\">\\n        <svg:g *ngFor=\\\"let arc of arcs; trackBy: trackBy\\\" [attr.transform]=\\\"rotation\\\">\\n          <svg:g\\n            ngx-charts-gauge-arc\\n            [backgroundArc]=\\\"arc.backgroundArc\\\"\\n            [valueArc]=\\\"arc.valueArc\\\"\\n            [cornerRadius]=\\\"cornerRadius\\\"\\n            [colors]=\\\"colors\\\"\\n            [isActive]=\\\"isActive(arc.valueArc.data)\\\"\\n            [tooltipDisabled]=\\\"tooltipDisabled\\\"\\n            [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n            [valueFormatting]=\\\"valueFormatting\\\"\\n            [animations]=\\\"animations\\\"\\n            (select)=\\\"onClick($event)\\\"\\n            (activate)=\\\"onActivate($event)\\\"\\n            (deactivate)=\\\"onDeactivate($event)\\\"\\n          ></svg:g>\\n        </svg:g>\\n\\n        <svg:g\\n          ngx-charts-gauge-axis\\n          *ngIf=\\\"showAxis\\\"\\n          [bigSegments]=\\\"bigSegments\\\"\\n          [smallSegments]=\\\"smallSegments\\\"\\n          [min]=\\\"min\\\"\\n          [max]=\\\"max\\\"\\n          [radius]=\\\"outerRadius\\\"\\n          [angleSpan]=\\\"angleSpan\\\"\\n          [valueScale]=\\\"valueScale\\\"\\n          [startAngle]=\\\"startAngle\\\"\\n          [tickFormatting]=\\\"axisTickFormatting\\\"\\n        ></svg:g>\\n\\n        <svg:text\\n          #textEl\\n          *ngIf=\\\"showText\\\"\\n          [style.textAnchor]=\\\"'middle'\\\"\\n          [attr.transform]=\\\"textTransform\\\"\\n          alignment-baseline=\\\"central\\\"\\n        >\\n          <tspan x=\\\"0\\\" dy=\\\"0\\\">{{ displayValue }}</tspan>\\n          <tspan x=\\\"0\\\" dy=\\\"1.2em\\\">{{ units }}</tspan>\\n        </svg:text>\\n      </svg:g>\\n    </ngx-charts-chart>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    textValue: [{\n      type: Input\n    }],\n    units: [{\n      type: Input\n    }],\n    bigSegments: [{\n      type: Input\n    }],\n    smallSegments: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    showAxis: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    angleSpan: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    axisTickFormatting: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    showText: [{\n      type: Input\n    }],\n    margin: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    textEl: [{\n      type: ViewChild,\n      args: ['textEl']\n    }]\n  });\n})();\n\nvar GaugeModule = /*#__PURE__*/_createClass(function GaugeModule() {\n  _classCallCheck(this, GaugeModule);\n});\n\nGaugeModule.ɵfac = function GaugeModule_Factory(t) {\n  return new (t || GaugeModule)();\n};\n\nGaugeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GaugeModule\n});\nGaugeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule, PieChartModule, BarChartModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule, PieChartModule, BarChartModule],\n      declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\n      exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\n    }]\n  }], null, null);\n})(); // The export is needed here to generate a valid polyfills.metadata.json file\n\n\nfunction ngxChartsPolyfills() {\n  // IE11 fix\n  // Ref: https://github.com/swimlane/ngx-charts/issues/386\n  if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n    SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n  }\n}\n\nvar NgxChartsModule = /*#__PURE__*/_createClass(function NgxChartsModule() {\n  _classCallCheck(this, NgxChartsModule);\n\n  ngxChartsPolyfills();\n});\n\nNgxChartsModule.ɵfac = function NgxChartsModule_Factory(t) {\n  return new (t || NgxChartsModule)();\n};\n\nNgxChartsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxChartsModule\n});\nNgxChartsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [ChartCommonModule, AreaChartModule, BarChartModule, BoxChartModule, BubbleChartModule, HeatMapModule, LineChartModule, PolarChartModule, NumberCardModule, PieChartModule, TreeMapModule, GaugeModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxChartsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [ChartCommonModule, AreaChartModule, BarChartModule, BoxChartModule, BubbleChartModule, HeatMapModule, LineChartModule, PolarChartModule, NumberCardModule, PieChartModule, TreeMapModule, GaugeModule]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nfunction tickFormat(fieldType, groupByType) {\n  return function (label) {\n    if (label === 'No Value' || label === 'Other') {\n      return label;\n    }\n\n    if (fieldType === 'date' && groupByType === 'groupBy') {\n      var formatter = timeFormat('MM/DD/YYYY');\n      return formatter(label);\n    }\n\n    return label.toString();\n  };\n}\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/*\n * Public API Surface of ngx-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AdvancedLegendComponent, AdvancedPieChartComponent, AreaChartComponent, AreaChartModule, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaComponent, AreaSeriesComponent, AxesModule, AxisLabelComponent, BarChartModule, BarChartType, BarComponent, BarHorizontal2DComponent, BarHorizontalComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarLabelComponent, BarOrientation, BarVertical2DComponent, BarVerticalComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BaseChartComponent, BoxChartComponent, BoxChartModule, BoxComponent, BoxSeriesComponent, BubbleChartComponent, BubbleChartModule, BubbleSeriesComponent, CardComponent, CardSeriesComponent, ChartCommonModule, ChartComponent, CircleComponent, CircleSeriesComponent, ColorHelper, CountUpDirective, D0Types, GaugeArcComponent, GaugeAxisComponent, GaugeComponent, GaugeModule, GridPanelComponent, GridPanelSeriesComponent, HeatCellSeriesComponent, HeatMapCellComponent, HeatMapComponent, HeatMapModule, LegendComponent, LegendEntryComponent, LegendPosition, LegendType, LineChartComponent, LineChartModule, LineComponent, LineSeriesComponent, LinearGaugeComponent, NgxChartsModule, NumberCardComponent, NumberCardModule, Orientation, PieArcComponent, PieChartComponent, PieChartModule, PieGridComponent, PieGridSeriesComponent, PieLabelComponent, PieSeriesComponent, PlacementTypes, PolarChartComponent, PolarChartModule, PolarSeriesComponent, ScaleLegendComponent, ScaleType, SeriesHorizontal, SeriesType, SeriesVerticalComponent, ShowTypes, StyleTypes, SvgLinearGradientComponent, SvgRadialGradientComponent, TextAnchor, Timeline, TooltipArea, TooltipContentComponent, TooltipDirective, TooltipModule, TooltipService, TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent, TreeMapModule, VisibilityObserver, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent, calculateViewDimensions, colorSets, count, decimalChecker, escapeLabel, formatLabel, getDomain, getScale, getScaleType, getUniqueXDomainValues, getXDomainArray, gridLayout, gridSize, hexToRgb, id, invertColor, reduceTicks, shadeRGBColor, sortByDomain, sortByTime, sortLinear, throttle, throttleable, tickFormat, trimLabel };","map":{"version":3,"names":["i0","PLATFORM_ID","Component","ViewEncapsulation","Inject","Input","ViewChild","HostBinding","HostListener","Injectable","ChangeDetectionStrategy","EventEmitter","Output","Directive","NgModule","ContentChild","i2","isPlatformBrowser","isPlatformServer","CommonModule","__decorate","DomPortalOutlet","ComponentPortal","fromEvent","debounceTime","trigger","transition","style","animate","select","brushX","scaleTime","scaleLinear","scalePoint","scaleOrdinal","scaleQuantile","scaleBand","area","curveLinear","line","arc","lineRadial","curveCardinalClosed","pie","range","min","max","quantile","interpolate","easeSinInOut","rfdc","format","d3_color","treemap","stratify","timeFormat","throttle","func","wait","options","context","args","result","timeout","previous","later","leading","Date","apply","now","remaining","arguments","clearTimeout","trailing","setTimeout","throttleable","duration","innerDecorator","target","key","descriptor","configurable","enumerable","get","getter","Object","defineProperty","value","PlacementTypes","caretOffset","verticalPosition","elDimensions","popoverDimensions","alignment","Top","top","Bottom","height","Center","undefined","horizontalPosition","Left","left","Right","width","PositionHelper","window","innerHeight","caretDimensions","popoverPosition","innerWidth","placement","spacing","flip","elmDim","hostDim","calculateVerticalCaret","calculateHorizontalCaret","calculateVerticalAlignment","calculateHorizontalAlignment","shouldFlip","TooltipContentComponent","element","renderer","platformId","clz","type","cssClass","position","bind","nativeElm","nativeElement","host","getBoundingClientRect","checkFlip","positionContent","showCaret","positionCaret","addClass","setStyle","caretElm","determinePlacement","ɵfac","ElementRef","Renderer2","ɵcmp","NgIf","NgTemplateOutlet","prototype","selector","template","encapsulation","None","styles","decorators","title","cssClasses","onWindowResize","InjectionRegisteryService","injectionService","defaults","components","Map","bindings","createByType","assignDefaults","component","injectComponent","register","instance","compsByType","componentType","length","idx","indexOf","destroy","splice","destroyByType","comps","i","appendComponent","inputs","outputs","has","set","types","push","isViewContainerRef","x","InjectionService","applicationRef","componentFactoryResolver","injector","_container","globalRootViewContainer","Error","container","hostView","rootNodes","location","getComponentRootNode","bindingKeys","getOwnPropertyNames","bindingName","eventKeys","eventName","componentClass","getRootViewContainer","appendLocation","portalHost","portal","componentRef","attach","projectComponentBindings","ApplicationRef","ComponentFactoryResolver","Injector","ɵprov","TooltipService","LegendPosition","LegendType","ScaleType","ScaleLegendComponent","horizontal","changes","gradientValues","gradientString","colors","domain","direction","gradient","splits","pairs","reverse","forEach","c","Math","round","join","changeDetection","OnPush","valueRange","formatLabel","label","toLocaleDateString","toLocaleString","escapeLabel","replace","match","LegendEntryComponent","isActive","activate","deactivate","toggle","formattedLabel","emit","name","color","onMouseEnter","onMouseLeave","LegendComponent","cd","labelClick","labelActivate","labelDeactivate","legendEntries","update","markForCheck","getLegendEntries","items","data","findIndex","getColor","entry","activeEntries","item","find","d","index","ChangeDetectorRef","NgForOf","ChartComponent","showLegend","animations","legendLabelClick","legendLabelActivate","legendLabelDeactivate","legendColumns","legendType","getLegendType","legendOptions","ScaleLegend","chartColumns","chartWidth","floor","view","legendWidth","scaleType","Linear","Legend","providers","VisibilityObserver","zone","visible","isVisible","runCheck","run","check","offsetHeight","offsetWidth","onVisibilityChange","runOutsideAngular","NgZone","ɵdir","isDate","toString","call","isNumber","BaseChartComponent","chartElement","scheme","schemeType","Ordinal","bindWindowResizeEvent","visibilityObserver","subscribe","unbindEvents","unsubscribe","results","cloneData","dims","getContainerDims","hostElem","parentNode","g","series","j","resizeSubscription","source","subscription","pipe","e","copy","seriesItem","seriesItemCopy","assign","JSON","parse","stringify","customColors","Orientation","AxisLabelComponent","textHeight","margin","strokeWidth","textAnchor","transform","orient","y","offset","trimLabel","s","trim","slice","reduceTicks","ticks","maxTicks","reduced","modulus","TextAnchor","XAxisTicksComponent","tickArguments","tickStroke","trimTicks","maxTickLength","showGridLines","rotateTicks","dimensionsChanged","verticalSpacing","rotateLabels","innerTickSize","outerTickSize","tickPadding","Middle","maxTicksLength","maxAllowedLength","approxHeight","updateDims","parseInt","ticksElement","scale","getTicks","tickFormatting","tickFormat","constructor","angle","getRotationAngle","adjustedScale","bandwidth","textTransform","End","tick","tickLength","tickTrim","len","charWidth","wordWidth","baseWidth","maxBaseWidth","cos","PI","abs","sin","getMaxTicks","maxScaleTicks","tickValues","tickWidth","gridLineHeight","XAxisComponent","xOrient","xAxisOffset","xAxisClassName","labelOffset","fill","stroke","padding","orientation","xAxisTickCount","newLabelOffset","xScale","showLabel","labelText","ticksComponent","roundedRect","w","h","r","tl","tr","bl","br","retval","YAxisTicksComponent","showRefLabels","showRefLines","referenceLineLength","getApproximateAxisWidth","sign","tickSpacing","referenceLines","setReferencelines","y2","y1","dy","x2","x1","Start","refMin","map","refMax","referenceAreaPath","gridLineWidth","tickHeight","maxChars","t","YAxisComponent","yOrient","yAxisOffset","yAxisClassName","yAxisTickCount","yScale","AxesModule","ɵmod","ɵinj","imports","declarations","exports","StyleTypes","ShowTypes","TooltipDirective","tooltipService","viewContainerRef","tooltipCssClass","tooltipAppendToBody","tooltipSpacing","tooltipDisabled","tooltipShowCaret","tooltipPlacement","tooltipAlignment","tooltipType","popover","tooltipCloseOnClickOutside","tooltipCloseOnMouseLeave","tooltipHideTimeout","tooltipShowTimeout","tooltipShowEvent","all","tooltipImmediateExit","show","hide","focus","mouseover","hideTooltip","listensForFocus","showTooltip","listensForHover","contentDom","contains","immediate","time","navigator","userAgent","destroyAll","createBoundOptions","create","addHideListeners","tooltip","mouseEnterContentEvent","listen","mouseLeaveContentEvent","documentClickEvent","event","destroyFn","tooltipTitle","tooltipTemplate","tooltipContext","ViewContainerRef","onFocus","onBlur","onMouseClick","TooltipModule","entryComponents","cache","id","newId","random","pow","BarOrientation","SvgLinearGradientComponent","Vertical","Horizontal","stops","CircleComponent","classNames","Array","isArray","cx","cy","circleOpacity","pointerEvents","onClick","SeriesType","CircleSeriesComponent","Standard","barVisible","barOrientation","placementTypes","styleTypes","isSSR","gradientId","gradientFill","circle","getActiveCircle","indexActiveDataPoint","visibleValue","mapDataPointToCircle","seriesName","tooltipLabel","Time","Number","d1","radius","opacity","gradientStops","getGradientStops","getTooltipMinMaxText","GridPanelComponent","ClassEnum","GridPanelSeriesComponent","gridPanels","getGridPanels","className","Odd","positionIndex","step","Even","paddingInner","class","SvgRadialGradientComponent","endOpacity","stopsInput","stopsDefault","startOpacity","AreaComponent","animationsLoaded","hasGradient","loadAnimation","getGradient","updatePathEl","areaPath","startingPath","node","attr","path","easeOutExpo","b","count","countFrom","countTo","countDecimals","countDuration","callback","startVal","endVal","countDown","decimals","dec","startTime","runCount","timestamp","frameVal","progress","finished","requestAnimationFrame","val","decimalChecker","CountUpDirective","countPrefix","countSuffix","countChange","countFinish","_countDecimals","_countTo","_countFrom","parseFloat","start","cancelAnimationFrame","animationReq","valueFormatting","root","global","MouseEvent","createMouseEvent","bubbles","cancelable","document","createEvent","initEvent","TooltipArea","anchorOpacity","anchorPos","anchorValues","showPercentage","hover","xVal","group","groupName","d0","toFixed","v","xPos","pageX","closestIndex","findClosestPointIndex","closestPoint","xSet","getValues","lastAnchorPos","ev","tooltipAnchor","dispatchEvent","minIndex","maxIndex","minDiff","MAX_VALUE","currentIndex","currentElement","curDiff","tooltipItem","static","Timeline","onDomainChange","initialized","addBrush","getDims","offsetY","xDomain","getXDomain","getXScale","brush","updateBrush","filterId","filter","values","includes","extent","on","selection","newSelection","newDomain","invert","legend","autoScale","AdvancedLegendComponent","legendItems","labelFormatting","percentageFormatting","percentage","defaultValueFormatting","reduce","sum","total","getTotal","roundedTotal","getLegendItems","_value","displayLabel","origialLabel","COMPONENTS","ChartCommonModule","calculateViewDimensions","margins","showXAxis","showYAxis","xAxisHeight","yAxisWidth","showXLabel","showYLabel","legendPosition","columns","xOffset","chartHeight","colorSets","selectable","ColorHelper","cs","colorDomain","generateColorScheme","colorScale","Quantile","points","valueScale","formattedValue","found","mapping","toLowerCase","colorValueScale","endColor","startColor","currentVal","originalOffset","getUniqueXDomainValues","valueSet","Set","add","from","getScaleType","checkDateType","allDates","every","allNumbers","getXDomainArray","xScaleMin","xScaleMax","mappedValues","sort","a","aDate","getTime","bDate","sortLinear","property","sortByDomain","aVal","bVal","aIdx","bIdx","sortByTime","AreaSeriesComponent","baseValue","stacked","normalized","updateGradient","currentArea","startingArea","xProperty","y0","curve","d0values","d1values","getLinearGradientStops","AreaChartComponent","legendTitle","xAxis","yAxis","timeline","trimXAxisTicks","trimYAxisTicks","rotateXAxisTicks","maxXAxisTickLength","maxYAxisTickLength","roundDomains","timelineHeight","timelinePadding","trackBy","showXAxisLabel","showYAxisLabel","filteredDomain","yDomain","getYDomain","seriesDomain","getSeriesDomain","getYScale","updateTimeline","setColors","getLegendOptions","clipPathId","clipPath","timelineWidth","timelineXDomain","timelineXScale","timelineYScale","timelineTransform","yScaleMin","yScaleMax","nice","date","num","hoveredVertical","deactivateAll","opts","entries","xAxisLabel","yAxisLabel","xAxisTickFormatting","yAxisTickFormatting","xAxisTicks","yAxisTicks","seriesTooltipTemplate","hideCircles","AreaChartNormalizedComponent","seriesType","valueOf","AreaChartStackedComponent","AreaChartModule","BarComponent","roundEdges","noBarWhenZero","hideBar","checkToHideBar","getStartingPath","getPath","getStartOpacity","getRadius","edges","ariaLabel","BarChartType","D0Types","BarLabelComponent","horizontalPadding","verticalPadding","negative","getSize","formatedValue","barX","barWidth","barY","barHeight","SeriesHorizontal","showDataLabel","dataLabelWidthChanged","barsForDataLabels","updateTooltipSettings","positive","d0Type","Normalized","bars","getLabel","bar","Stacked","offset0","offset1","tooltipText","dataLabelFormatting","updateDataLabels","section","totalPositive","totalNegative","active","dataItem","barLabel","BarHorizontalComponent","barPadding","dataLabelMaxWidth","formatDates","rangeRound","size","fromLegend","BarHorizontal2DComponent","groupPadding","groupDomain","getGroupDomain","innerDomain","getInnerDomain","valueDomain","getValueDomain","groupScale","getGroupScale","innerScale","getInnerScale","getValueScale","paddingOuter","groupIndex","flat","BarHorizontalNormalizedComponent","barChartType","BarHorizontalStackedComponent","smallest","biggest","smallestSum","biggestSum","SeriesVerticalComponent","dataLabelHeightChanged","BarVerticalComponent","dataLabelMaxHeight","some","isNaN","BarVertical2DComponent","BarVerticalNormalizedComponent","BarVerticalStackedComponent","BarChartModule","cloneDeep","BoxComponent","boxStrokeWidth","whiskerStrokeWidth","medianLineWidth","updateLineEl","maskLineId","maskLine","boxPath","oldPath","oldLineCoordinates","getStartingLineCoordinates","nodeBar","selectAll","ease","attrTween","pathTween","lineEl","lineCoordinates","_","v1","v2","nodeLineEl","baseVal","precision","path0","path1","cloneNode","setAttribute","n0","getTotalLength","n1","distances","dt","p0","getPointAtLength","p1","p","strokeColor","BoxSeriesComponent","counts","mappedCounts","serie","whiskers","groupCounts","quartiles","getBoxQuantiles","getLinesCoordinates","box","formattedTooltipLabel","inputData","commonX","offsetX","whiskerLineWidth","whiskerZero","whiskerOne","median","topLine","medianLine","bottomLine","verticalLine","BoxChartComponent","setScales","getUniqueBoxChartXDomainValues","legendOpts","legendOptionsConfig","BoxChartModule","getDomain","minVal","maxVal","getScale","BubbleSeriesComponent","circles","getCircles","rScale","xScaleType","yScaleType","hasRadius","hasTooltipLabel","hasSeriesName","radiusValue","BubbleChartComponent","maxRadius","minRadius","bubblePadding","rDomain","getRDomain","getRScale","getBubblePadding","yMin","xMin","yMax","xMax","Infinity","BubbleChartModule","HeatMapCellComponent","gradientUrl","animateToCurrentForm","HeatCellSeriesComponent","getTooltipText","cells","getCells","row","cell","HeatMapComponent","innerPadding","rects","getRects","N","L","split","getDimension","f","yVal","rx","HeatMapModule","LineComponent","initialPath","strokeDasharray","strokeDashoffset","LineSeriesComponent","updateGradients","sortData","lineGen","getLineGenerator","areaGen","getAreaGenerator","hasRange","getRangeGenerator","outerPath","areaGradientStops","rangeFillOpacity","LineChartComponent","LineChartModule","PieLabelComponent","labelTrim","labelTrimSize","setTransforms","styleTransform","textX","textY","attrTransform","textTransition","isIE","test","startRadius","explodeSlices","innerArc","innerRadius","outerRadius","innerPos","centroid","pos","outerPos","midAngle","startAngle","endAngle","PolarSeriesComponent","circleRadius","linearScaleType","seriesColor","getAngle","cData","inactive","isInactive","defaultTooltipText","twoPI","PolarChartComponent","showSeriesOnHover","yAxisMinScale","setDims","setTicks","halfWidth","halfHeight","yOffset","yAxisDims","transformYAxis","transformPlot","xValues","getXValues","yAxisScale","thetaTicks","dd","startPos","minDistance","o","radiusTicks","getYValues","PieArcComponent","cornerRadius","dblclick","calc","calculateArc","radialGradientId","updateAnimation","_current","copyOfD","interpolater","_timeout","preventDefault","stopPropagation","nativeEvent","PieSeriesComponent","trimLabels","maxLabelLength","pieGenerator","arcData","calculateLabelPositions","factor","pieData","labelPositions","outerArc","labelVisible","myArc","showLabels","AdvancedPieChartComponent","nameFormatting","PieChartComponent","labels","doughnut","arcWidth","hasNoOptionalMarginsSet","translation","gridSize","minWidth","rows","cols","ceil","gridLayout","designatedTotal","res","cardWidth","cardHeight","extra","percent","PieGridSeriesComponent","layout","arcs","getArcs","other","PieGridComponent","getSeries","baselineLabelHeight","yPos","PieChartModule","PolarChartModule","calculateTextWidth","fontFamilyKey","text","defaultWidth","acc","curr","VERDANA_FONT_WIDTHS_16_PX","A","B","C","D","E","F","G","H","I","J","K","M","O","P","Q","R","S","T","U","V","W","X","Y","Z","k","l","m","n","q","u","z","$","CardComponent","textFontSize","bandHeight","textPadding","labelFontSize","scaleTextSSR","hasValue","card","textWidth","cardData","transformBand","paddedValue","setPadding","bandPath","scaleText","startCount","medianSize","repeat","decs","textEl","availableWidth","availableHeight","resizeScale","bandColor","textColor","hexToRgb","rgb","invertColor","yiq","depth","shadeRGBColor","CardSeriesComponent","emptyColor","sortedLengths","cards","getCards","emptySlots","yPadding","xPadding","valueColor","cardColor","NumberCardComponent","observers","NumberCardModule","TreeMapCellComponent","cellData","TreeMapCellSeriesComponent","children","x0","TreeMapComponent","rootNode","isRoot","parentId","TreeMapModule","ElementType","LinearGaugeComponent","valueResizeScale","unitsResizeScale","valueTextTransform","valueTranslate","unitsTextTransform","unitsTranslate","Value","Units","hasPreviousValue","previousValue","displayValue","getDisplayValue","transformLine","el","valueTextEl","unitsTextEl","oldScale","resizeScaleWidth","resizeScaleHeight","units","GaugeArcComponent","backgroundArc","valueArc","GaugeAxisComponent","rotate","rotationAngle","bigTickSegment","angleSpan","bigSegments","smallTickSegment","smallSegments","big","small","startDistance","textDist","angleDeg","getTextAnchor","skip","getTickPath","smallAngleDeg","smallAngle","lineGenerator","GaugeComponent","showAxis","showText","rotation","availableRadius","radiusPerArc","textRadius","dataMin","dataMax","textValue","availableSpace","axisTickFormatting","GaugeModule","ngxChartsPolyfills","SVGElement","HTMLDivElement","NgxChartsModule","fieldType","groupByType","formatter"],"sources":["C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@swimlane/ngx-charts/fesm2020/swimlane-ngx-charts.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, ViewEncapsulation, Inject, Input, ViewChild, HostBinding, HostListener, Injectable, ChangeDetectionStrategy, EventEmitter, Output, Directive, NgModule, ContentChild } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { select } from 'd3-selection';\nimport { brushX } from 'd3-brush';\nimport { scaleTime, scaleLinear, scalePoint, scaleOrdinal, scaleQuantile, scaleBand } from 'd3-scale';\nimport { area, curveLinear, line, arc, lineRadial, curveCardinalClosed, pie } from 'd3-shape';\nimport { range, min, max, quantile } from 'd3-array';\nimport { interpolate } from 'd3-interpolate';\nimport { easeSinInOut } from 'd3-ease';\nimport rfdc from 'rfdc';\nimport { format } from 'd3-format';\nimport * as d3_color from 'd3-color';\nimport { treemap, stratify } from 'd3-hierarchy';\nimport { timeFormat } from 'd3-time-format';\n\n/**\n * Throttle a function\n *\n */\nfunction throttle(func, wait, options) {\n    options = options || {};\n    let context;\n    let args;\n    let result;\n    let timeout = null;\n    let previous = 0;\n    function later() {\n        previous = options.leading === false ? 0 : +new Date();\n        timeout = null;\n        result = func.apply(context, args);\n    }\n    return function () {\n        const now = +new Date();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        const remaining = wait - (now - previous);\n        context = this;\n        // eslint-disable-next-line prefer-rest-params\n        args = arguments;\n        if (remaining <= 0) {\n            clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nfunction throttleable(duration, options) {\n    return function innerDecorator(target, key, descriptor) {\n        return {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get: function getter() {\n                Object.defineProperty(this, key, {\n                    configurable: true,\n                    enumerable: descriptor.enumerable,\n                    value: throttle(descriptor.value, duration, options)\n                });\n                return this[key];\n            }\n        };\n    };\n}\n\nvar PlacementTypes;\n(function (PlacementTypes) {\n    PlacementTypes[\"Top\"] = \"top\";\n    PlacementTypes[\"Bottom\"] = \"bottom\";\n    PlacementTypes[\"Left\"] = \"left\";\n    PlacementTypes[\"Right\"] = \"right\";\n    PlacementTypes[\"Center\"] = \"center\";\n})(PlacementTypes || (PlacementTypes = {}));\n\nconst caretOffset = 7;\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === PlacementTypes.Top) {\n        return elDimensions.top - caretOffset;\n    }\n    if (alignment === PlacementTypes.Bottom) {\n        return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n        return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n    }\n    return undefined;\n}\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === PlacementTypes.Left) {\n        return elDimensions.left - caretOffset;\n    }\n    if (alignment === PlacementTypes.Right) {\n        return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n        return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n    }\n    return undefined;\n}\n/**\n * Position helper for the popover directive.\n *\n * @export\n */\nclass PositionHelper {\n    /**\n     * Calculate vertical alignment position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n        let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.height > window.innerHeight) {\n            result = window.innerHeight - popoverDimensions.height;\n        }\n        return result;\n    }\n    /**\n     * Calculate vertical caret position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n        let result;\n        if (alignment === PlacementTypes.Top) {\n            result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n        }\n        if (alignment === PlacementTypes.Bottom) {\n            result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n        }\n        if (alignment === PlacementTypes.Center) {\n            result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n        }\n        const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n            result += popoverPosition + popoverDimensions.height - window.innerHeight;\n        }\n        return result;\n    }\n    /**\n     * Calculate horz alignment position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n        let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.width > window.innerWidth) {\n            result = window.innerWidth - popoverDimensions.width;\n        }\n        return result;\n    }\n    /**\n     * Calculate horz caret position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n        let result;\n        if (alignment === PlacementTypes.Left) {\n            result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n        }\n        if (alignment === PlacementTypes.Right) {\n            result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n        }\n        if (alignment === PlacementTypes.Center) {\n            result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n        }\n        const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n            result += popoverPosition + popoverDimensions.width - window.innerWidth;\n        }\n        return result;\n    }\n    /**\n     * Checks if the element's position should be flipped\n     *\n     * @memberOf PositionHelper\n     */\n    static shouldFlip(elDimensions, popoverDimensions, placement, spacing) {\n        let flip = false;\n        if (placement === PlacementTypes.Right) {\n            if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Left) {\n            if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Top) {\n            if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Bottom) {\n            if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n                flip = true;\n            }\n        }\n        return flip;\n    }\n    /**\n     * Position caret\n     *\n     * @memberOf PositionHelper\n     */\n    static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment) {\n        let top = 0;\n        let left = 0;\n        if (placement === PlacementTypes.Right) {\n            left = -7;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Left) {\n            left = elmDim.width;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Top) {\n            top = elmDim.height;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Bottom) {\n            top = -7;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        return { top, left };\n    }\n    /**\n     * Position content\n     *\n     * @memberOf PositionHelper\n     */\n    static positionContent(placement, elmDim, hostDim, spacing, alignment) {\n        let top = 0;\n        let left = 0;\n        if (placement === PlacementTypes.Right) {\n            left = hostDim.left + hostDim.width + spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Left) {\n            left = hostDim.left - elmDim.width - spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Top) {\n            top = hostDim.top - elmDim.height - spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Bottom) {\n            top = hostDim.top + hostDim.height + spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        return { top, left };\n    }\n    /**\n     * Determine placement based on flip\n     *\n     * @memberOf PositionHelper\n     */\n    static determinePlacement(placement, elmDim, hostDim, spacing) {\n        const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n        if (shouldFlip) {\n            if (placement === PlacementTypes.Right) {\n                return PlacementTypes.Left;\n            }\n            else if (placement === PlacementTypes.Left) {\n                return PlacementTypes.Right;\n            }\n            else if (placement === PlacementTypes.Top) {\n                return PlacementTypes.Bottom;\n            }\n            else if (placement === PlacementTypes.Bottom) {\n                return PlacementTypes.Top;\n            }\n        }\n        return placement;\n    }\n}\n\nclass TooltipContentComponent {\n    constructor(element, renderer, platformId) {\n        this.element = element;\n        this.renderer = renderer;\n        this.platformId = platformId;\n    }\n    get cssClasses() {\n        let clz = 'ngx-charts-tooltip-content';\n        clz += ` position-${this.placement}`;\n        clz += ` type-${this.type}`;\n        clz += ` ${this.cssClass}`;\n        return clz;\n    }\n    ngAfterViewInit() {\n        setTimeout(this.position.bind(this));\n    }\n    position() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const nativeElm = this.element.nativeElement;\n        const hostDim = this.host.nativeElement.getBoundingClientRect();\n        // if no dims were found, never show\n        if (!hostDim.height && !hostDim.width)\n            return;\n        const elmDim = nativeElm.getBoundingClientRect();\n        this.checkFlip(hostDim, elmDim);\n        this.positionContent(nativeElm, hostDim, elmDim);\n        if (this.showCaret) {\n            this.positionCaret(hostDim, elmDim);\n        }\n        // animate its entry\n        setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n    }\n    positionContent(nativeElm, hostDim, elmDim) {\n        const { top, left } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\n        this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n        this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n    }\n    positionCaret(hostDim, elmDim) {\n        const caretElm = this.caretElm.nativeElement;\n        const caretDimensions = caretElm.getBoundingClientRect();\n        const { top, left } = PositionHelper.positionCaret(this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n        this.renderer.setStyle(caretElm, 'top', `${top}px`);\n        this.renderer.setStyle(caretElm, 'left', `${left}px`);\n    }\n    checkFlip(hostDim, elmDim) {\n        this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n    }\n    onWindowResize() {\n        this.position();\n    }\n}\nTooltipContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipContentComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTooltipContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipContentComponent, selector: \"ngx-tooltip-content\", inputs: { host: \"host\", showCaret: \"showCaret\", type: \"type\", placement: \"placement\", alignment: \"alignment\", spacing: \"spacing\", cssClass: \"cssClass\", title: \"title\", template: \"template\", context: \"context\" }, host: { listeners: { \"window:resize\": \"onWindowResize()\" }, properties: { \"class\": \"this.cssClasses\" } }, viewQueries: [{ propertyName: \"caretElm\", first: true, predicate: [\"caretElm\"], descendants: true }], ngImport: i0, template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    throttleable(100)\n], TooltipContentComponent.prototype, \"onWindowResize\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipContentComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-tooltip-content', template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { host: [{\n                type: Input\n            }], showCaret: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], alignment: [{\n                type: Input\n            }], spacing: [{\n                type: Input\n            }], cssClass: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], context: [{\n                type: Input\n            }], caretElm: [{\n                type: ViewChild,\n                args: ['caretElm']\n            }], cssClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], onWindowResize: [{\n                type: HostListener,\n                args: ['window:resize']\n            }] } });\n\nclass InjectionRegisteryService {\n    constructor(injectionService) {\n        this.injectionService = injectionService;\n        this.defaults = {};\n        this.components = new Map();\n    }\n    getByType(type = this.type) {\n        return this.components.get(type);\n    }\n    create(bindings) {\n        return this.createByType(this.type, bindings);\n    }\n    createByType(type, bindings) {\n        bindings = this.assignDefaults(bindings);\n        const component = this.injectComponent(type, bindings);\n        this.register(type, component);\n        return component;\n    }\n    destroy(instance) {\n        const compsByType = this.components.get(instance.componentType);\n        if (compsByType && compsByType.length) {\n            const idx = compsByType.indexOf(instance);\n            if (idx > -1) {\n                const component = compsByType[idx];\n                component.destroy();\n                compsByType.splice(idx, 1);\n            }\n        }\n    }\n    destroyAll() {\n        this.destroyByType(this.type);\n    }\n    destroyByType(type) {\n        const comps = this.components.get(type);\n        if (comps && comps.length) {\n            let i = comps.length - 1;\n            while (i >= 0) {\n                this.destroy(comps[i--]);\n            }\n        }\n    }\n    injectComponent(type, bindings) {\n        return this.injectionService.appendComponent(type, bindings);\n    }\n    assignDefaults(bindings) {\n        const inputs = { ...this.defaults.inputs };\n        const outputs = { ...this.defaults.outputs };\n        if (!bindings.inputs && !bindings.outputs) {\n            bindings = { inputs: bindings };\n        }\n        if (inputs) {\n            bindings.inputs = { ...inputs, ...bindings.inputs };\n        }\n        if (outputs) {\n            bindings.outputs = { ...outputs, ...bindings.outputs };\n        }\n        return bindings;\n    }\n    register(type, component) {\n        if (!this.components.has(type)) {\n            this.components.set(type, []);\n        }\n        const types = this.components.get(type);\n        types.push(component);\n    }\n}\n\nfunction isViewContainerRef(x) {\n    return x.element;\n}\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n */\nclass InjectionService {\n    constructor(applicationRef, componentFactoryResolver, injector) {\n        this.applicationRef = applicationRef;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.injector = injector;\n    }\n    /**\n     * Sets a default global root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     */\n    static setGlobalRootViewContainer(container) {\n        InjectionService.globalRootViewContainer = container;\n    }\n    /**\n     * Gets the root view container to inject the component to.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainer() {\n        if (this._container)\n            return this._container;\n        if (InjectionService.globalRootViewContainer)\n            return InjectionService.globalRootViewContainer;\n        if (this.applicationRef.components.length)\n            return this.applicationRef.components[0];\n        throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.');\n    }\n    /**\n     * Overrides the default root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     *\n     * @memberOf InjectionService\n     */\n    setRootViewContainer(container) {\n        this._container = container;\n    }\n    /**\n     * Gets the html element for a component ref.\n     *\n     * @param componentRef\n     *\n     * @memberOf InjectionService\n     */\n    getComponentRootNode(component) {\n        if (isViewContainerRef(component)) {\n            return component.element.nativeElement;\n        }\n        if (component.hostView && component.hostView.rootNodes.length > 0) {\n            return component.hostView.rootNodes[0];\n        }\n        // the top most component root node has no `hostView`\n        return component.location.nativeElement;\n    }\n    /**\n     * Gets the root component container html element.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainerNode(component) {\n        return this.getComponentRootNode(component);\n    }\n    /**\n     * Projects the bindings onto the component\n     *\n     * @param component\n     * @param options\n     *\n     * @memberOf InjectionService\n     */\n    projectComponentBindings(component, bindings) {\n        if (bindings) {\n            if (bindings.inputs !== undefined) {\n                const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n                for (const bindingName of bindingKeys) {\n                    component.instance[bindingName] = bindings.inputs[bindingName];\n                }\n            }\n            if (bindings.outputs !== undefined) {\n                const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n                for (const eventName of eventKeys) {\n                    component.instance[eventName] = bindings.outputs[eventName];\n                }\n            }\n        }\n        return component;\n    }\n    /**\n     * Appends a component to a adjacent location\n     *\n     * @param componentClass\n     * @param [options={}]\n     * @param [location]\n     *\n     * @memberOf InjectionService\n     */\n    appendComponent(componentClass, bindings = {}, location) {\n        if (!location)\n            location = this.getRootViewContainer();\n        const appendLocation = this.getComponentRootNode(location);\n        const portalHost = new DomPortalOutlet(appendLocation, this.componentFactoryResolver, this.applicationRef, this.injector);\n        const portal = new ComponentPortal(componentClass);\n        const componentRef = portalHost.attach(portal);\n        this.projectComponentBindings(componentRef, bindings);\n        return componentRef;\n    }\n}\nInjectionService.globalRootViewContainer = null;\nInjectionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService, deps: [{ token: i0.ApplicationRef }, { token: i0.ComponentFactoryResolver }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nInjectionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.ApplicationRef }, { type: i0.ComponentFactoryResolver }, { type: i0.Injector }]; } });\n\nclass TooltipService extends InjectionRegisteryService {\n    constructor(injectionService) {\n        super(injectionService);\n        this.type = TooltipContentComponent;\n    }\n}\nTooltipService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService, deps: [{ token: InjectionService }], target: i0.ɵɵFactoryTarget.Injectable });\nTooltipService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: InjectionService }]; } });\n\nvar LegendPosition;\n(function (LegendPosition) {\n    LegendPosition[\"Right\"] = \"right\";\n    LegendPosition[\"Below\"] = \"below\";\n})(LegendPosition || (LegendPosition = {}));\nvar LegendType;\n(function (LegendType) {\n    LegendType[\"ScaleLegend\"] = \"scaleLegend\";\n    LegendType[\"Legend\"] = \"legend\";\n})(LegendType || (LegendType = {}));\n\nvar ScaleType;\n(function (ScaleType) {\n    ScaleType[\"Time\"] = \"time\";\n    ScaleType[\"Linear\"] = \"linear\";\n    ScaleType[\"Ordinal\"] = \"ordinal\";\n    ScaleType[\"Quantile\"] = \"quantile\";\n})(ScaleType || (ScaleType = {}));\n\nclass ScaleLegendComponent {\n    constructor() {\n        this.horizontal = false;\n    }\n    ngOnChanges(changes) {\n        const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n        const direction = this.horizontal ? 'right' : 'bottom';\n        this.gradient = `linear-gradient(to ${direction}, ${gradientValues})`;\n    }\n    /**\n     * Generates the string used in the gradient stylesheet properties\n     * @param colors array of colors\n     * @param splits array of splits on a scale of (0, 1)\n     */\n    gradientString(colors, splits) {\n        // add the 100%\n        splits.push(1);\n        const pairs = [];\n        colors.reverse().forEach((c, i) => {\n            pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n        });\n        return pairs.join(', ');\n    }\n}\nScaleLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScaleLegendComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nScaleLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: ScaleLegendComponent, selector: \"ngx-charts-scale-legend\", inputs: { valueRange: \"valueRange\", colors: \"colors\", height: \"height\", width: \"width\", horizontal: \"horizontal\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScaleLegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-scale-legend', template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"] }]\n        }], propDecorators: { valueRange: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], horizontal: [{\n                type: Input\n            }] } });\n\n/**\n * Formats a label given a date, number or string.\n *\n * @export\n */\nfunction formatLabel(label) {\n    if (label instanceof Date) {\n        label = label.toLocaleDateString();\n    }\n    else {\n        label = label.toLocaleString();\n    }\n    return label;\n}\n/**\n * Escapes a label.\n *\n * @export\n */\nfunction escapeLabel(label) {\n    return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\n        return {\n            '&': '&amp;',\n            // tslint:disable-next-line: quotemark\n            \"'\": '&#x27;',\n            '`': '&#x60;',\n            '\"': '&quot;',\n            '<': '&lt;',\n            '>': '&gt;'\n        }[match];\n    });\n}\n\nclass LegendEntryComponent {\n    constructor() {\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.toggle = new EventEmitter();\n    }\n    get trimmedLabel() {\n        return this.formattedLabel || '(empty)';\n    }\n    onMouseEnter() {\n        this.activate.emit({ name: this.label });\n    }\n    onMouseLeave() {\n        this.deactivate.emit({ name: this.label });\n    }\n}\nLegendEntryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendEntryComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLegendEntryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LegendEntryComponent, selector: \"ngx-charts-legend-entry\", inputs: { color: \"color\", label: \"label\", formattedLabel: \"formattedLabel\", isActive: \"isActive\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", toggle: \"toggle\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, ngImport: i0, template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendEntryComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-charts-legend-entry',\n                    template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], formattedLabel: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], toggle: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass LegendComponent {\n    constructor(cd) {\n        this.cd = cd;\n        this.horizontal = false;\n        this.labelClick = new EventEmitter();\n        this.labelActivate = new EventEmitter();\n        this.labelDeactivate = new EventEmitter();\n        this.legendEntries = [];\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.cd.markForCheck();\n        this.legendEntries = this.getLegendEntries();\n    }\n    getLegendEntries() {\n        const items = [];\n        for (const label of this.data) {\n            const formattedLabel = formatLabel(label);\n            const idx = items.findIndex(i => {\n                return i.label === formattedLabel;\n            });\n            if (idx === -1) {\n                items.push({\n                    label,\n                    formattedLabel,\n                    color: this.colors.getColor(label)\n                });\n            }\n        }\n        return items;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.label === d.name;\n        });\n        return item !== undefined;\n    }\n    activate(item) {\n        this.labelActivate.emit(item);\n    }\n    deactivate(item) {\n        this.labelDeactivate.emit(item);\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LegendComponent, selector: \"ngx-charts-legend\", inputs: { data: \"data\", title: \"title\", colors: \"colors\", height: \"height\", width: \"width\", activeEntries: \"activeEntries\", horizontal: \"horizontal\" }, outputs: { labelClick: \"labelClick\", labelActivate: \"labelActivate\", labelDeactivate: \"labelDeactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"], components: [{ type: LegendEntryComponent, selector: \"ngx-charts-legend-entry\", inputs: [\"color\", \"label\", \"formattedLabel\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"toggle\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-legend', template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], horizontal: [{\n                type: Input\n            }], labelClick: [{\n                type: Output\n            }], labelActivate: [{\n                type: Output\n            }], labelDeactivate: [{\n                type: Output\n            }] } });\n\nclass ChartComponent {\n    constructor() {\n        this.showLegend = false;\n        this.animations = true;\n        this.legendLabelClick = new EventEmitter();\n        this.legendLabelActivate = new EventEmitter();\n        this.legendLabelDeactivate = new EventEmitter();\n        this.LegendPosition = LegendPosition;\n        this.LegendType = LegendType;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        let legendColumns = 0;\n        if (this.showLegend) {\n            this.legendType = this.getLegendType();\n            if (!this.legendOptions || this.legendOptions.position === LegendPosition.Right) {\n                if (this.legendType === LegendType.ScaleLegend) {\n                    legendColumns = 1;\n                }\n                else {\n                    legendColumns = 2;\n                }\n            }\n        }\n        const chartColumns = 12 - legendColumns;\n        this.chartWidth = Math.floor((this.view[0] * chartColumns) / 12.0);\n        this.legendWidth =\n            !this.legendOptions || this.legendOptions.position === LegendPosition.Right\n                ? Math.floor((this.view[0] * legendColumns) / 12.0)\n                : this.chartWidth;\n    }\n    getLegendType() {\n        return this.legendOptions.scaleType === ScaleType.Linear ? LegendType.ScaleLegend : LegendType.Legend;\n    }\n}\nChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: ChartComponent, selector: \"ngx-charts-chart\", inputs: { view: \"view\", showLegend: \"showLegend\", legendOptions: \"legendOptions\", legendType: \"legendType\", activeEntries: \"activeEntries\", animations: \"animations\" }, outputs: { legendLabelClick: \"legendLabelClick\", legendLabelActivate: \"legendLabelActivate\", legendLabelDeactivate: \"legendLabelDeactivate\" }, providers: [TooltipService], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `, isInline: true, components: [{ type: ScaleLegendComponent, selector: \"ngx-charts-scale-legend\", inputs: [\"valueRange\", \"colors\", \"height\", \"width\", \"horizontal\"] }, { type: LegendComponent, selector: \"ngx-charts-legend\", inputs: [\"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"horizontal\"], outputs: [\"labelClick\", \"labelActivate\", \"labelDeactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [TooltipService],\n                    selector: 'ngx-charts-chart',\n                    template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { view: [{\n                type: Input\n            }], showLegend: [{\n                type: Input\n            }], legendOptions: [{\n                type: Input\n            }], legendType: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], legendLabelClick: [{\n                type: Output\n            }], legendLabelActivate: [{\n                type: Output\n            }], legendLabelDeactivate: [{\n                type: Output\n            }] } });\n\n/**\n * Visibility Observer\n */\nclass VisibilityObserver {\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.visible = new EventEmitter();\n        this.isVisible = false;\n        this.runCheck();\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n    onVisibilityChange() {\n        // trigger zone recalc for columns\n        this.zone.run(() => {\n            this.isVisible = true;\n            this.visible.emit(true);\n        });\n    }\n    runCheck() {\n        const check = () => {\n            if (!this.element) {\n                return;\n            }\n            // https://davidwalsh.name/offsetheight-visibility\n            const { offsetHeight, offsetWidth } = this.element.nativeElement;\n            if (offsetHeight && offsetWidth) {\n                clearTimeout(this.timeout);\n                this.onVisibilityChange();\n            }\n            else {\n                clearTimeout(this.timeout);\n                this.zone.runOutsideAngular(() => {\n                    this.timeout = setTimeout(() => check(), 100);\n                });\n            }\n        };\n        this.zone.runOutsideAngular(() => {\n            this.timeout = setTimeout(() => check());\n        });\n    }\n}\nVisibilityObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: VisibilityObserver, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nVisibilityObserver.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: VisibilityObserver, selector: \"visibility-observer\", outputs: { visible: \"visible\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: VisibilityObserver, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'visibility-observer'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { visible: [{\n                type: Output\n            }] } });\n\nfunction isDate(value) {\n    return toString.call(value) === '[object Date]';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\nclass BaseChartComponent {\n    constructor(chartElement, zone, cd, platformId) {\n        this.chartElement = chartElement;\n        this.zone = zone;\n        this.cd = cd;\n        this.platformId = platformId;\n        this.scheme = 'cool';\n        this.schemeType = ScaleType.Ordinal;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.animations = false;\n        }\n    }\n    ngAfterViewInit() {\n        this.bindWindowResizeEvent();\n        // listen for visibility of the element for hidden by default scenario\n        this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n        this.visibilityObserver.visible.subscribe(this.update.bind(this));\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n        if (this.visibilityObserver) {\n            this.visibilityObserver.visible.unsubscribe();\n            this.visibilityObserver.destroy();\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        if (this.results) {\n            this.results = this.cloneData(this.results);\n        }\n        else {\n            this.results = [];\n        }\n        if (this.view) {\n            this.width = this.view[0];\n            this.height = this.view[1];\n        }\n        else {\n            const dims = this.getContainerDims();\n            if (dims) {\n                this.width = dims.width;\n                this.height = dims.height;\n            }\n        }\n        // default values if width or height are 0 or undefined\n        if (!this.width) {\n            this.width = 600;\n        }\n        if (!this.height) {\n            this.height = 400;\n        }\n        this.width = Math.floor(this.width);\n        this.height = Math.floor(this.height);\n        if (this.cd) {\n            this.cd.markForCheck();\n        }\n    }\n    getContainerDims() {\n        let width;\n        let height;\n        const hostElem = this.chartElement.nativeElement;\n        if (isPlatformBrowser(this.platformId) && hostElem.parentNode !== null) {\n            // Get the container dimensions\n            const dims = hostElem.parentNode.getBoundingClientRect();\n            width = dims.width;\n            height = dims.height;\n        }\n        if (width && height) {\n            return { width, height };\n        }\n        return null;\n    }\n    /**\n     * Converts all date objects that appear as name\n     * into formatted date strings\n     */\n    formatDates() {\n        for (let i = 0; i < this.results.length; i++) {\n            const g = this.results[i];\n            g.label = g.name;\n            if (isDate(g.label)) {\n                g.label = g.label.toLocaleDateString();\n            }\n            if (g.series) {\n                for (let j = 0; j < g.series.length; j++) {\n                    const d = g.series[j];\n                    d.label = d.name;\n                    if (isDate(d.label)) {\n                        d.label = d.label.toLocaleDateString();\n                    }\n                }\n            }\n        }\n    }\n    unbindEvents() {\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n    }\n    bindWindowResizeEvent() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const source = fromEvent(window, 'resize');\n        const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n            this.update();\n            if (this.cd) {\n                this.cd.markForCheck();\n            }\n        });\n        this.resizeSubscription = subscription;\n    }\n    /**\n     * Clones the data into a new object\n     *\n     * @memberOf BaseChart\n     */\n    cloneData(data) {\n        const results = [];\n        for (const item of data) {\n            const copy = {\n                name: item['name']\n            };\n            if (item['value'] !== undefined) {\n                copy['value'] = item['value'];\n            }\n            if (item['series'] !== undefined) {\n                copy['series'] = [];\n                for (const seriesItem of item['series']) {\n                    const seriesItemCopy = Object.assign({}, seriesItem);\n                    copy['series'].push(seriesItemCopy);\n                }\n            }\n            if (item['extra'] !== undefined) {\n                copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n            }\n            results.push(copy);\n        }\n        return results;\n    }\n}\nBaseChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseChartComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nBaseChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BaseChartComponent, selector: \"base-chart\", inputs: { results: \"results\", view: \"view\", scheme: \"scheme\", schemeType: \"schemeType\", customColors: \"customColors\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: ` <div></div> `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'base-chart',\n                    template: ` <div></div> `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { results: [{\n                type: Input\n            }], view: [{\n                type: Input\n            }], scheme: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], customColors: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nvar Orientation;\n(function (Orientation) {\n    Orientation[\"Top\"] = \"top\";\n    Orientation[\"Bottom\"] = \"bottom\";\n    Orientation[\"Left\"] = \"left\";\n    Orientation[\"Right\"] = \"right\";\n})(Orientation || (Orientation = {}));\n\nclass AxisLabelComponent {\n    constructor(element) {\n        this.textHeight = 25;\n        this.margin = 5;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.strokeWidth = '0.01';\n        this.textAnchor = 'middle';\n        this.transform = '';\n        switch (this.orient) {\n            case Orientation.Top:\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case Orientation.Bottom:\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case Orientation.Left:\n                this.y = -(this.offset + this.textHeight + this.margin);\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            case Orientation.Right:\n                this.y = this.offset + this.margin;\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            default:\n        }\n    }\n}\nAxisLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxisLabelComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nAxisLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: { orient: \"orient\", label: \"label\", offset: \"offset\", width: \"width\", height: \"height\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxisLabelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-axis-label]',\n                    template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { orient: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }] } });\n\nfunction trimLabel(s, max = 16) {\n    if (typeof s !== 'string') {\n        if (typeof s === 'number') {\n            return s + '';\n        }\n        else {\n            return '';\n        }\n    }\n    s = s.trim();\n    if (s.length <= max) {\n        return s;\n    }\n    else {\n        return `${s.slice(0, max)}...`;\n    }\n}\n\nfunction reduceTicks(ticks, maxTicks) {\n    if (ticks.length > maxTicks) {\n        const reduced = [];\n        const modulus = Math.floor(ticks.length / maxTicks);\n        for (let i = 0; i < ticks.length; i++) {\n            if (i % modulus === 0) {\n                reduced.push(ticks[i]);\n            }\n        }\n        ticks = reduced;\n    }\n    return ticks;\n}\n\nvar TextAnchor;\n(function (TextAnchor) {\n    TextAnchor[\"Start\"] = \"start\";\n    TextAnchor[\"Middle\"] = \"middle\";\n    TextAnchor[\"End\"] = \"end\";\n})(TextAnchor || (TextAnchor = {}));\n\nclass XAxisTicksComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.rotateTicks = true;\n        this.dimensionsChanged = new EventEmitter();\n        this.verticalSpacing = 20;\n        this.rotateLabels = false;\n        this.innerTickSize = 6;\n        this.outerTickSize = 6;\n        this.tickPadding = 3;\n        this.textAnchor = TextAnchor.Middle;\n        this.maxTicksLength = 0;\n        this.maxAllowedLength = 16;\n        this.height = 0;\n        this.approxHeight = 10;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n        if (!isPlatformBrowser(this.platformId)) {\n            // for SSR, use approximate value instead of measured\n            this.dimensionsChanged.emit({ height: this.approxHeight });\n            return;\n        }\n        const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n        if (height !== this.height) {\n            this.height = height;\n            this.dimensionsChanged.emit({ height: this.height });\n            setTimeout(() => this.updateDims());\n        }\n    }\n    update() {\n        const scale = this.scale;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            // eslint-disable-next-line prefer-spread\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n        this.adjustedScale = this.scale.bandwidth\n            ? function (d) {\n                return this.scale(d) + this.scale.bandwidth() * 0.5;\n            }\n            : this.scale;\n        this.textTransform = '';\n        if (angle && angle !== 0) {\n            this.textTransform = `rotate(${angle})`;\n            this.textAnchor = TextAnchor.End;\n            this.verticalSpacing = 10;\n        }\n        else {\n            this.textAnchor = TextAnchor.Middle;\n        }\n        setTimeout(() => this.updateDims());\n    }\n    getRotationAngle(ticks) {\n        let angle = 0;\n        this.maxTicksLength = 0;\n        for (let i = 0; i < ticks.length; i++) {\n            const tick = this.tickFormat(ticks[i]).toString();\n            let tickLength = tick.length;\n            if (this.trimTicks) {\n                tickLength = this.tickTrim(tick).length;\n            }\n            if (tickLength > this.maxTicksLength) {\n                this.maxTicksLength = tickLength;\n            }\n        }\n        const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n        const charWidth = 7; // need to measure this\n        const wordWidth = len * charWidth;\n        let baseWidth = wordWidth;\n        const maxBaseWidth = Math.floor(this.width / ticks.length);\n        // calculate optimal angle\n        while (baseWidth > maxBaseWidth && angle > -90) {\n            angle -= 30;\n            baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n        }\n        this.approxHeight = Math.max(Math.abs(Math.sin(angle * (Math.PI / 180)) * wordWidth), 10);\n        return angle;\n    }\n    getTicks() {\n        let ticks;\n        const maxTicks = this.getMaxTicks(20);\n        const maxScaleTicks = this.getMaxTicks(100);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    }\n    getMaxTicks(tickWidth) {\n        return Math.floor(this.width / tickWidth);\n    }\n    tickTransform(tick) {\n        return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n    }\n    gridLineTransform() {\n        return `translate(0,${-this.verticalSpacing - 5})`;\n    }\n    tickTrim(label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n}\nXAxisTicksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisTicksComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nXAxisTicksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: XAxisTicksComponent, selector: \"g[ngx-charts-x-axis-ticks]\", inputs: { scale: \"scale\", orient: \"orient\", tickArguments: \"tickArguments\", tickValues: \"tickValues\", tickStroke: \"tickStroke\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", gridLineHeight: \"gridLineHeight\", width: \"width\", rotateTicks: \"rotateTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksElement\", first: true, predicate: [\"ticksel\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.text-anchor]=\"textAnchor\"\n          [attr.transform]=\"textTransform\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisTicksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-x-axis-ticks]',\n                    template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.text-anchor]=\"textAnchor\"\n          [attr.transform]=\"textTransform\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { scale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }], tickArguments: [{\n                type: Input\n            }], tickValues: [{\n                type: Input\n            }], tickStroke: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], gridLineHeight: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], rotateTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksElement: [{\n                type: ViewChild,\n                args: ['ticksel']\n            }] } });\n\nclass XAxisComponent {\n    constructor() {\n        this.rotateTicks = true;\n        this.showGridLines = false;\n        this.xOrient = Orientation.Bottom;\n        this.xAxisOffset = 0;\n        this.dimensionsChanged = new EventEmitter();\n        this.xAxisClassName = 'x axis';\n        this.labelOffset = 0;\n        this.fill = 'none';\n        this.stroke = 'stroke';\n        this.tickStroke = '#ccc';\n        this.strokeWidth = 'none';\n        this.padding = 5;\n        this.orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n        if (typeof this.xAxisTickCount !== 'undefined') {\n            this.tickArguments = [this.xAxisTickCount];\n        }\n    }\n    emitTicksHeight({ height }) {\n        const newLabelOffset = height + 25 + 5;\n        if (newLabelOffset !== this.labelOffset) {\n            this.labelOffset = newLabelOffset;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ height });\n            }, 0);\n        }\n    }\n}\nXAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nXAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: { xScale: \"xScale\", dims: \"dims\", trimTicks: \"trimTicks\", rotateTicks: \"rotateTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", showLabel: \"showLabel\", labelText: \"labelText\", ticks: \"ticks\", xAxisTickCount: \"xAxisTickCount\", xOrient: \"xOrient\", xAxisOffset: \"xAxisOffset\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksComponent\", first: true, predicate: XAxisTicksComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: XAxisTicksComponent, selector: \"g[ngx-charts-x-axis-ticks]\", inputs: [\"scale\", \"orient\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"gridLineHeight\", \"width\", \"rotateTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-x-axis]',\n                    template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { xScale: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], rotateTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], xAxisTickCount: [{\n                type: Input\n            }], xOrient: [{\n                type: Input\n            }], xAxisOffset: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksComponent: [{\n                type: ViewChild,\n                args: [XAxisTicksComponent]\n            }] } });\n\n/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param x, y, w, h, r, tl, tr, bl, br\n */\nfunction roundedRect(x, y, w, h, r, [tl, tr, bl, br]) {\n    let retval = '';\n    w = Math.floor(w);\n    h = Math.floor(h);\n    w = w === 0 ? 1 : w;\n    h = h === 0 ? 1 : h;\n    retval = `M${[x + r, y]}`;\n    retval += `h${w - 2 * r}`;\n    if (tr) {\n        retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n    }\n    else {\n        retval += `h${r}v${r}`;\n    }\n    retval += `v${h - 2 * r}`;\n    if (br) {\n        retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n    }\n    else {\n        retval += `v${r}h${-r}`;\n    }\n    retval += `h${2 * r - w}`;\n    if (bl) {\n        retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n    }\n    else {\n        retval += `h${-r}v${-r}`;\n    }\n    retval += `v${2 * r - h}`;\n    if (tl) {\n        retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n    }\n    else {\n        retval += `v${-r}h${r}`;\n    }\n    retval += `z`;\n    return retval;\n}\n\nclass YAxisTicksComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.showRefLabels = false;\n        this.showRefLines = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.innerTickSize = 6;\n        this.tickPadding = 3;\n        this.verticalSpacing = 20;\n        this.textAnchor = TextAnchor.Middle;\n        this.width = 0;\n        this.outerTickSize = 6;\n        this.rotateLabels = false;\n        this.referenceLineLength = 0;\n        this.Orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n        if (!isPlatformBrowser(this.platformId)) {\n            // for SSR, use approximate value instead of measured\n            this.width = this.getApproximateAxisWidth();\n            this.dimensionsChanged.emit({ width: this.width });\n            return;\n        }\n        const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n        if (width !== this.width) {\n            this.width = width;\n            this.dimensionsChanged.emit({ width });\n            setTimeout(() => this.updateDims());\n        }\n    }\n    update() {\n        const scale = this.scale;\n        const sign = this.orient === Orientation.Top || this.orient === Orientation.Right ? -1 : 1;\n        this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            // eslint-disable-next-line prefer-spread\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        this.adjustedScale = scale.bandwidth\n            ? function (d) {\n                return scale(d) + scale.bandwidth() * 0.5;\n            }\n            : scale;\n        if (this.showRefLines && this.referenceLines) {\n            this.setReferencelines();\n        }\n        switch (this.orient) {\n            case Orientation.Top:\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = TextAnchor.Middle;\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case Orientation.Bottom:\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = TextAnchor.Middle;\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case Orientation.Left:\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = TextAnchor.End;\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            case Orientation.Right:\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = TextAnchor.Start;\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            default:\n        }\n        setTimeout(() => this.updateDims());\n    }\n    setReferencelines() {\n        this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n        this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n        this.referenceLineLength = this.referenceLines.length;\n        this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [\n            false,\n            false,\n            false,\n            false\n        ]);\n    }\n    getTicks() {\n        let ticks;\n        const maxTicks = this.getMaxTicks(20);\n        const maxScaleTicks = this.getMaxTicks(50);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    }\n    getMaxTicks(tickHeight) {\n        return Math.floor(this.height / tickHeight);\n    }\n    tickTransform(tick) {\n        return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n    }\n    gridLineTransform() {\n        return `translate(5,0)`;\n    }\n    tickTrim(label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n    getApproximateAxisWidth() {\n        const maxChars = Math.max(...this.ticks.map(t => this.tickTrim(this.tickFormat(t)).length));\n        const charWidth = 7;\n        return maxChars * charWidth;\n    }\n}\nYAxisTicksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisTicksComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nYAxisTicksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: YAxisTicksComponent, selector: \"g[ngx-charts-y-axis-ticks]\", inputs: { scale: \"scale\", orient: \"orient\", tickArguments: \"tickArguments\", tickValues: \"tickValues\", tickStroke: \"tickStroke\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", gridLineWidth: \"gridLineWidth\", height: \"height\", referenceLines: \"referenceLines\", showRefLabels: \"showRefLabels\", showRefLines: \"showRefLines\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksElement\", first: true, predicate: [\"ticksel\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.dy]=\"dy\"\n          [attr.x]=\"x1\"\n          [attr.y]=\"y1\"\n          [attr.text-anchor]=\"textAnchor\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisTicksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-y-axis-ticks]',\n                    template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.dy]=\"dy\"\n          [attr.x]=\"x1\"\n          [attr.y]=\"y1\"\n          [attr.text-anchor]=\"textAnchor\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { scale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }], tickArguments: [{\n                type: Input\n            }], tickValues: [{\n                type: Input\n            }], tickStroke: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], gridLineWidth: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksElement: [{\n                type: ViewChild,\n                args: ['ticksel']\n            }] } });\n\nclass YAxisComponent {\n    constructor() {\n        this.showGridLines = false;\n        this.yOrient = Orientation.Left;\n        this.yAxisOffset = 0;\n        this.dimensionsChanged = new EventEmitter();\n        this.yAxisClassName = 'y axis';\n        this.labelOffset = 15;\n        this.fill = 'none';\n        this.stroke = '#CCC';\n        this.tickStroke = '#CCC';\n        this.strokeWidth = 1;\n        this.padding = 5;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.offset = -(this.yAxisOffset + this.padding);\n        if (this.yOrient === Orientation.Right) {\n            this.labelOffset = 65;\n            this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n        }\n        else {\n            this.transform = `translate(${this.offset} , 0)`;\n        }\n        if (this.yAxisTickCount !== undefined) {\n            this.tickArguments = [this.yAxisTickCount];\n        }\n    }\n    emitTicksWidth({ width }) {\n        if (width !== this.labelOffset && this.yOrient === Orientation.Right) {\n            this.labelOffset = width + this.labelOffset;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ width });\n            }, 0);\n        }\n        else if (width !== this.labelOffset) {\n            this.labelOffset = width;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ width });\n            }, 0);\n        }\n    }\n}\nYAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nYAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: { yScale: \"yScale\", dims: \"dims\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", ticks: \"ticks\", showGridLines: \"showGridLines\", showLabel: \"showLabel\", labelText: \"labelText\", yAxisTickCount: \"yAxisTickCount\", yOrient: \"yOrient\", referenceLines: \"referenceLines\", showRefLines: \"showRefLines\", showRefLabels: \"showRefLabels\", yAxisOffset: \"yAxisOffset\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksComponent\", first: true, predicate: YAxisTicksComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: YAxisTicksComponent, selector: \"g[ngx-charts-y-axis-ticks]\", inputs: [\"scale\", \"orient\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"gridLineWidth\", \"height\", \"referenceLines\", \"showRefLabels\", \"showRefLines\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-y-axis]',\n                    template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { yScale: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], yAxisTickCount: [{\n                type: Input\n            }], yOrient: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], yAxisOffset: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksComponent: [{\n                type: ViewChild,\n                args: [YAxisTicksComponent]\n            }] } });\n\nclass AxesModule {\n}\nAxesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAxesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent], imports: [CommonModule], exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent] });\nAxesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n                    exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n                }]\n        }] });\n\nvar StyleTypes;\n(function (StyleTypes) {\n    StyleTypes[\"popover\"] = \"popover\";\n    StyleTypes[\"tooltip\"] = \"tooltip\";\n})(StyleTypes || (StyleTypes = {}));\n\nvar ShowTypes;\n(function (ShowTypes) {\n    ShowTypes[ShowTypes[\"all\"] = 'all'] = \"all\";\n    ShowTypes[ShowTypes[\"focus\"] = 'focus'] = \"focus\";\n    ShowTypes[ShowTypes[\"mouseover\"] = 'mouseover'] = \"mouseover\";\n})(ShowTypes || (ShowTypes = {}));\n\nclass TooltipDirective {\n    constructor(tooltipService, viewContainerRef, renderer) {\n        this.tooltipService = tooltipService;\n        this.viewContainerRef = viewContainerRef;\n        this.renderer = renderer;\n        this.tooltipCssClass = '';\n        this.tooltipAppendToBody = true;\n        this.tooltipSpacing = 10;\n        this.tooltipDisabled = false;\n        this.tooltipShowCaret = true;\n        this.tooltipPlacement = PlacementTypes.Top;\n        this.tooltipAlignment = PlacementTypes.Center;\n        this.tooltipType = StyleTypes.popover;\n        this.tooltipCloseOnClickOutside = true;\n        this.tooltipCloseOnMouseLeave = true;\n        this.tooltipHideTimeout = 300;\n        this.tooltipShowTimeout = 100;\n        this.tooltipShowEvent = ShowTypes.all;\n        this.tooltipImmediateExit = false;\n        this.show = new EventEmitter();\n        this.hide = new EventEmitter();\n    }\n    get listensForFocus() {\n        return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\n    }\n    get listensForHover() {\n        return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\n    }\n    ngOnDestroy() {\n        this.hideTooltip(true);\n    }\n    onFocus() {\n        if (this.listensForFocus) {\n            this.showTooltip();\n        }\n    }\n    onBlur() {\n        if (this.listensForFocus) {\n            this.hideTooltip(true);\n        }\n    }\n    onMouseEnter() {\n        if (this.listensForHover) {\n            this.showTooltip();\n        }\n    }\n    onMouseLeave(target) {\n        if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n            clearTimeout(this.timeout);\n            if (this.component) {\n                const contentDom = this.component.instance.element.nativeElement;\n                const contains = contentDom.contains(target);\n                if (contains)\n                    return;\n            }\n            this.hideTooltip(this.tooltipImmediateExit);\n        }\n    }\n    onMouseClick() {\n        if (this.listensForHover) {\n            this.hideTooltip(true);\n        }\n    }\n    showTooltip(immediate) {\n        if (this.component || this.tooltipDisabled)\n            return;\n        const time = immediate\n            ? 0\n            : this.tooltipShowTimeout + (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 400 : 0);\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.tooltipService.destroyAll();\n            const options = this.createBoundOptions();\n            this.component = this.tooltipService.create(options);\n            // add a tiny timeout to avoid event re-triggers\n            setTimeout(() => {\n                if (this.component) {\n                    this.addHideListeners(this.component.instance.element.nativeElement);\n                }\n            }, 10);\n            this.show.emit(true);\n        }, time);\n    }\n    addHideListeners(tooltip) {\n        // on mouse enter, cancel the hide triggered by the leave\n        this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n            clearTimeout(this.timeout);\n        });\n        // content mouse leave listener\n        if (this.tooltipCloseOnMouseLeave) {\n            this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n                this.hideTooltip(this.tooltipImmediateExit);\n            });\n        }\n        // content close on click outside\n        if (this.tooltipCloseOnClickOutside) {\n            this.documentClickEvent = this.renderer.listen('window', 'click', event => {\n                const contains = tooltip.contains(event.target);\n                if (!contains)\n                    this.hideTooltip();\n            });\n        }\n    }\n    hideTooltip(immediate = false) {\n        if (!this.component)\n            return;\n        const destroyFn = () => {\n            // remove events\n            if (this.mouseLeaveContentEvent)\n                this.mouseLeaveContentEvent();\n            if (this.mouseEnterContentEvent)\n                this.mouseEnterContentEvent();\n            if (this.documentClickEvent)\n                this.documentClickEvent();\n            // emit events\n            this.hide.emit(true);\n            // destroy component\n            this.tooltipService.destroy(this.component);\n            this.component = undefined;\n        };\n        clearTimeout(this.timeout);\n        if (!immediate) {\n            this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n        }\n        else {\n            destroyFn();\n        }\n    }\n    createBoundOptions() {\n        return {\n            title: this.tooltipTitle,\n            template: this.tooltipTemplate,\n            host: this.viewContainerRef.element,\n            placement: this.tooltipPlacement,\n            alignment: this.tooltipAlignment,\n            type: this.tooltipType,\n            showCaret: this.tooltipShowCaret,\n            cssClass: this.tooltipCssClass,\n            spacing: this.tooltipSpacing,\n            context: this.tooltipContext\n        };\n    }\n}\nTooltipDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipDirective, deps: [{ token: TooltipService }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nTooltipDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: { tooltipCssClass: \"tooltipCssClass\", tooltipTitle: \"tooltipTitle\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipSpacing: \"tooltipSpacing\", tooltipDisabled: \"tooltipDisabled\", tooltipShowCaret: \"tooltipShowCaret\", tooltipPlacement: \"tooltipPlacement\", tooltipAlignment: \"tooltipAlignment\", tooltipType: \"tooltipType\", tooltipCloseOnClickOutside: \"tooltipCloseOnClickOutside\", tooltipCloseOnMouseLeave: \"tooltipCloseOnMouseLeave\", tooltipHideTimeout: \"tooltipHideTimeout\", tooltipShowTimeout: \"tooltipShowTimeout\", tooltipTemplate: \"tooltipTemplate\", tooltipShowEvent: \"tooltipShowEvent\", tooltipContext: \"tooltipContext\", tooltipImmediateExit: \"tooltipImmediateExit\" }, outputs: { show: \"show\", hide: \"hide\" }, host: { listeners: { \"focusin\": \"onFocus()\", \"blur\": \"onBlur()\", \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave($event.target)\", \"click\": \"onMouseClick()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngx-tooltip]' }]\n        }], ctorParameters: function () { return [{ type: TooltipService }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }]; }, propDecorators: { tooltipCssClass: [{\n                type: Input\n            }], tooltipTitle: [{\n                type: Input\n            }], tooltipAppendToBody: [{\n                type: Input\n            }], tooltipSpacing: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipShowCaret: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipAlignment: [{\n                type: Input\n            }], tooltipType: [{\n                type: Input\n            }], tooltipCloseOnClickOutside: [{\n                type: Input\n            }], tooltipCloseOnMouseLeave: [{\n                type: Input\n            }], tooltipHideTimeout: [{\n                type: Input\n            }], tooltipShowTimeout: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], tooltipShowEvent: [{\n                type: Input\n            }], tooltipContext: [{\n                type: Input\n            }], tooltipImmediateExit: [{\n                type: Input\n            }], show: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }], onFocus: [{\n                type: HostListener,\n                args: ['focusin']\n            }], onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave', ['$event.target']]\n            }], onMouseClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nclass TooltipModule {\n}\nTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, declarations: [TooltipContentComponent, TooltipDirective], imports: [CommonModule], exports: [TooltipContentComponent, TooltipDirective] });\nTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, providers: [InjectionService, TooltipService], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [TooltipContentComponent, TooltipDirective],\n                    providers: [InjectionService, TooltipService],\n                    exports: [TooltipContentComponent, TooltipDirective],\n                    imports: [CommonModule],\n                    entryComponents: [TooltipContentComponent]\n                }]\n        }] });\n\nconst cache = {};\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nfunction id() {\n    let newId = ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n    // append a 'a' because neo gets mad\n    newId = `a${newId}`;\n    // ensure not already used\n    if (!cache[newId]) {\n        cache[newId] = true;\n        return newId;\n    }\n    return id();\n}\n\nvar BarOrientation;\n(function (BarOrientation) {\n    BarOrientation[\"Vertical\"] = \"vertical\";\n    BarOrientation[\"Horizontal\"] = \"horizontal\";\n})(BarOrientation || (BarOrientation = {}));\n\nclass SvgLinearGradientComponent {\n    constructor() {\n        this.orientation = BarOrientation.Vertical;\n    }\n    ngOnChanges(changes) {\n        this.x1 = '0%';\n        this.x2 = '0%';\n        this.y1 = '0%';\n        this.y2 = '0%';\n        if (this.orientation === BarOrientation.Horizontal) {\n            this.x2 = '100%';\n        }\n        else if (this.orientation === BarOrientation.Vertical) {\n            this.y1 = '100%';\n        }\n    }\n}\nSvgLinearGradientComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgLinearGradientComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSvgLinearGradientComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: { orientation: \"orientation\", name: \"name\", stops: \"stops\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgLinearGradientComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-svg-linear-gradient]',\n                    template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { orientation: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }] } });\n\nclass CircleComponent {\n    constructor() {\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    ngOnChanges(changes) {\n        this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\n        this.classNames += 'circle';\n    }\n}\nCircleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCircleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: { cx: \"cx\", cy: \"cy\", r: \"r\", fill: \"fill\", stroke: \"stroke\", data: \"data\", classNames: \"classNames\", circleOpacity: \"circleOpacity\", pointerEvents: \"pointerEvents\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"click\": \"onClick()\", \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-circle]',\n                    template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { cx: [{\n                type: Input\n            }], cy: [{\n                type: Input\n            }], r: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], stroke: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], classNames: [{\n                type: Input\n            }], circleOpacity: [{\n                type: Input\n            }], pointerEvents: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nvar SeriesType;\n(function (SeriesType) {\n    SeriesType[\"Standard\"] = \"standard\";\n    SeriesType[\"Stacked\"] = \"stacked\";\n})(SeriesType || (SeriesType = {}));\nclass CircleSeriesComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.type = SeriesType.Standard;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.barVisible = false;\n        this.barOrientation = BarOrientation;\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges() {\n        this.update();\n    }\n    update() {\n        this.circle = this.getActiveCircle();\n    }\n    getActiveCircle() {\n        const indexActiveDataPoint = this.data.series.findIndex(d => {\n            const label = d.name;\n            return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n        });\n        if (indexActiveDataPoint === -1) {\n            // No valid point is 'active/hovered over' at this moment.\n            return undefined;\n        }\n        return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n    }\n    mapDataPointToCircle(d, i) {\n        const seriesName = this.data.name;\n        const value = d.value;\n        const label = d.name;\n        const tooltipLabel = formatLabel(label);\n        let cx;\n        if (this.scaleType === ScaleType.Time) {\n            cx = this.xScale(label);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            cx = this.xScale(Number(label));\n        }\n        else {\n            cx = this.xScale(label);\n        }\n        const cy = this.yScale(this.type === SeriesType.Standard ? value : d.d1);\n        const radius = 5;\n        const height = this.yScale.range()[0] - cy;\n        const opacity = 1;\n        let color;\n        if (this.colors.scaleType === ScaleType.Linear) {\n            if (this.type === SeriesType.Standard) {\n                color = this.colors.getColor(value);\n            }\n            else {\n                color = this.colors.getColor(d.d1);\n            }\n        }\n        else {\n            color = this.colors.getColor(seriesName);\n        }\n        const data = Object.assign({}, d, {\n            series: seriesName,\n            value,\n            name: label\n        });\n        return {\n            classNames: [`circle-data-${i}`],\n            value,\n            label,\n            data,\n            cx,\n            cy,\n            radius,\n            height,\n            tooltipLabel,\n            color,\n            opacity,\n            seriesName,\n            gradientStops: this.getGradientStops(color),\n            min: d.min,\n            max: d.max\n        };\n    }\n    getTooltipText({ tooltipLabel, value, seriesName, min, max }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} • ${escapeLabel(tooltipLabel)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n    }\n    getTooltipMinMaxText(min, max) {\n        if (min !== undefined || max !== undefined) {\n            let result = ' (';\n            if (min !== undefined) {\n                if (max === undefined) {\n                    result += '≥';\n                }\n                result += min.toLocaleString();\n                if (max !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (max !== undefined) {\n                result += '≤';\n            }\n            if (max !== undefined) {\n                result += max.toLocaleString();\n            }\n            result += ')';\n            return result;\n        }\n        else {\n            return '';\n        }\n    }\n    getGradientStops(color) {\n        return [\n            {\n                offset: 0,\n                color,\n                opacity: 0.2\n            },\n            {\n                offset: 100,\n                color,\n                opacity: 1\n            }\n        ];\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    activateCircle() {\n        this.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    }\n    deactivateCircle() {\n        this.barVisible = false;\n        this.circle.opacity = 0;\n        this.deactivate.emit({ name: this.data.name });\n    }\n}\nCircleSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleSeriesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nCircleSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: { data: \"data\", type: \"type\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", visibleValue: \"visibleValue\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    opacity: 0\n                }),\n                animate(250, style({ opacity: 1 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-circle-series]',\n                    template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    opacity: 0\n                                }),\n                                animate(250, style({ opacity: 1 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], visibleValue: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass GridPanelComponent {\n}\nGridPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGridPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GridPanelComponent, selector: \"g[ngx-charts-grid-panel]\", inputs: { width: \"width\", height: \"height\", x: \"x\", y: \"y\" }, ngImport: i0, template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-grid-panel]',\n                    template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }] } });\n\nvar ClassEnum;\n(function (ClassEnum) {\n    ClassEnum[\"Odd\"] = \"odd\";\n    ClassEnum[\"Even\"] = \"even\";\n})(ClassEnum || (ClassEnum = {}));\nclass GridPanelSeriesComponent {\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.gridPanels = this.getGridPanels();\n    }\n    getGridPanels() {\n        return this.data.map(d => {\n            let offset;\n            let width;\n            let height;\n            let x;\n            let y;\n            let className = ClassEnum.Odd;\n            if (this.orient === BarOrientation.Vertical) {\n                const position = this.xScale(d.name);\n                const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = ClassEnum.Even;\n                }\n                offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n                width = this.xScale.bandwidth() + offset;\n                height = this.dims.height;\n                x = this.xScale(d.name) - offset / 2;\n                y = 0;\n            }\n            else if (this.orient === BarOrientation.Horizontal) {\n                const position = this.yScale(d.name);\n                const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = ClassEnum.Even;\n                }\n                offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n                width = this.dims.width;\n                height = this.yScale.bandwidth() + offset;\n                x = 0;\n                y = this.yScale(d.name) - offset / 2;\n            }\n            return {\n                name: d.name,\n                class: className,\n                height,\n                width,\n                x,\n                y\n            };\n        });\n    }\n}\nGridPanelSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGridPanelSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: { data: \"data\", dims: \"dims\", xScale: \"xScale\", yScale: \"yScale\", orient: \"orient\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: GridPanelComponent, selector: \"g[ngx-charts-grid-panel]\", inputs: [\"width\", \"height\", \"x\", \"y\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-grid-panel-series]',\n                    template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }] } });\n\nclass SvgRadialGradientComponent {\n    constructor() {\n        this.endOpacity = 1;\n        this.cx = 0;\n        this.cy = 0;\n    }\n    get stops() {\n        return this.stopsInput || this.stopsDefault;\n    }\n    set stops(value) {\n        this.stopsInput = value;\n    }\n    ngOnChanges(changes) {\n        this.r = '30%';\n        if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\n            this.stopsDefault = [\n                {\n                    offset: 0,\n                    color: this.color,\n                    opacity: this.startOpacity\n                },\n                {\n                    offset: 100,\n                    color: this.color,\n                    opacity: this.endOpacity\n                }\n            ];\n        }\n    }\n}\nSvgRadialGradientComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgRadialGradientComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSvgRadialGradientComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: { color: \"color\", name: \"name\", startOpacity: \"startOpacity\", endOpacity: \"endOpacity\", cx: \"cx\", cy: \"cy\", stops: \"stops\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgRadialGradientComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-svg-radial-gradient]',\n                    template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], startOpacity: [{\n                type: Input\n            }], endOpacity: [{\n                type: Input\n            }], cx: [{\n                type: Input\n            }], cy: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }] } });\n\nclass AreaComponent {\n    constructor(element) {\n        this.opacity = 1;\n        this.startOpacity = 0.5;\n        this.endOpacity = 1;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.animationsLoaded = false;\n        this.hasGradient = false;\n        this.barOrientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n        this.update();\n        if (!this.animationsLoaded) {\n            this.loadAnimation();\n            this.animationsLoaded = true;\n        }\n    }\n    update() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n    }\n    loadAnimation() {\n        this.areaPath = this.startingPath;\n        setTimeout(this.updatePathEl.bind(this), 100);\n    }\n    updatePathEl() {\n        const node = select(this.element).select('.area');\n        if (this.animations) {\n            node.transition().duration(750).attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    }\n    getGradient() {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: this.endOpacity\n            }\n        ];\n    }\n}\nAreaComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nAreaComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: { data: \"data\", path: \"path\", startingPath: \"startingPath\", fill: \"fill\", opacity: \"opacity\", startOpacity: \"startOpacity\", endOpacity: \"endOpacity\", gradient: \"gradient\", stops: \"stops\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-area]',\n                    template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], path: [{\n                type: Input\n            }], startingPath: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], startOpacity: [{\n                type: Input\n            }], endOpacity: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\n// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n    return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n}\n/**\n * Counts from a number to the end incrementally.\n */\nfunction count(countFrom, countTo, countDecimals, countDuration, callback) {\n    const startVal = Number(countFrom);\n    const endVal = Number(countTo);\n    const countDown = startVal > endVal;\n    const decimals = Math.max(0, countDecimals);\n    const dec = Math.pow(10, decimals);\n    const duration = Number(countDuration) * 1000;\n    let startTime;\n    function runCount(timestamp) {\n        let frameVal;\n        const progress = timestamp - startTime;\n        if (countDown) {\n            frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n        }\n        else {\n            frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n        }\n        if (countDown) {\n            frameVal = frameVal < endVal ? endVal : frameVal;\n        }\n        else {\n            frameVal = frameVal > endVal ? endVal : frameVal;\n        }\n        frameVal = Math.round(frameVal * dec) / dec;\n        const tick = progress < duration;\n        callback({\n            value: frameVal,\n            progress,\n            timestamp,\n            finished: !tick\n        });\n        if (tick) {\n            return requestAnimationFrame(val => runCount(val));\n        }\n    }\n    return requestAnimationFrame(timestamp => {\n        startTime = timestamp;\n        return runCount(timestamp);\n    });\n}\n/**\n * Determine decimals places\n *\n * @export\n */\nfunction decimalChecker(countTo) {\n    const endVal = Number(countTo);\n    if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n        return 2;\n    }\n    return 0;\n}\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n */\nclass CountUpDirective {\n    constructor(cd, element) {\n        this.cd = cd;\n        this.countDuration = 1;\n        this.countPrefix = '';\n        this.countSuffix = '';\n        this.countChange = new EventEmitter();\n        this.countFinish = new EventEmitter();\n        this.value = '';\n        this._countDecimals = 0;\n        this._countTo = 0;\n        this._countFrom = 0;\n        this.nativeElement = element.nativeElement;\n    }\n    set countDecimals(val) {\n        this._countDecimals = val;\n    }\n    get countDecimals() {\n        if (this._countDecimals)\n            return this._countDecimals;\n        return decimalChecker(this.countTo);\n    }\n    set countTo(val) {\n        this._countTo = parseFloat(val);\n        this.start();\n    }\n    get countTo() {\n        return this._countTo;\n    }\n    set countFrom(val) {\n        this._countFrom = parseFloat(val);\n        this.start();\n    }\n    get countFrom() {\n        return this._countFrom;\n    }\n    ngOnDestroy() {\n        cancelAnimationFrame(this.animationReq);\n    }\n    start() {\n        cancelAnimationFrame(this.animationReq);\n        const valueFormatting = this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n        const callback = ({ value, progress, finished }) => {\n            this.value = valueFormatting(value);\n            this.cd.markForCheck();\n            if (!finished)\n                this.countChange.emit({ value: this.value, progress });\n            if (finished)\n                this.countFinish.emit({ value: this.value, progress });\n        };\n        this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n    }\n}\nCountUpDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CountUpDirective, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nCountUpDirective.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: { countDuration: \"countDuration\", countPrefix: \"countPrefix\", countSuffix: \"countSuffix\", valueFormatting: \"valueFormatting\", countDecimals: \"countDecimals\", countTo: \"countTo\", countFrom: \"countFrom\" }, outputs: { countChange: \"countChange\", countFinish: \"countFinish\" }, ngImport: i0, template: ` {{ value }} `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CountUpDirective, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[ngx-charts-count-up]',\n                    template: ` {{ value }} `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { countDuration: [{\n                type: Input\n            }], countPrefix: [{\n                type: Input\n            }], countSuffix: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], countDecimals: [{\n                type: Input\n            }], countTo: [{\n                type: Input\n            }], countFrom: [{\n                type: Input\n            }], countChange: [{\n                type: Output\n            }], countFinish: [{\n                type: Output\n            }] } });\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root;\nif (typeof window !== 'undefined') {\n    root = window;\n}\nelse if (typeof global !== 'undefined') {\n    root = global;\n}\n// tslint:disable-next-line:variable-name\nconst MouseEvent = root.MouseEvent;\nfunction createMouseEvent(name, bubbles = false, cancelable = true) {\n    // Calling new of an event does not work correctly on IE. The following is a tested workaround\n    // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n    if (typeof MouseEvent === 'function') {\n        // Sane browsers\n        return new MouseEvent(name, { bubbles, cancelable });\n    }\n    else {\n        // IE\n        const event = document.createEvent('MouseEvent');\n        event.initEvent(name, bubbles, cancelable);\n        return event;\n    }\n}\n\nclass TooltipArea {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.anchorOpacity = 0;\n        this.anchorPos = -1;\n        this.anchorValues = [];\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.showPercentage = false;\n        this.tooltipDisabled = false;\n        this.hover = new EventEmitter();\n    }\n    getValues(xVal) {\n        const results = [];\n        for (const group of this.results) {\n            const item = group.series.find(d => d.name.toString() === xVal.toString());\n            let groupName = group.name;\n            if (groupName instanceof Date) {\n                groupName = groupName.toLocaleDateString();\n            }\n            if (item) {\n                const label = item.name;\n                let val = item.value;\n                if (this.showPercentage) {\n                    val = (item.d1 - item.d0).toFixed(2) + '%';\n                }\n                let color;\n                if (this.colors.scaleType === ScaleType.Linear) {\n                    let v = val;\n                    if (item.d1) {\n                        v = item.d1;\n                    }\n                    color = this.colors.getColor(v);\n                }\n                else {\n                    color = this.colors.getColor(group.name);\n                }\n                const data = Object.assign({}, item, {\n                    value: val,\n                    name: label,\n                    series: groupName,\n                    min: item.min,\n                    max: item.max,\n                    color\n                });\n                results.push(data);\n            }\n        }\n        return results;\n    }\n    mouseMove(event) {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const xPos = event.pageX - event.target.getBoundingClientRect().left;\n        const closestIndex = this.findClosestPointIndex(xPos);\n        const closestPoint = this.xSet[closestIndex];\n        this.anchorPos = this.xScale(closestPoint);\n        this.anchorPos = Math.max(0, this.anchorPos);\n        this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n        this.anchorValues = this.getValues(closestPoint);\n        if (this.anchorPos !== this.lastAnchorPos) {\n            const ev = createMouseEvent('mouseleave');\n            this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n            this.anchorOpacity = 0.7;\n            this.hover.emit({\n                value: closestPoint\n            });\n            this.showTooltip();\n            this.lastAnchorPos = this.anchorPos;\n        }\n    }\n    findClosestPointIndex(xPos) {\n        let minIndex = 0;\n        let maxIndex = this.xSet.length - 1;\n        let minDiff = Number.MAX_VALUE;\n        let closestIndex = 0;\n        while (minIndex <= maxIndex) {\n            const currentIndex = ((minIndex + maxIndex) / 2) | 0;\n            const currentElement = this.xScale(this.xSet[currentIndex]);\n            const curDiff = Math.abs(currentElement - xPos);\n            if (curDiff < minDiff) {\n                minDiff = curDiff;\n                closestIndex = currentIndex;\n            }\n            if (currentElement < xPos) {\n                minIndex = currentIndex + 1;\n            }\n            else if (currentElement > xPos) {\n                maxIndex = currentIndex - 1;\n            }\n            else {\n                minDiff = 0;\n                closestIndex = currentIndex;\n                break;\n            }\n        }\n        return closestIndex;\n    }\n    showTooltip() {\n        const event = createMouseEvent('mouseenter');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    }\n    hideTooltip() {\n        const event = createMouseEvent('mouseleave');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event);\n        this.anchorOpacity = 0;\n        this.lastAnchorPos = -1;\n    }\n    getToolTipText(tooltipItem) {\n        let result = '';\n        if (tooltipItem.series !== undefined) {\n            result += tooltipItem.series;\n        }\n        else {\n            result += '???';\n        }\n        result += ': ';\n        if (tooltipItem.value !== undefined) {\n            result += tooltipItem.value.toLocaleString();\n        }\n        if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n            result += ' (';\n            if (tooltipItem.min !== undefined) {\n                if (tooltipItem.max === undefined) {\n                    result += '≥';\n                }\n                result += tooltipItem.min.toLocaleString();\n                if (tooltipItem.max !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (tooltipItem.max !== undefined) {\n                result += '≤';\n            }\n            if (tooltipItem.max !== undefined) {\n                result += tooltipItem.max.toLocaleString();\n            }\n            result += ')';\n        }\n        return result;\n    }\n}\nTooltipArea.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipArea, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTooltipArea.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: { dims: \"dims\", xSet: \"xSet\", xScale: \"xScale\", yScale: \"yScale\", results: \"results\", colors: \"colors\", showPercentage: \"showPercentage\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { hover: \"hover\" }, viewQueries: [{ propertyName: \"tooltipAnchor\", first: true, predicate: [\"tooltipAnchor\"], descendants: true }], ngImport: i0, template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition('inactive => active', [\n                style({\n                    opacity: 0\n                }),\n                animate(250, style({ opacity: 0.7 }))\n            ]),\n            transition('active => inactive', [\n                style({\n                    opacity: 0.7\n                }),\n                animate(250, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipArea, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tooltip-area]',\n                    template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition('inactive => active', [\n                                style({\n                                    opacity: 0\n                                }),\n                                animate(250, style({ opacity: 0.7 }))\n                            ]),\n                            transition('active => inactive', [\n                                style({\n                                    opacity: 0.7\n                                }),\n                                animate(250, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { dims: [{\n                type: Input\n            }], xSet: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], showPercentage: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], hover: [{\n                type: Output\n            }], tooltipAnchor: [{\n                type: ViewChild,\n                args: ['tooltipAnchor', { static: false }]\n            }] } });\n\nclass Timeline {\n    constructor(element, cd) {\n        this.cd = cd;\n        this.height = 50;\n        this.select = new EventEmitter();\n        this.onDomainChange = new EventEmitter();\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n        if (!this.initialized) {\n            this.addBrush();\n            this.initialized = true;\n        }\n    }\n    update() {\n        this.dims = this.getDims();\n        this.height = this.dims.height;\n        const offsetY = this.view[1] - this.height;\n        this.xDomain = this.getXDomain();\n        this.xScale = this.getXScale();\n        if (this.brush) {\n            this.updateBrush();\n        }\n        this.transform = `translate(0 , ${offsetY})`;\n        this.filterId = 'filter' + id().toString();\n        this.filter = `url(#${this.filterId})`;\n        this.cd.markForCheck();\n    }\n    getXDomain() {\n        let values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        let domain = [];\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n        }\n        else {\n            domain = values;\n        }\n        return domain;\n    }\n    getXScale() {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime().range([0, this.dims.width]).domain(this.xDomain);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().range([0, this.dims.width]).padding(0.1).domain(this.xDomain);\n        }\n        return scale;\n    }\n    addBrush() {\n        if (this.brush)\n            return;\n        const height = this.height;\n        const width = this.view[0];\n        this.brush = brushX()\n            .extent([\n            [0, 0],\n            [width, height]\n        ])\n            .on('brush end', ({ selection }) => {\n            const newSelection = selection || this.xScale.range();\n            const newDomain = newSelection.map(this.xScale.invert);\n            this.onDomainChange.emit(newDomain);\n            this.cd.markForCheck();\n        });\n        select(this.element).select('.brush').call(this.brush);\n    }\n    updateBrush() {\n        if (!this.brush)\n            return;\n        const height = this.height;\n        const width = this.view[0];\n        this.brush.extent([\n            [0, 0],\n            [width, height]\n        ]);\n        select(this.element).select('.brush').call(this.brush);\n        // clear hardcoded properties so they can be defined by CSS\n        select(this.element)\n            .select('.selection')\n            .attr('fill', undefined)\n            .attr('stroke', undefined)\n            .attr('fill-opacity', undefined);\n        this.cd.markForCheck();\n    }\n    getDims() {\n        const width = this.view[0];\n        const dims = {\n            width,\n            height: this.height\n        };\n        return dims;\n    }\n}\nTimeline.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Timeline, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTimeline.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: { view: \"view\", results: \"results\", scheme: \"scheme\", customColors: \"customColors\", legend: \"legend\", autoScale: \"autoScale\", scaleType: \"scaleType\", height: \"height\" }, outputs: { select: \"select\", onDomainChange: \"onDomainChange\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `, isInline: true, styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Timeline, decorators: [{\n            type: Component,\n            args: [{ selector: 'g[ngx-charts-timeline]', template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { view: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], scheme: [{\n                type: Input\n            }], customColors: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], onDomainChange: [{\n                type: Output\n            }] } });\n\nclass AdvancedLegendComponent {\n    constructor() {\n        this.label = 'Total';\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.legendItems = [];\n        this.labelFormatting = label => label;\n        this.percentageFormatting = percentage => percentage;\n        this.defaultValueFormatting = value => value.toLocaleString();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getTotal() {\n        return this.data.map(d => Number(d.value)).reduce((sum, d) => sum + d, 0);\n    }\n    update() {\n        this.total = this.getTotal();\n        this.roundedTotal = this.total;\n        this.legendItems = this.getLegendItems();\n    }\n    getLegendItems() {\n        return this.data.map(d => {\n            const label = formatLabel(d.name);\n            const value = d.value;\n            const color = this.colors.getColor(label);\n            const percentage = this.total > 0 ? (value / this.total) * 100 : 0;\n            const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n            return {\n                _value: value,\n                data: d,\n                value,\n                color,\n                label: formattedLabel,\n                displayLabel: trimLabel(formattedLabel, 20),\n                origialLabel: d.name,\n                percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n            };\n        });\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nAdvancedLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedLegendComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAdvancedLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AdvancedLegendComponent, selector: \"ngx-charts-advanced-legend\", inputs: { width: \"width\", data: \"data\", colors: \"colors\", label: \"label\", animations: \"animations\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", percentageFormatting: \"percentageFormatting\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"], components: [{ type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedLegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-advanced-legend', template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"] }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], percentageFormatting: [{\n                type: Input\n            }] } });\n\nconst COMPONENTS = [\n    AreaComponent,\n    BaseChartComponent,\n    CountUpDirective,\n    TooltipArea,\n    ChartComponent,\n    LegendComponent,\n    LegendEntryComponent,\n    ScaleLegendComponent,\n    CircleComponent,\n    CircleSeriesComponent,\n    GridPanelComponent,\n    GridPanelSeriesComponent,\n    SvgLinearGradientComponent,\n    SvgRadialGradientComponent,\n    Timeline,\n    AdvancedLegendComponent\n];\nclass ChartCommonModule {\n}\nChartCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nChartCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, declarations: [AreaComponent,\n        BaseChartComponent,\n        CountUpDirective,\n        TooltipArea,\n        ChartComponent,\n        LegendComponent,\n        LegendEntryComponent,\n        ScaleLegendComponent,\n        CircleComponent,\n        CircleSeriesComponent,\n        GridPanelComponent,\n        GridPanelSeriesComponent,\n        SvgLinearGradientComponent,\n        SvgRadialGradientComponent,\n        Timeline,\n        AdvancedLegendComponent, VisibilityObserver], imports: [CommonModule, AxesModule, TooltipModule], exports: [CommonModule, AxesModule, TooltipModule, AreaComponent,\n        BaseChartComponent,\n        CountUpDirective,\n        TooltipArea,\n        ChartComponent,\n        LegendComponent,\n        LegendEntryComponent,\n        ScaleLegendComponent,\n        CircleComponent,\n        CircleSeriesComponent,\n        GridPanelComponent,\n        GridPanelSeriesComponent,\n        SvgLinearGradientComponent,\n        SvgRadialGradientComponent,\n        Timeline,\n        AdvancedLegendComponent, VisibilityObserver] });\nChartCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, imports: [[CommonModule, AxesModule, TooltipModule], CommonModule, AxesModule, TooltipModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, AxesModule, TooltipModule],\n                    declarations: [...COMPONENTS, VisibilityObserver],\n                    exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS, VisibilityObserver]\n                }]\n        }] });\n\nfunction calculateViewDimensions({ width, height, margins, showXAxis = false, showYAxis = false, xAxisHeight = 0, yAxisWidth = 0, showXLabel = false, showYLabel = false, showLegend = false, legendType = ScaleType.Ordinal, legendPosition = LegendPosition.Right, columns = 12 }) {\n    let xOffset = margins[3];\n    let chartWidth = width;\n    let chartHeight = height - margins[0] - margins[2];\n    if (showLegend && legendPosition === LegendPosition.Right) {\n        if (legendType === ScaleType.Ordinal) {\n            columns -= 2;\n        }\n        else {\n            columns -= 1;\n        }\n    }\n    chartWidth = (chartWidth * columns) / 12;\n    chartWidth = chartWidth - margins[1] - margins[3];\n    if (showXAxis) {\n        chartHeight -= 5;\n        chartHeight -= xAxisHeight;\n        if (showXLabel) {\n            // text height + spacing between axis label and tick labels\n            const offset = 25 + 5;\n            chartHeight -= offset;\n        }\n    }\n    if (showYAxis) {\n        chartWidth -= 5;\n        chartWidth -= yAxisWidth;\n        xOffset += yAxisWidth;\n        xOffset += 10;\n        if (showYLabel) {\n            // text height + spacing between axis label and tick labels\n            const offset = 25 + 5;\n            chartWidth -= offset;\n            xOffset += offset;\n        }\n    }\n    chartWidth = Math.max(0, chartWidth);\n    chartHeight = Math.max(0, chartHeight);\n    return {\n        width: Math.floor(chartWidth),\n        height: Math.floor(chartHeight),\n        xOffset: Math.floor(xOffset)\n    };\n}\n\nconst colorSets = [\n    {\n        name: 'vivid',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#647c8a',\n            '#3f51b5',\n            '#2196f3',\n            '#00b862',\n            '#afdf0a',\n            '#a7b61a',\n            '#f3e562',\n            '#ff9800',\n            '#ff5722',\n            '#ff4514'\n        ]\n    },\n    {\n        name: 'natural',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#bf9d76',\n            '#e99450',\n            '#d89f59',\n            '#f2dfa7',\n            '#a5d7c6',\n            '#7794b1',\n            '#afafaf',\n            '#707160',\n            '#ba9383',\n            '#d9d5c3'\n        ]\n    },\n    {\n        name: 'cool',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#a8385d',\n            '#7aa3e5',\n            '#a27ea8',\n            '#aae3f5',\n            '#adcded',\n            '#a95963',\n            '#8796c0',\n            '#7ed3ed',\n            '#50abcc',\n            '#ad6886'\n        ]\n    },\n    {\n        name: 'fire',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\n    },\n    {\n        name: 'solar',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#fff8e1',\n            '#ffecb3',\n            '#ffe082',\n            '#ffd54f',\n            '#ffca28',\n            '#ffc107',\n            '#ffb300',\n            '#ffa000',\n            '#ff8f00',\n            '#ff6f00'\n        ]\n    },\n    {\n        name: 'air',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#e1f5fe',\n            '#b3e5fc',\n            '#81d4fa',\n            '#4fc3f7',\n            '#29b6f6',\n            '#03a9f4',\n            '#039be5',\n            '#0288d1',\n            '#0277bd',\n            '#01579b'\n        ]\n    },\n    {\n        name: 'aqua',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#e0f7fa',\n            '#b2ebf2',\n            '#80deea',\n            '#4dd0e1',\n            '#26c6da',\n            '#00bcd4',\n            '#00acc1',\n            '#0097a7',\n            '#00838f',\n            '#006064'\n        ]\n    },\n    {\n        name: 'flame',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#A10A28',\n            '#D3342D',\n            '#EF6D49',\n            '#FAAD67',\n            '#FDDE90',\n            '#DBED91',\n            '#A9D770',\n            '#6CBA67',\n            '#2C9653',\n            '#146738'\n        ]\n    },\n    {\n        name: 'ocean',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#1D68FB',\n            '#33C0FC',\n            '#4AFFFE',\n            '#AFFFFF',\n            '#FFFC63',\n            '#FDBD2D',\n            '#FC8A25',\n            '#FA4F1E',\n            '#FA141B',\n            '#BA38D1'\n        ]\n    },\n    {\n        name: 'forest',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#55C22D',\n            '#C1F33D',\n            '#3CC099',\n            '#AFFFFF',\n            '#8CFC9D',\n            '#76CFFA',\n            '#BA60FB',\n            '#EE6490',\n            '#C42A1C',\n            '#FC9F32'\n        ]\n    },\n    {\n        name: 'horizon',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#2597FB',\n            '#65EBFD',\n            '#99FDD0',\n            '#FCEE4B',\n            '#FEFCFA',\n            '#FDD6E3',\n            '#FCB1A8',\n            '#EF6F7B',\n            '#CB96E8',\n            '#EFDEE0'\n        ]\n    },\n    {\n        name: 'neons',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#FF3333',\n            '#FF33FF',\n            '#CC33FF',\n            '#0000FF',\n            '#33CCFF',\n            '#33FFFF',\n            '#33FF66',\n            '#CCFF33',\n            '#FFCC00',\n            '#FF6600'\n        ]\n    },\n    {\n        name: 'picnic',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#FAC51D',\n            '#66BD6D',\n            '#FAA026',\n            '#29BB9C',\n            '#E96B56',\n            '#55ACD2',\n            '#B7332F',\n            '#2C83C9',\n            '#9166B8',\n            '#92E7E8'\n        ]\n    },\n    {\n        name: 'night',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#2B1B5A',\n            '#501356',\n            '#183356',\n            '#28203F',\n            '#391B3C',\n            '#1E2B3C',\n            '#120634',\n            '#2D0432',\n            '#051932',\n            '#453080',\n            '#75267D',\n            '#2C507D',\n            '#4B3880',\n            '#752F7D',\n            '#35547D'\n        ]\n    },\n    {\n        name: 'nightLights',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#4e31a5',\n            '#9c25a7',\n            '#3065ab',\n            '#57468b',\n            '#904497',\n            '#46648b',\n            '#32118d',\n            '#a00fb3',\n            '#1052a2',\n            '#6e51bd',\n            '#b63cc3',\n            '#6c97cb',\n            '#8671c1',\n            '#b455be',\n            '#7496c3'\n        ]\n    }\n];\n\nclass ColorHelper {\n    constructor(scheme, type, domain, customColors) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(cs => {\n                return cs.name === scheme;\n            });\n        }\n        this.colorDomain = scheme.domain;\n        this.scaleType = type;\n        this.domain = domain;\n        this.customColors = customColors;\n        this.scale = this.generateColorScheme(scheme, type, this.domain);\n    }\n    generateColorScheme(scheme, type, domain) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(cs => {\n                return cs.name === scheme;\n            });\n        }\n        let colorScale;\n        switch (type) {\n            case ScaleType.Quantile:\n                colorScale = scaleQuantile()\n                    .range(scheme.domain)\n                    .domain(domain);\n                break;\n            case ScaleType.Ordinal:\n                colorScale = scaleOrdinal()\n                    .range(scheme.domain)\n                    .domain(domain);\n                break;\n            case ScaleType.Linear:\n                {\n                    const colorDomain = [...scheme.domain];\n                    if (colorDomain.length === 1) {\n                        colorDomain.push(colorDomain[0]);\n                        this.colorDomain = colorDomain;\n                    }\n                    const points = range(0, 1, 1.0 / colorDomain.length);\n                    colorScale = scaleLinear()\n                        .range(colorDomain)\n                        .domain(points);\n                }\n                break;\n            default:\n                break;\n        }\n        return colorScale;\n    }\n    getColor(value) {\n        if (value === undefined || value === null) {\n            throw new Error('Value can not be null');\n        }\n        if (this.scaleType === ScaleType.Linear) {\n            const valueScale = scaleLinear()\n                .domain(this.domain)\n                .range([0, 1]);\n            return this.scale(valueScale(value));\n        }\n        else {\n            if (typeof this.customColors === 'function') {\n                return this.customColors(value);\n            }\n            const formattedValue = value.toString();\n            let found; // todo type customColors\n            if (this.customColors && this.customColors.length > 0) {\n                found = this.customColors.find(mapping => {\n                    return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n                });\n            }\n            if (found) {\n                return found.value;\n            }\n            else {\n                return this.scale(value);\n            }\n        }\n    }\n    getLinearGradientStops(value, start) {\n        if (start === undefined) {\n            start = this.domain[0];\n        }\n        const valueScale = scaleLinear()\n            .domain(this.domain)\n            .range([0, 1]);\n        const colorValueScale = scaleBand().domain(this.colorDomain).range([0, 1]);\n        const endColor = this.getColor(value);\n        // generate the stops\n        const startVal = valueScale(start);\n        const startColor = this.getColor(start);\n        const endVal = valueScale(value);\n        let i = 1;\n        let currentVal = startVal;\n        const stops = [];\n        stops.push({\n            color: startColor,\n            offset: startVal,\n            originalOffset: startVal,\n            opacity: 1\n        });\n        while (currentVal < endVal && i < this.colorDomain.length) {\n            const color = this.colorDomain[i];\n            const offset = colorValueScale(color);\n            if (offset <= startVal) {\n                i++;\n                continue;\n            }\n            if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n                break;\n            }\n            stops.push({\n                color,\n                offset,\n                opacity: 1\n            });\n            currentVal = offset;\n            i++;\n        }\n        if (stops[stops.length - 1].offset < 100) {\n            stops.push({\n                color: endColor,\n                offset: endVal,\n                opacity: 1\n            });\n        }\n        if (endVal === startVal) {\n            stops[0].offset = 0;\n            stops[1].offset = 100;\n        }\n        else {\n            // normalize the offsets into percentages\n            if (stops[stops.length - 1].offset !== 100) {\n                for (const s of stops) {\n                    s.offset = ((s.offset - startVal) / (endVal - startVal)) * 100;\n                }\n            }\n        }\n        return stops;\n    }\n}\n\n/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n */\nfunction getUniqueXDomainValues(results) {\n    const valueSet = new Set();\n    for (const result of results) {\n        for (const d of result.series) {\n            valueSet.add(d.name);\n        }\n    }\n    return Array.from(valueSet);\n}\n/**\n * Get the scaleType of enumerable of values.\n * @returns  'time', 'linear' or 'ordinal'\n */\nfunction getScaleType(values, checkDateType = true) {\n    if (checkDateType) {\n        const allDates = values.every(value => value instanceof Date);\n        if (allDates) {\n            return ScaleType.Time;\n        }\n    }\n    const allNumbers = values.every(value => typeof value === 'number');\n    if (allNumbers) {\n        return ScaleType.Linear;\n    }\n    return ScaleType.Ordinal;\n}\nfunction getXDomainArray(values, xScaleMin, xScaleMax) {\n    const scaleType = getScaleType(values);\n    let xSet = [];\n    let domain = [];\n    if (scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n        const mappedValues = values.map(v => Number(v));\n        min = xScaleMin ? xScaleMin : Math.min(...mappedValues);\n        max = xScaleMax ? xScaleMax : Math.max(...mappedValues);\n    }\n    if (scaleType === ScaleType.Time) {\n        domain = [new Date(min), new Date(max)];\n        xSet = [...values].sort((a, b) => {\n            const aDate = a.getTime();\n            const bDate = b.getTime();\n            if (aDate > bDate)\n                return 1;\n            if (bDate > aDate)\n                return -1;\n            return 0;\n        });\n    }\n    else if (scaleType === ScaleType.Linear) {\n        domain = [min, max];\n        // Use compare function to sort numbers numerically\n        xSet = [...values].sort((a, b) => a - b);\n    }\n    else {\n        domain = values;\n        xSet = values;\n    }\n    return { domain, xSet, scaleType };\n}\n\nfunction sortLinear(data, property, direction = 'asc') {\n    return data.sort((a, b) => {\n        if (direction === 'asc') {\n            return a[property] - b[property];\n        }\n        else {\n            return b[property] - a[property];\n        }\n    });\n}\nfunction sortByDomain(data, property, direction = 'asc', domain) {\n    return data.sort((a, b) => {\n        const aVal = a[property];\n        const bVal = b[property];\n        const aIdx = domain.indexOf(aVal);\n        const bIdx = domain.indexOf(bVal);\n        if (direction === 'asc') {\n            return aIdx - bIdx;\n        }\n        else {\n            return bIdx - aIdx;\n        }\n    });\n}\nfunction sortByTime(data, property, direction = 'asc') {\n    return data.sort((a, b) => {\n        const aDate = a[property].getTime();\n        const bDate = b[property].getTime();\n        if (direction === 'asc') {\n            if (aDate > bDate)\n                return 1;\n            if (bDate > aDate)\n                return -1;\n            return 0;\n        }\n        else {\n            if (aDate > bDate)\n                return -1;\n            if (bDate > aDate)\n                return 1;\n            return 0;\n        }\n    });\n}\n\nclass AreaSeriesComponent {\n    constructor() {\n        this.baseValue = 'auto';\n        this.stacked = false;\n        this.normalized = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradient();\n        let currentArea;\n        let startingArea;\n        const xProperty = d => {\n            const label = d.name;\n            return this.xScale(label);\n        };\n        if (this.stacked || this.normalized) {\n            currentArea = area()\n                .x(xProperty)\n                .y0((d, i) => this.yScale(d.d0))\n                .y1((d, i) => this.yScale(d.d1));\n            startingArea = area()\n                .x(xProperty)\n                .y0(d => this.yScale.range()[0])\n                .y1(d => this.yScale.range()[0]);\n        }\n        else {\n            currentArea = area()\n                .x(xProperty)\n                .y0(() => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n                .y1(d => this.yScale(d.value));\n            startingArea = area()\n                .x(xProperty)\n                .y0(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n                .y1(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)));\n        }\n        currentArea.curve(this.curve);\n        startingArea.curve(this.curve);\n        this.opacity = 0.8;\n        let data = this.data.series;\n        if (this.scaleType === ScaleType.Linear) {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        this.path = currentArea(data);\n        this.startingPath = startingArea(data);\n    }\n    updateGradient() {\n        if (this.colors.scaleType === ScaleType.Linear) {\n            this.hasGradient = true;\n            if (this.stacked || this.normalized) {\n                const d0values = this.data.series.map(d => d.d0);\n                const d1values = this.data.series.map(d => d.d1);\n                const max = Math.max(...d1values);\n                const min = Math.min(...d0values);\n                this.gradientStops = this.colors.getLinearGradientStops(max, min);\n            }\n            else {\n                const values = this.data.series.map(d => d.value);\n                const max = Math.max(...values);\n                this.gradientStops = this.colors.getLinearGradientStops(max);\n            }\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n        }\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n}\nAreaSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAreaSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", baseValue: \"baseValue\", colors: \"colors\", scaleType: \"scaleType\", stacked: \"stacked\", normalized: \"normalized\", gradient: \"gradient\", curve: \"curve\", activeEntries: \"activeEntries\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `, isInline: true, components: [{ type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: [\"data\", \"path\", \"startingPath\", \"fill\", \"opacity\", \"startOpacity\", \"endOpacity\", \"gradient\", \"stops\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-area-series]',\n                    template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], baseValue: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], stacked: [{\n                type: Input\n            }], normalized: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass AreaChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = false;\n        this.yAxis = false;\n        this.baseValue = 'auto';\n        this.autoScale = false;\n        this.timeline = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const values = [...domain];\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        if (this.baseValue !== 'auto') {\n            values.push(this.baseValue);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getScaleType(values) {\n        let date = true;\n        let num = true;\n        for (const value of values) {\n            if (isDate(value)) {\n                date = false;\n            }\n            if (isNumber(value)) {\n                num = false;\n            }\n        }\n        if (date) {\n            return ScaleType.Time;\n        }\n        if (num) {\n            return ScaleType.Linear;\n        }\n        return ScaleType.Ordinal;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartComponent, selector: \"ngx-charts-area-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", baseValue: \"baseValue\", autoScale: \"autoScale\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], baseValue: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showXAxisLabel = false;\n        this.showYAxisLabel = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.yDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.seriesType = SeriesType;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let d0 = 0;\n            let total = 0;\n            for (const group of this.results) {\n                const d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    total += d.value;\n                }\n            }\n            for (const group of this.results) {\n                let d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n                if (total > 0) {\n                    d.d0 = (d.d0 * 100) / total;\n                    d.d1 = (d.d1 * 100) / total;\n                }\n                else {\n                    d.d0 = 0;\n                    d.d1 = 0;\n                }\n            }\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartNormalizedComponent, selector: \"ngx-charts-area-chart-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = false;\n        this.yAxis = false;\n        this.timeline = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.seriesType = SeriesType;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let d0 = 0;\n            for (const group of this.results) {\n                let d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n            }\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let sum = 0;\n            for (const group of this.results) {\n                const d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    sum += d.value;\n                }\n            }\n            domain.push(sum);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartStackedComponent, selector: \"ngx-charts-area-chart-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartModule {\n}\nAreaChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAreaChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent], imports: [ChartCommonModule], exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent] });\nAreaChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\n                    exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\n                }]\n        }] });\n\nclass BarComponent {\n    constructor(element) {\n        this.roundEdges = true;\n        this.gradient = false;\n        this.offset = 0;\n        this.isActive = false;\n        this.animations = true;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.hasGradient = false;\n        this.hideBar = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (changes.roundEdges) {\n            this.loadAnimation();\n        }\n        this.update();\n    }\n    update() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n        this.checkToHideBar();\n    }\n    loadAnimation() {\n        this.path = this.getStartingPath();\n        setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n        const node = select(this.element).select('.bar');\n        const path = this.getPath();\n        if (this.animations) {\n            node.transition().duration(500).attr('d', path);\n        }\n        else {\n            node.attr('d', path);\n        }\n    }\n    getGradient() {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.getStartOpacity()\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    getStartingPath() {\n        if (!this.animations) {\n            return this.getPath();\n        }\n        let radius = this.getRadius();\n        let path;\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        else {\n            if (this.orientation === BarOrientation.Vertical) {\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        return path;\n    }\n    getPath() {\n        let radius = this.getRadius();\n        let path;\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n        }\n        else {\n            path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n        }\n        return path;\n    }\n    getRadius() {\n        let radius = 0;\n        if (this.roundEdges && this.height > 5 && this.width > 5) {\n            radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n        }\n        return radius;\n    }\n    getStartOpacity() {\n        if (this.roundEdges) {\n            return 0.2;\n        }\n        else {\n            return 0.5;\n        }\n    }\n    get edges() {\n        let edges = [false, false, false, false];\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                if (this.data.value > 0) {\n                    edges = [true, true, false, false];\n                }\n                else {\n                    edges = [false, false, true, true];\n                }\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                if (this.data.value > 0) {\n                    edges = [false, true, false, true];\n                }\n                else {\n                    edges = [true, false, true, false];\n                }\n            }\n        }\n        return edges;\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n        this.hideBar =\n            this.noBarWhenZero &&\n                ((this.orientation === BarOrientation.Vertical && this.height === 0) ||\n                    (this.orientation === BarOrientation.Horizontal && this.width === 0));\n    }\n}\nBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: { fill: \"fill\", data: \"data\", width: \"width\", height: \"height\", x: \"x\", y: \"y\", orientation: \"orientation\", roundEdges: \"roundEdges\", gradient: \"gradient\", offset: \"offset\", isActive: \"isActive\", stops: \"stops\", animations: \"animations\", ariaLabel: \"ariaLabel\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-bar]',\n                    template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nvar BarChartType;\n(function (BarChartType) {\n    BarChartType[\"Standard\"] = \"standard\";\n    BarChartType[\"Normalized\"] = \"normalized\";\n    BarChartType[\"Stacked\"] = \"stacked\";\n})(BarChartType || (BarChartType = {}));\n\nvar D0Types;\n(function (D0Types) {\n    D0Types[\"positive\"] = \"positive\";\n    D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\n\nclass BarLabelComponent {\n    constructor(element) {\n        this.dimensionsChanged = new EventEmitter();\n        this.horizontalPadding = 2;\n        this.verticalPadding = 5;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getSize() {\n        const h = this.element.getBoundingClientRect().height;\n        const w = this.element.getBoundingClientRect().width;\n        return { height: h, width: w, negative: this.value < 0 };\n    }\n    ngAfterViewInit() {\n        this.dimensionsChanged.emit(this.getSize());\n    }\n    update() {\n        if (this.valueFormatting) {\n            this.formatedValue = this.valueFormatting(this.value);\n        }\n        else {\n            this.formatedValue = formatLabel(this.value);\n        }\n        if (this.orientation === 'horizontal') {\n            this.x = this.barX + this.barWidth;\n            // if the value is negative then it's on the left of the x0.\n            // we need to put the data label in front of the bar\n            if (this.value < 0) {\n                this.x = this.x - this.horizontalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.x = this.x + this.horizontalPadding;\n                this.textAnchor = 'start';\n            }\n            this.y = this.barY + this.barHeight / 2;\n        }\n        else {\n            // orientation must be \"vertical\"\n            this.x = this.barX + this.barWidth / 2;\n            this.y = this.barY + this.barHeight;\n            if (this.value < 0) {\n                this.y = this.y + this.verticalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.y = this.y - this.verticalPadding;\n                this.textAnchor = 'start';\n            }\n            this.transform = `rotate(-45, ${this.x} , ${this.y})`;\n        }\n    }\n}\nBarLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarLabelComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nBarLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: { value: \"value\", valueFormatting: \"valueFormatting\", barX: \"barX\", barY: \"barY\", barWidth: \"barWidth\", barHeight: \"barHeight\", orientation: \"orientation\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `, isInline: true, styles: [\".textDataLabel{font-size:11px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarLabelComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'g[ngx-charts-bar-label]', template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".textDataLabel{font-size:11px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { value: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], barX: [{\n                type: Input\n            }], barY: [{\n                type: Input\n            }], barWidth: [{\n                type: Input\n            }], barHeight: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }] } });\n\nclass SeriesHorizontal {\n    constructor() {\n        this.type = BarChartType.Standard;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelWidthChanged = new EventEmitter();\n        this.barsForDataLabels = [];\n        this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateTooltipSettings();\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0\n        };\n        let d0Type;\n        d0Type = D0Types.positive;\n        let total;\n        if (this.type === BarChartType.Normalized) {\n            total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n        }\n        const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n        this.bars = this.series.map(d => {\n            let value = d.value;\n            const label = this.getLabel(d);\n            const formattedLabel = formatLabel(label);\n            const roundEdges = this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const bar = {\n                value,\n                label,\n                roundEdges,\n                data: d,\n                formattedLabel\n            };\n            bar.height = this.yScale.bandwidth();\n            if (this.type === BarChartType.Standard) {\n                bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n                if (value < 0) {\n                    bar.x = this.xScale(value);\n                }\n                else {\n                    bar.x = this.xScale(xScaleMin);\n                }\n                bar.y = this.yScale(label);\n            }\n            else if (this.type === BarChartType.Stacked) {\n                const offset0 = d0[d0Type];\n                const offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.width = this.xScale(offset1) - this.xScale(offset0);\n                bar.x = this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (this.type === BarChartType.Normalized) {\n                let offset0 = d0[d0Type];\n                let offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.width = this.xScale(offset1) - this.xScale(offset0);\n                bar.x = this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (this.colors.scaleType === ScaleType.Ordinal) {\n                bar.color = this.colors.getColor(label);\n            }\n            else {\n                if (this.type === BarChartType.Standard) {\n                    bar.color = this.colors.getColor(value);\n                    bar.gradientStops = this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = this.colors.getColor(bar.offset1);\n                    bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            let tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (this.seriesName !== null && this.seriesName !== undefined) {\n                tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n                bar.data.series = this.seriesName;\n                bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = this.tooltipDisabled\n                ? undefined\n                : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n            return bar;\n        });\n        this.updateDataLabels();\n    }\n    updateDataLabels() {\n        if (this.type === BarChartType.Stacked) {\n            this.barsForDataLabels = [];\n            const section = {};\n            section.series = this.seriesName;\n            const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n            const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            // if total is positive then we show it on the right, otherwise on the left\n            if (section.total > 0) {\n                section.width = this.xScale(totalPositive);\n            }\n            else {\n                section.width = this.xScale(totalNegative);\n            }\n            section.height = this.yScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(d => {\n                const section = {};\n                section.series = this.seriesName ?? d.label;\n                section.total = d.value;\n                section.x = this.xScale(0);\n                section.y = this.yScale(d.label);\n                section.width = this.xScale(section.total) - this.xScale(0);\n                section.height = this.yScale.bandwidth();\n                return section;\n            });\n        }\n    }\n    updateTooltipSettings() {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n        this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(active => {\n            return entry.name === active.name && entry.value === active.value;\n        });\n        return item !== undefined;\n    }\n    getLabel(dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    }\n    trackBy(index, bar) {\n        return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n    click(data) {\n        this.select.emit(data);\n    }\n}\nSeriesHorizontal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesHorizontal, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSeriesHorizontal.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: { dims: \"dims\", type: \"type\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", tooltipTemplate: \"tooltipTemplate\", roundEdges: \"roundEdges\", animations: \"animations\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelWidthChanged: \"dataLabelWidthChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: [\"value\", \"valueFormatting\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"orientation\"], outputs: [\"dimensionsChanged\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesHorizontal, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-series-horizontal]',\n                    template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { dims: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], seriesName: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dataLabelWidthChanged: [{\n                type: Output\n            }] } });\n\nclass BarHorizontalComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getXScale() {\n        this.xDomain = this.getXDomain();\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale() {\n        this.yDomain = this.getYDomain();\n        const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.yDomain);\n    }\n    getXDomain() {\n        const values = this.results.map(d => d.value);\n        const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\n        return [min, max];\n    }\n    getYDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.yDomain;\n        }\n        else {\n            domain = this.xDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (event.index === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalComponent, selector: \"ngx-charts-bar-horizontal\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", xScaleMax: \"xScaleMax\", xScaleMin: \"xScaleMin\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontal2DComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.groupPadding = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barOrientation = BarOrientation;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.height])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    }\n    getInnerScale() {\n        const height = this.groupScale.bandwidth();\n        const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, height]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const min = Math.min(0, ...domain);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.groupScale(group.label)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontal2DComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontal2DComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontal2DComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontal2DComponent, selector: \"ngx-charts-bar-horizontal-2d\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", groupPadding: \"groupPadding\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", xScaleMax: \"xScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\", \"orient\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontal2DComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-2d', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], groupPadding: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.valueDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.barChartType = BarChartType;\n        this.isSSR = false;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getYScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalNormalizedComponent, selector: \"ngx-charts-bar-horizontal-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontalStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        this.barChartType = BarChartType;\n        this.isSSR = false;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        let smallest = 0;\n        let biggest = 0;\n        for (const group of this.results) {\n            let smallestSum = 0;\n            let biggestSum = 0;\n            for (const d of group.series) {\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        const min = Math.min(0, ...domain);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    getYScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalStackedComponent, selector: \"ngx-charts-bar-horizontal-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", xScaleMax: \"xScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass SeriesVerticalComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.type = BarChartType.Standard;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelHeightChanged = new EventEmitter();\n        this.barsForDataLabels = [];\n        this.barOrientation = BarOrientation;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateTooltipSettings();\n        let width;\n        if (this.series.length) {\n            width = this.xScale.bandwidth();\n        }\n        width = Math.round(width);\n        const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0\n        };\n        let d0Type = D0Types.positive;\n        let total;\n        if (this.type === BarChartType.Normalized) {\n            total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n        }\n        this.bars = this.series.map((d, index) => {\n            let value = d.value;\n            const label = this.getLabel(d);\n            const formattedLabel = formatLabel(label);\n            const roundEdges = this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const bar = {\n                value,\n                label,\n                roundEdges,\n                data: d,\n                width,\n                formattedLabel,\n                height: 0,\n                x: 0,\n                y: 0\n            };\n            if (this.type === BarChartType.Standard) {\n                bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n                bar.x = this.xScale(label);\n                if (value < 0) {\n                    bar.y = this.yScale(0);\n                }\n                else {\n                    bar.y = this.yScale(value);\n                }\n            }\n            else if (this.type === BarChartType.Stacked) {\n                const offset0 = d0[d0Type];\n                const offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.height = this.yScale(offset0) - this.yScale(offset1);\n                bar.x = 0;\n                bar.y = this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (this.type === BarChartType.Normalized) {\n                let offset0 = d0[d0Type];\n                let offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.height = this.yScale(offset0) - this.yScale(offset1);\n                bar.x = 0;\n                bar.y = this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (this.colors.scaleType === ScaleType.Ordinal) {\n                bar.color = this.colors.getColor(label);\n            }\n            else {\n                if (this.type === BarChartType.Standard) {\n                    bar.color = this.colors.getColor(value);\n                    bar.gradientStops = this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = this.colors.getColor(bar.offset1);\n                    bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            let tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (this.seriesName !== null && this.seriesName !== undefined) {\n                tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n                bar.data.series = this.seriesName;\n                bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = this.tooltipDisabled\n                ? undefined\n                : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n            return bar;\n        });\n        this.updateDataLabels();\n    }\n    updateDataLabels() {\n        if (this.type === BarChartType.Stacked) {\n            this.barsForDataLabels = [];\n            const section = {};\n            section.series = this.seriesName;\n            const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n            const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            if (section.total > 0) {\n                section.height = this.yScale(totalPositive);\n            }\n            else {\n                section.height = this.yScale(totalNegative);\n            }\n            section.width = this.xScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(d => {\n                const section = {};\n                section.series = this.seriesName ?? d.label;\n                section.total = d.value;\n                section.x = this.xScale(d.label);\n                section.y = this.yScale(0);\n                section.height = this.yScale(section.total) - this.yScale(0);\n                section.width = this.xScale.bandwidth();\n                return section;\n            });\n        }\n    }\n    updateTooltipSettings() {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n        this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(active => {\n            return entry.name === active.name && entry.value === active.value;\n        });\n        return item !== undefined;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    getLabel(dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    }\n    trackBy(index, bar) {\n        return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n}\nSeriesVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesVerticalComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nSeriesVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: { dims: \"dims\", type: \"type\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", roundEdges: \"roundEdges\", animations: \"animations\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelHeightChanged: \"dataLabelHeightChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: [\"value\", \"valueFormatting\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"orientation\"], outputs: [\"dimensionsChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesVerticalComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-series-vertical]',\n                    template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { dims: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], seriesName: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dataLabelHeightChanged: [{\n                type: Output\n            }] } });\n\nclass BarVerticalComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getXScale() {\n        this.xDomain = this.getXDomain();\n        const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n    }\n    getYScale() {\n        this.yDomain = this.getYDomain();\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getXDomain() {\n        return this.results.map(d => d.label);\n    }\n    getYDomain() {\n        const values = this.results.map(d => d.value);\n        let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            min = Math.min(min, ...this.yAxisTicks);\n        }\n        let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            max = Math.max(max, ...this.yAxisTicks);\n        }\n        return [min, max];\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.xDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxHeightChanged(event) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (event.index === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalComponent, selector: \"ngx-charts-bar-vertical\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", yScaleMin: \"yScaleMin\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVertical2DComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.scaleType = ScaleType.Ordinal;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.groupPadding = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barOrientation = BarOrientation;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    getGroupScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.width])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    }\n    getInnerScale() {\n        const width = this.groupScale.bandwidth();\n        const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        return `translate(${this.groupScale(group.label)}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVertical2DComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVertical2DComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVertical2DComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVertical2DComponent, selector: \"ngx-charts-bar-vertical-2d\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", scaleType: \"scaleType\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", groupPadding: \"groupPadding\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\", \"orient\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVertical2DComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-2d', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], groupPadding: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVerticalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.valueDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.isSSR = false;\n        this.barChartType = BarChartType;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getXScale() {\n        const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(${this.xScale(group.name)}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalNormalizedComponent, selector: \"ngx-charts-bar-vertical-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVerticalStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barChartType = BarChartType;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        let smallest = 0;\n        let biggest = 0;\n        for (const group of this.results) {\n            let smallestSum = 0;\n            let biggestSum = 0;\n            for (const d of group.series) {\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    getXScale() {\n        const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    groupTransform(group) {\n        return `translate(${this.xScale(group.name) || 0}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalStackedComponent, selector: \"ngx-charts-bar-vertical-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarChartModule {\n}\nBarChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBarChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, declarations: [BarComponent,\n        BarHorizontalComponent,\n        BarHorizontal2DComponent,\n        BarHorizontalNormalizedComponent,\n        BarHorizontalStackedComponent,\n        BarVerticalComponent,\n        BarVertical2DComponent,\n        BarVerticalNormalizedComponent,\n        BarVerticalStackedComponent,\n        BarLabelComponent,\n        SeriesHorizontal,\n        SeriesVerticalComponent], imports: [ChartCommonModule], exports: [BarComponent,\n        BarHorizontalComponent,\n        BarHorizontal2DComponent,\n        BarHorizontalNormalizedComponent,\n        BarHorizontalStackedComponent,\n        BarVerticalComponent,\n        BarVertical2DComponent,\n        BarVerticalNormalizedComponent,\n        BarVerticalStackedComponent,\n        BarLabelComponent,\n        SeriesHorizontal,\n        SeriesVerticalComponent] });\nBarChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [\n                        BarComponent,\n                        BarHorizontalComponent,\n                        BarHorizontal2DComponent,\n                        BarHorizontalNormalizedComponent,\n                        BarHorizontalStackedComponent,\n                        BarVerticalComponent,\n                        BarVertical2DComponent,\n                        BarVerticalNormalizedComponent,\n                        BarVerticalStackedComponent,\n                        BarLabelComponent,\n                        SeriesHorizontal,\n                        SeriesVerticalComponent\n                    ],\n                    exports: [\n                        BarComponent,\n                        BarHorizontalComponent,\n                        BarHorizontal2DComponent,\n                        BarHorizontalNormalizedComponent,\n                        BarHorizontalStackedComponent,\n                        BarVerticalComponent,\n                        BarVertical2DComponent,\n                        BarVerticalNormalizedComponent,\n                        BarVerticalStackedComponent,\n                        BarLabelComponent,\n                        SeriesHorizontal,\n                        SeriesVerticalComponent\n                    ]\n                }]\n        }] });\n\nconst cloneDeep = rfdc();\nclass BoxComponent {\n    constructor(element, cd) {\n        this.cd = cd;\n        this.roundEdges = true;\n        this.gradient = false;\n        this.offset = 0;\n        this.isActive = false;\n        this.animations = true;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.BarOrientation = BarOrientation;\n        this.initialized = false;\n        this.hasGradient = false;\n        this.hideBar = false;\n        this.nativeElm = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (!this.initialized) {\n            this.loadAnimation();\n            this.initialized = true;\n        }\n        else {\n            this.update();\n        }\n    }\n    update() {\n        this.boxStrokeWidth = Math.max(this.strokeWidth, 1);\n        this.whiskerStrokeWidth = Math.max(this.strokeWidth / 2, 1);\n        this.medianLineWidth = 1.5 * this.strokeWidth;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updateLineEl();\n        this.updatePathEl();\n        this.checkToHideBar();\n        this.maskLineId = 'mask' + id().toString();\n        this.maskLine = `url(#${this.maskLineId})`;\n        if (this.cd) {\n            this.cd.markForCheck();\n        }\n    }\n    loadAnimation() {\n        this.boxPath = this.oldPath = this.getStartingPath();\n        this.oldLineCoordinates = this.getStartingLineCoordinates();\n        setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n        const nodeBar = select(this.nativeElm).selectAll('.bar');\n        const path = this.getPath();\n        if (this.animations) {\n            nodeBar\n                .attr('d', this.oldPath)\n                .transition()\n                .ease(easeSinInOut)\n                .duration(500)\n                .attrTween('d', this.pathTween(path, 4));\n        }\n        else {\n            nodeBar.attr('d', path);\n        }\n        this.oldPath = path;\n    }\n    updateLineEl() {\n        const lineEl = select(this.nativeElm).selectAll('.bar-line');\n        const lineCoordinates = this.lineCoordinates;\n        const oldLineCoordinates = this.oldLineCoordinates;\n        if (this.animations) {\n            lineEl\n                .attr('x1', (_, index) => oldLineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => oldLineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => oldLineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => oldLineCoordinates[index].v2.y)\n                .transition()\n                .ease(easeSinInOut)\n                .duration(500)\n                .attr('x1', (_, index) => lineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => lineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => lineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => lineCoordinates[index].v2.y);\n        }\n        else {\n            lineEl\n                .attr('x1', (_, index) => lineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => lineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => lineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => lineCoordinates[index].v2.y);\n        }\n        this.oldLineCoordinates = [...lineCoordinates];\n    }\n    /**\n     * See [D3 Selections](https://www.d3indepth.com/selections/)\n     * @param d The joined data.\n     * @param index The index of the element within the selection\n     * @param node The node element (Line).\n     */\n    lineTween(attr, d, index, node) {\n        const nodeLineEl = node[index];\n        return nodeLineEl[attr].baseVal.value;\n    }\n    // TODO: Refactor into another .ts file if https://github.com/swimlane/ngx-charts/pull/1179 gets merged.\n    pathTween(d1, precision) {\n        return function () {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const path0 = this;\n            const path1 = this.cloneNode();\n            path1.setAttribute('d', d1);\n            const n0 = path0?.getTotalLength();\n            const n1 = path1?.getTotalLength();\n            // Uniform sampling of distance based on specified precision.\n            const distances = [0];\n            let i = 0;\n            const dt = precision / Math.max(n0, n1);\n            while (i < 1) {\n                distances.push(i);\n                i += dt;\n            }\n            distances.push(1);\n            // Compute point-interpolators at each distance.\n            const points = distances.map((t) => {\n                const p0 = path0.getPointAtLength(t * n0);\n                const p1 = path1.getPointAtLength(t * n1);\n                return interpolate([p0.x, p0.y], [p1.x, p1.y]);\n            });\n            // 't': T is the fraction of time (between 0 and 1) since the transition began.\n            return (t) => {\n                return t < 1 ? 'M' + points.map((p) => p(t)).join('L') : d1;\n            };\n        };\n    }\n    getStartingPath() {\n        if (!this.animations) {\n            return this.getPath();\n        }\n        const radius = this.roundEdges ? 1 : 0;\n        const { x, y } = this.lineCoordinates[2].v1;\n        return roundedRect(x - this.width, y - 1, this.width, 2, radius, this.edges);\n    }\n    getPath() {\n        const radius = this.getRadius();\n        let path = '';\n        path = roundedRect(this.x, this.y, this.width, this.height, Math.min(this.height, radius), this.edges);\n        return path;\n    }\n    getStartingLineCoordinates() {\n        if (!this.animations) {\n            return [...this.lineCoordinates];\n        }\n        const lineCoordinates = cloneDeep(this.lineCoordinates);\n        lineCoordinates[1].v1.y = lineCoordinates[1].v2.y = lineCoordinates[3].v1.y = lineCoordinates[3].v2.y = lineCoordinates[0].v1.y = lineCoordinates[0].v2.y =\n            lineCoordinates[2].v1.y;\n        return lineCoordinates;\n    }\n    getRadius() {\n        let radius = 0;\n        if (this.roundEdges && this.height > 5 && this.width > 5) {\n            radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n        }\n        return radius;\n    }\n    getGradient() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.getStartOpacity()\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    getStartOpacity() {\n        if (this.roundEdges) {\n            return 0.2;\n        }\n        else {\n            return 0.5;\n        }\n    }\n    get edges() {\n        let edges = [false, false, false, false];\n        if (this.roundEdges) {\n            edges = [true, true, true, true];\n        }\n        return edges;\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n        this.hideBar = this.noBarWhenZero && this.height === 0;\n    }\n}\nBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxComponent, selector: \"g[ngx-charts-box]\", inputs: { strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", fill: \"fill\", data: \"data\", width: \"width\", height: \"height\", x: \"x\", y: \"y\", lineCoordinates: \"lineCoordinates\", roundEdges: \"roundEdges\", gradient: \"gradient\", gradientStops: \"gradientStops\", offset: \"offset\", isActive: \"isActive\", animations: \"animations\", ariaLabel: \"ariaLabel\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-box]',\n                    template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], lineCoordinates: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], gradientStops: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass BoxSeriesComponent {\n    constructor() {\n        this.animations = true;\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    update() {\n        this.updateTooltipSettings();\n        const width = this.series && this.series.series.length ? Math.round(this.xScale.bandwidth()) : null;\n        const seriesName = this.series.name;\n        // Calculate Quantile and Whiskers for each box serie.\n        this.counts = this.series.series;\n        const mappedCounts = this.counts.map(serie => Number(serie.value));\n        this.whiskers = [min(mappedCounts), max(mappedCounts)];\n        // We get the group count and must sort it in order to retrieve quantiles.\n        const groupCounts = this.counts.map(item => item.value).sort((a, b) => Number(a) - Number(b));\n        this.quartiles = this.getBoxQuantiles(groupCounts);\n        this.lineCoordinates = this.getLinesCoordinates(seriesName.toString(), this.whiskers, this.quartiles, width);\n        const value = this.quartiles[1];\n        const formattedLabel = formatLabel(seriesName);\n        const box = {\n            value,\n            data: this.counts,\n            label: seriesName,\n            formattedLabel,\n            width,\n            height: 0,\n            x: 0,\n            y: 0,\n            roundEdges: this.roundEdges,\n            quartiles: this.quartiles,\n            lineCoordinates: this.lineCoordinates\n        };\n        box.height = Math.abs(this.yScale(this.quartiles[0]) - this.yScale(this.quartiles[2]));\n        box.x = this.xScale(seriesName.toString());\n        box.y = this.yScale(this.quartiles[2]);\n        box.ariaLabel = formattedLabel + ' - Median: ' + value.toLocaleString();\n        if (this.colors.scaleType === ScaleType.Ordinal) {\n            box.color = this.colors.getColor(seriesName);\n        }\n        else {\n            box.color = this.colors.getColor(this.quartiles[1]);\n            box.gradientStops = this.colors.getLinearGradientStops(this.quartiles[0], this.quartiles[2]);\n        }\n        const tooltipLabel = formattedLabel;\n        const formattedTooltipLabel = `\n    <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n    <span class=\"tooltip-val\">\n      • Q1: ${this.quartiles[0]} • Q2: ${this.quartiles[1]} • Q3: ${this.quartiles[2]}<br>\n      • Min: ${this.whiskers[0]} • Max: ${this.whiskers[1]}\n    </span>`;\n        box.tooltipText = this.tooltipDisabled ? undefined : formattedTooltipLabel;\n        this.tooltipTitle = this.tooltipDisabled ? undefined : box.tooltipText;\n        this.box = box;\n    }\n    getBoxQuantiles(inputData) {\n        return [quantile(inputData, 0.25), quantile(inputData, 0.5), quantile(inputData, 0.75)];\n    }\n    getLinesCoordinates(seriesName, whiskers, quartiles, barWidth) {\n        // The X value is not being centered, so had to sum half the width to align it.\n        const commonX = this.xScale(seriesName);\n        const offsetX = commonX + barWidth / 2;\n        const medianLineWidth = Math.max(barWidth + 4 * this.strokeWidth, 1);\n        const whiskerLineWidth = Math.max(barWidth / 3, 1);\n        const whiskerZero = this.yScale(whiskers[0]);\n        const whiskerOne = this.yScale(whiskers[1]);\n        const median = this.yScale(quartiles[1]);\n        const topLine = {\n            v1: { x: offsetX + whiskerLineWidth / 2, y: whiskerZero },\n            v2: { x: offsetX - whiskerLineWidth / 2, y: whiskerZero }\n        };\n        const medianLine = {\n            v1: { x: offsetX + medianLineWidth / 2, y: median },\n            v2: { x: offsetX - medianLineWidth / 2, y: median }\n        };\n        const bottomLine = {\n            v1: { x: offsetX + whiskerLineWidth / 2, y: whiskerOne },\n            v2: { x: offsetX - whiskerLineWidth / 2, y: whiskerOne }\n        };\n        const verticalLine = {\n            v1: { x: offsetX, y: whiskerZero },\n            v2: { x: offsetX, y: whiskerOne }\n        };\n        return [verticalLine, topLine, medianLine, bottomLine];\n    }\n    updateTooltipSettings() {\n        if (this.tooltipDisabled) {\n            this.tooltipPlacement = undefined;\n            this.tooltipType = undefined;\n        }\n        else {\n            if (!this.tooltipPlacement) {\n                this.tooltipPlacement = PlacementTypes.Top;\n            }\n            if (!this.tooltipType) {\n                this.tooltipType = StyleTypes.tooltip;\n            }\n        }\n    }\n}\nBoxSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nBoxSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxSeriesComponent, selector: \"g[ngx-charts-box-series]\", inputs: { dims: \"dims\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", animations: \"animations\", strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", tooltipPlacement: \"tooltipPlacement\", tooltipType: \"tooltipType\", roundEdges: \"roundEdges\", gradient: \"gradient\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: BoxComponent, selector: \"g[ngx-charts-box]\", inputs: [\"strokeColor\", \"strokeWidth\", \"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"lineCoordinates\", \"roundEdges\", \"gradient\", \"gradientStops\", \"offset\", \"isActive\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-box-series]',\n                    template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { dims: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipType: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass BoxChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        /** Show or hide the legend. */\n        this.legend = false;\n        this.legendPosition = LegendPosition.Right;\n        this.legendTitle = 'Legend';\n        this.showGridLines = true;\n        this.xAxis = true;\n        this.yAxis = true;\n        this.showXAxisLabel = true;\n        this.showYAxisLabel = true;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.strokeColor = '#FFFFFF';\n        this.strokeWidth = 2;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        /** Chart Margins (For each side, counterclock wise). */\n        this.margin = [10, 20, 10, 20];\n        /** Chart X axis dimension. */\n        this.xAxisHeight = 0;\n        /** Chart Y axis dimension. */\n        this.yAxisWidth = 0;\n    }\n    trackBy(index, item) {\n        return item.name;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.setScales();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    setColors() {\n        let domain = [];\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    setScales() {\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    }\n    getXScale(domain, width) {\n        const scale = scaleBand()\n            .domain(domain.map(d => d.toString()))\n            .rangeRound([0, width])\n            .padding(0.5);\n        return scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().domain(domain).range([height, 0]);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getUniqueBoxChartXDomainValues(results) {\n        const valueSet = new Set();\n        for (const result of results) {\n            valueSet.add(result.name);\n        }\n        return Array.from(valueSet);\n    }\n    getXDomain() {\n        let domain = [];\n        const values = this.getUniqueBoxChartXDomainValues(this.results);\n        let min;\n        let max;\n        if (typeof values[0] === 'string') {\n            domain = values.map(val => val.toString());\n        }\n        else if (typeof values[0] === 'number') {\n            const mappedValues = values.map(v => Number(v));\n            min = Math.min(...mappedValues);\n            max = Math.max(...mappedValues);\n            domain = [min, max];\n        }\n        else {\n            const mappedValues = values.map(v => Number(new Date(v)));\n            min = Math.min(...mappedValues);\n            max = Math.max(...mappedValues);\n            domain = [new Date(min), new Date(max)];\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const values = [...domain];\n        const mappedValues = values.map(v => Number(v));\n        const min = Math.min(...mappedValues);\n        const max = Math.max(...mappedValues);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => `${d.name}`);\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    onActivate(data) {\n        this.activate.emit(data);\n    }\n    onDeactivate(data) {\n        this.deactivate.emit(data);\n    }\n    getLegendOptions() {\n        const legendOpts = {\n            scaleType: this.schemeType,\n            colors: this.colors,\n            domain: [],\n            position: this.legendPosition,\n            title: this.legendTitle\n        };\n        if (this.schemeType === ScaleType.Ordinal) {\n            legendOpts.domain = this.xDomain;\n            legendOpts.colors = this.colors;\n        }\n        else {\n            legendOpts.domain = this.yDomain;\n            legendOpts.colors = this.colors.scale;\n        }\n        return legendOpts;\n    }\n}\nBoxChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBoxChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxChartComponent, selector: \"ngx-charts-box-chart\", inputs: { legend: \"legend\", legendPosition: \"legendPosition\", legendTitle: \"legendTitle\", legendOptionsConfig: \"legendOptionsConfig\", showGridLines: \"showGridLines\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", roundDomains: \"roundDomains\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", roundEdges: \"roundEdges\", strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: BoxSeriesComponent, selector: \"g[ngx-charts-box-series]\", inputs: [\"dims\", \"series\", \"xScale\", \"yScale\", \"colors\", \"animations\", \"strokeColor\", \"strokeWidth\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipPlacement\", \"tooltipType\", \"roundEdges\", \"gradient\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-box-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendOptionsConfig: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate', { static: false }]\n            }] } });\n\nclass BoxChartModule {\n}\nBoxChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBoxChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent], imports: [ChartCommonModule], exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent] });\nBoxChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent],\n                    exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent]\n                }]\n        }] });\n\nfunction getDomain(values, scaleType, autoScale, minVal, maxVal) {\n    let domain = [];\n    if (scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n        if (!autoScale) {\n            values.push(0);\n        }\n    }\n    if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n        const min = minVal || minVal === 0 ? minVal : Math.min(...values);\n        const max = maxVal ? maxVal : Math.max(...values);\n        domain = [min, max];\n    }\n    else {\n        domain = values;\n    }\n    return domain;\n}\nfunction getScale(domain, range, scaleType, roundDomains) {\n    switch (scaleType) {\n        case ScaleType.Time:\n            return scaleTime().range(range).domain(domain);\n        case ScaleType.Linear: {\n            const scale = scaleLinear().range(range).domain(domain);\n            if (roundDomains) {\n                return scale.nice();\n            }\n            return scale;\n        }\n        case ScaleType.Ordinal:\n            return scalePoint()\n                .range([range[0], range[1]])\n                .domain(domain.map(r => r.toString()));\n        default:\n            return undefined;\n    }\n}\n\nclass BubbleSeriesComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.circles = this.getCircles();\n    }\n    getCircles() {\n        const seriesName = this.data.name;\n        return this.data.series\n            .map((d, i) => {\n            if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n                const y = d.y;\n                const x = d.x;\n                const r = d.r;\n                const radius = this.rScale(r || 1);\n                const tooltipLabel = formatLabel(d.name);\n                const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(x)) : this.xScale(x);\n                const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(y)) : this.yScale(y);\n                const color = this.colors.scaleType === ScaleType.Linear ? this.colors.getColor(r) : this.colors.getColor(seriesName);\n                const isActive = !this.activeEntries.length ? true : this.isActive({ name: seriesName });\n                const opacity = isActive ? 1 : 0.3;\n                const data = Object.assign({}, d, {\n                    series: seriesName,\n                    name: d.name,\n                    value: d.y,\n                    x: d.x,\n                    radius: d.r\n                });\n                return {\n                    data,\n                    x,\n                    y,\n                    r,\n                    classNames: [`circle-data-${i}`],\n                    value: y,\n                    label: x,\n                    cx,\n                    cy,\n                    radius,\n                    tooltipLabel,\n                    color,\n                    opacity,\n                    seriesName,\n                    isActive,\n                    transform: `translate(${cx},${cy})`\n                };\n            }\n        })\n            .filter(circle => circle !== undefined);\n    }\n    getTooltipText(circle) {\n        const hasRadius = typeof circle.r !== 'undefined';\n        const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n        const hasSeriesName = circle.seriesName && circle.seriesName.length;\n        const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n        const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n        const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n        const x = formatLabel(circle.x);\n        const y = formatLabel(circle.y);\n        const name = hasSeriesName && hasTooltipLabel\n            ? `${circle.seriesName} • ${circle.tooltipLabel}`\n            : circle.seriesName + circle.tooltipLabel;\n        const tooltipTitle = hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\n        return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\n      </span>\n      <span class=\"tooltip-val\">\n        ${escapeLabel(radiusValue)}\n      </span>\n    `;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isVisible(circle) {\n        if (this.activeEntries.length > 0) {\n            return this.isActive({ name: circle.seriesName });\n        }\n        return circle.opacity !== 0;\n    }\n    activateCircle(circle) {\n        circle.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    }\n    deactivateCircle(circle) {\n        circle.barVisible = false;\n        this.deactivate.emit({ name: this.data.name });\n    }\n    trackBy(index, circle) {\n        return `${circle.data.series} ${circle.data.name}`;\n    }\n}\nBubbleSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleSeriesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nBubbleSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BubbleSeriesComponent, selector: \"g[ngx-charts-bubble-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", rScale: \"rScale\", xScaleType: \"xScaleType\", yScaleType: \"yScaleType\", colors: \"colors\", visibleValue: \"visibleValue\", activeEntries: \"activeEntries\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    opacity: 0,\n                    transform: 'scale(0)'\n                }),\n                animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-bubble-series]',\n                    template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    opacity: 0,\n                                    transform: 'scale(0)'\n                                }),\n                                animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], rScale: [{\n                type: Input\n            }], xScaleType: [{\n                type: Input\n            }], yScaleType: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], visibleValue: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass BubbleChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.showGridLines = true;\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = true;\n        this.yAxis = true;\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.maxRadius = 10;\n        this.minRadius = 3;\n        this.schemeType = ScaleType.Ordinal;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.scaleType = ScaleType.Linear;\n        this.margin = [10, 20, 10, 20];\n        this.bubblePadding = [0, 0, 0, 0];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.activeEntries = [];\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.seriesDomain = this.results.map(d => d.name);\n        this.rDomain = this.getRDomain();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\n        const colorDomain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.rDomain;\n        this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n        this.data = this.results;\n        this.minRadius = Math.max(this.minRadius, 1);\n        this.maxRadius = Math.max(this.maxRadius, 1);\n        this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n        this.bubblePadding = [0, 0, 0, 0];\n        this.setScales();\n        this.bubblePadding = this.getBubblePadding();\n        this.setScales();\n        this.legendOptions = this.getLegendOptions();\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    hideCircles() {\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    getBubblePadding() {\n        let yMin = 0;\n        let xMin = 0;\n        let yMax = this.dims.height;\n        let xMax = this.dims.width;\n        for (const s of this.data) {\n            for (const d of s.series) {\n                const r = this.rScale(d.r);\n                const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(d.x)) : this.xScale(d.x);\n                const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(d.y)) : this.yScale(d.y);\n                xMin = Math.max(r - cx, xMin);\n                yMin = Math.max(r - cy, yMin);\n                yMax = Math.max(cy + r, yMax);\n                xMax = Math.max(cx + r, xMax);\n            }\n        }\n        xMax = Math.max(xMax - this.dims.width, 0);\n        yMax = Math.max(yMax - this.dims.height, 0);\n        return [yMin, xMax, yMax, xMin];\n    }\n    setScales() {\n        let width = this.dims.width;\n        if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n            width = width - this.bubblePadding[1];\n        }\n        let height = this.dims.height;\n        if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n            height = height - this.bubblePadding[2];\n        }\n        this.xScale = this.getXScale(this.xDomain, width);\n        this.yScale = this.getYScale(this.yDomain, height);\n    }\n    getYScale(domain, height) {\n        return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n    }\n    getXScale(domain, width) {\n        return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n    }\n    getRScale(domain, range) {\n        const scale = scaleLinear().range(range).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            position: this.legendPosition,\n            title: undefined\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.rDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    getXDomain() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.x)) {\n                    values.push(d.x);\n                }\n            }\n        }\n        this.xScaleType = getScaleType(values);\n        return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n    }\n    getYDomain() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.y)) {\n                    values.push(d.y);\n                }\n            }\n        }\n        this.yScaleType = getScaleType(values);\n        return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n    }\n    getRDomain() {\n        let min = Infinity;\n        let max = -Infinity;\n        for (const results of this.results) {\n            for (const d of results.series) {\n                const value = Number(d.r) || 1;\n                min = Math.min(min, value);\n                max = Math.max(max, value);\n            }\n        }\n        return [min, max];\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n}\nBubbleChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBubbleChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BubbleChartComponent, selector: \"ngx-charts-bubble-chart\", inputs: { showGridLines: \"showGridLines\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", maxRadius: \"maxRadius\", minRadius: \"minRadius\", autoScale: \"autoScale\", schemeType: \"schemeType\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: BubbleSeriesComponent, selector: \"g[ngx-charts-bubble-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"rScale\", \"xScaleType\", \"yScaleType\", \"colors\", \"visibleValue\", \"activeEntries\", \"xAxisLabel\", \"yAxisLabel\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bubble-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { showGridLines: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], maxRadius: [{\n                type: Input\n            }], minRadius: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass BubbleChartModule {\n}\nBubbleChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBubbleChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, declarations: [BubbleChartComponent, BubbleSeriesComponent], imports: [ChartCommonModule], exports: [BubbleChartComponent, BubbleSeriesComponent] });\nBubbleChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [BubbleChartComponent, BubbleSeriesComponent],\n                    exports: [BubbleChartComponent, BubbleSeriesComponent]\n                }]\n        }] });\n\nclass HeatMapCellComponent {\n    constructor(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.barOrientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.transform = `translate(${this.x} , ${this.y})`;\n        this.startOpacity = 0.3;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        this.gradientStops = this.getGradientStops();\n        if (this.animations) {\n            this.loadAnimation();\n        }\n    }\n    getGradientStops() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    loadAnimation() {\n        const node = select(this.element).select('.cell');\n        node.attr('opacity', 0);\n        this.animateToCurrentForm();\n    }\n    animateToCurrentForm() {\n        const node = select(this.element).select('.cell');\n        node.transition().duration(750).attr('opacity', 1);\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n}\nHeatMapCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapCellComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nHeatMapCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatMapCellComponent, selector: \"g[ngx-charts-heat-map-cell]\", inputs: { fill: \"fill\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", data: \"data\", gradient: \"gradient\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-heat-map-cell]',\n                    template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass HeatCellSeriesComponent {\n    constructor() {\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnInit() {\n        if (!this.tooltipText) {\n            this.tooltipText = this.getTooltipText;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.cells = this.getCells();\n    }\n    getCells() {\n        const cells = [];\n        this.data.map(row => {\n            row.series.map(cell => {\n                const value = cell.value;\n                cell.series = row.name;\n                cells.push({\n                    row,\n                    cell,\n                    x: this.xScale(row.name),\n                    y: this.yScale(cell.name),\n                    width: this.xScale.bandwidth(),\n                    height: this.yScale.bandwidth(),\n                    fill: this.colors.getColor(value),\n                    data: value,\n                    label: formatLabel(cell.name),\n                    series: row.name\n                });\n            });\n        });\n        return cells;\n    }\n    getTooltipText({ label, data, series }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(series)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n}\nHeatCellSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatCellSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nHeatCellSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatCellSeriesComponent, selector: \"g[ngx-charts-heat-map-cell-series]\", inputs: { data: \"data\", colors: \"colors\", xScale: \"xScale\", yScale: \"yScale\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: HeatMapCellComponent, selector: \"g[ngx-charts-heat-map-cell]\", inputs: [\"fill\", \"x\", \"y\", \"width\", \"height\", \"data\", \"gradient\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatCellSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-heat-map-cell-series]',\n                    template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass HeatMapComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.innerPadding = 8;\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.tooltipDisabled = false;\n        this.activeEntries = [];\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.scaleType = ScaleType.Linear;\n    }\n    update() {\n        super.update();\n        this.formatDates();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.valueDomain = this.getValueDomain();\n        this.scaleType = getScaleType(this.valueDomain, false);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.scaleType,\n            legendPosition: this.legendPosition\n        });\n        if (this.scaleType === ScaleType.Linear) {\n            let min = this.min;\n            let max = this.max;\n            if (!this.min) {\n                min = Math.min(0, ...this.valueDomain);\n            }\n            if (!this.max) {\n                max = Math.max(...this.valueDomain);\n            }\n            this.valueDomain = [min, max];\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.rects = this.getRects();\n    }\n    getXDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.name)) {\n                domain.push(group.name);\n            }\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.name)) {\n                    domain.push(d.name);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        return domain;\n    }\n    /**\n     * Converts the input to gap paddingInner in fraction\n     * Supports the following inputs:\n     *    Numbers: 8\n     *    Strings: \"8\", \"8px\", \"8%\"\n     *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n     *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n     *\n     * @memberOf HeatMapComponent\n     */\n    getDimension(value, index = 0, N, L) {\n        if (typeof value === 'string') {\n            value = value\n                .replace('[', '')\n                .replace(']', '')\n                .replace('px', '')\n                // tslint:disable-next-line: quotemark\n                .replace(\"'\", '');\n            if (value.includes(',')) {\n                value = value.split(',');\n            }\n        }\n        if (Array.isArray(value) && typeof index === 'number') {\n            return this.getDimension(value[index], null, N, L);\n        }\n        if (typeof value === 'string' && value.includes('%')) {\n            return +value.replace('%', '') / 100;\n        }\n        return N / (L / +value + 1);\n    }\n    getXScale() {\n        const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n        return scaleBand().rangeRound([0, this.dims.width]).domain(this.xDomain).paddingInner(f);\n    }\n    getYScale() {\n        const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n        return scaleBand().rangeRound([this.dims.height, 0]).domain(this.yDomain).paddingInner(f);\n    }\n    getRects() {\n        const rects = [];\n        this.xDomain.map(xVal => {\n            this.yDomain.map(yVal => {\n                rects.push({\n                    x: this.xScale(xVal),\n                    y: this.yScale(yVal),\n                    rx: 3,\n                    width: this.xScale.bandwidth(),\n                    height: this.yScale.bandwidth(),\n                    fill: 'rgba(200,200,200,0.03)'\n                });\n            });\n        });\n        return rects;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: this.scaleType,\n            domain: this.valueDomain,\n            colors: this.scaleType === ScaleType.Ordinal ? this.colors : this.colors.scale,\n            title: this.scaleType === ScaleType.Ordinal ? this.legendTitle : undefined,\n            position: this.legendPosition\n        };\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nHeatMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nHeatMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatMapComponent, selector: \"ngx-charts-heat-map\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", gradient: \"gradient\", innerPadding: \"innerPadding\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", min: \"min\", max: \"max\", activeEntries: \"activeEntries\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: HeatCellSeriesComponent, selector: \"g[ngx-charts-heat-map-cell-series]\", inputs: [\"data\", \"colors\", \"xScale\", \"yScale\", \"gradient\", \"tooltipDisabled\", \"tooltipText\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-heat-map', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass HeatMapModule {\n}\nHeatMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHeatMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent], imports: [ChartCommonModule], exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent] });\nHeatMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\n                    exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\n                }]\n        }] });\n\nclass LineComponent {\n    constructor(element, platformId) {\n        this.element = element;\n        this.platformId = platformId;\n        this.fill = 'none';\n        this.animations = true;\n        // @Output() select = new EventEmitter();\n        this.initialized = false;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this.initialized) {\n            this.initialized = true;\n            this.initialPath = this.path;\n        }\n        else {\n            this.updatePathEl();\n        }\n    }\n    updatePathEl() {\n        const node = select(this.element.nativeElement).select('.line');\n        if (this.animations) {\n            node.transition().duration(750).attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    }\n}\nLineComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineComponent, deps: [{ token: i0.ElementRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nLineComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: { path: \"path\", stroke: \"stroke\", data: \"data\", fill: \"fill\", animations: \"animations\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    strokeDasharray: 2000,\n                    strokeDashoffset: 2000\n                }),\n                animate(1000, style({\n                    strokeDashoffset: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-line]',\n                    template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    strokeDasharray: 2000,\n                                    strokeDashoffset: 2000\n                                }),\n                                animate(1000, style({\n                                    strokeDashoffset: 0\n                                }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { path: [{\n                type: Input\n            }], stroke: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }] } });\n\nclass LineSeriesComponent {\n    constructor() {\n        this.animations = true;\n        this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradients();\n        const data = this.sortData(this.data.series);\n        const lineGen = this.getLineGenerator();\n        this.path = lineGen(data) || '';\n        const areaGen = this.getAreaGenerator();\n        this.areaPath = areaGen(data) || '';\n        if (this.hasRange) {\n            const range = this.getRangeGenerator();\n            this.outerPath = range(data) || '';\n        }\n        if (this.hasGradient) {\n            this.stroke = this.gradientUrl;\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            if (max === min) {\n                this.stroke = this.colors.getColor(max);\n            }\n        }\n        else {\n            this.stroke = this.colors.getColor(this.data.name);\n        }\n    }\n    getLineGenerator() {\n        return line()\n            .x(d => {\n            const label = d.name;\n            let value;\n            if (this.scaleType === ScaleType.Time) {\n                value = this.xScale(label);\n            }\n            else if (this.scaleType === ScaleType.Linear) {\n                value = this.xScale(Number(label));\n            }\n            else {\n                value = this.xScale(label);\n            }\n            return value;\n        })\n            .y(d => this.yScale(d.value))\n            .curve(this.curve);\n    }\n    getRangeGenerator() {\n        return area()\n            .x(d => {\n            const label = d.name;\n            let value;\n            if (this.scaleType === ScaleType.Time) {\n                value = this.xScale(label);\n            }\n            else if (this.scaleType === ScaleType.Linear) {\n                value = this.xScale(Number(label));\n            }\n            else {\n                value = this.xScale(label);\n            }\n            return value;\n        })\n            .y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value))\n            .y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value))\n            .curve(this.curve);\n    }\n    getAreaGenerator() {\n        const xProperty = d => {\n            const label = d.name;\n            return this.xScale(label);\n        };\n        return area()\n            .x(xProperty)\n            .y0(() => this.yScale.range()[0])\n            .y1(d => this.yScale(d.value))\n            .curve(this.curve);\n    }\n    sortData(data) {\n        if (this.scaleType === ScaleType.Linear) {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        return data;\n    }\n    updateGradients() {\n        if (this.colors.scaleType === ScaleType.Linear) {\n            this.hasGradient = true;\n            this.gradientId = 'grad' + id().toString();\n            this.gradientUrl = `url(#${this.gradientId})`;\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            this.gradientStops = this.colors.getLinearGradientStops(max, min);\n            this.areaGradientStops = this.colors.getLinearGradientStops(max);\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n            this.areaGradientStops = undefined;\n        }\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n}\nLineSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLineSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineSeriesComponent, selector: \"g[ngx-charts-line-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", hasRange: \"hasRange\", animations: \"animations\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: [\"data\", \"path\", \"startingPath\", \"fill\", \"opacity\", \"startOpacity\", \"endOpacity\", \"gradient\", \"stops\", \"animations\"], outputs: [\"select\"] }, { type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: [\"path\", \"stroke\", \"data\", \"fill\", \"animations\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-line-series]',\n                    template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], hasRange: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }] } });\n\nclass LineChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.showRefLines = false;\n        this.showRefLabels = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        const values = [...domain];\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime().range([0, width]).domain(domain);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear().range([0, width]).domain(domain);\n            if (this.roundDomains) {\n                scale = scale.nice();\n            }\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().range([0, width]).padding(0.1).domain(domain);\n        }\n        return scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        this.deactivateAll();\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nLineChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLineChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineChartComponent, selector: \"ngx-charts-line-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", autoScale: \"autoScale\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", rangeFillOpacity: \"rangeFillOpacity\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", showRefLines: \"showRefLines\", referenceLines: \"referenceLines\", showRefLabels: \"showRefLabels\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: LineSeriesComponent, selector: \"g[ngx-charts-line-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"curve\", \"activeEntries\", \"rangeFillOpacity\", \"hasRange\", \"animations\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-line-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass LineChartModule {\n}\nLineChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLineChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, declarations: [LineComponent, LineChartComponent, LineSeriesComponent], imports: [ChartCommonModule], exports: [LineComponent, LineChartComponent, LineSeriesComponent] });\nLineChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\n                    exports: [LineComponent, LineChartComponent, LineSeriesComponent]\n                }]\n        }] });\n\nclass PieLabelComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.animations = true;\n        this.labelTrim = true;\n        this.labelTrimSize = 10;\n        this.trimLabel = trimLabel;\n    }\n    ngOnChanges(changes) {\n        this.setTransforms();\n        this.update();\n    }\n    setTransforms() {\n        if (isPlatformServer(this.platformId)) {\n            this.styleTransform = `translate3d(${this.textX}px,${this.textY}px, 0)`;\n            this.attrTransform = `translate(${this.textX},${this.textY})`;\n            this.textTransition = !this.animations ? null : 'transform 0.75s';\n        }\n        else {\n            const isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n            this.styleTransform = isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n            this.attrTransform = !isIE ? null : `translate(${this.textX},${this.textY})`;\n            this.textTransition = isIE || !this.animations ? null : 'transform 0.75s';\n        }\n    }\n    update() {\n        let startRadius = this.radius;\n        if (this.explodeSlices) {\n            startRadius = (this.radius * this.value) / this.max;\n        }\n        const innerArc = arc().innerRadius(startRadius).outerRadius(startRadius);\n        // Calculate innerPos then scale outer position to match label position\n        const innerPos = innerArc.centroid(this.data);\n        let scale = this.data.pos[1] / innerPos[1];\n        if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n            scale = 1;\n        }\n        const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n        this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n    }\n    get textX() {\n        return this.data.pos[0];\n    }\n    get textY() {\n        return this.data.pos[1];\n    }\n    textAnchor() {\n        return this.midAngle(this.data) < Math.PI ? TextAnchor.Start : TextAnchor.End;\n    }\n    midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n}\nPieLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieLabelComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nPieLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: { data: \"data\", radius: \"radius\", label: \"label\", color: \"color\", max: \"max\", value: \"value\", explodeSlices: \"explodeSlices\", animations: \"animations\", labelTrim: \"labelTrim\", labelTrimSize: \"labelTrimSize\" }, usesOnChanges: true, ngImport: i0, template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieLabelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-label]',\n                    template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], labelTrim: [{\n                type: Input\n            }], labelTrimSize: [{\n                type: Input\n            }] } });\n\nclass PolarSeriesComponent {\n    constructor() {\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.circleRadius = 3;\n        this.barOrientation = BarOrientation;\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradients();\n        const line = this.getLineGenerator();\n        const data = this.sortData(this.data.series);\n        const seriesName = this.data.name;\n        const linearScaleType = this.colors.scaleType === ScaleType.Linear;\n        const min = this.yScale.domain()[0];\n        this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n        this.path = line(data) || '';\n        this.circles = data.map(d => {\n            const a = this.getAngle(d);\n            const r = this.getRadius(d);\n            const value = d.value;\n            const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n            const cData = Object.assign({}, d, {\n                series: seriesName,\n                value,\n                name: d.name\n            });\n            return {\n                data: cData,\n                cx: r * Math.sin(a),\n                cy: -r * Math.cos(a),\n                value,\n                color,\n                label: d.name\n            };\n        });\n        this.active = this.isActive(this.data);\n        this.inactive = this.isInactive(this.data);\n        this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n    }\n    getAngle(d) {\n        const label = d.name;\n        if (this.scaleType === ScaleType.Time) {\n            return this.xScale(label);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            return this.xScale(Number(label));\n        }\n        return this.xScale(label);\n    }\n    getRadius(d) {\n        return this.yScale(d.value);\n    }\n    getLineGenerator() {\n        return lineRadial()\n            .angle(d => this.getAngle(d))\n            .radius(d => this.getRadius(d))\n            .curve(this.curve);\n    }\n    sortData(data) {\n        if (this.scaleType === ScaleType.Linear) {\n            return sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            return sortByTime(data, 'name');\n        }\n        return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n    defaultTooltipText({ label, value }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    updateGradients() {\n        this.hasGradient = this.gradient || this.colors.scaleType === ScaleType.Linear;\n        if (!this.hasGradient) {\n            return;\n        }\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        if (this.colors.scaleType === ScaleType.Linear) {\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            this.gradientStops = this.colors.getLinearGradientStops(max, min);\n        }\n        else {\n            this.gradientStops = undefined;\n        }\n    }\n}\nPolarSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPolarSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PolarSeriesComponent, selector: \"g[ngx-charts-polar-series]\", inputs: { name: \"name\", data: \"data\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", gradient: \"gradient\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: [\"color\", \"name\", \"startOpacity\", \"endOpacity\", \"cx\", \"cy\", \"stops\"] }, { type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: [\"path\", \"stroke\", \"data\", \"fill\", \"animations\"] }, { type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-polar-series]',\n                    template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { name: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nconst twoPI = 2 * Math.PI;\nclass PolarChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showGridLines = true;\n        this.curve = curveCardinalClosed;\n        this.activeEntries = [];\n        this.rangeFillOpacity = 0.15;\n        this.trimYAxisTicks = true;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.showSeriesOnHover = true;\n        this.gradient = false;\n        this.yAxisMinScale = 0;\n        this.labelTrim = true;\n        this.labelTrimSize = 10;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        // series: any; // ???\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.orientation = Orientation;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.setDims();\n        this.setScales();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.setTicks();\n    }\n    setDims() {\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        const halfWidth = Math.floor(this.dims.width / 2);\n        const halfHeight = Math.floor(this.dims.height / 2);\n        const outerRadius = (this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5));\n        const yOffset = Math.max(0, halfHeight - outerRadius);\n        this.yAxisDims = {\n            ...this.dims,\n            width: halfWidth\n        };\n        this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n        this.transformYAxis = `translate(0, ${yOffset})`;\n        this.labelOffset = this.dims.height + 40;\n        this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n    }\n    setScales() {\n        const xValues = this.getXValues();\n        this.scaleType = getScaleType(xValues);\n        this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, twoPI);\n        this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n        this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n    }\n    setTicks() {\n        let tickFormat;\n        if (this.xAxisTickFormatting) {\n            tickFormat = this.xAxisTickFormatting;\n        }\n        else if (this.xScale.tickFormat) {\n            tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n        }\n        else {\n            tickFormat = d => {\n                if (isDate(d)) {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        const outerRadius = this.outerRadius;\n        const s = 1.1;\n        this.thetaTicks = this.xDomain.map(d => {\n            const startAngle = this.xScale(d);\n            const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n            const label = tickFormat(d);\n            const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n            const pos = [dd, s * startPos[1]];\n            return {\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle: startAngle,\n                value: outerRadius,\n                label,\n                startPos,\n                pos\n            };\n        });\n        const minDistance = 10;\n        /* from pie chart, abstract out -*/\n        for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n            const a = this.thetaTicks[i];\n            for (let j = i + 1; j < this.thetaTicks.length; j++) {\n                const b = this.thetaTicks[j];\n                // if they're on the same side\n                if (b.pos[0] * a.pos[0] > 0) {\n                    // if they're overlapping\n                    const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        // push the second up or down\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\n    }\n    getXValues() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        return values;\n    }\n    getXDomain(values = this.getXValues()) {\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            return [min, max];\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            return [min, max];\n        }\n        return values;\n    }\n    getYValues() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        return domain;\n    }\n    getYDomain(domain = this.getYValues()) {\n        let min = Math.min(...domain);\n        const max = Math.max(this.yAxisMinScale, ...domain);\n        min = Math.max(0, min);\n        if (!this.autoScale) {\n            min = Math.min(0, min);\n        }\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        switch (this.scaleType) {\n            case ScaleType.Time:\n                return scaleTime().range([0, width]).domain(domain);\n            case ScaleType.Linear: {\n                const scale = scaleLinear().range([0, width]).domain(domain);\n                return this.roundDomains ? scale.nice() : scale;\n            }\n            default:\n                return scalePoint()\n                    .range([0, width - twoPI / domain.length])\n                    .padding(0)\n                    .domain(domain);\n        }\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([0, height]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        const domain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.yDomain.reverse();\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        if (this.schemeType === ScaleType.Ordinal) {\n            return {\n                scaleType: this.schemeType,\n                colors: this.colors,\n                domain: this.seriesDomain,\n                title: this.legendTitle,\n                position: this.legendPosition\n            };\n        }\n        return {\n            scaleType: this.schemeType,\n            colors: this.colors.scale,\n            domain: this.yDomain,\n            title: undefined,\n            position: this.legendPosition\n        };\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n}\nPolarChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPolarChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PolarChartComponent, selector: \"ngx-charts-polar-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", autoScale: \"autoScale\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", rangeFillOpacity: \"rangeFillOpacity\", trimYAxisTicks: \"trimYAxisTicks\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", showSeriesOnHover: \"showSeriesOnHover\", gradient: \"gradient\", yAxisMinScale: \"yAxisMinScale\", labelTrim: \"labelTrim\", labelTrimSize: \"labelTrimSize\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: [\"data\", \"radius\", \"label\", \"color\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }, { type: PolarSeriesComponent, selector: \"g[ngx-charts-polar-series]\", inputs: [\"name\", \"data\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"curve\", \"activeEntries\", \"rangeFillOpacity\", \"tooltipDisabled\", \"tooltipText\", \"gradient\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-polar-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], showSeriesOnHover: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], yAxisMinScale: [{\n                type: Input\n            }], labelTrim: [{\n                type: Input\n            }], labelTrimSize: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass PieArcComponent {\n    constructor(element) {\n        this.startAngle = 0;\n        this.endAngle = Math.PI * 2;\n        this.cornerRadius = 0;\n        this.explodeSlices = false;\n        this.gradient = false;\n        this.animate = true;\n        this.pointerEvents = true;\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n        this.barOrientation = BarOrientation;\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getGradient() {\n        return this.gradient ? this.gradientFill : this.fill;\n    }\n    getPointerEvents() {\n        return this.pointerEvents ? 'auto' : 'none';\n    }\n    update() {\n        const calc = this.calculateArc();\n        this.startOpacity = 0.5;\n        this.radialGradientId = 'linearGrad' + id().toString();\n        this.gradientFill = `url(#${this.radialGradientId})`;\n        if (this.animate) {\n            if (this.initialized) {\n                this.updateAnimation();\n            }\n            else {\n                this.loadAnimation();\n                this.initialized = true;\n            }\n        }\n        else {\n            this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n        }\n    }\n    calculateArc() {\n        let outerRadius = this.outerRadius;\n        if (this.explodeSlices && this.innerRadius === 0) {\n            outerRadius = (this.outerRadius * this.value) / this.max;\n        }\n        return arc().innerRadius(this.innerRadius).outerRadius(outerRadius).cornerRadius(this.cornerRadius);\n    }\n    loadAnimation() {\n        const node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        const calc = this.calculateArc();\n        node\n            .transition()\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const copyOfD = Object.assign({}, d);\n            copyOfD.endAngle = copyOfD.startAngle;\n            const interpolater = interpolate(copyOfD, copyOfD);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        })\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    }\n    updateAnimation() {\n        const node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        const calc = this.calculateArc();\n        node\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    }\n    onClick() {\n        clearTimeout(this._timeout);\n        this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n    }\n    onDblClick(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        clearTimeout(this._timeout);\n        this.dblclick.emit({\n            data: this.data,\n            nativeEvent: event\n        });\n    }\n}\nPieArcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieArcComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nPieArcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: { fill: \"fill\", startAngle: \"startAngle\", endAngle: \"endAngle\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", cornerRadius: \"cornerRadius\", value: \"value\", max: \"max\", data: \"data\", explodeSlices: \"explodeSlices\", gradient: \"gradient\", animate: \"animate\", pointerEvents: \"pointerEvents\", isActive: \"isActive\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dblclick: \"dblclick\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: [\"color\", \"name\", \"startOpacity\", \"endOpacity\", \"cx\", \"cy\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieArcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-arc]',\n                    template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], endAngle: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], cornerRadius: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animate: [{\n                type: Input\n            }], pointerEvents: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dblclick: [{\n                type: Output\n            }] } });\n\nclass PieSeriesComponent {\n    constructor() {\n        this.series = [];\n        this.innerRadius = 60;\n        this.outerRadius = 80;\n        this.trimLabels = true;\n        this.maxLabelLength = 10;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        const pieGenerator = pie()\n            .value(d => d.value)\n            .sort(null);\n        const arcData = pieGenerator(this.series);\n        this.max = max(arcData, d => {\n            return d.value;\n        });\n        this.data = this.calculateLabelPositions(arcData);\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n    outerArc() {\n        const factor = 1.5;\n        return arc()\n            .innerRadius(this.outerRadius * factor)\n            .outerRadius(this.outerRadius * factor);\n    }\n    calculateLabelPositions(pieData) {\n        const factor = 1.5;\n        const minDistance = 10;\n        const labelPositions = pieData;\n        labelPositions.forEach(d => {\n            d.pos = this.outerArc().centroid(d);\n            d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n        });\n        for (let i = 0; i < labelPositions.length - 1; i++) {\n            const a = labelPositions[i];\n            if (!this.labelVisible(a)) {\n                continue;\n            }\n            for (let j = i + 1; j < labelPositions.length; j++) {\n                const b = labelPositions[j];\n                if (!this.labelVisible(b)) {\n                    continue;\n                }\n                // if they're on the same side\n                if (b.pos[0] * a.pos[0] > 0) {\n                    // if they're overlapping\n                    const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        // push the second up or down\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        return labelPositions;\n    }\n    labelVisible(myArc) {\n        return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n    }\n    getTooltipTitle(a) {\n        return this.tooltipTemplate ? undefined : this.tooltipText(a);\n    }\n    labelText(myArc) {\n        if (this.labelFormatting) {\n            return this.labelFormatting(myArc.data.name);\n        }\n        return this.label(myArc);\n    }\n    label(myArc) {\n        return formatLabel(myArc.data.name);\n    }\n    defaultTooltipText(myArc) {\n        const label = this.label(myArc);\n        const val = formatLabel(myArc.data.value);\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    color(myArc) {\n        return this.colors.getColor(this.label(myArc));\n    }\n    trackBy(index, item) {\n        return item.data.name;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    }\n}\nPieSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPieSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: { colors: \"colors\", series: \"series\", dims: \"dims\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", explodeSlices: \"explodeSlices\", showLabels: \"showLabels\", gradient: \"gradient\", activeEntries: \"activeEntries\", labelFormatting: \"labelFormatting\", trimLabels: \"trimLabels\", maxLabelLength: \"maxLabelLength\", tooltipText: \"tooltipText\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dblclick: \"dblclick\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: [\"data\", \"radius\", \"label\", \"color\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"] }, { type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-series]',\n                    template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { colors: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], showLabels: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], trimLabels: [{\n                type: Input\n            }], maxLabelLength: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dblclick: [{\n                type: Output\n            }] } });\n\nclass AdvancedPieChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.label = 'Total';\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [20, 20, 20, 20];\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: (this.width * 4) / 12.0,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        const xOffset = this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.legendWidth = this.width - this.dims.width - this.margin[1];\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n        this.innerRadius = this.outerRadius * 0.75;\n        this.transform = `translate(${xOffset} , ${yOffset})`;\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nAdvancedPieChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedPieChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAdvancedPieChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AdvancedPieChartComponent, selector: \"ngx-charts-advanced-pie-chart\", inputs: { gradient: \"gradient\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", label: \"label\", valueFormatting: \"valueFormatting\", nameFormatting: \"nameFormatting\", percentageFormatting: \"percentageFormatting\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: [\"colors\", \"series\", \"dims\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"showLabels\", \"gradient\", \"activeEntries\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"tooltipText\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }, { type: AdvancedLegendComponent, selector: \"ngx-charts-advanced-legend\", inputs: [\"width\", \"data\", \"colors\", \"label\", \"animations\", \"valueFormatting\", \"labelFormatting\", \"percentageFormatting\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedPieChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-advanced-pie-chart', template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"] }]\n        }], propDecorators: { gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], valueFormatting: [{\n                type: Input\n            }], nameFormatting: [{\n                type: Input\n            }], percentageFormatting: [{\n                type: Input\n            }] } });\n\nclass PieChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.labels = false;\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.explodeSlices = false;\n        this.doughnut = false;\n        this.arcWidth = 0.25;\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.trimLabels = true;\n        this.maxLabelLength = 10;\n        this.dblclick = new EventEmitter();\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    update() {\n        super.update();\n        if (this.labels && this.hasNoOptionalMarginsSet()) {\n            this.margins = [30, 80, 30, 80];\n        }\n        else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n            // default value for margins\n            this.margins = [20, 20, 20, 20];\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margins,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        const xOffset = this.margins[3] + this.dims.width / 2;\n        const yOffset = this.margins[0] + this.dims.height / 2;\n        this.translation = `translate(${xOffset}, ${yOffset})`;\n        this.outerRadius = Math.min(this.dims.width, this.dims.height);\n        if (this.labels) {\n            // make room for labels\n            this.outerRadius /= 3;\n        }\n        else {\n            this.outerRadius /= 2;\n        }\n        this.innerRadius = 0;\n        if (this.doughnut) {\n            this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n        }\n        this.domain = this.getDomain();\n        // sort data according to domain\n        this.data = this.results.sort((a, b) => {\n            return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n        });\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: ScaleType.Ordinal,\n            domain: this.domain,\n            colors: this.colors,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    hasNoOptionalMarginsSet() {\n        return !this.margins || this.margins.length <= 0;\n    }\n}\nPieChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPieChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieChartComponent, selector: \"ngx-charts-pie-chart\", inputs: { labels: \"labels\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", explodeSlices: \"explodeSlices\", doughnut: \"doughnut\", arcWidth: \"arcWidth\", gradient: \"gradient\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", labelFormatting: \"labelFormatting\", trimLabels: \"trimLabels\", maxLabelLength: \"maxLabelLength\", tooltipText: \"tooltipText\", margins: \"margins\" }, outputs: { dblclick: \"dblclick\", select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: [\"colors\", \"series\", \"dims\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"showLabels\", \"gradient\", \"activeEntries\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"tooltipText\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-pie-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"] }]\n        }], propDecorators: { labels: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], doughnut: [{\n                type: Input\n            }], arcWidth: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], trimLabels: [{\n                type: Input\n            }], maxLabelLength: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], dblclick: [{\n                type: Output\n            }], margins: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nfunction gridSize(dims, len, minWidth) {\n    let rows = 1;\n    let cols = len;\n    const width = dims.width;\n    if (width > minWidth) {\n        while (width / cols < minWidth) {\n            rows += 1;\n            cols = Math.ceil(len / rows);\n        }\n    }\n    return [cols, rows];\n}\nfunction gridLayout(dims, data, minWidth, designatedTotal) {\n    const xScale = scaleBand();\n    const yScale = scaleBand();\n    const width = dims.width;\n    const height = dims.height;\n    const [columns, rows] = gridSize(dims, data.length, minWidth);\n    const xDomain = [];\n    const yDomain = [];\n    for (let i = 0; i < rows; i++) {\n        yDomain.push(i);\n    }\n    for (let i = 0; i < columns; i++) {\n        xDomain.push(i);\n    }\n    xScale.domain(xDomain);\n    yScale.domain(yDomain);\n    xScale.rangeRound([0, width], 0.1);\n    yScale.rangeRound([0, height], 0.1);\n    const res = [];\n    const total = designatedTotal ? designatedTotal : getTotal(data);\n    const cardWidth = xScale.bandwidth();\n    const cardHeight = yScale.bandwidth();\n    for (let i = 0; i < data.length; i++) {\n        res[i] = {};\n        res[i].data = {\n            name: data[i] ? data[i].name : '',\n            value: data[i] ? data[i].value : undefined,\n            extra: data[i] ? data[i].extra : undefined,\n            label: data[i] ? data[i].label : ''\n        };\n        res[i].x = xScale(i % columns);\n        res[i].y = yScale(Math.floor(i / columns));\n        res[i].width = cardWidth;\n        res[i].height = cardHeight;\n        res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\n        res[i].data.total = total;\n    }\n    return res;\n}\nfunction getTotal(results) {\n    return results.map(d => (d ? d.value : 0)).reduce((sum, val) => sum + val, 0);\n}\n\nclass PieGridSeriesComponent {\n    constructor(element) {\n        this.innerRadius = 70;\n        this.outerRadius = 80;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.layout = pie()\n            .value(d => d.data.value)\n            .sort(null);\n        this.arcs = this.getArcs();\n    }\n    getArcs() {\n        return this.layout(this.data).map((arc, index) => {\n            const label = arc.data.data.name;\n            const other = arc.data.data.other;\n            if (index === 0) {\n                arc.startAngle = 0;\n            }\n            const color = this.colors(label);\n            return {\n                data: arc.data.data,\n                class: 'arc ' + 'arc' + index,\n                fill: color,\n                startAngle: other ? 0 : arc.startAngle,\n                endAngle: arc.endAngle,\n                animate: this.animations && !other,\n                pointerEvents: !other\n            };\n        });\n    }\n    onClick(data) {\n        this.select.emit(this.data[0].data);\n    }\n    trackBy(index, item) {\n        return item.data.name;\n    }\n    label(arc) {\n        return arc.data.name;\n    }\n    color(arc) {\n        return this.colors(this.label(arc));\n    }\n}\nPieGridSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridSeriesComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nPieGridSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieGridSeriesComponent, selector: \"g[ngx-charts-pie-grid-series]\", inputs: { colors: \"colors\", data: \"data\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-grid-series]',\n                    template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { colors: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass PieGridComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.tooltipDisabled = false;\n        this.label = 'Total';\n        this.minWidth = 150;\n        this.activeEntries = [];\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [20, 20, 20, 20];\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n        this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n        this.series = this.getSeries();\n        this.setColors();\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    defaultTooltipText({ data }) {\n        const label = trimLabel(formatLabel(data.name));\n        const val = data.value.toLocaleString();\n        return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    getSeries() {\n        const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n        return this.data.map(d => {\n            const baselineLabelHeight = 20;\n            const padding = 10;\n            const name = d.data.name;\n            const label = formatLabel(name);\n            const value = d.data.value;\n            const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n            const innerRadius = radius * 0.9;\n            let count = 0;\n            const colors = () => {\n                count += 1;\n                if (count === 1) {\n                    return 'rgba(100,100,100,0.3)';\n                }\n                else {\n                    return this.colorScale.getColor(label);\n                }\n            };\n            const xPos = d.x + (d.width - padding) / 2;\n            const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n            return {\n                transform: `translate(${xPos}, ${yPos})`,\n                colors,\n                innerRadius,\n                outerRadius: radius,\n                name,\n                label: trimLabel(label),\n                total: value,\n                value,\n                percent: format('.1%')(d.data.percent),\n                data: [\n                    d,\n                    {\n                        data: {\n                            other: true,\n                            value: total - value,\n                            name: d.data.name\n                        }\n                    }\n                ]\n            };\n        });\n    }\n    getTotal() {\n        return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colorScale = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nPieGridComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPieGridComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieGridComponent, selector: \"ngx-charts-pie-grid\", inputs: { designatedTotal: \"designatedTotal\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", label: \"label\", minWidth: \"minWidth\", activeEntries: \"activeEntries\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieGridSeriesComponent, selector: \"g[ngx-charts-pie-grid-series]\", inputs: [\"colors\", \"data\", \"innerRadius\", \"outerRadius\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-pie-grid', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"] }]\n        }], propDecorators: { designatedTotal: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], minWidth: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass PieChartModule {\n}\nPieChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPieChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, declarations: [AdvancedPieChartComponent,\n        PieLabelComponent,\n        PieArcComponent,\n        PieChartComponent,\n        PieGridComponent,\n        PieGridSeriesComponent,\n        PieSeriesComponent], imports: [ChartCommonModule], exports: [AdvancedPieChartComponent,\n        PieLabelComponent,\n        PieArcComponent,\n        PieChartComponent,\n        PieGridComponent,\n        PieGridSeriesComponent,\n        PieSeriesComponent] });\nPieChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [\n                        AdvancedPieChartComponent,\n                        PieLabelComponent,\n                        PieArcComponent,\n                        PieChartComponent,\n                        PieGridComponent,\n                        PieGridSeriesComponent,\n                        PieSeriesComponent\n                    ],\n                    exports: [\n                        AdvancedPieChartComponent,\n                        PieLabelComponent,\n                        PieArcComponent,\n                        PieChartComponent,\n                        PieGridComponent,\n                        PieGridSeriesComponent,\n                        PieSeriesComponent\n                    ]\n                }]\n        }] });\n\nclass PolarChartModule {\n}\nPolarChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPolarChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, declarations: [PolarChartComponent, PolarSeriesComponent], imports: [ChartCommonModule, PieChartModule, LineChartModule], exports: [PolarChartComponent, PolarSeriesComponent] });\nPolarChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, imports: [[ChartCommonModule, PieChartModule, LineChartModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule, PieChartModule, LineChartModule],\n                    declarations: [PolarChartComponent, PolarSeriesComponent],\n                    exports: [PolarChartComponent, PolarSeriesComponent]\n                }]\n        }] });\n\nfunction calculateTextWidth(fontFamilyKey, text, defaultWidth = 8) {\n    return text.split('').reduce((acc, curr) => {\n        const width = fontFamilyKey[curr] || defaultWidth;\n        return acc + width;\n    }, 0);\n}\n\nconst VERDANA_FONT_WIDTHS_16_PX = {\n    '0': 10,\n    '1': 10,\n    '2': 10,\n    '3': 10,\n    '4': 10,\n    '5': 10,\n    '6': 10,\n    '7': 10,\n    '8': 10,\n    '9': 10,\n    A: 11,\n    B: 11,\n    C: 11,\n    D: 12,\n    E: 10,\n    F: 9,\n    G: 12,\n    H: 12,\n    I: 7,\n    J: 7,\n    K: 11,\n    L: 9,\n    M: 13,\n    N: 12,\n    O: 13,\n    P: 10,\n    Q: 13,\n    R: 11,\n    S: 11,\n    T: 10,\n    U: 12,\n    V: 11,\n    W: 16,\n    X: 11,\n    Y: 10,\n    Z: 11,\n    a: 10,\n    b: 10,\n    c: 8,\n    d: 10,\n    e: 10,\n    f: 6,\n    g: 10,\n    h: 10,\n    i: 4,\n    j: 6,\n    k: 9,\n    l: 4,\n    m: 16,\n    n: 10,\n    o: 10,\n    p: 10,\n    q: 10,\n    r: 7,\n    s: 8,\n    t: 6,\n    u: 10,\n    v: 9,\n    w: 13,\n    x: 9,\n    y: 9,\n    z: 8,\n    '!': 6,\n    '@': 16,\n    '#': 13,\n    $: 10,\n    '%': 17,\n    '^': 13,\n    '&': 12,\n    '*': 10,\n    '(': 7,\n    ')': 7,\n    _: 10,\n    '-': 7,\n    '+': 13,\n    '=': 13,\n    ',': 6,\n    '.': 6,\n    '/': 7,\n    \"'\": 4,\n    ':': 7,\n    '|': 7,\n    '?': 9,\n    ';': 7,\n    '<': 13,\n    '>': 13\n};\n\nclass CardComponent {\n    constructor(element, cd, zone, platformId) {\n        this.cd = cd;\n        this.zone = zone;\n        this.platformId = platformId;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.value = '';\n        this.textFontSize = 12;\n        this.textTransform = '';\n        this.initialized = false;\n        this.bandHeight = 10;\n        this.textPadding = [10, 20, 5, 20];\n        this.labelFontSize = 15;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.scaleTextSSR();\n        }\n    }\n    ngOnDestroy() {\n        if (isPlatformBrowser(this.platformId)) {\n            cancelAnimationFrame(this.animationReq);\n        }\n    }\n    update() {\n        this.zone.run(() => {\n            const hasValue = this.data && typeof this.data.value !== 'undefined';\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\n            this.transform = `translate(${this.x} , ${this.y})`;\n            this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n            this.cardWidth = Math.max(0, this.width);\n            this.cardHeight = Math.max(0, this.height);\n            this.label = this.label ? this.label : this.data.name;\n            const cardData = {\n                label: this.label,\n                data: this.data,\n                value: this.data.value\n            };\n            this.formattedLabel = labelFormatting(cardData);\n            this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n            const value = hasValue ? valueFormatting(cardData) : '';\n            this.value = this.paddedValue(value);\n            this.setPadding();\n            this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n            setTimeout(() => {\n                if (isPlatformBrowser(this.platformId)) {\n                    this.scaleText();\n                }\n                this.value = value;\n                if (hasValue && !this.initialized) {\n                    setTimeout(() => this.startCount(), 20);\n                }\n            }, 8);\n        });\n    }\n    paddedValue(value) {\n        if (this.medianSize && this.medianSize > value.length) {\n            value += '\\u2007'.repeat(this.medianSize - value.length);\n        }\n        return value;\n    }\n    startCount() {\n        if (!this.initialized && this.animations) {\n            cancelAnimationFrame(this.animationReq);\n            const val = this.data.value;\n            const decs = decimalChecker(val);\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const callback = ({ value, finished }) => {\n                this.zone.run(() => {\n                    value = finished ? val : value;\n                    this.value = valueFormatting({ label: this.label, data: this.data, value });\n                    if (!finished) {\n                        this.value = this.paddedValue(this.value);\n                    }\n                    this.cd.markForCheck();\n                });\n            };\n            this.animationReq = count(0, val, decs, 1, callback);\n            this.initialized = true;\n        }\n    }\n    scaleText() {\n        this.zone.run(() => {\n            const { width, height } = this.textEl.nativeElement.getBoundingClientRect();\n            if (width === 0 || height === 0) {\n                return;\n            }\n            const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\n            const availableWidth = this.cardWidth - 2 * textPadding;\n            const availableHeight = this.cardHeight / 3;\n            const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n            this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n            this.labelFontSize = Math.min(this.textFontSize, 15);\n            this.setPadding();\n            this.cd.markForCheck();\n        });\n    }\n    scaleTextSSR() {\n        const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, this.value, 10);\n        const height = 18;\n        const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\n        const availableWidth = this.cardWidth - 2 * textPadding;\n        const availableHeight = this.cardHeight / 3;\n        const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n        this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n        this.labelFontSize = Math.min(this.textFontSize, 15);\n        this.setPadding();\n    }\n    setPadding() {\n        this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n        const padding = this.cardHeight / 2;\n        this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n        this.textPadding[2] = padding - this.labelFontSize;\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n}\nCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CardComponent, selector: \"g[ngx-charts-card]\", inputs: { color: \"color\", bandColor: \"bandColor\", textColor: \"textColor\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", label: \"label\", data: \"data\", medianSize: \"medianSize\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", animations: \"animations\" }, outputs: { select: \"select\" }, viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-card]',\n                    template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { color: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], medianSize: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl', { static: false }]\n            }] } });\n\n/**\n * Converts a hex to RGB\n *\n * @export\n */\nfunction hexToRgb(value) {\n    // deprecated, use d3.color()\n    return d3_color.rgb(value);\n}\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\nfunction invertColor(value) {\n    const color = d3_color.rgb(value);\n    const { r, g, b, opacity } = color;\n    if (opacity === 0) {\n        return color.toString();\n    }\n    const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n    const depth = yiq >= 128 ? -0.8 : 0.8;\n    return shadeRGBColor(color, depth);\n}\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param \\{ r, g, b }\n */\nfunction shadeRGBColor({ r, g, b }, percent) {\n    const t = percent < 0 ? 0 : 255;\n    const p = percent < 0 ? percent * -1 : percent;\n    r = Math.round((t - r) * p) + r;\n    g = Math.round((t - g) * p) + g;\n    b = Math.round((t - b) * p) + b;\n    return `rgb(${r}, ${g}, ${b})`;\n}\n\nclass CardSeriesComponent {\n    constructor() {\n        this.innerPadding = 15;\n        this.emptyColor = 'rgba(0, 0, 0, 0)';\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        if (this.data.length > 2) {\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const sortedLengths = this.data\n                .map(d => {\n                const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n                return hasValue\n                    ? valueFormatting({\n                        data: d.data,\n                        label: d ? d.data.name : '',\n                        value: d && d.data ? d.data.value : ''\n                    }).length\n                    : 0;\n            })\n                .sort((a, b) => b - a);\n            const idx = Math.ceil(this.data.length / 2);\n            this.medianSize = sortedLengths[idx];\n        }\n        const cards = this.getCards();\n        this.cards = cards.filter(d => d.data.value !== null);\n        this.emptySlots = cards.filter(d => d.data.value === null);\n    }\n    getCards() {\n        const yPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n        const xPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n        return this.data.map((d, index) => {\n            let label = d.data.name;\n            if (label && label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label ? label.toLocaleString() : label;\n            }\n            const value = d.data.value;\n            const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n            const color = this.cardColor || valueColor || '#000';\n            return {\n                x: d.x,\n                y: d.y,\n                width: d.width - xPadding,\n                height: d.height - yPadding,\n                color,\n                bandColor: this.bandColor || valueColor,\n                textColor: this.textColor || invertColor(color),\n                label,\n                data: d.data,\n                tooltipText: `${label}: ${value}`\n            };\n        });\n    }\n    trackBy(index, card) {\n        return card.label;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n}\nCardSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCardSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CardSeriesComponent, selector: \"g[ngx-charts-card-series]\", inputs: { data: \"data\", dims: \"dims\", colors: \"colors\", innerPadding: \"innerPadding\", cardColor: \"cardColor\", bandColor: \"bandColor\", emptyColor: \"emptyColor\", textColor: \"textColor\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `, isInline: true, components: [{ type: CardComponent, selector: \"g[ngx-charts-card]\", inputs: [\"color\", \"bandColor\", \"textColor\", \"x\", \"y\", \"width\", \"height\", \"label\", \"data\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\"], outputs: [\"select\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-card-series]',\n                    template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], cardColor: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], emptyColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass NumberCardComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.emptyColor = 'rgba(0, 0, 0, 0)';\n        this.innerPadding = 15;\n        this.margin = [10, 10, 10, 10];\n    }\n    get clickable() {\n        return !!this.select.observers.length;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        const size = gridSize(this.dims, this.results.length, 150);\n        const N = size[0] * size[1];\n        const data = this.results.slice();\n        while (data.length < N) {\n            data.push({ value: null });\n        }\n        this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n}\nNumberCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nNumberCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: NumberCardComponent, selector: \"ngx-charts-number-card\", inputs: { cardColor: \"cardColor\", bandColor: \"bandColor\", emptyColor: \"emptyColor\", innerPadding: \"innerPadding\", textColor: \"textColor\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", designatedTotal: \"designatedTotal\" }, usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: CardSeriesComponent, selector: \"g[ngx-charts-card-series]\", inputs: [\"data\", \"dims\", \"colors\", \"innerPadding\", \"cardColor\", \"bandColor\", \"emptyColor\", \"textColor\", \"valueFormatting\", \"labelFormatting\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-number-card', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"] }]\n        }], propDecorators: { cardColor: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], emptyColor: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], designatedTotal: [{\n                type: Input\n            }] } });\n\nclass NumberCardModule {\n}\nNumberCardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNumberCardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, declarations: [CardComponent, CardSeriesComponent, NumberCardComponent], imports: [ChartCommonModule], exports: [CardComponent, CardSeriesComponent, NumberCardComponent] });\nNumberCardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\n                    exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\n                }]\n        }] });\n\nclass TreeMapCellComponent {\n    constructor(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.initialized = false;\n        this.orientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n        this.update();\n        this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n        const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\n        const cellData = {\n            data: this.data,\n            label: this.label,\n            value: this.value\n        };\n        this.formattedValue = this.valueFormatting(cellData.value);\n        this.formattedLabel = labelFormatting(cellData);\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        this.gradientStops = this.getGradientStops();\n    }\n    update() {\n        if (this.initialized) {\n            this.animateToCurrentForm();\n        }\n        else {\n            if (this.animations) {\n                this.loadAnimation();\n            }\n            this.initialized = true;\n        }\n    }\n    loadAnimation() {\n        const node = select(this.element).select('.cell');\n        node.attr('opacity', 0).attr('x', this.x).attr('y', this.y);\n        this.animateToCurrentForm();\n    }\n    getTextColor() {\n        return invertColor(this.fill);\n    }\n    animateToCurrentForm() {\n        const node = select(this.element).select('.cell');\n        if (this.animations) {\n            node\n                .transition()\n                .duration(750)\n                .attr('opacity', 1)\n                .attr('x', this.x)\n                .attr('y', this.y)\n                .attr('width', this.width)\n                .attr('height', this.height);\n        }\n        else {\n            node.attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n        }\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    getGradientStops() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: 0.3\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n}\nTreeMapCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTreeMapCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapCellComponent, selector: \"g[ngx-charts-tree-map-cell]\", inputs: { data: \"data\", fill: \"fill\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", label: \"label\", value: \"value\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tree-map-cell]',\n                    template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass TreeMapCellSeriesComponent {\n    constructor() {\n        this.gradient = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.styleTypes = StyleTypes;\n        this.placementTypes = PlacementTypes;\n    }\n    ngOnChanges(changes) {\n        this.cells = this.getCells();\n    }\n    getCells() {\n        return this.data.children\n            .filter(d => {\n            return d.depth === 1;\n        })\n            .map((d, index) => {\n            const label = d.id;\n            return {\n                data: d.data,\n                x: d.x0,\n                y: d.y0,\n                width: d.x1 - d.x0,\n                height: d.y1 - d.y0,\n                fill: this.colors.getColor(label),\n                label,\n                value: d.value\n            };\n        });\n    }\n    getTooltipText({ label, value }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nTreeMapCellSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTreeMapCellSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapCellSeriesComponent, selector: \"g[ngx-charts-tree-map-cell-series]\", inputs: { data: \"data\", dims: \"dims\", colors: \"colors\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: TreeMapCellComponent, selector: \"g[ngx-charts-tree-map-cell]\", inputs: [\"data\", \"fill\", \"x\", \"y\", \"width\", \"height\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\"], outputs: [\"select\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tree-map-cell-series]',\n                    template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass TreeMapComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.select = new EventEmitter();\n        this.margin = [10, 10, 10, 10];\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.domain = this.getDomain();\n        this.treemap = treemap().size([this.dims.width, this.dims.height]);\n        const rootNode = {\n            name: 'root',\n            value: 0,\n            isRoot: true\n        };\n        const root = stratify()\n            .id(d => {\n            let label = d.name;\n            if (label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label.toLocaleString();\n            }\n            return label;\n        })\n            .parentId(d => (d.isRoot ? null : 'root'))([rootNode, ...this.results])\n            .sum(d => d.value);\n        this.data = this.treemap(root);\n        this.setColors();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getDomain() {\n        return this.results.map(d => d.name);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n}\nTreeMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTreeMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapComponent, selector: \"ngx-charts-tree-map\", inputs: { results: \"results\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\" }, outputs: { select: \"select\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: TreeMapCellSeriesComponent, selector: \"g[ngx-charts-tree-map-cell-series]\", inputs: [\"data\", \"dims\", \"colors\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-tree-map', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"] }]\n        }], propDecorators: { results: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass TreeMapModule {\n}\nTreeMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTreeMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent], imports: [ChartCommonModule], exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent] });\nTreeMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\n                    exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\n                }]\n        }] });\n\nvar ElementType;\n(function (ElementType) {\n    ElementType[\"Value\"] = \"value\";\n    ElementType[\"Units\"] = \"units\";\n})(ElementType || (ElementType = {}));\nclass LinearGaugeComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.min = 0;\n        this.max = 100;\n        this.value = 0;\n        this.margin = [10, 20, 10, 20];\n        this.valueResizeScale = 1;\n        this.unitsResizeScale = 1;\n        this.valueTextTransform = '';\n        this.valueTranslate = '';\n        this.unitsTextTransform = '';\n        this.unitsTranslate = '';\n        this.barOrientation = BarOrientation;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        setTimeout(() => {\n            this.scaleText(ElementType.Value);\n            this.scaleText(ElementType.Units);\n        });\n    }\n    update() {\n        super.update();\n        this.hasPreviousValue = this.previousValue !== undefined;\n        this.max = Math.max(this.max, this.value);\n        this.min = Math.min(this.min, this.value);\n        if (this.hasPreviousValue) {\n            this.max = Math.max(this.max, this.previousValue);\n            this.min = Math.min(this.min, this.previousValue);\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.setColors();\n        const xOffset = this.margin[3] + this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = `translate(${xOffset}, ${yOffset})`;\n        this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\n        this.valueTranslate = `translate(0, -15)`;\n        this.unitsTranslate = `translate(0, 15)`;\n        if (isPlatformServer(this.platformId)) {\n            this.scaleTextSSR('value');\n            this.scaleTextSSR('units');\n        }\n        else {\n            setTimeout(() => this.scaleText(ElementType.Value), 50);\n            setTimeout(() => this.scaleText(ElementType.Units), 50);\n        }\n    }\n    getValueDomain() {\n        return [this.min, this.max];\n    }\n    getValueScale() {\n        return scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    }\n    getDisplayValue() {\n        if (this.valueFormatting) {\n            return this.valueFormatting(this.value);\n        }\n        return this.value.toLocaleString();\n    }\n    scaleText(element, repeat = true) {\n        let el;\n        let resizeScale;\n        if (element === ElementType.Value) {\n            el = this.valueTextEl;\n            resizeScale = this.valueResizeScale;\n        }\n        else {\n            el = this.unitsTextEl;\n            resizeScale = this.unitsResizeScale;\n        }\n        const { width, height } = el.nativeElement.getBoundingClientRect();\n        if (width === 0 || height === 0)\n            return;\n        const oldScale = resizeScale;\n        const availableWidth = this.dims.width;\n        const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n        const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n        const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n        resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n        if (resizeScale !== oldScale) {\n            if (element === ElementType.Value) {\n                this.valueResizeScale = resizeScale;\n                this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n            }\n            else {\n                this.unitsResizeScale = resizeScale;\n                this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n            }\n            this.cd.markForCheck();\n            if (repeat && isPlatformBrowser(this.platformId)) {\n                setTimeout(() => {\n                    this.scaleText(element, false);\n                }, 50);\n            }\n        }\n    }\n    scaleTextSSR(element) {\n        let resizeScale = 1;\n        const value = element === 'value' ? this.displayValue : this.units;\n        const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, value, 10);\n        const height = 25;\n        const availableWidth = this.dims.width;\n        const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n        const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n        const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n        resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n        if (element === 'value') {\n            this.valueResizeScale = resizeScale;\n            this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        }\n        else {\n            this.unitsResizeScale = resizeScale;\n            this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        }\n        this.cd.markForCheck();\n    }\n    onClick() {\n        this.select.emit({\n            name: 'Value',\n            value: this.value\n        });\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, [this.value], this.customColors);\n    }\n}\nLinearGaugeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LinearGaugeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLinearGaugeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LinearGaugeComponent, selector: \"ngx-charts-linear-gauge\", inputs: { min: \"min\", max: \"max\", value: \"value\", units: \"units\", previousValue: \"previousValue\", valueFormatting: \"valueFormatting\" }, viewQueries: [{ propertyName: \"valueTextEl\", first: true, predicate: [\"valueTextEl\"], descendants: true }, { propertyName: \"unitsTextEl\", first: true, predicate: [\"unitsTextEl\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LinearGaugeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-linear-gauge', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"] }]\n        }], propDecorators: { min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], units: [{\n                type: Input\n            }], previousValue: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], valueTextEl: [{\n                type: ViewChild,\n                args: ['valueTextEl']\n            }], unitsTextEl: [{\n                type: ViewChild,\n                args: ['unitsTextEl']\n            }] } });\n\nclass GaugeArcComponent {\n    constructor() {\n        this.isActive = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    tooltipText(arc) {\n        const label = formatLabel(arc.data.name);\n        let val;\n        if (this.valueFormatting) {\n            val = this.valueFormatting(arc.data.value);\n        }\n        else {\n            val = formatLabel(arc.data.value);\n        }\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n}\nGaugeArcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeArcComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGaugeArcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeArcComponent, selector: \"g[ngx-charts-gauge-arc]\", inputs: { backgroundArc: \"backgroundArc\", valueArc: \"valueArc\", cornerRadius: \"cornerRadius\", colors: \"colors\", isActive: \"isActive\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeArcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-gauge-arc]',\n                    template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { backgroundArc: [{\n                type: Input\n            }], valueArc: [{\n                type: Input\n            }], cornerRadius: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass GaugeAxisComponent {\n    constructor() {\n        this.rotate = '';\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.rotationAngle = -90 + this.startAngle;\n        this.rotate = `rotate(${this.rotationAngle})`;\n        this.ticks = this.getTicks();\n    }\n    getTicks() {\n        const bigTickSegment = this.angleSpan / this.bigSegments;\n        const smallTickSegment = bigTickSegment / this.smallSegments;\n        const tickLength = 20;\n        const ticks = {\n            big: [],\n            small: []\n        };\n        const startDistance = this.radius + 10;\n        const textDist = startDistance + tickLength + 10;\n        for (let i = 0; i <= this.bigSegments; i++) {\n            const angleDeg = i * bigTickSegment;\n            const angle = (angleDeg * Math.PI) / 180;\n            const textAnchor = this.getTextAnchor(angleDeg);\n            let skip = false;\n            if (i === 0 && this.angleSpan === 360) {\n                skip = true;\n            }\n            if (!skip) {\n                let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n                if (this.tickFormatting) {\n                    text = this.tickFormatting(text);\n                }\n                ticks.big.push({\n                    line: this.getTickPath(startDistance, tickLength, angle),\n                    textAnchor,\n                    text,\n                    textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\n          `\n                });\n            }\n            if (i === this.bigSegments) {\n                continue;\n            }\n            for (let j = 1; j <= this.smallSegments; j++) {\n                const smallAngleDeg = angleDeg + j * smallTickSegment;\n                const smallAngle = (smallAngleDeg * Math.PI) / 180;\n                ticks.small.push({\n                    line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n                });\n            }\n        }\n        return ticks;\n    }\n    getTextAnchor(angle) {\n        // [0, 45] = 'middle';\n        // [46, 135] = 'start';\n        // [136, 225] = 'middle';\n        // [226, 315] = 'end';\n        angle = (this.startAngle + angle) % 360;\n        let textAnchor = TextAnchor.Middle;\n        if (angle > 45 && angle <= 135) {\n            textAnchor = TextAnchor.Start;\n        }\n        else if (angle > 225 && angle <= 315) {\n            textAnchor = TextAnchor.End;\n        }\n        return textAnchor;\n    }\n    getTickPath(startDistance, tickLength, angle) {\n        const y1 = startDistance * Math.sin(angle);\n        const y2 = (startDistance + tickLength) * Math.sin(angle);\n        const x1 = startDistance * Math.cos(angle);\n        const x2 = (startDistance + tickLength) * Math.cos(angle);\n        const points = [\n            { x: x1, y: y1 },\n            { x: x2, y: y2 }\n        ];\n        const lineGenerator = line()\n            .x(d => d.x)\n            .y(d => d.y);\n        return lineGenerator(points);\n    }\n}\nGaugeAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGaugeAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeAxisComponent, selector: \"g[ngx-charts-gauge-axis]\", inputs: { bigSegments: \"bigSegments\", smallSegments: \"smallSegments\", min: \"min\", max: \"max\", angleSpan: \"angleSpan\", startAngle: \"startAngle\", radius: \"radius\", valueScale: \"valueScale\", tickFormatting: \"tickFormatting\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-gauge-axis]',\n                    template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { bigSegments: [{\n                type: Input\n            }], smallSegments: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], angleSpan: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], valueScale: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }] } });\n\nclass GaugeComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.min = 0;\n        this.max = 100;\n        this.bigSegments = 10;\n        this.smallSegments = 5;\n        this.showAxis = true;\n        this.startAngle = -120;\n        this.angleSpan = 240;\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.showText = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.resizeScale = 1;\n        this.rotation = '';\n        this.textTransform = 'scale(1, 1)';\n        this.cornerRadius = 10;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        setTimeout(() => this.scaleText());\n    }\n    update() {\n        super.update();\n        if (!this.showAxis) {\n            if (!this.margin) {\n                this.margin = [10, 20, 10, 20];\n            }\n        }\n        else {\n            if (!this.margin) {\n                this.margin = [60, 100, 60, 100];\n            }\n        }\n        // make the starting angle positive\n        if (this.startAngle < 0) {\n            this.startAngle = (this.startAngle % 360) + 360;\n        }\n        this.angleSpan = Math.min(this.angleSpan, 360);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.domain = this.getDomain();\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n        this.arcs = this.getArcs();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        const xOffset = this.margin[3] + this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = `translate(${xOffset}, ${yOffset})`;\n        this.rotation = `rotate(${this.startAngle})`;\n        setTimeout(() => this.scaleText(), 50);\n    }\n    getArcs() {\n        const arcs = [];\n        const availableRadius = this.outerRadius * 0.7;\n        const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n        const arcWidth = radiusPerArc * 0.7;\n        this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n        this.cornerRadius = Math.floor(arcWidth / 2);\n        let i = 0;\n        for (const d of this.results) {\n            const outerRadius = this.outerRadius - i * radiusPerArc;\n            const innerRadius = outerRadius - arcWidth;\n            const backgroundArc = {\n                endAngle: (this.angleSpan * Math.PI) / 180,\n                innerRadius,\n                outerRadius,\n                data: {\n                    value: this.max,\n                    name: d.name\n                }\n            };\n            const valueArc = {\n                endAngle: (Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI) / 180,\n                innerRadius,\n                outerRadius,\n                data: {\n                    value: d.value,\n                    name: d.name\n                }\n            };\n            const arc = {\n                backgroundArc,\n                valueArc\n            };\n            arcs.push(arc);\n            i++;\n        }\n        return arcs;\n    }\n    getDomain() {\n        return this.results.map(d => d.name);\n    }\n    getValueDomain() {\n        const values = this.results.map(d => d.value);\n        const dataMin = Math.min(...values);\n        const dataMax = Math.max(...values);\n        if (this.min !== undefined) {\n            this.min = Math.min(this.min, dataMin);\n        }\n        else {\n            this.min = dataMin;\n        }\n        if (this.max !== undefined) {\n            this.max = Math.max(this.max, dataMax);\n        }\n        else {\n            this.max = dataMax;\n        }\n        return [this.min, this.max];\n    }\n    getValueScale() {\n        return scaleLinear().range([0, this.angleSpan]).nice().domain(this.valueDomain);\n    }\n    getDisplayValue() {\n        const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n        if (this.textValue && 0 !== this.textValue.length) {\n            return this.textValue.toLocaleString();\n        }\n        if (this.valueFormatting) {\n            return this.valueFormatting(value);\n        }\n        return value.toLocaleString();\n    }\n    scaleText(repeat = true) {\n        if (!this.showText) {\n            return;\n        }\n        const { width } = this.textEl.nativeElement.getBoundingClientRect();\n        const oldScale = this.resizeScale;\n        if (width === 0) {\n            this.resizeScale = 1;\n        }\n        else {\n            const availableSpace = this.textRadius;\n            this.resizeScale = Math.floor((availableSpace / (width / this.resizeScale)) * 100) / 100;\n        }\n        if (this.resizeScale !== oldScale) {\n            this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n            this.cd.markForCheck();\n            if (repeat) {\n                setTimeout(() => this.scaleText(false), 50);\n            }\n        }\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: ScaleType.Ordinal,\n            colors: this.colors,\n            domain: this.domain,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    }\n    trackBy(index, item) {\n        return item.valueArc.data.name;\n    }\n}\nGaugeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nGaugeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeComponent, selector: \"ngx-charts-gauge\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", min: \"min\", max: \"max\", textValue: \"textValue\", units: \"units\", bigSegments: \"bigSegments\", smallSegments: \"smallSegments\", results: \"results\", showAxis: \"showAxis\", startAngle: \"startAngle\", angleSpan: \"angleSpan\", activeEntries: \"activeEntries\", axisTickFormatting: \"axisTickFormatting\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", showText: \"showText\", margin: \"margin\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GaugeArcComponent, selector: \"g[ngx-charts-gauge-arc]\", inputs: [\"backgroundArc\", \"valueArc\", \"cornerRadius\", \"colors\", \"isActive\", \"tooltipDisabled\", \"valueFormatting\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: GaugeAxisComponent, selector: \"g[ngx-charts-gauge-axis]\", inputs: [\"bigSegments\", \"smallSegments\", \"min\", \"max\", \"angleSpan\", \"startAngle\", \"radius\", \"valueScale\", \"tickFormatting\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-gauge', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], textValue: [{\n                type: Input\n            }], units: [{\n                type: Input\n            }], bigSegments: [{\n                type: Input\n            }], smallSegments: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], showAxis: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], angleSpan: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], axisTickFormatting: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], showText: [{\n                type: Input\n            }], margin: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl']\n            }] } });\n\nclass GaugeModule {\n}\nGaugeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGaugeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent], imports: [ChartCommonModule, PieChartModule, BarChartModule], exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent] });\nGaugeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, imports: [[ChartCommonModule, PieChartModule, BarChartModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule, PieChartModule, BarChartModule],\n                    declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\n                    exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\n                }]\n        }] });\n\n// The export is needed here to generate a valid polyfills.metadata.json file\nfunction ngxChartsPolyfills() {\n    // IE11 fix\n    // Ref: https://github.com/swimlane/ngx-charts/issues/386\n    if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n        SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n    }\n}\n\nclass NgxChartsModule {\n    constructor() {\n        ngxChartsPolyfills();\n    }\n}\nNgxChartsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxChartsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, exports: [ChartCommonModule,\n        AreaChartModule,\n        BarChartModule,\n        BoxChartModule,\n        BubbleChartModule,\n        HeatMapModule,\n        LineChartModule,\n        PolarChartModule,\n        NumberCardModule,\n        PieChartModule,\n        TreeMapModule,\n        GaugeModule] });\nNgxChartsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, imports: [ChartCommonModule,\n        AreaChartModule,\n        BarChartModule,\n        BoxChartModule,\n        BubbleChartModule,\n        HeatMapModule,\n        LineChartModule,\n        PolarChartModule,\n        NumberCardModule,\n        PieChartModule,\n        TreeMapModule,\n        GaugeModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [\n                        ChartCommonModule,\n                        AreaChartModule,\n                        BarChartModule,\n                        BoxChartModule,\n                        BubbleChartModule,\n                        HeatMapModule,\n                        LineChartModule,\n                        PolarChartModule,\n                        NumberCardModule,\n                        PieChartModule,\n                        TreeMapModule,\n                        GaugeModule\n                    ]\n                }]\n        }], ctorParameters: function () { return []; } });\n\nfunction tickFormat(fieldType, groupByType) {\n    return function (label) {\n        if (label === 'No Value' || label === 'Other') {\n            return label;\n        }\n        if (fieldType === 'date' && groupByType === 'groupBy') {\n            const formatter = timeFormat('MM/DD/YYYY');\n            return formatter(label);\n        }\n        return label.toString();\n    };\n}\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/*\n * Public API Surface of ngx-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdvancedLegendComponent, AdvancedPieChartComponent, AreaChartComponent, AreaChartModule, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaComponent, AreaSeriesComponent, AxesModule, AxisLabelComponent, BarChartModule, BarChartType, BarComponent, BarHorizontal2DComponent, BarHorizontalComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarLabelComponent, BarOrientation, BarVertical2DComponent, BarVerticalComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BaseChartComponent, BoxChartComponent, BoxChartModule, BoxComponent, BoxSeriesComponent, BubbleChartComponent, BubbleChartModule, BubbleSeriesComponent, CardComponent, CardSeriesComponent, ChartCommonModule, ChartComponent, CircleComponent, CircleSeriesComponent, ColorHelper, CountUpDirective, D0Types, GaugeArcComponent, GaugeAxisComponent, GaugeComponent, GaugeModule, GridPanelComponent, GridPanelSeriesComponent, HeatCellSeriesComponent, HeatMapCellComponent, HeatMapComponent, HeatMapModule, LegendComponent, LegendEntryComponent, LegendPosition, LegendType, LineChartComponent, LineChartModule, LineComponent, LineSeriesComponent, LinearGaugeComponent, NgxChartsModule, NumberCardComponent, NumberCardModule, Orientation, PieArcComponent, PieChartComponent, PieChartModule, PieGridComponent, PieGridSeriesComponent, PieLabelComponent, PieSeriesComponent, PlacementTypes, PolarChartComponent, PolarChartModule, PolarSeriesComponent, ScaleLegendComponent, ScaleType, SeriesHorizontal, SeriesType, SeriesVerticalComponent, ShowTypes, StyleTypes, SvgLinearGradientComponent, SvgRadialGradientComponent, TextAnchor, Timeline, TooltipArea, TooltipContentComponent, TooltipDirective, TooltipModule, TooltipService, TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent, TreeMapModule, VisibilityObserver, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent, calculateViewDimensions, colorSets, count, decimalChecker, escapeLabel, formatLabel, getDomain, getScale, getScaleType, getUniqueXDomainValues, getXDomainArray, gridLayout, gridSize, hexToRgb, id, invertColor, reduceTicks, shadeRGBColor, sortByDomain, sortByTime, sortLinear, throttle, throttleable, tickFormat, trimLabel };\n"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,iBAAjC,EAAoDC,MAApD,EAA4DC,KAA5D,EAAmEC,SAAnE,EAA8EC,WAA9E,EAA2FC,YAA3F,EAAyGC,UAAzG,EAAqHC,uBAArH,EAA8IC,YAA9I,EAA4JC,MAA5J,EAAoKC,SAApK,EAA+KC,QAA/K,EAAyLC,YAAzL,QAA6M,eAA7M;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,EAA8CC,YAA9C,QAAkE,iBAAlE;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,qBAAjD;AACA,SAASC,SAAT,QAA0B,MAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,KAA9B,EAAqCC,OAArC,QAAoD,qBAApD;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,EAA6CC,YAA7C,EAA2DC,aAA3D,EAA0EC,SAA1E,QAA2F,UAA3F;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,IAA5B,EAAkCC,GAAlC,EAAuCC,UAAvC,EAAmDC,mBAAnD,EAAwEC,GAAxE,QAAmF,UAAnF;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,QAA1B,QAA0C,UAA1C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,cAAlC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;IAsU0GvD,EAKlG,0B;IALkGA,EAMhG,6F;IANgGA,EAOlG,e;;;;iBAPkGA,E;IAAAA,EAMnF,a;IANmFA,EAMnF,4EANmFA,EAMnF,yC;;;;;;IANmFA,EAQlG,wB;;;;iBARkGA,E;IAAAA,EAQ9E,uCAR8EA,EAQ9E,gB;;;;;;IAR8EA,EA8fpG,6C;IA9foGA,EA+flE,U;IA/fkEA,EA+fvD,iB;;;;iBA/fuDA,E;IAAAA,EA+flE,a;IA/fkEA,EA+flE,gC;;;;;;cA/fkEA,E;;IAAAA,EAmgBhG,4D;IAngBgGA,EAygB5F;MAzgB4FA,EAygB5F;MAAA,aAzgB4FA,EAygB5F;MAAA,OAzgB4FA,EAygBlF,4CAAV;IAAA;MAzgB4FA,EAygB5F;MAAA,aAzgB4FA,EAygB5F;MAAA,OAzgB4FA,EA0gBhF,qCADZ;IAAA;MAzgB4FA,EAygB5F;MAAA,aAzgB4FA,EAygB5F;MAAA,OAzgB4FA,EA2gB9E,uCAFd;IAAA,E;IAzgB4FA,EA6gB9F,iB;;;;;iBA7gB8FA,E;IAAAA,EAqgB5F,a;IArgB4FA,EAqgB5F,+I;;;;;;IArgB4FA,E;IAAAA,EA6mBpG,kB;IA7mBoGA,EA6mBpG,2C;;;;iBA7mBoGA,E;IAAAA,EAgnBlG,yP;;;;;;cAhnBkGA,E;;IAAAA,E;IAAAA,EAunBpG,kB;IAvnBoGA,EAunBpG,0C;IAvnBoGA,EAioBlG;MAjoBkGA,EAioBlG;MAAA,aAjoBkGA,EAioBlG;MAAA,OAjoBkGA,EAioBpF,kDAAd;IAAA;MAjoBkGA,EAioBlG;MAAA,aAjoBkGA,EAioBlG;MAAA,OAjoBkGA,EAkoBjF,qDADjB;IAAA;MAjoBkGA,EAioBlG;MAAA,aAjoBkGA,EAioBlG;MAAA,OAjoBkGA,EAmoB/E,uDAFnB;IAAA,E;IAjoBkGA,EAqoBpG,e;;;;iBAroBoGA,E;IAAAA,EA0nBlG,+T;;;;;;;;;;;IA1nBkGA,E;IAAAA,EAgrCpG,sC;IAhrCoGA,EAirC3F,U;IAjrC2FA,EAirCrE,e;IAjrCqEA,EAkrClG,6B;IAlrCkGA,EAwrChG,U;IAxrCgGA,EAyrClG,iB;;;;;iBAzrCkGA,E;IAAAA,EAgrCrD,wD;IAhrCqDA,EAirC3F,a;IAjrC2FA,EAirC3F,8C;IAjrC2FA,EAsrChG,a;IAtrCgGA,EAsrChG,iC;IAtrCgGA,EAorChG,iF;IAprCgGA,EAwrChG,a;IAxrCgGA,EAwrChG,0E;;;;;;IAxrCgGA,E;IAAAA,EA8rCpG,uB;IA9rCoGA,EA+rClG,wB;IA/rCkGA,EAgsCpG,e;;;;iBAhsCoGA,E;IAAAA,EA8rCvE,qD;IA9rCuEA,EA+rC3C,a;IA/rC2CA,EA+rC3C,0C;;;;;;IA/rC2CA,E;IAAAA,EA6rCtG,uB;IA7rCsGA,EA8rCpG,4E;IA9rCoGA,EAisCtG,e;;;;;iBAjsCsGA,E;IAAAA,EA6rCpE,wD;IA7rCoEA,EA8rC5F,a;IA9rC4FA,EA8rC5F,yC;;;;;;;;cA9rC4FA,E;;IAAAA,E;IAAAA,EAsyCpG,0B;IAtyCoGA,EAqzClG;MArzCkGA,EAqzClG;MAAA,aArzCkGA,EAqzClG;MAAA,OArzCkGA,EAqzC7E,4CAArB;IAAA,E;IArzCkGA,EAsyCpG,e;;;;iBAtyCoGA,E;IAAAA,EAyyClG,4Z;;;;;;IAzyCkGA,E;IAAAA,EAuzCpG,qB;;;;iBAvzCoGA,E;IAAAA,EA0zClG,mK;;;;;;;;IA1zCkGA,E;IAAAA,EAklDpG,sC;IAllDoGA,EAmlD3F,U;IAnlD2FA,EAmlDrE,e;IAnlDqEA,EAolDlG,6B;IAplDkGA,EA4lDhG,U;IA5lDgGA,EA6lDlG,iB;;;;;iBA7lDkGA,E;IAAAA,EAklDrD,oD;IAllDqDA,EAmlD3F,a;IAnlD2FA,EAmlD3F,8C;IAnlD2FA,EA0lDhG,a;IA1lDgGA,EA0lDhG,iC;IA1lDgGA,EAslDhG,+F;IAtlDgGA,EA4lDhG,a;IA5lDgGA,EA4lDhG,0E;;;;;;IA5lDgGA,E;IAAAA,EAimDtG,wB;;;;iBAjmDsGA,E;IAAAA,EAomDpG,oF;;;;;;IApmDoGA,E;IAAAA,EAymDlG,wB;;;;iBAzmDkGA,E;IAAAA,EA6mDhG,wC;;;;;;IA7mDgGA,E;IAAAA,EA+mDlG,wB;;;;iBA/mDkGA,E;IAAAA,EAmnDhG,yC;;;;;;IAnnDgGA,E;IAAAA,EAwmDpG,uB;IAxmDoGA,EAymDlG,2F;IAzmDkGA,EA+mDlG,2F;IA/mDkGA,EAqnDpG,e;;;;iBArnDoGA,E;IAAAA,EAwmDvE,qD;IAxmDuEA,EA0mD/F,a;IA1mD+FA,EA0mD/F,8D;IA1mD+FA,EAgnD/F,a;IAhnD+FA,EAgnD/F,+D;;;;;;IAhnD+FA,E;IAAAA,EAumDtG,uB;IAvmDsGA,EAwmDpG,4E;IAxmDoGA,EAsnDtG,e;;;;;iBAtnDsGA,E;IAAAA,EAumDpE,oD;IAvmDoEA,EAwmD5F,a;IAxmD4FA,EAwmD5F,yC;;;;;;IAxmD4FA,E;IAAAA,EAgoDlG,mC;IAhoDkGA,EAioDzF,U;IAjoDyFA,EAioDhD,e;IAjoDgDA,EAkoDhG,8B;IAloDgGA,EAyoD9F,U;IAzoD8FA,EA0oDhG,iB;;;;sBA1oDgGA,E;kBAAAA,E;IAAAA,EAioDzF,a;IAjoDyFA,EAioDzF,2E;IAjoDyFA,EAooD9F,a;IApoD8FA,EAooD9F,sG;IApoD8FA,EAyoD9F,a;IAzoD8FA,EAyoD9F,+C;;;;;;IAzoD8FA,E;IAAAA,EAynDpG,uB;IAznDoGA,EA0nDlG,yB;IA1nDkGA,EAgoDlG,qF;IAhoDkGA,EA4oDpG,e;;;;sBA5oDoGA,E;kBAAAA,E;IAAAA,EAynDxE,+D;IAznDwEA,EA6nDhG,a;IA7nDgGA,EA6nDhG,mF;IA7nDgGA,EAgoD1F,a;IAhoD0FA,EAgoD1F,0C;;;;;;IAhoD0FA,E;IAAAA,EAwnDtG,uB;IAxnDsGA,EAynDpG,4E;IAznDoGA,EA6oDtG,e;;;;iBA7oDsGA,E;IAAAA,EAynD5F,a;IAznD4FA,EAynD5F,wC;;;;;;;;cAznD4FA,E;;IAAAA,E;IAAAA,EA0yDpG,0B;IA1yDoGA,EA2zDlG;MA3zDkGA,EA2zDlG;MAAA,aA3zDkGA,EA2zDlG;MAAA,OA3zDkGA,EA2zD7E,2CAArB;IAAA,E;IA3zDkGA,EA0yDpG,e;;;;iBA1yDoGA,E;IAAAA,EA6yDlG,8e;;;;;;IA7yDkGA,E;IAAAA,EA8zDpG,qB;;;;iBA9zDoGA,E;IAAAA,EAi0DlG,wJ;;;;;;;;IAj0DkGA,E;IAAAA,EA4rEpG,qB;;;;;IA5rEoGA,EA+rElG,0E;IA/rEkGA,EA8rElG,4C;;;;;;;;;IA9rEkGA,E;IAAAA,EAg+EpG,wB;;;;iBAh+EoGA,E;IAAAA,EAk+ElG,wC;IAl+EkGA,EAm+ElG,iL;;;;;;IAn+EkGA,E;IAAAA,EA0+EpG,wB;;;;iBA1+EoGA,E;IAAAA,EA4+ElG,iL;;;;;;;;;;;;cA5+EkGA,E;;IAAAA,EAu9EtG,iB;IAv9EsGA,EAu9EtG,kC;IAv9EsGA,EAy9ElG,qB;IAz9EkGA,EA+9EpG,e;IA/9EoGA,EAg+EpG,oF;IAh+EoGA,EA0+EpG,oF;IA1+EoGA,EAm/EpG,0B;IAn/EoGA,EA8/ElG;MA9/EkGA,EA8/ElG;MAAA,aA9/EkGA,EA8/ElG;MAAA,OA9/EkGA,EA8/ExF,gDAAV;IAAA;MA9/EkGA,EA8/ElG;MAAA,aA9/EkGA,EA8/ElG;MAAA,OA9/EkGA,EA+/EtF,qCADZ;IAAA;MA9/EkGA,EA8/ElG;MAAA,aA9/EkGA,EA8/ElG;MAAA,OA9/EkGA,EAggFpF,uCAFd;IAAA,E;IA9/EkGA,EAm/EpG,iB;;;;iBAn/EoGA,E;IAAAA,EA29EhG,a;IA39EgGA,EA29EhG,2H;IA39EgGA,EAi+EjG,a;IAj+EiGA,EAi+EjG,qF;IAj+EiGA,EA2+EjG,a;IA3+EiGA,EA2+EjG,oF;IA3+EiGA,EA0/ElG,a;IA1/EkGA,EA0/ElG,uCA1/EkGA,EA0/ElG,sD;IA1/EkGA,EAs/ElG,qiB;;;;;;;;;IAt/EkGA,EA0sFtG,iB;IA1sFsGA,EA0sFtG,qB;;;;;IA1sFsGA,EAitFpG,4G;IAjtFoGA,EA6sFpG,iH;;;;;;;;IA7sFoGA,E;IAAAA,EAsxFpG,qB;;;;;IAtxFoGA,EAyxFlG,0E;IAzxFkGA,EAwxFlG,4C;;;;;;;;IAxxFkGA,EA+3FtG,iB;IA/3FsGA,EA+3FtG,0B;IA/3FsGA,EAg4FpG,qB;IAh4FoGA,EAs4FtG,e;;;;iBAt4FsGA,E;IAAAA,EAk4FlG,a;IAl4FkGA,EAk4FlG,oH;;;;;;;;;;IAl4FkGA,EAgwGhG,4B;IAhwGgGA,EAiwG9F,wB;IAjwG8FA,EAkwG9F,U;IAlwG8FA,EAmwGhG,e;;;;;iBAnwGgGA,E;IAAAA,EAiwGvD,a;IAjwGuDA,EAiwGvD,sD;IAjwGuDA,EAkwG9F,a;IAlwG8FA,EAkwG9F,oE;;;;;;IAlwG8FA,E;IAAAA,EA+vGlG,kB;IA/vGkGA,EA+vGlG,4B;IA/vGkGA,EAgwGhG,oF;IAhwGgGA,EAowGlG,e;;;;;IApwGkGA,EAgwG7D,a;IAhwG6DA,EAgwG7D,gC;;;;;;;;IAhwG6DA,EAimHpG,uB;;;;iBAjmHoGA,E;IAAAA,EAqmHlG,sF;;;;;;IArmHkGA,EAwmHpG,4B;IAxmHoGA,EAymHlG,U;IAzmHkGA,EA0mHpG,e;;;;iBA1mHoGA,E;IAAAA,EAymHlG,a;IAzmHkGA,EAymHlG,wJ;;;;;;IAzmHkGA,EAynH9F,wB;;;;wBAznH8FA,E;iBAAAA,E;IAAAA,EA6nH5F,uF;;;;;;IA7nH4FA,EAgoH9F,6B;IAhoH8FA,EAioH5F,U;IAjoH4FA,EAkoH9F,e;;;;wBAloH8FA,E;iBAAAA,E;IAAAA,EAioH5F,a;IAjoH4FA,EAioH5F,wJ;;;;;;IAjoH4FA,EAooH9F,wB;;;;wBApoH8FA,E;IAAAA,EAwoH5F,oE;;;;;;IAxoH4FA,EA2oH9F,6B;IA3oH8FA,EA2oHhD,U;IA3oHgDA,EA2oHH,e;;;;wBA3oHGA,E;IAAAA,EA2oHhD,a;IA3oHgDA,EA2oHhD,uE;;;;;;eA3oHgDA,E;;IAAAA,EAgnHhG,4B;IAhnHgGA,EAonH9F;MAAA,kBApnH8FA,EAonH9F;MAAA;MAAA,cApnH8FA,EAonH9F;MAAA,OApnH8FA,EAonHhF,uDAAd;IAAA;MAAA,kBApnH8FA,EAonH9F;MAAA;MAAA,cApnH8FA,EAonH9F;MAAA,OApnH8FA,EAqnHhF,yDADd;IAAA;MAAA,kBApnH8FA,EAonH9F;MAAA;MAAA,cApnH8FA,EAonH9F;MAAA,OApnH8FA,EAsnHrF,qDAFT;IAAA,E;IApnH8FA,EAwnH9F,wB;IAxnH8FA,EAynH9F,6E;IAznH8FA,EAgoH9F,6E;IAhoH8FA,EAmoH9F,6B;IAnoH8FA,EAmoHtE,U;IAnoHsEA,EAmoHzC,e;IAnoHyCA,EAooH9F,6E;IApoH8FA,EA2oH9F,6E;IA3oH8FA,EA4oHhG,e;;;;;iBA5oHgGA,E;IAAAA,EAwnHtE,a;IAxnHsEA,EAwnHtE,sD;IAxnHsEA,EA0nH3F,a;IA1nH2FA,EA0nH3F,sC;IA1nH2FA,EAgoHxF,a;IAhoHwFA,EAgoHxF,uC;IAhoHwFA,EAmoHtE,a;IAnoHsEA,EAmoHtE,8C;IAnoHsEA,EAqoH3F,a;IAroH2FA,EAqoH3F,sC;IAroH2FA,EA2oHxF,a;IA3oHwFA,EA2oHxF,uC;;;;;;;;;;cA3oHwFA,E;;IAAAA,E;IAAAA,EA2vJlG,0B;IA3vJkGA,EAwwJhG;MAxwJgGA,EAwwJhG;MAAA,aAxwJgGA,EAwwJhG;MAAA,OAxwJgGA,EAwwJ3E,8CAArB;IAAA,E;IAxwJgGA,EAywJjG,e;;;;iBAzwJiGA,E;IAAAA,EA8vJhG,sW;;;;;;cA9vJgGA,E;;IAAAA,E;IAAAA,EA0wJlG,0B;IA1wJkGA,EAsxJhG;MAtxJgGA,EAsxJhG;MAAA,aAtxJgGA,EAsxJhG;MAAA,OAtxJgGA,EAsxJ3E,6CAArB;IAAA,E;IAtxJgGA,EAuxJjG,e;;;;iBAvxJiGA,E;IAAAA,EA6wJhG,8T;;;;;;IA7wJgGA,E;IAAAA,EAyxJhG,uB;IAzxJgGA,EA0xJ9F,qB;IA1xJ8FA,EAuyJhG,e;;;;;iBAvyJgGA,E;IAAAA,EA4xJ5F,a;IA5xJ4FA,EA4xJ5F,mS;;;;;;eA5xJ4FA,E;;IAAAA,E;IAAAA,EAuzJ9F,mC;IAvzJ8FA,EAm0J1F;MAAA,kBAn0J0FA,EAm0J1F;MAAA;MAAA,cAn0J0FA,EAm0J1F;MAAA,OAn0J0FA,EAm0JhF,iDAAV;IAAA;MAn0J0FA,EAm0J1F;MAAA,cAn0J0FA,EAm0J1F;MAAA,OAn0J0FA,EAo0J9E,wCADZ;IAAA;MAn0J0FA,EAm0J1F;MAAA,cAn0J0FA,EAm0J1F;MAAA,OAn0J0FA,EAq0J5E,0CAFd;IAAA,E;IAn0J0FA,EAwzJ5F,iB;;;;;kBAxzJ4FA,E;IAAAA,EA0zJ1F,a;IA1zJ0FA,EA0zJ1F,sT;;;;;;eA1zJ0FA,E;;IAAAA,E;IAAAA,EAyyJhG,2B;IAzyJgGA,EAyyJhE;MAzyJgEA,EAyyJhE;MAAA,cAzyJgEA,EAyyJhE;MAAA,OAzyJgEA,EAyyJlD,mCAAd;IAAA,E;IAzyJgEA,EA0yJ9F,2B;IA1yJ8FA,EAozJ5F;MApzJ4FA,EAozJ5F;MAAA,cApzJ4FA,EAozJ5F;MAAA,OApzJ4FA,EAozJnF,mDAAT;IAAA,E;IApzJ4FA,EA0yJ9F,e;IA1yJ8FA,EAuzJ9F,4E;IAvzJ8FA,EAw0JhG,e;;;;iBAx0JgGA,E;IAAAA,EA4yJ5F,a;IA5yJ4FA,EA4yJ5F,uP;IA5yJ4FA,EAuzJpE,a;IAvzJoEA,EAuzJpE,sC;;;;;;IAvzJoEA,E;IAAAA,EAw1JlG,uB;IAx1JkGA,EAy1JhG,sB;IAz1JgGA,EAq2JlG,e;;;;;kBAr2JkGA,E;IAAAA,EA21J9F,a;IA31J8FA,EA21J9F,qR;;;;;;;;;;eA31J8FA,E;;IAAAA,E;IAAAA,EA20JpG,2B;IA30JoGA,EAs1JlG;MAt1JkGA,EAs1JlG;MAAA,cAt1JkGA,EAs1JlG;MAAA,OAt1JkGA,EAs1JhF,0CAAlB;IAAA,E;IAt1JkGA,EAw1JlG,4E;IAx1JkGA,EAs2JpG,e;;;;iBAt2JoGA,E;IAAAA,EA+0JlG,+CA/0JkGA,EA+0JlG,uN;IA/0JkGA,EA80JlG,mD;IA90JkGA,EAw1JxE,a;IAx1JwEA,EAw1JxE,sE;;;;;;cAx1JwEA,E;;IAAAA,E;IAAAA,EAu1KlG,0B;IAv1KkGA,EAo2KhG;MAp2KgGA,EAo2KhG;MAAA,aAp2KgGA,EAo2KhG;MAAA,OAp2KgGA,EAo2K3E,8CAArB;IAAA,E;IAp2KgGA,EAq2KjG,e;;;;iBAr2KiGA,E;IAAAA,EA01KhG,sW;;;;;;cA11KgGA,E;;IAAAA,E;IAAAA,EAs2KlG,0B;IAt2KkGA,EAk3KhG;MAl3KgGA,EAk3KhG;MAAA,aAl3KgGA,EAk3KhG;MAAA,OAl3KgGA,EAk3K3E,6CAArB;IAAA,E;IAl3KgGA,EAm3KjG,e;;;;iBAn3KiGA,E;IAAAA,EAy2KhG,8T;;;;;;IAz2KgGA,E;IAAAA,EAq3KhG,uB;IAr3KgGA,EAs3K9F,qB;IAt3K8FA,EAm4KhG,e;;;;;iBAn4KgGA,E;IAAAA,EAw3K5F,a;IAx3K4FA,EAw3K5F,wR;;;;;;eAx3K4FA,E;;IAAAA,E;IAAAA,EAo5K9F,mC;IAp5K8FA,EAi6K1F;MAAA,kBAj6K0FA,EAi6K1F;MAAA;MAAA,cAj6K0FA,EAi6K1F;MAAA,OAj6K0FA,EAi6KhF,iDAAV;IAAA;MAj6K0FA,EAi6K1F;MAAA,cAj6K0FA,EAi6K1F;MAAA,OAj6K0FA,EAk6K9E,wCADZ;IAAA;MAj6K0FA,EAi6K1F;MAAA,cAj6K0FA,EAi6K1F;MAAA,OAj6K0FA,EAm6K5E,0CAFd;IAAA,E;IAj6K0FA,EAq5K5F,iB;;;;;kBAr5K4FA,E;IAAAA,EAu5K1F,a;IAv5K0FA,EAu5K1F,0V;;;;;;eAv5K0FA,E;;IAAAA,E;IAAAA,EAq4KhG,2B;IAr4KgGA,EAq4KhE;MAr4KgEA,EAq4KhE;MAAA,cAr4KgEA,EAq4KhE;MAAA,OAr4KgEA,EAq4KlD,mCAAd;IAAA,E;IAr4KgEA,EAs4K9F,2B;IAt4K8FA,EAi5K5F;MAj5K4FA,EAi5K5F;MAAA,cAj5K4FA,EAi5K5F;MAAA,OAj5K4FA,EAi5KnF,mDAAT;IAAA,E;IAj5K4FA,EAs4K9F,e;IAt4K8FA,EAo5K9F,uF;IAp5K8FA,EAs6KhG,e;;;;iBAt6KgGA,E;IAAAA,EAw4K5F,a;IAx4K4FA,EAw4K5F,+Q;IAx4K4FA,EAo5KpE,a;IAp5KoEA,EAo5KpE,sC;;;;;;IAp5KoEA,E;IAAAA,EAs7KlG,uB;IAt7KkGA,EAu7KhG,sB;IAv7KgGA,EAm8KlG,e;;;;;kBAn8KkGA,E;IAAAA,EAy7K9F,a;IAz7K8FA,EAy7K9F,yQ;;;;;;eAz7K8FA,E;;IAAAA,E;IAAAA,EAy6KpG,2B;IAz6KoGA,EAo7KlG;MAp7KkGA,EAo7KlG;MAAA,cAp7KkGA,EAo7KlG;MAAA,OAp7KkGA,EAo7KhF,0CAAlB;IAAA,E;IAp7KkGA,EAs7KlG,sF;IAt7KkGA,EAo8KpG,e;;;;iBAp8KoGA,E;IAAAA,EA66KlG,+CA76KkGA,EA66KlG,uN;IA76KkGA,EA46KlG,mD;IA56KkGA,EAs7KxE,a;IAt7KwEA,EAs7KxE,sE;;;;;;;;cAt7KwEA,E;;IAAAA,E;IAAAA,EAk7LlG,0B;IAl7LkGA,EA+7LhG;MA/7LgGA,EA+7LhG;MAAA,aA/7LgGA,EA+7LhG;MAAA,OA/7LgGA,EA+7L3E,8CAArB;IAAA,E;IA/7LgGA,EAg8LjG,e;;;;iBAh8LiGA,E;IAAAA,EAq7LhG,sW;;;;;;cAr7LgGA,E;;IAAAA,E;IAAAA,EAi8LlG,0B;IAj8LkGA,EA68LhG;MA78LgGA,EA68LhG;MAAA,aA78LgGA,EA68LhG;MAAA,OA78LgGA,EA68L3E,6CAArB;IAAA,E;IA78LgGA,EA88LjG,e;;;;iBA98LiGA,E;IAAAA,EAo8LhG,8T;;;;;;IAp8LgGA,E;IAAAA,EAg9LhG,uB;IAh9LgGA,EAi9L9F,qB;IAj9L8FA,EA89LhG,e;;;;;iBA99LgGA,E;IAAAA,EAm9L5F,a;IAn9L4FA,EAm9L5F,qR;;;;;;eAn9L4FA,E;;IAAAA,E;IAAAA,EA8+L9F,mC;IA9+L8FA,EA2/L1F;MAAA,kBA3/L0FA,EA2/L1F;MAAA;MAAA,cA3/L0FA,EA2/L1F;MAAA,OA3/L0FA,EA2/LhF,iDAAV;IAAA;MA3/L0FA,EA2/L1F;MAAA,cA3/L0FA,EA2/L1F;MAAA,OA3/L0FA,EA4/L9E,wCADZ;IAAA;MA3/L0FA,EA2/L1F;MAAA,cA3/L0FA,EA2/L1F;MAAA,OA3/L0FA,EA6/L5E,0CAFd;IAAA,E;IA3/L0FA,EA++L5F,iB;;;;;kBA/+L4FA,E;IAAAA,EAi/L1F,a;IAj/L0FA,EAi/L1F,0V;;;;;;eAj/L0FA,E;;IAAAA,E;IAAAA,EAg+LhG,2B;IAh+LgGA,EAg+LhE;MAh+LgEA,EAg+LhE;MAAA,cAh+LgEA,EAg+LhE;MAAA,OAh+LgEA,EAg+LlD,mCAAd;IAAA,E;IAh+LgEA,EAi+L9F,2B;IAj+L8FA,EA2+L5F;MA3+L4FA,EA2+L5F;MAAA,cA3+L4FA,EA2+L5F;MAAA,OA3+L4FA,EA2+LnF,mDAAT;IAAA,E;IA3+L4FA,EAi+L9F,e;IAj+L8FA,EA8+L9F,mF;IA9+L8FA,EAggMhG,e;;;;iBAhgMgGA,E;IAAAA,EAm+L5F,a;IAn+L4FA,EAm+L5F,uP;IAn+L4FA,EA8+LpE,a;IA9+LoEA,EA8+LpE,sE;;;;;;IA9+LoEA,E;IAAAA,EAghMlG,uB;IAhhMkGA,EAihMhG,sB;IAjhMgGA,EA6hMlG,e;;;;;kBA7hMkGA,E;IAAAA,EAmhM9F,a;IAnhM8FA,EAmhM9F,sQ;;;;;;eAnhM8FA,E;;IAAAA,E;IAAAA,EAmgMpG,2B;IAngMoGA,EA8gMlG;MA9gMkGA,EA8gMlG;MAAA,cA9gMkGA,EA8gMlG;MAAA,OA9gMkGA,EA8gMhF,0CAAlB;IAAA,E;IA9gMkGA,EAghMlG,mF;IAhhMkGA,EA8hMpG,e;;;;iBA9hMoGA,E;IAAAA,EAugMlG,+CAvgMkGA,EAugMlG,uN;IAvgMkGA,EAsgMlG,mD;IAtgMkGA,EAghMxE,a;IAhhMwEA,EAghMxE,sE;;;;;;;;IAhhMwEA,EAi6MtG,iB;IAj6MsGA,EAi6MtG,0B;IAj6MsGA,EAk6MpG,qB;IAl6MoGA,EAm6MtG,e;;;;iBAn6MsGA,E;IAAAA,EAk6M9D,a;IAl6M8DA,EAk6M9D,wG;;;;;;;;;cAl6M8DA,E;;IAAAA,EAqxNtG,iB;IArxNsGA,EAqxNtG,0B;IArxNsGA,EAkyNpG;MAlyNoGA,EAkyNpG;MAAA,aAlyNoGA,EAkyNpG;MAAA,OAlyNoGA,EAkyN1F,kCAAV;IAAA;MAlyNoGA,EAkyNpG;MAAA,aAlyNoGA,EAkyNpG;MAAA,OAlyNoGA,EAuyNxF,0CALZ;IAAA;MAlyNoGA,EAkyNpG;MAAA,aAlyNoGA,EAkyNpG;MAAA,OAlyNoGA,EAwyNtF,4CANd;IAAA,E;IAlyNoGA,EAizNrG,e;;;;;iBAjzNqGA,E;IAAAA,EAwxNpG,8sB;;;;;;eAxxNoGA,E;;IAAAA,E;IAAAA,EAmzNpG,0B;IAnzNoGA,EA6zNlG;MAAA,kBA7zNkGA,EA6zNlG;MAAA;MAAA,cA7zNkGA,EA6zNlG;MAAA,OA7zNkGA,EA6zN7E;QAAA;QAAA;MAAA,GAArB;IAAA,E;IA7zNkGA,EAmzNpG,e;;;;;iBAnzNoGA,E;IAAAA,EAszNlG,kN;;;;;;IAtzNkGA,EAkzNtG,iB;IAlzNsGA,EAkzNtG,uB;IAlzNsGA,EAmzNpG,yE;IAnzNoGA,EA+zNtG,e;;;;iBA/zNsGA,E;IAAAA,EAqzNpF,a;IArzNoFA,EAqzNpF,yF;;;;;;cArzNoFA,E;;IAAAA,E;IAAAA,EA4lOlG,0B;IA5lOkGA,EAymOhG;MAzmOgGA,EAymOhG;MAAA,aAzmOgGA,EAymOhG;MAAA,OAzmOgGA,EAymO3E,8CAArB;IAAA,E;IAzmOgGA,EA0mOjG,e;;;;iBA1mOiGA,E;IAAAA,EA+lOhG,sW;;;;;;cA/lOgGA,E;;IAAAA,E;IAAAA,EA2mOlG,0B;IA3mOkGA,EAunOhG;MAvnOgGA,EAunOhG;MAAA,aAvnOgGA,EAunOhG;MAAA,OAvnOgGA,EAunO3E,6CAArB;IAAA,E;IAvnOgGA,EAwnOjG,e;;;;iBAxnOiGA,E;IAAAA,EA8mOhG,yU;;;;;;cA9mOgGA,E;;IAAAA,E;IAAAA,EAkgPlG,0B;IAlgPkGA,EA+gPhG;MA/gPgGA,EA+gPhG;MAAA,aA/gPgGA,EA+gPhG;MAAA,OA/gPgGA,EA+gP3E,8CAArB;IAAA,E;IA/gPgGA,EAghPjG,e;;;;iBAhhPiGA,E;IAAAA,EAqgPhG,0W;;;;;;cArgPgGA,E;;IAAAA,E;IAAAA,EAihPlG,0B;IAjhPkGA,EA6hPhG;MA7hPgGA,EA6hPhG;MAAA,aA7hPgGA,EA6hPhG;MAAA,OA7hPgGA,EA6hP3E,6CAArB;IAAA,E;IA7hPgGA,EA8hPjG,e;;;;iBA9hPiGA,E;IAAAA,EAohPhG,6U;;;;;;eAphPgGA,E;;IAAAA,E;IAAAA,EAiiPhG,kC;IAjiPgGA,EAujP5F;MAAA,kBAvjP4FA,EAujP5F;MAAA;MAAA,cAvjP4FA,EAujP5F;MAAA,OAvjP4FA,EAujPlF,+CAAV;IAAA;MAAA,kBAvjP4FA,EAujP5F;MAAA;MAAA,cAvjP4FA,EAujP5F;MAAA,OAvjP4FA,EAwjPhF,kDADZ;IAAA;MAAA,kBAvjP4FA,EAujP5F;MAAA;MAAA,cAvjP4FA,EAujP5F;MAAA,OAvjP4FA,EAyjP9E,oDAFd;IAAA;MAAA,kBAvjP4FA,EAujP5F;MAAA;MAAA,cAvjP4FA,EAujP5F;MAAA,OAvjP4FA,EA0jPnE,mEAHzB;IAAA,E;IAvjP4FA,EAsiP9F,iB;;;;;iBAtiP8FA,E;IAAAA,EAmiP9F,wC;IAniP8FA,EAoiP9F,0D;IApiP8FA,EAwiP5F,a;IAxiP4FA,EAwiP5F,wgB;;;;;;IAxiP4FA,E;IAAAA,EAgiPlG,uB;IAhiPkGA,EAiiPhG,kF;IAjiPgGA,EA6jPlG,e;;;;iBA7jPkGA,E;IAAAA,EAkiP5E,a;IAliP4EA,EAkiP5E,sE;;;;;;eAliP4EA,E;;IAAAA,E;IAAAA,EA+jPhG,kC;IA/jPgGA,EAolP5F;MAAA,kBAplP4FA,EAolP5F;MAAA;MAAA,cAplP4FA,EAolP5F;MAAA,OAplP4FA,EAolPlF,gDAAV;IAAA;MAAA,kBAplP4FA,EAolP5F;MAAA;MAAA,cAplP4FA,EAolP5F;MAAA,OAplP4FA,EAqlPhF,mDADZ;IAAA;MAAA,kBAplP4FA,EAolP5F;MAAA;MAAA,cAplP4FA,EAolP5F;MAAA,OAplP4FA,EAslP9E,qDAFd;IAAA;MAAA,kBAplP4FA,EAolP5F;MAAA;MAAA,cAplP4FA,EAolP5F;MAAA,OAplP4FA,EAulPnE,mEAHzB;IAAA,E;IAplP4FA,EAmkP9F,iB;;;;;kBAnkP8FA,E;IAAAA,EAikP9F,4D;IAjkP8FA,EAqkP5F,a;IArkP4FA,EAqkP5F,uhB;;;;;;IArkP4FA,E;IAAAA,EA8jPlG,uB;IA9jPkGA,EA+jPhG,kF;IA/jPgGA,EA0lPlG,e;;;;iBA1lPkGA,E;IAAAA,EAgkP5E,a;IAhkP4EA,EAgkP5E,sE;;;;;;cAhkP4EA,E;;IAAAA,E;IAAAA,EAg+PlG,0B;IAh+PkGA,EA6+PhG;MA7+PgGA,EA6+PhG;MAAA,aA7+PgGA,EA6+PhG;MAAA,OA7+PgGA,EA6+P3E,8CAArB;IAAA,E;IA7+PgGA,EA8+PjG,e;;;;iBA9+PiGA,E;IAAAA,EAm+PhG,sW;;;;;;cAn+PgGA,E;;IAAAA,E;IAAAA,EA++PlG,0B;IA/+PkGA,EA0/PhG;MA1/PgGA,EA0/PhG;MAAA,aA1/PgGA,EA0/PhG;MAAA,OA1/PgGA,EA0/P3E,6CAArB;IAAA,E;IA1/PgGA,EA2/PjG,e;;;;iBA3/PiGA,E;IAAAA,EAk/PhG,uR;;;;;;eAl/PgGA,E;;IAAAA,E;IAAAA,EA6/PhG,kC;IA7/PgGA,EAghQ5F;MAAA,kBAhhQ4FA,EAghQ5F;MAAA;MAAA,cAhhQ4FA,EAghQ5F;MAAA,OAhhQ4FA,EAghQlF,+CAAV;IAAA;MAAA,kBAhhQ4FA,EAghQ5F;MAAA;MAAA,cAhhQ4FA,EAghQ5F;MAAA,OAhhQ4FA,EAihQhF,kDADZ;IAAA;MAAA,kBAhhQ4FA,EAghQ5F;MAAA;MAAA,cAhhQ4FA,EAghQ5F;MAAA,OAhhQ4FA,EAkhQ9E,oDAFd;IAAA,E;IAhhQ4FA,EAkgQ9F,iB;;;;;iBAlgQ8FA,E;IAAAA,EA+/P9F,wC;IA//P8FA,EAggQ9F,0D;IAhgQ8FA,EAogQ5F,a;IApgQ4FA,EAogQ5F,6a;;;;;;IApgQ4FA,E;IAAAA,EA4/PlG,uB;IA5/PkGA,EA6/PhG,0F;IA7/PgGA,EAshQlG,e;;;;iBAthQkGA,E;IAAAA,EA8/P5E,a;IA9/P4EA,EA8/P5E,sE;;;;;;eA9/P4EA,E;;IAAAA,E;IAAAA,EAwhQhG,kC;IAxhQgGA,EAuiQ5F;MAAA,kBAviQ4FA,EAuiQ5F;MAAA;MAAA,cAviQ4FA,EAuiQ5F;MAAA,OAviQ4FA,EAuiQlF,gDAAV;IAAA;MAAA,kBAviQ4FA,EAuiQ5F;MAAA;MAAA,cAviQ4FA,EAuiQ5F;MAAA,OAviQ4FA,EAwiQhF,mDADZ;IAAA;MAAA,kBAviQ4FA,EAuiQ5F;MAAA;MAAA,cAviQ4FA,EAuiQ5F;MAAA,OAviQ4FA,EAyiQ9E,qDAFd;IAAA,E;IAviQ4FA,EAyhQ9F,iB;;;;;kBAzhQ8FA,E;IAAAA,EAwhQzC,4D;IAxhQyCA,EA2hQ5F,a;IA3hQ4FA,EA2hQ5F,0b;;;;;;IA3hQ4FA,E;IAAAA,EAuhQlG,uB;IAvhQkGA,EAwhQhG,0F;IAxhQgGA,EA6iQlG,e;;;;iBA7iQkGA,E;IAAAA,EAwhQvE,a;IAxhQuEA,EAwhQvE,sE;;;;;;cAxhQuEA,E;;IAAAA,E;IAAAA,EAi8QlG,0B;IAj8QkGA,EA88QhG;MA98QgGA,EA88QhG;MAAA,aA98QgGA,EA88QhG;MAAA,OA98QgGA,EA88Q3E,8CAArB;IAAA,E;IA98QgGA,EA+8QjG,e;;;;iBA/8QiGA,E;IAAAA,EAo8QhG,sW;;;;;;cAp8QgGA,E;;IAAAA,E;IAAAA,EAg9QlG,0B;IAh9QkGA,EA49QhG;MA59QgGA,EA49QhG;MAAA,aA59QgGA,EA49QhG;MAAA,OA59QgGA,EA49Q3E,6CAArB;IAAA,E;IA59QgGA,EA69QjG,e;;;;iBA79QiGA,E;IAAAA,EAm9QhG,yU;;;;;;eAn9QgGA,E;;IAAAA,E;IAAAA,EA+9QhG,kC;IA/9QgGA,EAq/Q5F;MAAA,kBAr/Q4FA,EAq/Q5F;MAAA;MAAA,cAr/Q4FA,EAq/Q5F;MAAA,OAr/Q4FA,EAq/QlF,+CAAV;IAAA;MAAA,kBAr/Q4FA,EAq/Q5F;MAAA;MAAA,cAr/Q4FA,EAq/Q5F;MAAA,OAr/Q4FA,EAs/QhF,kDADZ;IAAA;MAAA,kBAr/Q4FA,EAq/Q5F;MAAA;MAAA,cAr/Q4FA,EAq/Q5F;MAAA,OAr/Q4FA,EAu/Q9E,oDAFd;IAAA;MAAA,kBAr/Q4FA,EAq/Q5F;MAAA;MAAA,cAr/Q4FA,EAq/Q5F;MAAA,OAr/Q4FA,EAw/QnE,mEAHzB;IAAA,E;IAr/Q4FA,EAo+Q9F,iB;;;;;iBAp+Q8FA,E;IAAAA,EAi+Q9F,wC;IAj+Q8FA,EAk+Q9F,0D;IAl+Q8FA,EAs+Q5F,a;IAt+Q4FA,EAs+Q5F,ogB;;;;;;IAt+Q4FA,E;IAAAA,EA89QlG,uB;IA99QkGA,EA+9QhG,uF;IA/9QgGA,EA2/QlG,e;;;;iBA3/QkGA,E;IAAAA,EAg+Q5E,a;IAh+Q4EA,EAg+Q5E,sE;;;;;;eAh+Q4EA,E;;IAAAA,E;IAAAA,EA6/QhG,kC;IA7/QgGA,EAkhR5F;MAAA,kBAlhR4FA,EAkhR5F;MAAA;MAAA,cAlhR4FA,EAkhR5F;MAAA,OAlhR4FA,EAkhRlF,gDAAV;IAAA;MAAA,kBAlhR4FA,EAkhR5F;MAAA;MAAA,cAlhR4FA,EAkhR5F;MAAA,OAlhR4FA,EAmhRhF,mDADZ;IAAA;MAAA,kBAlhR4FA,EAkhR5F;MAAA;MAAA,cAlhR4FA,EAkhR5F;MAAA,OAlhR4FA,EAohR9E,qDAFd;IAAA;MAAA,kBAlhR4FA,EAkhR5F;MAAA;MAAA,cAlhR4FA,EAkhR5F;MAAA,OAlhR4FA,EAqhRnE,mEAHzB;IAAA,E;IAlhR4FA,EAigR9F,iB;;;;;kBAjgR8FA,E;IAAAA,EA+/Q9F,4D;IA//Q8FA,EAmgR5F,a;IAngR4FA,EAmgR5F,mhB;;;;;;IAngR4FA,E;IAAAA,EA4/QlG,uB;IA5/QkGA,EA6/QhG,uF;IA7/QgGA,EAwhRlG,e;;;;iBAxhRkGA,E;IAAAA,EA8/Q5E,a;IA9/Q4EA,EA8/Q5E,sE;;;;;;;;cA9/Q4EA,E;;IAAAA,E;IAAAA,EA05RpG,0B;IA15RoGA,EA26RlG;MA36RkGA,EA26RlG;MAAA,aA36RkGA,EA26RlG;MAAA,OA36RkGA,EA26RxF,oCAAV;IAAA;MA36RkGA,EA26RlG;MAAA,aA36RkGA,EA26RlG;MAAA,OA36RkGA,EA46RtF,0CADZ;IAAA;MA36RkGA,EA26RlG;MAAA,aA36RkGA,EA26RlG;MAAA,OA36RkGA,EA66RpF,4CAFd;IAAA,E;IA36RkGA,EAu7RnG,e;;;;;iBAv7RmGA,E;IAAAA,EA65RlG,8uB;;;;;;IA75RkGA,EAy5RtG,iB;IAz5RsGA,EAy5RtG,uB;IAz5RsGA,EA05RpG,iF;IA15RoGA,EAw7RtG,e;;;;iBAx7RsGA,E;IAAAA,EA45RlF,a;IA55RkFA,EA45RlF,mE;;;;;;eA55RkFA,E;;IAAAA,E;IAAAA,EA07RpG,0B;IA17RoGA,EAy8RlG;MAz8RkGA,EAy8RlG;MAAA,cAz8RkGA,EAy8RlG;MAAA,OAz8RkGA,EAy8RxF,qCAAV;IAAA;MAz8RkGA,EAy8RlG;MAAA,cAz8RkGA,EAy8RlG;MAAA,OAz8RkGA,EA08RtF,2CADZ;IAAA;MAz8RkGA,EAy8RlG;MAAA,cAz8RkGA,EAy8RlG;MAAA,OAz8RkGA,EA28RpF,6CAFd;IAAA,E;IAz8RkGA,EAq9RnG,e;;;;;iBAr9RmGA,E;IAAAA,EA67RlG,2rB;;;;;;IA77RkGA,EAy7RtG,iB;IAz7RsGA,EAy7RtG,uB;IAz7RsGA,EA07RpG,iF;IA17RoGA,EAs9RtG,e;;;;iBAt9RsGA,E;IAAAA,EA47RlF,a;IA57RkFA,EA47RlF,mE;;;;;;eA57RkFA,E;;IAAAA,E;IAAAA,EAw9RpG,0B;IAx9RoGA,EAk+RlG;MAAA,kBAl+RkGA,EAk+RlG;MAAA;MAAA,cAl+RkGA,EAk+RlG;MAAA,OAl+RkGA,EAk+R7E;QAAA;QAAA;MAAA,GAArB;IAAA,E;IAl+RkGA,EAw9RpG,e;;;;;kBAx9RoGA,E;IAAAA,EA29RlG,uN;;;;;;IA39RkGA,EAu9RtG,iB;IAv9RsGA,EAu9RtG,uB;IAv9RsGA,EAw9RpG,gF;IAx9RoGA,EAo+RtG,e;;;;iBAp+RsGA,E;IAAAA,EA09RpF,a;IA19RoFA,EA09RpF,yF;;;;;;cA19RoFA,E;;IAAAA,E;IAAAA,EA8ySlG,0B;IA9ySkGA,EA4zShG;MA5zSgGA,EA4zShG;MAAA,aA5zSgGA,EA4zShG;MAAA,OA5zSgGA,EA4zS3E,8CAArB;IAAA,E;IA5zSgGA,EA6zSjG,e;;;;iBA7zSiGA,E;IAAAA,EAizShG,yZ;;;;;;cAjzSgGA,E;;IAAAA,E;IAAAA,EA8zSlG,0B;IA9zSkGA,EA00ShG;MA10SgGA,EA00ShG;MAAA,aA10SgGA,EA00ShG;MAAA,OA10SgGA,EA00S3E,6CAArB;IAAA,E;IA10SgGA,EA20SjG,e;;;;iBA30SiGA,E;IAAAA,EAi0ShG,8T;;;;;;cAj0SgGA,E;;IAAAA,E;IAAAA,EA0tTlG,0B;IA1tTkGA,EAuuThG;MAvuTgGA,EAuuThG;MAAA,aAvuTgGA,EAuuThG;MAAA,OAvuTgGA,EAuuT3E,8CAArB;IAAA,E;IAvuTgGA,EAwuTjG,e;;;;iBAxuTiGA,E;IAAAA,EA6tThG,sX;;;;;;cA7tTgGA,E;;IAAAA,E;IAAAA,EAyuTlG,0B;IAzuTkGA,EAqvThG;MArvTgGA,EAqvThG;MAAA,aArvTgGA,EAqvThG;MAAA,OArvTgGA,EAqvT3E,6CAArB;IAAA,E;IArvTgGA,EAsvTjG,e;;;;iBAtvTiGA,E;IAAAA,EA4uThG,kU;;;;;;eA5uTgGA,E;;IAAAA,E;IAAAA,EAwvThG,0B;IAxvTgGA,EA4wT9F;MAAA,kBA5wT8FA,EA4wT9F;MAAA;MAAA,cA5wT8FA,EA4wT9F;MAAA,OA5wT8FA,EA4wTpF,+CAAV;IAAA;MAAA,kBA5wT8FA,EA4wT9F;MAAA;MAAA,cA5wT8FA,EA4wT9F;MAAA,OA5wT8FA,EA6wTlF,kDADZ;IAAA;MAAA,kBA5wT8FA,EA4wT9F;MAAA;MAAA,cA5wT8FA,EA4wT9F;MAAA,OA5wT8FA,EA8wThF,oDAFd;IAAA;MAAA,kBA5wT8FA,EA4wT9F;MAAA;MAAA,cA5wT8FA,EA4wT9F;MAAA,OA5wT8FA,EA+wTpE,oEAH1B;IAAA,E;IA5wT8FA,EAwvThG,e;;;;;iBAxvTgGA,E;IAAAA,EA2vT9F,qiB;IA3vT8FA,EA4vT9F,0D;;;;;;IA5vT8FA,E;IAAAA,EAuvTlG,uB;IAvvTkGA,EAwvThG,gF;IAxvTgGA,EAixTlG,e;;;;iBAjxTkGA,E;IAAAA,EA0vT5E,a;IA1vT4EA,EA0vT5E,sE;;;;;;eA1vT4EA,E;;IAAAA,E;IAAAA,EAoxTlG,0B;IApxTkGA,EAuyThG;MAAA,kBAvyTgGA,EAuyThG;MAAA;MAAA,cAvyTgGA,EAuyThG;MAAA,OAvyTgGA,EAuyTtF,gDAAV;IAAA;MAAA,kBAvyTgGA,EAuyThG;MAAA;MAAA,cAvyTgGA,EAuyThG;MAAA,OAvyTgGA,EAwyTpF,mDADZ;IAAA;MAAA,kBAvyTgGA,EAuyThG;MAAA;MAAA,cAvyTgGA,EAuyThG;MAAA,OAvyTgGA,EAyyTlF,qDAFd;IAAA;MAAA,kBAvyTgGA,EAuyThG;MAAA;MAAA,cAvyTgGA,EAuyThG;MAAA,OAvyTgGA,EA0yTtE,oEAH1B;IAAA,E;IAvyTgGA,EAoxTlG,e;;;;;kBApxTkGA,E;IAAAA,EAwxThG,uhB;IAxxTgGA,EAuxThG,4D;;;;;;IAvxTgGA,E;IAAAA,EAmxTpG,uB;IAnxToGA,EAoxTlG,gF;IApxTkGA,EA4yTpG,e;;;;iBA5yToGA,E;IAAAA,EAsxT9E,a;IAtxT8EA,EAsxT9E,sE;;;;;;cAtxT8EA,E;;IAAAA,E;IAAAA,EA4qUlG,0B;IA5qUkGA,EAwrUhG;MAxrUgGA,EAwrUhG;MAAA,aAxrUgGA,EAwrUhG;MAAA,OAxrUgGA,EAwrU3E,8CAArB;IAAA,E;IAxrUgGA,EAyrUjG,e;;;;iBAzrUiGA,E;IAAAA,EA+qUhG,+T;;;;;;cA/qUgGA,E;;IAAAA,E;IAAAA,EA0rUlG,0B;IA1rUkGA,EAssUhG;MAtsUgGA,EAssUhG;MAAA,aAtsUgGA,EAssUhG;MAAA,OAtsUgGA,EAssU3E,6CAArB;IAAA,E;IAtsUgGA,EAusUjG,e;;;;iBAvsUiGA,E;IAAAA,EA6rUhG,8T;;;;;;eA7rUgGA,E;;IAAAA,E;IAAAA,EAysUhG,kC;IAzsUgGA,EA6tU5F;MAAA,kBA7tU4FA,EA6tU5F;MAAA;MAAA,cA7tU4FA,EA6tU5F;MAAA,OA7tU4FA,EA6tUlF,+CAAV;IAAA;MAAA,kBA7tU4FA,EA6tU5F;MAAA;MAAA,cA7tU4FA,EA6tU5F;MAAA,OA7tU4FA,EA8tUhF,kDADZ;IAAA;MAAA,kBA7tU4FA,EA6tU5F;MAAA;MAAA,cA7tU4FA,EA6tU5F;MAAA,OA7tU4FA,EA+tU9E,oDAFd;IAAA,E;IA7tU4FA,EA8sU9F,iB;;;;;iBA9sU8FA,E;IAAAA,EA2sU9F,wC;IA3sU8FA,EA4sU9F,0D;IA5sU8FA,EAgtU5F,a;IAhtU4FA,EAgtU5F,6a;;;;;;IAhtU4FA,E;IAAAA,EAwsUlG,uB;IAxsUkGA,EAysUhG,wF;IAzsUgGA,EAkuUlG,e;;;;iBAluUkGA,E;IAAAA,EA0sU5E,a;IA1sU4EA,EA0sU5E,sE;;;;;;eA1sU4EA,E;;IAAAA,E;IAAAA,EAouUhG,kC;IApuUgGA,EAovU5F;MAAA,kBApvU4FA,EAovU5F;MAAA;MAAA,cApvU4FA,EAovU5F;MAAA,OApvU4FA,EAovUlF,gDAAV;IAAA;MAAA,kBApvU4FA,EAovU5F;MAAA;MAAA,cApvU4FA,EAovU5F;MAAA,OApvU4FA,EAqvUhF,mDADZ;IAAA;MAAA,kBApvU4FA,EAovU5F;MAAA;MAAA,cApvU4FA,EAovU5F;MAAA,OApvU4FA,EAsvU9E,qDAFd;IAAA,E;IApvU4FA,EAquU9F,iB;;;;;kBAruU8FA,E;IAAAA,EAouUzC,4D;IApuUyCA,EAuuU5F,a;IAvuU4FA,EAuuU5F,0b;;;;;;IAvuU4FA,E;IAAAA,EAmuUlG,uB;IAnuUkGA,EAouUhG,wF;IApuUgGA,EAyvUlG,e;;;;iBAzvUkGA,E;IAAAA,EAouUvE,a;IApuUuEA,EAouUvE,sE;;;;;;cApuUuEA,E;;IAAAA,E;IAAAA,EAgpVlG,0B;IAhpVkGA,EA6pVhG;MA7pVgGA,EA6pVhG;MAAA,aA7pVgGA,EA6pVhG;MAAA,OA7pVgGA,EA6pV3E,8CAArB;IAAA,E;IA7pVgGA,EA8pVjG,e;;;;iBA9pViGA,E;IAAAA,EAmpVhG,kX;;;;;;cAnpVgGA,E;;IAAAA,E;IAAAA,EA+pVlG,0B;IA/pVkGA,EA2qVhG;MA3qVgGA,EA2qVhG;MAAA,aA3qVgGA,EA2qVhG;MAAA,OA3qVgGA,EA2qV3E,6CAArB;IAAA,E;IA3qVgGA,EA4qVjG,e;;;;iBA5qViGA,E;IAAAA,EAkqVhG,8T;;;;;;eAlqVgGA,E;;IAAAA,E;IAAAA,EA8qVhG,kC;IA9qVgGA,EAosV5F;MAAA,kBApsV4FA,EAosV5F;MAAA;MAAA,cApsV4FA,EAosV5F;MAAA,OApsV4FA,EAosVlF,+CAAV;IAAA;MAAA,kBApsV4FA,EAosV5F;MAAA;MAAA,cApsV4FA,EAosV5F;MAAA,OApsV4FA,EAqsVhF,kDADZ;IAAA;MAAA,kBApsV4FA,EAosV5F;MAAA;MAAA,cApsV4FA,EAosV5F;MAAA,OApsV4FA,EAssV9E,oDAFd;IAAA;MAAA,kBApsV4FA,EAosV5F;MAAA;MAAA,cApsV4FA,EAosV5F;MAAA,OApsV4FA,EAusVlE,oEAH1B;IAAA,E;IApsV4FA,EAmrV9F,iB;;;;;iBAnrV8FA,E;IAAAA,EAgrV9F,wC;IAhrV8FA,EAirV9F,0D;IAjrV8FA,EAqrV5F,a;IArrV4FA,EAqrV5F,ogB;;;;;;IArrV4FA,E;IAAAA,EA6qVlG,uB;IA7qVkGA,EA8qVhG,qF;IA9qVgGA,EA0sVlG,e;;;;iBA1sVkGA,E;IAAAA,EA+qV5E,a;IA/qV4EA,EA+qV5E,sE;;;;;;eA/qV4EA,E;;IAAAA,E;IAAAA,EA6sVlG,kC;IA7sVkGA,EAkuV9F;MAAA,kBAluV8FA,EAkuV9F;MAAA;MAAA,cAluV8FA,EAkuV9F;MAAA,OAluV8FA,EAkuVpF,gDAAV;IAAA;MAAA,kBAluV8FA,EAkuV9F;MAAA;MAAA,cAluV8FA,EAkuV9F;MAAA,OAluV8FA,EAmuVlF,mDADZ;IAAA;MAAA,kBAluV8FA,EAkuV9F;MAAA;MAAA,cAluV8FA,EAkuV9F;MAAA,OAluV8FA,EAouVhF,qDAFd;IAAA;MAAA,kBAluV8FA,EAkuV9F;MAAA;MAAA,cAluV8FA,EAkuV9F;MAAA,OAluV8FA,EAquVpE,oEAH1B;IAAA,E;IAluV8FA,EAitVhG,iB;;;;;kBAjtVgGA,E;IAAAA,EA+sVhG,4D;IA/sVgGA,EAmtV9F,a;IAntV8FA,EAmtV9F,mhB;;;;;;IAntV8FA,E;IAAAA,EA4sVpG,uB;IA5sVoGA,EA6sVlG,qF;IA7sVkGA,EAwuVpG,e;;;;iBAxuVoGA,E;IAAAA,EA8sV9E,a;IA9sV8EA,EA8sV9E,sE;;;;;;;;IA9sV8EA,E;IAAAA,EA2rWpG,qB;;;;iBA3rWoGA,E;IAAAA,EA8rWlG,oH;;;;;;IA9rWkGA,E;IAAAA,EAutWpG,wB;;;;;;iBAvtWoGA,E;IAAAA,EA0tWlG,sC;IA1tWkGA,EA2tWlG,uP;;;;;;;;cA3tWkGA,E;;IAAAA,E;IAAAA,EAmvXlG,kC;IAnvXkGA,EAkwX9F;MAlwX8FA,EAkwX9F;MAAA,aAlwX8FA,EAkwX9F;MAAA,OAlwX8FA,EAkwXlF,uCAAZ;IAAA;MAlwX8FA,EAkwX9F;MAAA,aAlwX8FA,EAkwX9F;MAAA,OAlwX8FA,EAmwXhF,yCADd;IAAA;MAlwX8FA,EAkwX9F;MAAA,aAlwX8FA,EAkwX9F;MAAA,OAlwX8FA,EAowXpF,oCAFV;IAAA,E;IAlwX8FA,EAovXhG,iB;;;;;iBApvXgGA,E;IAAAA,EAsvX9F,a;IAtvX8FA,EAsvX9F,2X;;;;;;;;cAtvX8FA,E;;IAAAA,E;IAAAA,EA8hYlG,0B;IA9hYkGA,EA4iYhG;MA5iYgGA,EA4iYhG;MAAA,gBA5iYgGA,EA4iYhG;MAAA,aA5iYgGA,EA4iYhG;MAAA,OA5iYgGA,EA4iYtF,4CAAV;IAAA;MA5iYgGA,EA4iYhG;MAAA,gBA5iYgGA,EA4iYhG;MAAA,aA5iYgGA,EA4iYhG;MAAA,OA5iYgGA,EA6iYpF,8CADZ;IAAA;MA5iYgGA,EA4iYhG;MAAA,gBA5iYgGA,EA4iYhG;MAAA,aA5iYgGA,EA4iYhG;MAAA,OA5iYgGA,EA8iYlF,gDAFd;IAAA,E;IA5iYgGA,EA8hYlG,e;;;;oBA9hYkGA,E;iBAAAA,E;IAAAA,EAuiYhG,0C;IAviYgGA,EAwiYhG,0C;IAxiYgGA,EAiiYhG,ue;;;;;;eAjiYgGA,E;;IAAAA,E;IAAAA,EAujYlG,0B;IAvjYkGA,EAokYhG;MApkYgGA,EAokYhG;MAAA,gBApkYgGA,EAokYhG;MAAA,cApkYgGA,EAokYhG;MAAA,OApkYgGA,EAokYtF,6CAAV;IAAA;MApkYgGA,EAokYhG;MAAA,gBApkYgGA,EAokYhG;MAAA,cApkYgGA,EAokYhG;MAAA,OApkYgGA,EAqkYpF,+CADZ;IAAA;MApkYgGA,EAokYhG;MAAA,gBApkYgGA,EAokYhG;MAAA,cApkYgGA,EAokYhG;MAAA,OApkYgGA,EAskYlF,iDAFd;IAAA,E;IApkYgGA,EAujYlG,e;;;;oBAvjYkGA,E;iBAAAA,E;IAAAA,EA+jYhG,0C;IA/jYgGA,EAgkYhG,0C;IAhkYgGA,EA2jYhG,0c;;;;;;IA3jYgGA,EA4hYtG,iB;IA5hYsGA,EA4hYtG,+B;IA5hYsGA,EA8hYlG,+E;IA9hYkGA,EAujYlG,+E;IAvjYkGA,EA+kYpG,iB;;;;;iBA/kYoGA,E;IAAAA,EA6hY7F,a;IA7hY6FA,EA6hY7F,8C;IA7hY6FA,EA+hY/F,a;IA/hY+FA,EA+hY/F,kC;IA/hY+FA,EAwjY/F,a;IAxjY+FA,EAwjY/F,iC;;;;;;cAxjY+FA,E;;IAAAA,E;IAAAA,EAm7YlG,0B;IAn7YkGA,EAg8YhG;MAh8YgGA,EAg8YhG;MAAA,aAh8YgGA,EAg8YhG;MAAA,OAh8YgGA,EAg8Y3E,8CAArB;IAAA,E;IAh8YgGA,EAm7YlG,e;;;;iBAn7YkGA,E;IAAAA,EAs7YhG,sW;;;;;;cAt7YgGA,E;;IAAAA,E;IAAAA,EAk8YlG,0B;IAl8YkGA,EA88YhG;MA98YgGA,EA88YhG;MAAA,aA98YgGA,EA88YhG;MAAA,OA98YgGA,EA88Y3E,6CAArB;IAAA,E;IA98YgGA,EAk8YlG,e;;;;iBAl8YkGA,E;IAAAA,EAq8YhG,8T;;;;;;eAr8YgGA,E;;IAAAA,E;IAAAA,EA09YhG,kC;IA19YgGA,EAy+Y5F;MAAA,kBAz+Y4FA,EAy+Y5F;MAAA;MAAA,cAz+Y4FA,EAy+Y5F;MAAA,OAz+Y4FA,EAy+YlF,gDAAV;IAAA;MAz+Y4FA,EAy+Y5F;MAAA,cAz+Y4FA,EAy+Y5F;MAAA,OAz+Y4FA,EA0+YhF,wCADZ;IAAA;MAz+Y4FA,EAy+Y5F;MAAA,cAz+Y4FA,EAy+Y5F;MAAA,OAz+Y4FA,EA2+Y9E,0CAFd;IAAA,E;IAz+Y4FA,EA29Y9F,iB;;;;;iBA39Y8FA,E;IAAAA,EA09Y3C,wC;IA19Y2CA,EA69Y5F,a;IA79Y4FA,EA69Y5F,mY;;;;;;IA79Y4FA,E;IAAAA,EAy9YlG,uB;IAz9YkGA,EA09YhG,8E;IA19YgGA,EA8+YlG,e;;;;iBA9+YkGA,E;IAAAA,EAy9Y5E,0C;IAz9Y4EA,EA09YtE,a;IA19YsEA,EA09YtE,mE;;;;;;eA19YsEA,E;;IAAAA,E;IAAAA,EAg/YhG,kC;IAh/YgGA,EA+/Y5F;MAAA,kBA//Y4FA,EA+/Y5F;MAAA;MAAA,cA//Y4FA,EA+/Y5F;MAAA,OA//Y4FA,EA+/YlF,iDAAV;IAAA;MA//Y4FA,EA+/Y5F;MAAA,cA//Y4FA,EA+/Y5F;MAAA,OA//Y4FA,EAggZhF,wCADZ;IAAA;MA//Y4FA,EA+/Y5F;MAAA,cA//Y4FA,EA+/Y5F;MAAA,OA//Y4FA,EAigZ9E,0CAFd;IAAA,E;IA//Y4FA,EAi/Y9F,iB;;;;;kBAj/Y8FA,E;IAAAA,EAm/Y5F,a;IAn/Y4FA,EAm/Y5F,+Y;;;;;;IAn/Y4FA,E;IAAAA,EA++YlG,uB;IA/+YkGA,EAg/YhG,8E;IAh/YgGA,EAogZlG,e;;;;iBApgZkGA,E;IAAAA,EA++Y7E,0C;IA/+Y6EA,EAg/YtE,a;IAh/YsEA,EAg/YtE,mE;;;;;;;;IAh/YsEA,E;IAAAA,EAsxZpG,0B;IAtxZoGA,EAuxZlG,qB;IAvxZkGA,EA6xZpG,e;;;;iBA7xZoGA,E;IAAAA,EAyxZhG,a;IAzxZgGA,EAyxZhG,oH;;;;;;;;;;;;;;;;cAzxZgGA,E;;IAAAA,EA05ZtG,iB;IA15ZsGA,EA05ZtG,0B;IA15ZsGA,EAm6ZpG;MAAA,kBAn6ZoGA,EAm6ZpG;MAAA;MAAA,aAn6ZoGA,EAm6ZpG;MAAA,OAn6ZoGA,EAm6Z1F,uCAAV;IAAA;MAAA,kBAn6ZoGA,EAm6ZpG;MAAA;MAAA,aAn6ZoGA,EAm6ZpG;MAAA,OAn6ZoGA,EAo6ZxF,6CADZ;IAAA;MAAA,kBAn6ZoGA,EAm6ZpG;MAAA;MAAA,aAn6ZoGA,EAm6ZpG;MAAA,OAn6ZoGA,EAq6ZtF,+CAFd;IAAA,E;IAn6ZoGA,EA+6ZrG,e;;;;;iBA/6ZqGA,E;IAAAA,EA65ZpG,scA75ZoGA,EA65ZpG,+D;;;;;;cA75ZoGA,E;;IAAAA,E;IAAAA,EA6ralG,0B;IA7rakGA,EAysahG;MAzsagGA,EAysahG;MAAA,aAzsagGA,EAysahG;MAAA,OAzsagGA,EAysa3E,8CAArB;IAAA,E;IAzsagGA,EA0sajG,e;;;;iBA1saiGA,E;IAAAA,EAgsahG,+T;;;;;;cAhsagGA,E;;IAAAA,E;IAAAA,EA2salG,0B;IA3sakGA,EAstahG;MAttagGA,EAstahG;MAAA,aAttagGA,EAstahG;MAAA,OAttagGA,EAsta3E,6CAArB;IAAA,E;IAttagGA,EAutajG,e;;;;iBAvtaiGA,E;IAAAA,EA8sahG,uR;;;;;;IA9sagGA,E;IAAAA,EAwtalG,qB;;;;;IAxtakGA,EA0tahG,sI;;;;;;;;IA1tagGA,EAi6atG,iB;IAj6asGA,EAi6atG,uB;IAj6asGA,EAk6apG,wB;IAl6aoGA,EA06atG,e;;;;iBA16asGA,E;IAAAA,EAm6alG,a;IAn6akGA,EAm6alG,wC;IAn6akGA,EAq6alG,mF;;;;;;IAr6akGA,EA26atG,iB;IA36asGA,EA26atG,uB;IA36asGA,EA46apG,wB;IA56aoGA,EA66atG,e;;;;iBA76asGA,E;IAAAA,EA46a7E,a;IA56a6EA,EA46a7E,mF;;;;;;;;IA56a6EA,E;IAAAA,EAgnblG,qB;;;;iBAhnbkGA,E;IAAAA,EAmnbhG,oH;;;;;;IAnnbgGA,E;IAAAA,EAgpbpG,qB;;;;iBAhpboGA,E;IAAAA,EAupblG,gG;IAvpbkGA,EAopblG,2N;;;;;;cAppbkGA,E;;IAAAA,E;IAAAA,EAs/blG,0B;IAt/bkGA,EAmgchG;MAngcgGA,EAmgchG;MAAA,aAngcgGA,EAmgchG;MAAA,OAngcgGA,EAmgc3E,8CAArB;IAAA,E;IAngcgGA,EAogcjG,e;;;;iBApgciGA,E;IAAAA,EAy/bhG,sW;;;;;;cAz/bgGA,E;;IAAAA,E;IAAAA,EAqgclG,0B;IArgckGA,EAohchG;MAphcgGA,EAohchG;MAAA,aAphcgGA,EAohchG;MAAA,OAphcgGA,EAohc3E,6CAArB;IAAA,E;IAphcgGA,EAqhcjG,e;;;;iBArhciGA,E;IAAAA,EAwgchG,mb;;;;;;IAxgcgGA,E;IAAAA,EAwhc9F,uB;IAxhc8FA,EAyhc5F,sB;IAzhc4FA,EAsic9F,e;;;;;kBAtic8FA,E;IAAAA,EAwhctC,wC;IAxhcsCA,EA2hc1F,a;IA3hc0FA,EA2hc1F,2T;;;;;;IA3hc0FA,E;IAAAA,EAuhchG,uB;IAvhcgGA,EAwhc9F,4E;IAxhc8FA,EAuichG,e;;;;iBAvicgGA,E;IAAAA,EAwhcpE,a;IAxhcoEA,EAwhcpE,sE;;;;;;IAxhcoEA,E;IAAAA,EAyic9F,uB;IAzic8FA,EA0ic5F,sB;IA1ic4FA,EAujc9F,e;;;;;kBAvjc8FA,E;IAAAA,EA4ic1F,a;IA5ic0FA,EA4ic1F,2T;;;;;;IA5ic0FA,E;IAAAA,EAwichG,uB;IAxicgGA,EAyic9F,4E;IAzic8FA,EAwjchG,e;;;;iBAxjcgGA,E;IAAAA,EAyicpE,a;IAzicoEA,EAyicpE,sE;;;;;;eAzicoEA,E;;IAAAA,E;IAAAA,EAwkc9F,mC;IAxkc8FA,EAolc1F;MAplc0FA,EAolc1F;MAAA,cAplc0FA,EAolc1F;MAAA,OAplc0FA,EAolchF,qCAAV;IAAA;MAplc0FA,EAolc1F;MAAA,cAplc0FA,EAolc1F;MAAA,OAplc0FA,EAqlc9E,wCADZ;IAAA;MAplc0FA,EAolc1F;MAAA,cAplc0FA,EAolc1F;MAAA,OAplc0FA,EAslc5E,0CAFd;IAAA,E;IAplc0FA,EAykc5F,iB;;;;;kBAzkc4FA,E;IAAAA,EA2kc1F,a;IA3kc0FA,EA2kc1F,sT;;;;;;eA3kc0FA,E;;IAAAA,E;IAAAA,EA0jchG,2B;IA1jcgGA,EA0jchE;MA1jcgEA,EA0jchE;MAAA,cA1jcgEA,EA0jchE;MAAA,OA1jcgEA,EA0jclD,mCAAd;IAAA,E;IA1jcgEA,EA2jc9F,2B;IA3jc8FA,EAqkc5F;MArkc4FA,EAqkc5F;MAAA,cArkc4FA,EAqkc5F;MAAA,OArkc4FA,EAqkcnF,mDAAT;IAAA,E;IArkc4FA,EA2jc9F,e;IA3jc8FA,EAwkc9F,6E;IAxkc8FA,EAylchG,e;;;;iBAzlcgGA,E;IAAAA,EA6jc5F,a;IA7jc4FA,EA6jc5F,uP;IA7jc4FA,EAwkcpE,a;IAxkcoEA,EAwkcpE,sC;;;;;;IAxkcoEA,E;IAAAA,EAymclG,uB;IAzmckGA,EA0mchG,sB;IA1mcgGA,EAqnclG,e;;;;;kBArnckGA,E;IAAAA,EA4mc9F,a;IA5mc8FA,EA4mc9F,qP;;;;;;eA5mc8FA,E;;IAAAA,E;IAAAA,EA4lcpG,2B;IA5lcoGA,EAumclG;MAvmckGA,EAumclG;MAAA,cAvmckGA,EAumclG;MAAA,OAvmckGA,EAumchF,0CAAlB;IAAA,E;IAvmckGA,EAymclG,4E;IAzmckGA,EAsncpG,e;;;;iBAtncoGA,E;IAAAA,EAgmclG,+CAhmckGA,EAgmclG,uN;IAhmckGA,EA+lclG,mD;IA/lckGA,EAymcxE,a;IAzmcwEA,EAymcxE,sE;;;;;;;;;IAzmcwEA,E;IAAAA,EAmodlG,qB;;;;iBAnodkGA,E;IAAAA,EAsodhG,yI;;;;;;cAtodgGA,E;;IAAAA,E;IAAAA,EAwpdpG,0B;IAxpdoGA,EAwqdlG;MAAA,kBAxqdkGA,EAwqdlG;MAAA;MAAA,aAxqdkGA,EAwqdlG;MAAA,OAxqdkGA,EAwqdxF,gDAAV;IAAA;MAAA,kBAxqdkGA,EAwqdlG;MAAA;MAAA,aAxqdkGA,EAwqdlG;MAAA,OAxqdkGA,EAyqdtF;QAAA;MAAA,GADZ;IAAA;MAAA,kBAxqdkGA,EAwqdlG;MAAA;MAAA,aAxqdkGA,EAwqdlG;MAAA,OAxqdkGA,EA0qdpF;QAAA;MAAA,GAFd;IAAA,E;IAxqdkGA,EA2qdnG,e;;;;;iBA3qdmGA,E;IAAAA,EAgqdlG,kD;IAhqdkGA,EA4pdlG,2Y;;;;;;IA5pdkGA,E;IAAAA,EAyie9F,0B;;;;;IAzie8FA,EA8ie5F,uB;;;;;;IA9ie4FA,E;IAAAA,EAwiehG,uB;IAxiegGA,EAyie9F,sF;IAzie8FA,EAgjehG,e;;;;iBAhjegGA,E;IAAAA,EA0ie9E,a;IA1ie8EA,EA0ie9E,0C;;;;;;IA1ie8EA,E;IAAAA,EAkje9F,qB;;;;;iBAlje8FA,E;IAAAA,EAqje5F,mS;;;;;;IArje4FA,E;IAAAA,EAijehG,uB;IAjjegGA,EAkje9F,4E;IAlje8FA,EA+jehG,e;;;;iBA/jegGA,E;IAAAA,EAoje3E,a;IApje2EA,EAoje3E,yC;;;;;;eApje2EA,E;;IAAAA,E;IAAAA,EAikelG,2B;IAjkekGA,EA6kehG;MA7kegGA,EA6kehG;MAAA,cA7kegGA,EA6kehG;MAAA,OA7kegGA,EA6ke3E,8CAArB;IAAA,E;IA7kegGA,EA8kejG,e;;;;iBA9keiGA,E;IAAAA,EAqkehG,2S;IArkegGA,EAmkehG,gD;;;;;;IAnkegGA,E;IAAAA,EA+kelG,sB;;;;iBA/kekGA,E;IAAAA,EAklehG,oK;;;;;;eAllegGA,E;;IAAAA,E;IAAAA,EAylehG,mC;IAzlegGA,EAwme5F;MAxme4FA,EAwme5F;MAAA,cAxme4FA,EAwme5F;MAAA,OAxme4FA,EAwmelF,qCAAV;IAAA;MAxme4FA,EAwme5F;MAAA,cAxme4FA,EAwme5F;MAAA,OAxme4FA,EAymehF,wCADZ;IAAA;MAxme4FA,EAwme5F;MAAA,cAxme4FA,EAwme5F;MAAA,OAxme4FA,EA0me9E,0CAFd;IAAA,E;IAxme4FA,EA0le9F,iB;;;;;kBA1le8FA,E;IAAAA,EAylexC,wC;IAzlewCA,EA4le5F,a;IA5le4FA,EA4le5F,mZ;;;;;;IA5le4FA,E;IAAAA,EAwlelG,uB;IAxlekGA,EAylehG,8E;IAzlegGA,EA6melG,e;;;;iBA7mekGA,E;IAAAA,EAwle5E,+C;IAxle4EA,EAyletE,a;IAzlesEA,EAyletE,sE;;;;;;eAzlesEA,E;;IAAAA,E;IAAAA,EA+mehG,mC;IA/megGA,EA8ne5F;MA9ne4FA,EA8ne5F;MAAA,cA9ne4FA,EA8ne5F;MAAA,OA9ne4FA,EA8nelF,qCAAV;IAAA;MA9ne4FA,EA8ne5F;MAAA,cA9ne4FA,EA8ne5F;MAAA,OA9ne4FA,EA+nehF,wCADZ;IAAA;MA9ne4FA,EA8ne5F;MAAA,cA9ne4FA,EA8ne5F;MAAA,OA9ne4FA,EAgoe9E,0CAFd;IAAA,E;IA9ne4FA,EAgne9F,iB;;;;;kBAhne8FA,E;IAAAA,EAkne5F,a;IAlne4FA,EAkne5F,mZ;;;;;;IAlne4FA,E;IAAAA,EA8melG,uB;IA9mekGA,EA+mehG,8E;IA/megGA,EAmoelG,e;;;;iBAnoekGA,E;IAAAA,EA8me7E,+C;IA9me6EA,EA+metE,a;IA/mesEA,EA+metE,sE;;;;;;;;IA/mesEA,E;IAAAA,EA27epG,0B;IA37eoGA,EA47elG,qB;IA57ekGA,EA67epG,e;;;;iBA77eoGA,E;IAAAA,EA47e5D,a;IA57e4DA,EA47e5D,uG;;;;;;;;IA57e4DA,E;IAAAA,EA2nfpG,qB;;;;iBA3nfoGA,E;iBAAAA,E;IAAAA,EA8nflG,qT;;;;;;cA9nfkGA,E;;IAAAA,EA0nftG,iB;IA1nfsGA,EA0nftG,uB;IA1nfsGA,EA2nfpG,4E;IA3nfoGA,EAyofpG,0B;IAzofoGA,EAupflG;MAvpfkGA,EAupflG;MAAA,aAvpfkGA,EAupflG;MAAA,OAvpfkGA,EAupfxF,oCAAV;IAAA;MAvpfkGA,EAupflG;MAAA,aAvpfkGA,EAupflG;MAAA,OAvpfkGA,EAwpftF,0CADZ;IAAA;MAvpfkGA,EAupflG;MAAA,aAvpfkGA,EAupflG;MAAA,OAvpfkGA,EAypfpF,4CAFd;IAAA;MAvpfkGA,EAupflG;MAAA,aAvpfkGA,EAupflG;MAAA,OAvpfkGA,EA0pftF,0CAHZ;IAAA,E;IAvpfkGA,EAkqfnG,iB;;;;;iBAlqfmGA,E;IAAAA,EA6nfjG,a;IA7nfiGA,EA6nfjG,gD;IA7nfiGA,EA2oflG,a;IA3ofkGA,EA2oflG,2nB;;;;;;;;;cA3ofkGA,E;;IAAAA,E;IAAAA,EAgxgBpG,0B;IAhxgBoGA,EA8xgBlG;MA9xgBkGA,EA8xgBlG;MAAA,aA9xgBkGA,EA8xgBlG;MAAA,OA9xgBkGA,EA8xgBxF,oCAAV;IAAA;MA9xgBkGA,EA8xgBlG;MAAA,aA9xgBkGA,EA8xgBlG;MAAA,OA9xgBkGA,EA+xgBtF,0CADZ;IAAA;MA9xgBkGA,EA8xgBlG;MAAA,aA9xgBkGA,EA8xgBlG;MAAA,OA9xgBkGA,EAgygBpF,4CAFd;IAAA,E;IA9xgBkGA,EAiygBnG,e;;;;;iBAjygBmGA,E;IAAAA,EAoxgBlG,mT;IApxgBkGA,EAmxgBlG,mC;;;;;;IAnxgBkGA,E;IAAAA,EAy+gBhG,yB;;;;oBAz+gBgGA,E;IAAAA,EAg/gB9F,6D;;;;;;IAh/gB8FA,E;IAAAA,EAo/gBhG,8B;IAp/gBgGA,EAq/gB9F,U;IAr/gB8FA,EAs/gBhG,e;;;;oBAt/gBgGA,E;IAAAA,EAq/gB9F,a;IAr/gB8FA,EAq/gB9F,iE;;;;;;IAr/gB8FA,E;IAAAA,EA0/gBhG,yB;;;;oBA1/gBgGA,E;iBAAAA,E;IAAAA,EAkghB9F,2E;IAlghB8FA,EA+/gB9F,wC;;;;;;IA//gB8FA,E;IAAAA,EAqghBhG,8B;IArghBgGA,EA6ghB9F,U;IA7ghB8FA,EA8ghBhG,e;;;;oBA9ghBgGA,E;iBAAAA,E;IAAAA,EA0ghB9F,wC;IA1ghB8FA,EA6ghB9F,a;IA7ghB8FA,EA6ghB9F,mF;;;;;;;;;;;;eA7ghB8FA,E;;IAAAA,E;IAAAA,EAs9gBlG,qC;IAt9gBkGA,EA89gB9F;MA99gB8FA,EA89gB9F;MAAA,cA99gB8FA,EA89gB9F;MAAA,OA99gB8FA,EA89gBpF,qCAAV;IAAA;MA99gB8FA,EA89gB9F;MAAA,cA99gB8FA,EA89gB9F;MAAA,OA99gB8FA,EAs+gBlF,wCARZ;IAAA;MA99gB8FA,EA89gB9F;MAAA,cA99gB8FA,EA89gB9F;MAAA,OA99gB8FA,EAu+gBhF,0CATd;IAAA,E;IA99gB8FA,EAu9gBhG,e;IAv9gBgGA,EAy+gBhG,+E;IAz+gBgGA,EAo/gBhG,+E;IAp/gBgGA,EAu/gBhG,6B;IAv/gBgGA,EAw/gB9F,U;IAx/gB8FA,EAy/gBhG,e;IAz/gBgGA,EA0/gBhG,+E;IA1/gBgGA,EAqghBhG,+E;IArghBgGA,EA+ghBlG,e;;;;;iBA/ghBkGA,E;IAAAA,EAs9gBvC,8C;IAt9gBuCA,EAy9gB9F,a;IAz9gB8FA,EAy9gB9F,yXAz9gB8FA,EAy9gB9F,4H;IAz9gB8FA,EA0+gB7F,a;IA1+gB6FA,EA0+gB7F,sC;IA1+gB6FA,EAo/gBrF,a;IAp/gBqFA,EAo/gBrF,uC;IAp/gBqFA,EAw/gB9F,a;IAx/gB8FA,EAw/gB9F,8C;IAx/gB8FA,EA2/gB7F,a;IA3/gB6FA,EA2/gB7F,sC;IA3/gB6FA,EAsghB7F,a;IAtghB6FA,EAsghB7F,uC;;;;;;;;;IAtghB6FA,E;IAAAA,EAk4hBpG,wB;;;;iBAl4hBoGA,E;IAAAA,EAq4hBlG,+F;;;;;;;;IAr4hBkGA,EA6miBtG,iB;IA7miBsGA,EA6miBtG,wB;;;;;iBA7miBsGA,E;IAAAA,EAkniBpG,uC;IAlniBoGA,EAgniBpG,kF;;;;;;cAhniBoGA,E;;IAAAA,EAwniBtG,iB;IAxniBsGA,EAwniBtG,0B;IAxniBsGA,EAwoiBpG;MAxoiBoGA,EAwoiBpG;MAAA,aAxoiBoGA,EAwoiBpG;MAAA,OAxoiBoGA,EAwoiB1F,oCAAV;IAAA,E;IAxoiBoGA,EAwniBtG,e;;;;;iBAxniBsGA,E;IAAAA,EA2niBpG,gW;;;;;;;;IA3niBoGA,E;IAAAA,EA84iBpG,0B;IA94iBoGA,EA+4iBlG,qB;IA/4iBkGA,EAq5iBpG,e;;;;iBAr5iBoGA,E;IAAAA,EAi5iBhG,a;IAj5iBgGA,EAi5iBhG,iH;;;;;;IAj5iBgGA,EA26iBhG,wB;;;;iBA36iBgGA,E;IAAAA,EA+6iB9F,+E;;;;;;IA/6iB8FA,EAm7iBhG,6B;IAn7iBgGA,EAo7iB9F,U;IAp7iB8FA,EAq7iBhG,e;;;;iBAr7iBgGA,E;IAAAA,EAo7iB9F,a;IAp7iB8FA,EAo7iB9F,oD;;;;;;IAp7iB8FA,E;IAAAA,EA+5iBpG,sC;IA/5iBoGA,EAw6iBlG,kB;IAx6iBkGA,EAw6iBlG,uB;IAx6iBkGA,EAy6iBhG,iC;IAz6iBgGA,EA26iBhG,iG;IA36iBgGA,EAm7iBhG,iG;IAn7iBgGA,EAs7iBlG,iB;;;;iBAt7iBkGA,E;IAAAA,EAs6iBlG,sC;IAt6iBkGA,EAi6iBlG,0F;IAj6iBkGA,EAw6iBzF,a;IAx6iByFA,EAw6iBzF,0G;IAx6iByFA,EAy6iB9D,a;IAz6iB8DA,EAy6iB9D,gDAz6iB8DA,EAy6iB9D,gB;IAz6iB8DA,EA46iB7F,a;IA56iB6FA,EA46iB7F,sC;IA56iB6FA,EAm7iBnF,a;IAn7iBmFA,EAm7iBnF,uC;;;;;;;;cAn7iBmFA,E;;IAAAA,EAwjjBtG,iB;IAxjjBsGA,EAwjjBtG,0B;IAxjjBsGA,EAukjBpG;MAvkjBoGA,EAukjBpG;MAAA,aAvkjBoGA,EAukjBpG;MAAA,OAvkjBoGA,EAukjB1F,oCAAV;IAAA,E;IAvkjBoGA,EA+kjBrG,e;;;;;iBA/kjBqGA,E;IAAAA,EA2jjBpG,mlB;;;;;;;;;IA3jjBoGA,E;IAAAA,EAw6jBlG,yB;;;;iBAx6jBkGA,E;IAAAA,EA06jBhG,+F;;;;;;IA16jBgGA,E;IAAAA,EAk7jBlG,yB;;;;iBAl7jBkGA,E;IAAAA,EAo7jBhG,+F;;;;;;;;;;;;;IAp7jBgGA,E;IAAAA,EAuxkBpG,0B;IAvxkBoGA,EAwxkBlG,qB;IAxxkBkGA,EAyxkBpG,e;;;;;IAzxkBoGA,EAwxkBxF,a;IAxxkBwFA,EAwxkBxF,+B;;;;;;IAxxkBwFA,E;IAAAA,EA0xkBpG,wC;IA1xkBoGA,EAgykBhG,U;IAhykBgGA,EAiykBlG,iB;;;;;IAjykBkGA,EA4xkBhG,a;IA5xkBgGA,EA4xkBhG,+C;IA5xkBgGA,EA6xkBhG,gD;IA7xkBgGA,EAgykBhG,a;IAhykBgGA,EAgykBhG,2C;;;;;;IAhykBgGA,E;IAAAA,EAmykBpG,0B;IAnykBoGA,EAoykBlG,qB;IApykBkGA,EAqykBpG,e;;;;;IArykBoGA,EAoykBxF,a;IApykBwFA,EAoykBxF,+B;;;;;;cApykBwFA,E;;IAAAA,E;IAAAA,EA6ilBlG,kC;IA7ilBkGA,EAyjlB9F;MAzjlB8FA,EAyjlB9F;MAAA,aAzjlB8FA,EAyjlB9F;MAAA,OAzjlB8FA,EAyjlBpF,oCAAV;IAAA;MAzjlB8FA,EAyjlB9F;MAAA,aAzjlB8FA,EAyjlB9F;MAAA,OAzjlB8FA,EA0jlBlF,uCADZ;IAAA;MAzjlB8FA,EAyjlB9F;MAAA,aAzjlB8FA,EAyjlB9F;MAAA,OAzjlB8FA,EA2jlBhF,yCAFd;IAAA,E;IAzjlB8FA,EA4jlB/F,iB;;;;;iBA5jlB+FA,E;IAAAA,EA6ilBhD,0C;IA7ilBgDA,EAgjlB9F,a;IAhjlB8FA,EAgjlB9F,kW;;;;;;IAhjlB8FA,E;IAAAA,EA+jlBlG,qB;;;;iBA/jlBkGA,E;IAAAA,EAkklBhG,uS;;;;;;IAlklBgGA,E;IAAAA,EA6klBlG,+C;IA7klBkGA,EAollB5E,U;IApllB4EA,EAollB1D,e;IApllB0DA,EAqllBhG,+B;IArllBgGA,EAqllBxE,U;IArllBwEA,EAqllB7D,iB;;;;iBArllB6DA,E;IAAAA,EAgllBhG,qC;IAhllBgGA,EAillBhG,+C;IAjllBgGA,EAollB5E,a;IApllB4EA,EAollB5E,uC;IApllB4EA,EAqllBxE,a;IArllBwEA,EAqllBxE,gC;;;;AA15lBlC,SAASwD,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,OAA9B,EAAuC;EACnCA,OAAO,GAAGA,OAAO,IAAI,EAArB;EACA,IAAIC,OAAJ;EACA,IAAIC,IAAJ;EACA,IAAIC,MAAJ;EACA,IAAIC,OAAO,GAAG,IAAd;EACA,IAAIC,QAAQ,GAAG,CAAf;;EACA,SAASC,KAAT,GAAiB;IACbD,QAAQ,GAAGL,OAAO,CAACO,OAAR,KAAoB,KAApB,GAA4B,CAA5B,GAAgC,CAAC,IAAIC,IAAJ,EAA5C;IACAJ,OAAO,GAAG,IAAV;IACAD,MAAM,GAAGL,IAAI,CAACW,KAAL,CAAWR,OAAX,EAAoBC,IAApB,CAAT;EACH;;EACD,OAAO,YAAY;IACf,IAAMQ,GAAG,GAAG,CAAC,IAAIF,IAAJ,EAAb;;IACA,IAAI,CAACH,QAAD,IAAaL,OAAO,CAACO,OAAR,KAAoB,KAArC,EAA4C;MACxCF,QAAQ,GAAGK,GAAX;IACH;;IACD,IAAMC,SAAS,GAAGZ,IAAI,IAAIW,GAAG,GAAGL,QAAV,CAAtB;IACAJ,OAAO,GAAG,IAAV,CANe,CAOf;;IACAC,IAAI,GAAGU,SAAP;;IACA,IAAID,SAAS,IAAI,CAAjB,EAAoB;MAChBE,YAAY,CAACT,OAAD,CAAZ;MACAA,OAAO,GAAG,IAAV;MACAC,QAAQ,GAAGK,GAAX;MACAP,MAAM,GAAGL,IAAI,CAACW,KAAL,CAAWR,OAAX,EAAoBC,IAApB,CAAT;IACH,CALD,MAMK,IAAI,CAACE,OAAD,IAAYJ,OAAO,CAACc,QAAR,KAAqB,KAArC,EAA4C;MAC7CV,OAAO,GAAGW,UAAU,CAACT,KAAD,EAAQK,SAAR,CAApB;IACH;;IACD,OAAOR,MAAP;EACH,CAnBD;AAoBH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASa,YAAT,CAAsBC,QAAtB,EAAgCjB,OAAhC,EAAyC;EACrC,OAAO,SAASkB,cAAT,CAAwBC,MAAxB,EAAgCC,GAAhC,EAAqCC,UAArC,EAAiD;IACpD,OAAO;MACHC,YAAY,EAAE,IADX;MAEHC,UAAU,EAAEF,UAAU,CAACE,UAFpB;MAGHC,GAAG,EAAE,SAASC,MAAT,GAAkB;QACnBC,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BP,GAA5B,EAAiC;UAC7BE,YAAY,EAAE,IADe;UAE7BC,UAAU,EAAEF,UAAU,CAACE,UAFM;UAG7BK,KAAK,EAAE/B,QAAQ,CAACwB,UAAU,CAACO,KAAZ,EAAmBX,QAAnB,EAA6BjB,OAA7B;QAHc,CAAjC;QAKA,OAAO,KAAKoB,GAAL,CAAP;MACH;IAVE,CAAP;EAYH,CAbD;AAcH;;AAED,IAAIS,cAAJ;;AACA,CAAC,UAAUA,cAAV,EAA0B;EACvBA,cAAc,CAAC,KAAD,CAAd,GAAwB,KAAxB;EACAA,cAAc,CAAC,QAAD,CAAd,GAA2B,QAA3B;EACAA,cAAc,CAAC,MAAD,CAAd,GAAyB,MAAzB;EACAA,cAAc,CAAC,OAAD,CAAd,GAA0B,OAA1B;EACAA,cAAc,CAAC,QAAD,CAAd,GAA2B,QAA3B;AACH,CAND,EAMGA,cAAc,KAAKA,cAAc,GAAG,EAAtB,CANjB;;AAQA,IAAMC,WAAW,GAAG,CAApB;;AACA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwCC,iBAAxC,EAA2DC,SAA3D,EAAsE;EAClE,IAAIA,SAAS,KAAKL,cAAc,CAACM,GAAjC,EAAsC;IAClC,OAAOH,YAAY,CAACI,GAAb,GAAmBN,WAA1B;EACH;;EACD,IAAII,SAAS,KAAKL,cAAc,CAACQ,MAAjC,EAAyC;IACrC,OAAOL,YAAY,CAACI,GAAb,GAAmBJ,YAAY,CAACM,MAAhC,GAAyCL,iBAAiB,CAACK,MAA3D,GAAoER,WAA3E;EACH;;EACD,IAAII,SAAS,KAAKL,cAAc,CAACU,MAAjC,EAAyC;IACrC,OAAOP,YAAY,CAACI,GAAb,GAAmBJ,YAAY,CAACM,MAAb,GAAsB,CAAzC,GAA6CL,iBAAiB,CAACK,MAAlB,GAA2B,CAA/E;EACH;;EACD,OAAOE,SAAP;AACH;;AACD,SAASC,kBAAT,CAA4BT,YAA5B,EAA0CC,iBAA1C,EAA6DC,SAA7D,EAAwE;EACpE,IAAIA,SAAS,KAAKL,cAAc,CAACa,IAAjC,EAAuC;IACnC,OAAOV,YAAY,CAACW,IAAb,GAAoBb,WAA3B;EACH;;EACD,IAAII,SAAS,KAAKL,cAAc,CAACe,KAAjC,EAAwC;IACpC,OAAOZ,YAAY,CAACW,IAAb,GAAoBX,YAAY,CAACa,KAAjC,GAAyCZ,iBAAiB,CAACY,KAA3D,GAAmEf,WAA1E;EACH;;EACD,IAAII,SAAS,KAAKL,cAAc,CAACU,MAAjC,EAAyC;IACrC,OAAOP,YAAY,CAACW,IAAb,GAAoBX,YAAY,CAACa,KAAb,GAAqB,CAAzC,GAA6CZ,iBAAiB,CAACY,KAAlB,GAA0B,CAA9E;EACH;;EACD,OAAOL,SAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;IACMM,c;;;;;;;;IACF;AACJ;AACA;AACA;AACA;IACI,oCAAkCd,YAAlC,EAAgDC,iBAAhD,EAAmEC,SAAnE,EAA8E;MAC1E,IAAI/B,MAAM,GAAG4B,gBAAgB,CAACC,YAAD,EAAeC,iBAAf,EAAkCC,SAAlC,CAA7B;;MACA,IAAI/B,MAAM,GAAG8B,iBAAiB,CAACK,MAA3B,GAAoCS,MAAM,CAACC,WAA/C,EAA4D;QACxD7C,MAAM,GAAG4C,MAAM,CAACC,WAAP,GAAqBf,iBAAiB,CAACK,MAAhD;MACH;;MACD,OAAOnC,MAAP;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,gCAA8B6B,YAA9B,EAA4CC,iBAA5C,EAA+DgB,eAA/D,EAAgFf,SAAhF,EAA2F;MACvF,IAAI/B,MAAJ;;MACA,IAAI+B,SAAS,KAAKL,cAAc,CAACM,GAAjC,EAAsC;QAClChC,MAAM,GAAG6B,YAAY,CAACM,MAAb,GAAsB,CAAtB,GAA0BW,eAAe,CAACX,MAAhB,GAAyB,CAAnD,GAAuDR,WAAhE;MACH;;MACD,IAAII,SAAS,KAAKL,cAAc,CAACQ,MAAjC,EAAyC;QACrClC,MAAM,GAAG8B,iBAAiB,CAACK,MAAlB,GAA2BN,YAAY,CAACM,MAAb,GAAsB,CAAjD,GAAqDW,eAAe,CAACX,MAAhB,GAAyB,CAA9E,GAAkFR,WAA3F;MACH;;MACD,IAAII,SAAS,KAAKL,cAAc,CAACU,MAAjC,EAAyC;QACrCpC,MAAM,GAAG8B,iBAAiB,CAACK,MAAlB,GAA2B,CAA3B,GAA+BW,eAAe,CAACX,MAAhB,GAAyB,CAAjE;MACH;;MACD,IAAMY,eAAe,GAAGnB,gBAAgB,CAACC,YAAD,EAAeC,iBAAf,EAAkCC,SAAlC,CAAxC;;MACA,IAAIgB,eAAe,GAAGjB,iBAAiB,CAACK,MAApC,GAA6CS,MAAM,CAACC,WAAxD,EAAqE;QACjE7C,MAAM,IAAI+C,eAAe,GAAGjB,iBAAiB,CAACK,MAApC,GAA6CS,MAAM,CAACC,WAA9D;MACH;;MACD,OAAO7C,MAAP;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,sCAAoC6B,YAApC,EAAkDC,iBAAlD,EAAqEC,SAArE,EAAgF;MAC5E,IAAI/B,MAAM,GAAGsC,kBAAkB,CAACT,YAAD,EAAeC,iBAAf,EAAkCC,SAAlC,CAA/B;;MACA,IAAI/B,MAAM,GAAG8B,iBAAiB,CAACY,KAA3B,GAAmCE,MAAM,CAACI,UAA9C,EAA0D;QACtDhD,MAAM,GAAG4C,MAAM,CAACI,UAAP,GAAoBlB,iBAAiB,CAACY,KAA/C;MACH;;MACD,OAAO1C,MAAP;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,kCAAgC6B,YAAhC,EAA8CC,iBAA9C,EAAiEgB,eAAjE,EAAkFf,SAAlF,EAA6F;MACzF,IAAI/B,MAAJ;;MACA,IAAI+B,SAAS,KAAKL,cAAc,CAACa,IAAjC,EAAuC;QACnCvC,MAAM,GAAG6B,YAAY,CAACa,KAAb,GAAqB,CAArB,GAAyBI,eAAe,CAACJ,KAAhB,GAAwB,CAAjD,GAAqDf,WAA9D;MACH;;MACD,IAAII,SAAS,KAAKL,cAAc,CAACe,KAAjC,EAAwC;QACpCzC,MAAM,GAAG8B,iBAAiB,CAACY,KAAlB,GAA0Bb,YAAY,CAACa,KAAb,GAAqB,CAA/C,GAAmDI,eAAe,CAACJ,KAAhB,GAAwB,CAA3E,GAA+Ef,WAAxF;MACH;;MACD,IAAII,SAAS,KAAKL,cAAc,CAACU,MAAjC,EAAyC;QACrCpC,MAAM,GAAG8B,iBAAiB,CAACY,KAAlB,GAA0B,CAA1B,GAA8BI,eAAe,CAACJ,KAAhB,GAAwB,CAA/D;MACH;;MACD,IAAMK,eAAe,GAAGT,kBAAkB,CAACT,YAAD,EAAeC,iBAAf,EAAkCC,SAAlC,CAA1C;;MACA,IAAIgB,eAAe,GAAGjB,iBAAiB,CAACY,KAApC,GAA4CE,MAAM,CAACI,UAAvD,EAAmE;QAC/DhD,MAAM,IAAI+C,eAAe,GAAGjB,iBAAiB,CAACY,KAApC,GAA4CE,MAAM,CAACI,UAA7D;MACH;;MACD,OAAOhD,MAAP;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,oBAAkB6B,YAAlB,EAAgCC,iBAAhC,EAAmDmB,SAAnD,EAA8DC,OAA9D,EAAuE;MACnE,IAAIC,IAAI,GAAG,KAAX;;MACA,IAAIF,SAAS,KAAKvB,cAAc,CAACe,KAAjC,EAAwC;QACpC,IAAIZ,YAAY,CAACW,IAAb,GAAoBX,YAAY,CAACa,KAAjC,GAAyCZ,iBAAiB,CAACY,KAA3D,GAAmEQ,OAAnE,GAA6EN,MAAM,CAACI,UAAxF,EAAoG;UAChGG,IAAI,GAAG,IAAP;QACH;MACJ;;MACD,IAAIF,SAAS,KAAKvB,cAAc,CAACa,IAAjC,EAAuC;QACnC,IAAIV,YAAY,CAACW,IAAb,GAAoBV,iBAAiB,CAACY,KAAtC,GAA8CQ,OAA9C,GAAwD,CAA5D,EAA+D;UAC3DC,IAAI,GAAG,IAAP;QACH;MACJ;;MACD,IAAIF,SAAS,KAAKvB,cAAc,CAACM,GAAjC,EAAsC;QAClC,IAAIH,YAAY,CAACI,GAAb,GAAmBH,iBAAiB,CAACK,MAArC,GAA8Ce,OAA9C,GAAwD,CAA5D,EAA+D;UAC3DC,IAAI,GAAG,IAAP;QACH;MACJ;;MACD,IAAIF,SAAS,KAAKvB,cAAc,CAACQ,MAAjC,EAAyC;QACrC,IAAIL,YAAY,CAACI,GAAb,GAAmBJ,YAAY,CAACM,MAAhC,GAAyCL,iBAAiB,CAACK,MAA3D,GAAoEe,OAApE,GAA8EN,MAAM,CAACC,WAAzF,EAAsG;UAClGM,IAAI,GAAG,IAAP;QACH;MACJ;;MACD,OAAOA,IAAP;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,uBAAqBF,SAArB,EAAgCG,MAAhC,EAAwCC,OAAxC,EAAiDP,eAAjD,EAAkEf,SAAlE,EAA6E;MACzE,IAAIE,GAAG,GAAG,CAAV;MACA,IAAIO,IAAI,GAAG,CAAX;;MACA,IAAIS,SAAS,KAAKvB,cAAc,CAACe,KAAjC,EAAwC;QACpCD,IAAI,GAAG,CAAC,CAAR;QACAP,GAAG,GAAGU,cAAc,CAACW,sBAAf,CAAsCD,OAAtC,EAA+CD,MAA/C,EAAuDN,eAAvD,EAAwEf,SAAxE,CAAN;MACH,CAHD,MAIK,IAAIkB,SAAS,KAAKvB,cAAc,CAACa,IAAjC,EAAuC;QACxCC,IAAI,GAAGY,MAAM,CAACV,KAAd;QACAT,GAAG,GAAGU,cAAc,CAACW,sBAAf,CAAsCD,OAAtC,EAA+CD,MAA/C,EAAuDN,eAAvD,EAAwEf,SAAxE,CAAN;MACH,CAHI,MAIA,IAAIkB,SAAS,KAAKvB,cAAc,CAACM,GAAjC,EAAsC;QACvCC,GAAG,GAAGmB,MAAM,CAACjB,MAAb;QACAK,IAAI,GAAGG,cAAc,CAACY,wBAAf,CAAwCF,OAAxC,EAAiDD,MAAjD,EAAyDN,eAAzD,EAA0Ef,SAA1E,CAAP;MACH,CAHI,MAIA,IAAIkB,SAAS,KAAKvB,cAAc,CAACQ,MAAjC,EAAyC;QAC1CD,GAAG,GAAG,CAAC,CAAP;QACAO,IAAI,GAAGG,cAAc,CAACY,wBAAf,CAAwCF,OAAxC,EAAiDD,MAAjD,EAAyDN,eAAzD,EAA0Ef,SAA1E,CAAP;MACH;;MACD,OAAO;QAAEE,GAAG,EAAHA,GAAF;QAAOO,IAAI,EAAJA;MAAP,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,yBAAuBS,SAAvB,EAAkCG,MAAlC,EAA0CC,OAA1C,EAAmDH,OAAnD,EAA4DnB,SAA5D,EAAuE;MACnE,IAAIE,GAAG,GAAG,CAAV;MACA,IAAIO,IAAI,GAAG,CAAX;;MACA,IAAIS,SAAS,KAAKvB,cAAc,CAACe,KAAjC,EAAwC;QACpCD,IAAI,GAAGa,OAAO,CAACb,IAAR,GAAea,OAAO,CAACX,KAAvB,GAA+BQ,OAAtC;QACAjB,GAAG,GAAGU,cAAc,CAACa,0BAAf,CAA0CH,OAA1C,EAAmDD,MAAnD,EAA2DrB,SAA3D,CAAN;MACH,CAHD,MAIK,IAAIkB,SAAS,KAAKvB,cAAc,CAACa,IAAjC,EAAuC;QACxCC,IAAI,GAAGa,OAAO,CAACb,IAAR,GAAeY,MAAM,CAACV,KAAtB,GAA8BQ,OAArC;QACAjB,GAAG,GAAGU,cAAc,CAACa,0BAAf,CAA0CH,OAA1C,EAAmDD,MAAnD,EAA2DrB,SAA3D,CAAN;MACH,CAHI,MAIA,IAAIkB,SAAS,KAAKvB,cAAc,CAACM,GAAjC,EAAsC;QACvCC,GAAG,GAAGoB,OAAO,CAACpB,GAAR,GAAcmB,MAAM,CAACjB,MAArB,GAA8Be,OAApC;QACAV,IAAI,GAAGG,cAAc,CAACc,4BAAf,CAA4CJ,OAA5C,EAAqDD,MAArD,EAA6DrB,SAA7D,CAAP;MACH,CAHI,MAIA,IAAIkB,SAAS,KAAKvB,cAAc,CAACQ,MAAjC,EAAyC;QAC1CD,GAAG,GAAGoB,OAAO,CAACpB,GAAR,GAAcoB,OAAO,CAAClB,MAAtB,GAA+Be,OAArC;QACAV,IAAI,GAAGG,cAAc,CAACc,4BAAf,CAA4CJ,OAA5C,EAAqDD,MAArD,EAA6DrB,SAA7D,CAAP;MACH;;MACD,OAAO;QAAEE,GAAG,EAAHA,GAAF;QAAOO,IAAI,EAAJA;MAAP,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,4BAA0BS,SAA1B,EAAqCG,MAArC,EAA6CC,OAA7C,EAAsDH,OAAtD,EAA+D;MAC3D,IAAMQ,UAAU,GAAGf,cAAc,CAACe,UAAf,CAA0BL,OAA1B,EAAmCD,MAAnC,EAA2CH,SAA3C,EAAsDC,OAAtD,CAAnB;;MACA,IAAIQ,UAAJ,EAAgB;QACZ,IAAIT,SAAS,KAAKvB,cAAc,CAACe,KAAjC,EAAwC;UACpC,OAAOf,cAAc,CAACa,IAAtB;QACH,CAFD,MAGK,IAAIU,SAAS,KAAKvB,cAAc,CAACa,IAAjC,EAAuC;UACxC,OAAOb,cAAc,CAACe,KAAtB;QACH,CAFI,MAGA,IAAIQ,SAAS,KAAKvB,cAAc,CAACM,GAAjC,EAAsC;UACvC,OAAON,cAAc,CAACQ,MAAtB;QACH,CAFI,MAGA,IAAIe,SAAS,KAAKvB,cAAc,CAACQ,MAAjC,EAAyC;UAC1C,OAAOR,cAAc,CAACM,GAAtB;QACH;MACJ;;MACD,OAAOiB,SAAP;IACH;;;;;;IAGCU,uB;EACF,iCAAYC,OAAZ,EAAqBC,QAArB,EAA+BC,UAA/B,EAA2C;IAAA;;IACvC,KAAKF,OAAL,GAAeA,OAAf;IACA,KAAKC,QAAL,GAAgBA,QAAhB;IACA,KAAKC,UAAL,GAAkBA,UAAlB;EACH;;;;SACD,eAAiB;MACb,IAAIC,GAAG,GAAG,4BAAV;MACAA,GAAG,wBAAiB,KAAKd,SAAtB,CAAH;MACAc,GAAG,oBAAa,KAAKC,IAAlB,CAAH;MACAD,GAAG,eAAQ,KAAKE,QAAb,CAAH;MACA,OAAOF,GAAP;IACH;;;WACD,2BAAkB;MACdnD,UAAU,CAAC,KAAKsD,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAD,CAAV;IACH;;;WACD,oBAAW;MAAA;;MACP,IAAI,CAAChH,iBAAiB,CAAC,KAAK2G,UAAN,CAAtB,EAAyC;QACrC;MACH;;MACD,IAAMM,SAAS,GAAG,KAAKR,OAAL,CAAaS,aAA/B;MACA,IAAMhB,OAAO,GAAG,KAAKiB,IAAL,CAAUD,aAAV,CAAwBE,qBAAxB,EAAhB,CALO,CAMP;;MACA,IAAI,CAAClB,OAAO,CAAClB,MAAT,IAAmB,CAACkB,OAAO,CAACX,KAAhC,EACI;MACJ,IAAMU,MAAM,GAAGgB,SAAS,CAACG,qBAAV,EAAf;MACA,KAAKC,SAAL,CAAenB,OAAf,EAAwBD,MAAxB;MACA,KAAKqB,eAAL,CAAqBL,SAArB,EAAgCf,OAAhC,EAAyCD,MAAzC;;MACA,IAAI,KAAKsB,SAAT,EAAoB;QAChB,KAAKC,aAAL,CAAmBtB,OAAnB,EAA4BD,MAA5B;MACH,CAdM,CAeP;;;MACAxC,UAAU,CAAC;QAAA,OAAM,KAAI,CAACiD,QAAL,CAAce,QAAd,CAAuBR,SAAvB,EAAkC,SAAlC,CAAN;MAAA,CAAD,EAAqD,CAArD,CAAV;IACH;;;WACD,yBAAgBA,SAAhB,EAA2Bf,OAA3B,EAAoCD,MAApC,EAA4C;MACxC,4BAAsBT,cAAc,CAAC8B,eAAf,CAA+B,KAAKxB,SAApC,EAA+CG,MAA/C,EAAuDC,OAAvD,EAAgE,KAAKH,OAArE,EAA8E,KAAKnB,SAAnF,CAAtB;MAAA,IAAQE,GAAR,yBAAQA,GAAR;MAAA,IAAaO,IAAb,yBAAaA,IAAb;;MACA,KAAKqB,QAAL,CAAcgB,QAAd,CAAuBT,SAAvB,EAAkC,KAAlC,YAA4CnC,GAA5C;MACA,KAAK4B,QAAL,CAAcgB,QAAd,CAAuBT,SAAvB,EAAkC,MAAlC,YAA6C5B,IAA7C;IACH;;;WACD,uBAAca,OAAd,EAAuBD,MAAvB,EAA+B;MAC3B,IAAM0B,QAAQ,GAAG,KAAKA,QAAL,CAAcT,aAA/B;MACA,IAAMvB,eAAe,GAAGgC,QAAQ,CAACP,qBAAT,EAAxB;;MACA,6BAAsB5B,cAAc,CAACgC,aAAf,CAA6B,KAAK1B,SAAlC,EAA6CG,MAA7C,EAAqDC,OAArD,EAA8DP,eAA9D,EAA+E,KAAKf,SAApF,CAAtB;MAAA,IAAQE,GAAR,0BAAQA,GAAR;MAAA,IAAaO,IAAb,0BAAaA,IAAb;;MACA,KAAKqB,QAAL,CAAcgB,QAAd,CAAuBC,QAAvB,EAAiC,KAAjC,YAA2C7C,GAA3C;MACA,KAAK4B,QAAL,CAAcgB,QAAd,CAAuBC,QAAvB,EAAiC,MAAjC,YAA4CtC,IAA5C;IACH;;;WACD,mBAAUa,OAAV,EAAmBD,MAAnB,EAA2B;MACvB,KAAKH,SAAL,GAAiBN,cAAc,CAACoC,kBAAf,CAAkC,KAAK9B,SAAvC,EAAkDG,MAAlD,EAA0DC,OAA1D,EAAmE,KAAKH,OAAxE,CAAjB;IACH;;;WACD,0BAAiB;MACb,KAAKgB,QAAL;IACH;;;;;;AAELP,uBAAuB,CAACqB,IAAxB;EAAA,iBAAoHrB,uBAApH,EAA0GzH,EAA1G,mBAA6JA,EAAE,CAAC+I,UAAhK,GAA0G/I,EAA1G,mBAAuLA,EAAE,CAACgJ,SAA1L,GAA0GhJ,EAA1G,mBAAgNC,WAAhN;AAAA;;AACAwH,uBAAuB,CAACwB,IAAxB,kBAD0GjJ,EAC1G;EAAA,MAAwGyH,uBAAxG;EAAA;EAAA;IAAA;MAD0GzH,EAC1G;IAAA;;IAAA;MAAA;;MAD0GA,EAC1G,qBAD0GA,EAC1G;IAAA;EAAA;EAAA;EAAA;IAAA;MAD0GA,EAC1G;QAAA,OAAwG,oBAAxG;MAAA,UAD0GA,EAC1G;IAAA;;IAAA;MAD0GA,EAC1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAD0GA,EAEtG,yBADJ;MAD0GA,EAGpG,2BAFN;MAD0GA,EAIpG,4BAHN;MAD0GA,EAKlG,wEAJR;MAD0GA,EAQlG,wEAPR;MAD0GA,EASpG,iBARN;IAAA;;IAAA;MAD0GA,EAG9D,aAF5C;MAD0GA,EAG9D,qEAF5C;MAD0GA,EAGpF,qCAFtB;MAD0GA,EAK3F,aAJf;MAD0GA,EAK3F,+BAJf;MAD0GA,EAQ3F,aAPf;MAD0GA,EAQ3F,8BAPf;IAAA;EAAA;EAAA,eAUs6FgB,EAAE,CAACkI,IAVz6F,EAUu/FlI,EAAE,CAACmI,gBAV1/F;EAAA;EAAA;AAAA;;AAWA/H,UAAU,CAAC,CACPuD,YAAY,CAAC,GAAD,CADL,CAAD,EAEP8C,uBAAuB,CAAC2B,SAFjB,EAE4B,gBAF5B,EAE8C,IAF9C,CAAV;;AAGA;EAAA,mDAf0GpJ,EAe1G,mBAA2FyH,uBAA3F,EAAgI,CAAC;IACrHK,IAAI,EAAE5H,SAD+G;IAErH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,qBAAZ;MAAmCC,QAAQ,2aAA3C;MAUdC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAVnB;MAUyBC,MAAM,EAAE,CAAC,g3FAAD;IAVjC,CAAD;EAF+G,CAAD,CAAhI,EAa4B,YAAY;IAAE,OAAO,CAAC;MAAE3B,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAD,EAA0B;MAAEjB,IAAI,EAAE9H,EAAE,CAACgJ;IAAX,CAA1B,EAAkD;MAAElB,IAAI,EAAE3B,SAAR;MAAmBuD,UAAU,EAAE,CAAC;QAC/G5B,IAAI,EAAE1H,MADyG;QAE/GyD,IAAI,EAAE,CAAC5D,WAAD;MAFyG,CAAD;IAA/B,CAAlD,CAAP;EAGlB,CAhBxB,EAgB0C;IAAEmI,IAAI,EAAE,CAAC;MACnCN,IAAI,EAAEzH;IAD6B,CAAD,CAAR;IAE1BmI,SAAS,EAAE,CAAC;MACZV,IAAI,EAAEzH;IADM,CAAD,CAFe;IAI1ByH,IAAI,EAAE,CAAC;MACPA,IAAI,EAAEzH;IADC,CAAD,CAJoB;IAM1B0G,SAAS,EAAE,CAAC;MACZe,IAAI,EAAEzH;IADM,CAAD,CANe;IAQ1BwF,SAAS,EAAE,CAAC;MACZiC,IAAI,EAAEzH;IADM,CAAD,CARe;IAU1B2G,OAAO,EAAE,CAAC;MACVc,IAAI,EAAEzH;IADI,CAAD,CAViB;IAY1B0H,QAAQ,EAAE,CAAC;MACXD,IAAI,EAAEzH;IADK,CAAD,CAZgB;IAc1BsJ,KAAK,EAAE,CAAC;MACR7B,IAAI,EAAEzH;IADE,CAAD,CAdmB;IAgB1BiJ,QAAQ,EAAE,CAAC;MACXxB,IAAI,EAAEzH;IADK,CAAD,CAhBgB;IAkB1BuD,OAAO,EAAE,CAAC;MACVkE,IAAI,EAAEzH;IADI,CAAD,CAlBiB;IAoB1BuI,QAAQ,EAAE,CAAC;MACXd,IAAI,EAAExH,SADK;MAEXuD,IAAI,EAAE,CAAC,UAAD;IAFK,CAAD,CApBgB;IAuB1B+F,UAAU,EAAE,CAAC;MACb9B,IAAI,EAAEvH,WADO;MAEbsD,IAAI,EAAE,CAAC,OAAD;IAFO,CAAD,CAvBc;IA0B1BgG,cAAc,EAAE,CAAC;MACjB/B,IAAI,EAAEtH,YADW;MAEjBqD,IAAI,EAAE,CAAC,eAAD;IAFW,CAAD;EA1BU,CAhB1C;AAAA;;IA+CMiG,yB;EACF,mCAAYC,gBAAZ,EAA8B;IAAA;;IAC1B,KAAKA,gBAAL,GAAwBA,gBAAxB;IACA,KAAKC,QAAL,GAAgB,EAAhB;IACA,KAAKC,UAAL,GAAkB,IAAIC,GAAJ,EAAlB;EACH;;;;WACD,qBAA4B;MAAA,IAAlBpC,IAAkB,uEAAX,KAAKA,IAAM;MACxB,OAAO,KAAKmC,UAAL,CAAgB9E,GAAhB,CAAoB2C,IAApB,CAAP;IACH;;;WACD,gBAAOqC,QAAP,EAAiB;MACb,OAAO,KAAKC,YAAL,CAAkB,KAAKtC,IAAvB,EAA6BqC,QAA7B,CAAP;IACH;;;WACD,sBAAarC,IAAb,EAAmBqC,QAAnB,EAA6B;MACzBA,QAAQ,GAAG,KAAKE,cAAL,CAAoBF,QAApB,CAAX;MACA,IAAMG,SAAS,GAAG,KAAKC,eAAL,CAAqBzC,IAArB,EAA2BqC,QAA3B,CAAlB;MACA,KAAKK,QAAL,CAAc1C,IAAd,EAAoBwC,SAApB;MACA,OAAOA,SAAP;IACH;;;WACD,iBAAQG,QAAR,EAAkB;MACd,IAAMC,WAAW,GAAG,KAAKT,UAAL,CAAgB9E,GAAhB,CAAoBsF,QAAQ,CAACE,aAA7B,CAApB;;MACA,IAAID,WAAW,IAAIA,WAAW,CAACE,MAA/B,EAAuC;QACnC,IAAMC,GAAG,GAAGH,WAAW,CAACI,OAAZ,CAAoBL,QAApB,CAAZ;;QACA,IAAII,GAAG,GAAG,CAAC,CAAX,EAAc;UACV,IAAMP,SAAS,GAAGI,WAAW,CAACG,GAAD,CAA7B;UACAP,SAAS,CAACS,OAAV;UACAL,WAAW,CAACM,MAAZ,CAAmBH,GAAnB,EAAwB,CAAxB;QACH;MACJ;IACJ;;;WACD,sBAAa;MACT,KAAKI,aAAL,CAAmB,KAAKnD,IAAxB;IACH;;;WACD,uBAAcA,IAAd,EAAoB;MAChB,IAAMoD,KAAK,GAAG,KAAKjB,UAAL,CAAgB9E,GAAhB,CAAoB2C,IAApB,CAAd;;MACA,IAAIoD,KAAK,IAAIA,KAAK,CAACN,MAAnB,EAA2B;QACvB,IAAIO,CAAC,GAAGD,KAAK,CAACN,MAAN,GAAe,CAAvB;;QACA,OAAOO,CAAC,IAAI,CAAZ,EAAe;UACX,KAAKJ,OAAL,CAAaG,KAAK,CAACC,CAAC,EAAF,CAAlB;QACH;MACJ;IACJ;;;WACD,yBAAgBrD,IAAhB,EAAsBqC,QAAtB,EAAgC;MAC5B,OAAO,KAAKJ,gBAAL,CAAsBqB,eAAtB,CAAsCtD,IAAtC,EAA4CqC,QAA5C,CAAP;IACH;;;WACD,wBAAeA,QAAf,EAAyB;MACrB,IAAMkB,MAAM,qBAAQ,KAAKrB,QAAL,CAAcqB,MAAtB,CAAZ;;MACA,IAAMC,OAAO,qBAAQ,KAAKtB,QAAL,CAAcsB,OAAtB,CAAb;;MACA,IAAI,CAACnB,QAAQ,CAACkB,MAAV,IAAoB,CAAClB,QAAQ,CAACmB,OAAlC,EAA2C;QACvCnB,QAAQ,GAAG;UAAEkB,MAAM,EAAElB;QAAV,CAAX;MACH;;MACD,IAAIkB,MAAJ,EAAY;QACRlB,QAAQ,CAACkB,MAAT,mCAAuBA,MAAvB,GAAkClB,QAAQ,CAACkB,MAA3C;MACH;;MACD,IAAIC,OAAJ,EAAa;QACTnB,QAAQ,CAACmB,OAAT,mCAAwBA,OAAxB,GAAoCnB,QAAQ,CAACmB,OAA7C;MACH;;MACD,OAAOnB,QAAP;IACH;;;WACD,kBAASrC,IAAT,EAAewC,SAAf,EAA0B;MACtB,IAAI,CAAC,KAAKL,UAAL,CAAgBsB,GAAhB,CAAoBzD,IAApB,CAAL,EAAgC;QAC5B,KAAKmC,UAAL,CAAgBuB,GAAhB,CAAoB1D,IAApB,EAA0B,EAA1B;MACH;;MACD,IAAM2D,KAAK,GAAG,KAAKxB,UAAL,CAAgB9E,GAAhB,CAAoB2C,IAApB,CAAd;MACA2D,KAAK,CAACC,IAAN,CAAWpB,SAAX;IACH;;;;;;AAGL,SAASqB,kBAAT,CAA4BC,CAA5B,EAA+B;EAC3B,OAAOA,CAAC,CAAClE,OAAT;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;IACMmE,gB;EACF,0BAAYC,cAAZ,EAA4BC,wBAA5B,EAAsDC,QAAtD,EAAgE;IAAA;;IAC5D,KAAKF,cAAL,GAAsBA,cAAtB;IACA,KAAKC,wBAAL,GAAgCA,wBAAhC;IACA,KAAKC,QAAL,GAAgBA,QAAhB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;;;;IAII;AACJ;AACA;AACA;AACA;IACI,gCAAuB;MACnB,IAAI,KAAKC,UAAT,EACI,OAAO,KAAKA,UAAZ;MACJ,IAAIJ,gBAAgB,CAACK,uBAArB,EACI,OAAOL,gBAAgB,CAACK,uBAAxB;MACJ,IAAI,KAAKJ,cAAL,CAAoB7B,UAApB,CAA+BW,MAAnC,EACI,OAAO,KAAKkB,cAAL,CAAoB7B,UAApB,CAA+B,CAA/B,CAAP;MACJ,MAAM,IAAIkC,KAAJ,CAAU,wHAAV,CAAN;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,8BAAqBC,SAArB,EAAgC;MAC5B,KAAKH,UAAL,GAAkBG,SAAlB;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,8BAAqB9B,SAArB,EAAgC;MAC5B,IAAIqB,kBAAkB,CAACrB,SAAD,CAAtB,EAAmC;QAC/B,OAAOA,SAAS,CAAC5C,OAAV,CAAkBS,aAAzB;MACH;;MACD,IAAImC,SAAS,CAAC+B,QAAV,IAAsB/B,SAAS,CAAC+B,QAAV,CAAmBC,SAAnB,CAA6B1B,MAA7B,GAAsC,CAAhE,EAAmE;QAC/D,OAAON,SAAS,CAAC+B,QAAV,CAAmBC,SAAnB,CAA6B,CAA7B,CAAP;MACH,CAN2B,CAO5B;;;MACA,OAAOhC,SAAS,CAACiC,QAAV,CAAmBpE,aAA1B;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,kCAAyBmC,SAAzB,EAAoC;MAChC,OAAO,KAAKkC,oBAAL,CAA0BlC,SAA1B,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,kCAAyBA,SAAzB,EAAoCH,QAApC,EAA8C;MAC1C,IAAIA,QAAJ,EAAc;QACV,IAAIA,QAAQ,CAACkB,MAAT,KAAoBlF,SAAxB,EAAmC;UAC/B,IAAMsG,WAAW,GAAGpH,MAAM,CAACqH,mBAAP,CAA2BvC,QAAQ,CAACkB,MAApC,CAApB;;UAD+B,2CAELoB,WAFK;UAAA;;UAAA;YAE/B,oDAAuC;cAAA,IAA5BE,WAA4B;cACnCrC,SAAS,CAACG,QAAV,CAAmBkC,WAAnB,IAAkCxC,QAAQ,CAACkB,MAAT,CAAgBsB,WAAhB,CAAlC;YACH;UAJ8B;YAAA;UAAA;YAAA;UAAA;QAKlC;;QACD,IAAIxC,QAAQ,CAACmB,OAAT,KAAqBnF,SAAzB,EAAoC;UAChC,IAAMyG,SAAS,GAAGvH,MAAM,CAACqH,mBAAP,CAA2BvC,QAAQ,CAACmB,OAApC,CAAlB;;UADgC,4CAERsB,SAFQ;UAAA;;UAAA;YAEhC,uDAAmC;cAAA,IAAxBC,SAAwB;cAC/BvC,SAAS,CAACG,QAAV,CAAmBoC,SAAnB,IAAgC1C,QAAQ,CAACmB,OAAT,CAAiBuB,SAAjB,CAAhC;YACH;UAJ+B;YAAA;UAAA;YAAA;UAAA;QAKnC;MACJ;;MACD,OAAOvC,SAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,yBAAgBwC,cAAhB,EAAyD;MAAA,IAAzB3C,QAAyB,uEAAd,EAAc;MAAA,IAAVoC,QAAU;MACrD,IAAI,CAACA,QAAL,EACIA,QAAQ,GAAG,KAAKQ,oBAAL,EAAX;MACJ,IAAMC,cAAc,GAAG,KAAKR,oBAAL,CAA0BD,QAA1B,CAAvB;MACA,IAAMU,UAAU,GAAG,IAAI5L,eAAJ,CAAoB2L,cAApB,EAAoC,KAAKjB,wBAAzC,EAAmE,KAAKD,cAAxE,EAAwF,KAAKE,QAA7F,CAAnB;MACA,IAAMkB,MAAM,GAAG,IAAI5L,eAAJ,CAAoBwL,cAApB,CAAf;MACA,IAAMK,YAAY,GAAGF,UAAU,CAACG,MAAX,CAAkBF,MAAlB,CAArB;MACA,KAAKG,wBAAL,CAA8BF,YAA9B,EAA4ChD,QAA5C;MACA,OAAOgD,YAAP;IACH;;;WAhGD,oCAAkCf,SAAlC,EAA6C;MACzCP,gBAAgB,CAACK,uBAAjB,GAA2CE,SAA3C;IACH;;;;;;AAgGLP,gBAAgB,CAACK,uBAAjB,GAA2C,IAA3C;;AACAL,gBAAgB,CAAC/C,IAAjB;EAAA,iBAA6G+C,gBAA7G,EA1P0G7L,EA0P1G,UAA+IA,EAAE,CAACsN,cAAlJ,GA1P0GtN,EA0P1G,UAA6KA,EAAE,CAACuN,wBAAhL,GA1P0GvN,EA0P1G,UAAqNA,EAAE,CAACwN,QAAxN;AAAA;;AACA3B,gBAAgB,CAAC4B,KAAjB,kBA3P0GzN,EA2P1G;EAAA,OAAiH6L,gBAAjH;EAAA,SAAiHA,gBAAjH;AAAA;;AACA;EAAA,mDA5P0G7L,EA4P1G,mBAA2F6L,gBAA3F,EAAyH,CAAC;IAC9G/D,IAAI,EAAErH;EADwG,CAAD,CAAzH,EAE4B,YAAY;IAAE,OAAO,CAAC;MAAEqH,IAAI,EAAE9H,EAAE,CAACsN;IAAX,CAAD,EAA8B;MAAExF,IAAI,EAAE9H,EAAE,CAACuN;IAAX,CAA9B,EAAqE;MAAEzF,IAAI,EAAE9H,EAAE,CAACwN;IAAX,CAArE,CAAP;EAAqG,CAF/I;AAAA;;IAIME,c;;;;;EACF,wBAAY3D,gBAAZ,EAA8B;IAAA;;IAAA;;IAC1B,2BAAMA,gBAAN;IACA,OAAKjC,IAAL,GAAYL,uBAAZ;IAF0B;EAG7B;;;EAJwBqC,yB;;AAM7B4D,cAAc,CAAC5E,IAAf;EAAA,iBAA2G4E,cAA3G,EAtQ0G1N,EAsQ1G,UAA2I6L,gBAA3I;AAAA;;AACA6B,cAAc,CAACD,KAAf,kBAvQ0GzN,EAuQ1G;EAAA,OAA+G0N,cAA/G;EAAA,SAA+GA,cAA/G;AAAA;;AACA;EAAA,mDAxQ0G1N,EAwQ1G,mBAA2F0N,cAA3F,EAAuH,CAAC;IAC5G5F,IAAI,EAAErH;EADsG,CAAD,CAAvH,EAE4B,YAAY;IAAE,OAAO,CAAC;MAAEqH,IAAI,EAAE+D;IAAR,CAAD,CAAP;EAAsC,CAFhF;AAAA;;AAIA,IAAI8B,cAAJ;;AACA,CAAC,UAAUA,cAAV,EAA0B;EACvBA,cAAc,CAAC,OAAD,CAAd,GAA0B,OAA1B;EACAA,cAAc,CAAC,OAAD,CAAd,GAA0B,OAA1B;AACH,CAHD,EAGGA,cAAc,KAAKA,cAAc,GAAG,EAAtB,CAHjB;;AAIA,IAAIC,UAAJ;;AACA,CAAC,UAAUA,UAAV,EAAsB;EACnBA,UAAU,CAAC,aAAD,CAAV,GAA4B,aAA5B;EACAA,UAAU,CAAC,QAAD,CAAV,GAAuB,QAAvB;AACH,CAHD,EAGGA,UAAU,KAAKA,UAAU,GAAG,EAAlB,CAHb;;AAKA,IAAIC,SAAJ;;AACA,CAAC,UAAUA,SAAV,EAAqB;EAClBA,SAAS,CAAC,MAAD,CAAT,GAAoB,MAApB;EACAA,SAAS,CAAC,QAAD,CAAT,GAAsB,QAAtB;EACAA,SAAS,CAAC,SAAD,CAAT,GAAuB,SAAvB;EACAA,SAAS,CAAC,UAAD,CAAT,GAAwB,UAAxB;AACH,CALD,EAKGA,SAAS,KAAKA,SAAS,GAAG,EAAjB,CALZ;;IAOMC,oB;EACF,gCAAc;IAAA;;IACV,KAAKC,UAAL,GAAkB,KAAlB;EACH;;;;WACD,qBAAYC,OAAZ,EAAqB;MACjB,IAAMC,cAAc,GAAG,KAAKC,cAAL,CAAoB,KAAKC,MAAL,CAAYvL,KAAZ,EAApB,EAAyC,KAAKuL,MAAL,CAAYC,MAAZ,EAAzC,CAAvB;MACA,IAAMC,SAAS,GAAG,KAAKN,UAAL,GAAkB,OAAlB,GAA4B,QAA9C;MACA,KAAKO,QAAL,gCAAsCD,SAAtC,eAAoDJ,cAApD;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,wBAAeE,MAAf,EAAuBI,MAAvB,EAA+B;MAC3B;MACAA,MAAM,CAAC7C,IAAP,CAAY,CAAZ;MACA,IAAM8C,KAAK,GAAG,EAAd;MACAL,MAAM,CAACM,OAAP,GAAiBC,OAAjB,CAAyB,UAACC,CAAD,EAAIxD,CAAJ,EAAU;QAC/BqD,KAAK,CAAC9C,IAAN,WAAciD,CAAd,cAAmBC,IAAI,CAACC,KAAL,CAAWN,MAAM,CAACpD,CAAD,CAAN,GAAY,GAAvB,CAAnB;MACH,CAFD;MAGA,OAAOqD,KAAK,CAACM,IAAN,CAAW,IAAX,CAAP;IACH;;;;;;AAELhB,oBAAoB,CAAChF,IAArB;EAAA,iBAAiHgF,oBAAjH;AAAA;;AACAA,oBAAoB,CAAC7E,IAArB,kBAxT0GjJ,EAwT1G;EAAA,MAAqG8N,oBAArG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAxT0G9N,EAwT1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAxT0GA,EAyTtG,oDADJ;MAxT0GA,EAgU5F,UARd;MAxT0GA,EAgUxD,iBARlD;MAxT0GA,EAkUpG,uBAVN;MAxT0GA,EAmUpG,uCAXN;MAxT0GA,EAoU5F,UAZd;MAxT0GA,EAoUxD,mBAZlD;IAAA;;IAAA;MAxT0GA,EA4TpG,+FAJN;MAxT0GA,EA2TpG,iDAHN;MAxT0GA,EAgU5F,aARd;MAxT0GA,EAgU5F,sDARd;MAxT0GA,EAkUrE,aAVrC;MAxT0GA,EAkUrE,wCAVrC;MAxT0GA,EAoU5F,aAZd;MAxT0GA,EAoU5F,sDAZd;IAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAgBA;EAAA,mDAxU0GA,EAwU1G,mBAA2F8N,oBAA3F,EAA6H,CAAC;IAClHhG,IAAI,EAAE5H,SAD4G;IAElH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,yBAAZ;MAAuCC,QAAQ,ugBAA/C;MAedC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAfnB;MAeyBuF,eAAe,EAAErO,uBAAuB,CAACsO,MAflE;MAe0EvF,MAAM,EAAE,CAAC,0cAAD;IAflF,CAAD;EAF4G,CAAD,CAA7H,QAkB4B;IAAEwF,UAAU,EAAE,CAAC;MAC3BnH,IAAI,EAAEzH;IADqB,CAAD,CAAd;IAEZ8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CAFI;IAIZ4F,MAAM,EAAE,CAAC;MACT6B,IAAI,EAAEzH;IADG,CAAD,CAJI;IAMZmG,KAAK,EAAE,CAAC;MACRsB,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZ0N,UAAU,EAAE,CAAC;MACbjG,IAAI,EAAEzH;IADO,CAAD;EARA,CAlB5B;AAAA;AA8BA;AACA;AACA;AACA;AACA;;;AACA,SAAS6O,WAAT,CAAqBC,KAArB,EAA4B;EACxB,IAAIA,KAAK,YAAYhL,IAArB,EAA2B;IACvBgL,KAAK,GAAGA,KAAK,CAACC,kBAAN,EAAR;EACH,CAFD,MAGK;IACDD,KAAK,GAAGA,KAAK,CAACE,cAAN,EAAR;EACH;;EACD,OAAOF,KAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASG,WAAT,CAAqBH,KAArB,EAA4B;EACxB,OAAOA,KAAK,CAACE,cAAN,GAAuBE,OAAvB,CAA+B,WAA/B,EAA4C,UAAAC,KAAK,EAAI;IACxD,OAAO;MACH,KAAK,OADF;MAEH;MACA,KAAK,QAHF;MAIH,KAAK,QAJF;MAKH,KAAK,QALF;MAMH,KAAK,MANF;MAOH,KAAK;IAPF,EAQLA,KARK,CAAP;EASH,CAVM,CAAP;AAWH;;IAEKC,oB;EACF,gCAAc;IAAA;;IACV,KAAKC,QAAL,GAAgB,KAAhB;IACA,KAAK7N,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,KAAKkP,MAAL,GAAc,IAAIlP,YAAJ,EAAd;EACH;;;;SACD,eAAmB;MACf,OAAO,KAAKmP,cAAL,IAAuB,SAA9B;IACH;;;WACD,wBAAe;MACX,KAAKH,QAAL,CAAcI,IAAd,CAAmB;QAAEC,IAAI,EAAE,KAAKb;MAAb,CAAnB;IACH;;;WACD,wBAAe;MACX,KAAKS,UAAL,CAAgBG,IAAhB,CAAqB;QAAEC,IAAI,EAAE,KAAKb;MAAb,CAArB;IACH;;;;;;AAELM,oBAAoB,CAAC3G,IAArB;EAAA,iBAAiH2G,oBAAjH;AAAA;;AACAA,oBAAoB,CAACxG,IAArB,kBA1Z0GjJ,EA0Z1G;EAAA,MAAqGyP,oBAArG;EAAA;EAAA;IAAA;MA1Z0GzP,EA0Z1G;QAAA,OAAqG,kBAArG;MAAA;QAAA,OAAqG,kBAArG;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA1Z0GA,EA2ZtG,6BADJ;MA1Z0GA,EA2Z/B;QAAA,OAAS,mCAAT;MAAA,EAD3E;MA1Z0GA,EA4ZpG,6BAFN;MA1Z0GA,EA4ZlC;QAAA,OAAS,mCAAT;MAAA,EAFxE;MA1Z0GA,EA4ZK,eAF/G;MA1Z0GA,EA6ZpG,6BAHN;MA1Z0GA,EA8ZlG,UAJR;MA1Z0GA,EA+ZpG,iBALN;IAAA;;IAAA;MA1Z0GA,EA2ZzD,oCADjD;MA1Z0GA,EA2ZhG,wCADV;MA1Z0GA,EA4ZnE,aAFvC;MA1Z0GA,EA4ZnE,2CAFvC;MA1Z0GA,EA8ZlG,aAJR;MA1Z0GA,EA8ZlG,+CAJR;IAAA;EAAA;EAAA;EAAA;AAAA;;AAQA;EAAA,mDAla0GA,EAka1G,mBAA2FyP,oBAA3F,EAA6H,CAAC;IAClH3H,IAAI,EAAE5H,SAD4G;IAElH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,yBADX;MAECC,QAAQ,mWAFT;MAUCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAV1C,CAAD;EAF4G,CAAD,CAA7H,QAc4B;IAAEiB,KAAK,EAAE,CAAC;MACtBnI,IAAI,EAAEzH;IADgB,CAAD,CAAT;IAEZ8O,KAAK,EAAE,CAAC;MACRrH,IAAI,EAAEzH;IADE,CAAD,CAFK;IAIZyP,cAAc,EAAE,CAAC;MACjBhI,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZqP,QAAQ,EAAE,CAAC;MACX5H,IAAI,EAAEzH;IADK,CAAD,CANE;IAQZwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CARI;IAUZ+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAVE;IAYZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAZA;IAcZiP,MAAM,EAAE,CAAC;MACT/H,IAAI,EAAElH;IADG,CAAD,CAdI;IAgBZsP,YAAY,EAAE,CAAC;MACfpI,IAAI,EAAEtH,YADS;MAEfqD,IAAI,EAAE,CAAC,YAAD;IAFS,CAAD,CAhBF;IAmBZsM,YAAY,EAAE,CAAC;MACfrI,IAAI,EAAEtH,YADS;MAEfqD,IAAI,EAAE,CAAC,YAAD;IAFS,CAAD;EAnBF,CAd5B;AAAA;;IAsCMuM,e;EACF,yBAAYC,EAAZ,EAAgB;IAAA;;IACZ,KAAKA,EAAL,GAAUA,EAAV;IACA,KAAKtC,UAAL,GAAkB,KAAlB;IACA,KAAKuC,UAAL,GAAkB,IAAI3P,YAAJ,EAAlB;IACA,KAAK4P,aAAL,GAAqB,IAAI5P,YAAJ,EAArB;IACA,KAAK6P,eAAL,GAAuB,IAAI7P,YAAJ,EAAvB;IACA,KAAK8P,aAAL,GAAqB,EAArB;EACH;;;;WACD,qBAAYzC,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MACL,KAAKL,EAAL,CAAQM,YAAR;MACA,KAAKF,aAAL,GAAqB,KAAKG,gBAAL,EAArB;IACH;;;WACD,4BAAmB;MAAA;;MACf,IAAMC,KAAK,GAAG,EAAd;;MADe,4CAEK,KAAKC,IAFV;MAAA;;MAAA;QAAA,6BAEgB;UAAA,IAApB3B,KAAoB;UAC3B,IAAMW,cAAc,GAAGZ,WAAW,CAACC,KAAD,CAAlC;UACA,IAAMtE,GAAG,GAAGgG,KAAK,CAACE,SAAN,CAAgB,UAAA5F,CAAC,EAAI;YAC7B,OAAOA,CAAC,CAACgE,KAAF,KAAYW,cAAnB;UACH,CAFW,CAAZ;;UAGA,IAAIjF,GAAG,KAAK,CAAC,CAAb,EAAgB;YACZgG,KAAK,CAACnF,IAAN,CAAW;cACPyD,KAAK,EAALA,KADO;cAEPW,cAAc,EAAdA,cAFO;cAGPG,KAAK,EAAE,MAAI,CAAC9B,MAAL,CAAY6C,QAAZ,CAAqB7B,KAArB;YAHA,CAAX;UAKH;QACJ,CAdc;;QAEf;UAAA;QAAA;MAFe;QAAA;MAAA;QAAA;MAAA;;MAef,OAAO0B,KAAP;IACH;;;WACD,kBAASI,KAAT,EAAgB;MACZ,IAAI,CAAC,KAAKC,aAAV,EACI,OAAO,KAAP;MACJ,IAAMC,IAAI,GAAG,KAAKD,aAAL,CAAmBE,IAAnB,CAAwB,UAAAC,CAAC,EAAI;QACtC,OAAOJ,KAAK,CAAC9B,KAAN,KAAgBkC,CAAC,CAACrB,IAAzB;MACH,CAFY,CAAb;MAGA,OAAOmB,IAAI,KAAKhL,SAAhB;IACH;;;WACD,kBAASgL,IAAT,EAAe;MACX,KAAKZ,aAAL,CAAmBR,IAAnB,CAAwBoB,IAAxB;IACH;;;WACD,oBAAWA,IAAX,EAAiB;MACb,KAAKX,eAAL,CAAqBT,IAArB,CAA0BoB,IAA1B;IACH;;;WACD,iBAAQG,KAAR,EAAeH,IAAf,EAAqB;MACjB,OAAOA,IAAI,CAAChC,KAAZ;IACH;;;;;;AAELiB,eAAe,CAACtH,IAAhB;EAAA,iBAA4GsH,eAA5G,EA3f0GpQ,EA2f1G,mBAA6IA,EAAE,CAACuR,iBAAhJ;AAAA;;AACAnB,eAAe,CAACnH,IAAhB,kBA5f0GjJ,EA4f1G;EAAA,MAAgGoQ,eAAhG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WA5f0GpQ,EA4f1G;EAAA;EAAA;EAAA;EAAA;IAAA;MA5f0GA,EA6ftG,yBADJ;MA5f0GA,EA8fpG,oEAFN;MA5f0GA,EAigBpG,wCALN;MA5f0GA,EAmgBhG,4DAPV;MA5f0GA,EA+gBlG,mBAnBR;IAAA;;IAAA;MA5f0GA,EA6fjG,sCADT;MA5f0GA,EA8ftE,aAFpC;MA5f0GA,EA8ftE,sEAFpC;MA5f0GA,EAkgBjC,aANzE;MA5f0GA,EAkgBjC,iDANzE;MA5f0GA,EAkgBxE,iDANlC;MA5f0GA,EAmgB1E,aAPhC;MA5f0GA,EAmgB1E,sEAPhC;IAAA;EAAA;EAAA,eAsBoxCyP,oBAtBpxC,EAsB09CzO,EAAE,CAACkI,IAtB79C,EAsB2iDlI,EAAE,CAACwQ,OAtB9iD;EAAA;EAAA;EAAA;AAAA;;AAuBA;EAAA,mDAnhB0GxR,EAmhB1G,mBAA2FoQ,eAA3F,EAAwH,CAAC;IAC7GtI,IAAI,EAAE5H,SADuG;IAE7G2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,mBAAZ;MAAiCC,QAAQ,y5BAAzC;MAsBdC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAtBnB;MAsByBuF,eAAe,EAAErO,uBAAuB,CAACsO,MAtBlE;MAsB0EvF,MAAM,EAAE,CAAC,8tCAAD;IAtBlF,CAAD;EAFuG,CAAD,CAAxH,EAyB4B,YAAY;IAAE,OAAO,CAAC;MAAE3B,IAAI,EAAE9H,EAAE,CAACuR;IAAX,CAAD,CAAP;EAA0C,CAzBpF,EAyBsG;IAAET,IAAI,EAAE,CAAC;MAC/FhJ,IAAI,EAAEzH;IADyF,CAAD,CAAR;IAEtFsJ,KAAK,EAAE,CAAC;MACR7B,IAAI,EAAEzH;IADE,CAAD,CAF+E;IAItF8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CAJ8E;IAMtF4F,MAAM,EAAE,CAAC;MACT6B,IAAI,EAAEzH;IADG,CAAD,CAN8E;IAQtFmG,KAAK,EAAE,CAAC;MACRsB,IAAI,EAAEzH;IADE,CAAD,CAR+E;IAUtF6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAVuE;IAYtF0N,UAAU,EAAE,CAAC;MACbjG,IAAI,EAAEzH;IADO,CAAD,CAZ0E;IActFiQ,UAAU,EAAE,CAAC;MACbxI,IAAI,EAAElH;IADO,CAAD,CAd0E;IAgBtF2P,aAAa,EAAE,CAAC;MAChBzI,IAAI,EAAElH;IADU,CAAD,CAhBuE;IAkBtF4P,eAAe,EAAE,CAAC;MAClB1I,IAAI,EAAElH;IADY,CAAD;EAlBqE,CAzBtG;AAAA;;IA+CM6Q,c;EACF,0BAAc;IAAA;;IACV,KAAKC,UAAL,GAAkB,KAAlB;IACA,KAAKC,UAAL,GAAkB,IAAlB;IACA,KAAKC,gBAAL,GAAwB,IAAIjR,YAAJ,EAAxB;IACA,KAAKkR,mBAAL,GAA2B,IAAIlR,YAAJ,EAA3B;IACA,KAAKmR,qBAAL,GAA6B,IAAInR,YAAJ,EAA7B;IACA,KAAKgN,cAAL,GAAsBA,cAAtB;IACA,KAAKC,UAAL,GAAkBA,UAAlB;EACH;;;;WACD,qBAAYI,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MACL,IAAIqB,aAAa,GAAG,CAApB;;MACA,IAAI,KAAKL,UAAT,EAAqB;QACjB,KAAKM,UAAL,GAAkB,KAAKC,aAAL,EAAlB;;QACA,IAAI,CAAC,KAAKC,aAAN,IAAuB,KAAKA,aAAL,CAAmBlK,QAAnB,KAAgC2F,cAAc,CAACpH,KAA1E,EAAiF;UAC7E,IAAI,KAAKyL,UAAL,KAAoBpE,UAAU,CAACuE,WAAnC,EAAgD;YAC5CJ,aAAa,GAAG,CAAhB;UACH,CAFD,MAGK;YACDA,aAAa,GAAG,CAAhB;UACH;QACJ;MACJ;;MACD,IAAMK,YAAY,GAAG,KAAKL,aAA1B;MACA,KAAKM,UAAL,GAAkBzD,IAAI,CAAC0D,KAAL,CAAY,KAAKC,IAAL,CAAU,CAAV,IAAeH,YAAhB,GAAgC,IAA3C,CAAlB;MACA,KAAKI,WAAL,GACI,CAAC,KAAKN,aAAN,IAAuB,KAAKA,aAAL,CAAmBlK,QAAnB,KAAgC2F,cAAc,CAACpH,KAAtE,GACMqI,IAAI,CAAC0D,KAAL,CAAY,KAAKC,IAAL,CAAU,CAAV,IAAeR,aAAhB,GAAiC,IAA5C,CADN,GAEM,KAAKM,UAHf;IAIH;;;WACD,yBAAgB;MACZ,OAAO,KAAKH,aAAL,CAAmBO,SAAnB,KAAiC5E,SAAS,CAAC6E,MAA3C,GAAoD9E,UAAU,CAACuE,WAA/D,GAA6EvE,UAAU,CAAC+E,MAA/F;IACH;;;;;;AAELlB,cAAc,CAAC3I,IAAf;EAAA,iBAA2G2I,cAA3G;AAAA;;AACAA,cAAc,CAACxI,IAAf,kBAxmB0GjJ,EAwmB1G;EAAA,MAA+FyR,cAA/F;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAxmB0GzR,EAwmB1G,oBAA+c,CAAC0N,cAAD,CAA/c,GAxmB0G1N,EAwmB1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAxmB0GA,EAwmB1G;MAxmB0GA,EAymBtG,4BADJ;MAxmB0GA,EA0mBpG,iBAFN;MAxmB0GA,EA0mBpG,4BAFN;MAxmB0GA,EA2mBlG,gBAHR;MAxmB0GA,EA4mBpG,eAJN;MAxmB0GA,EA6mBpG,qGALN;MAxmB0GA,EAunBpG,yFAfN;MAxmB0GA,EAsoBtG,eA9BJ;IAAA;;IAAA;MAxmB0GA,EAymBxE,qEADlC;MAxmB0GA,EA0mB5E,aAF9B;MAxmB0GA,EA0mB5E,4DAF9B;MAxmB0GA,EA8mBjG,aANT;MAxmB0GA,EA8mBjG,oFANT;MAxmB0GA,EAwnBjG,aAhBT;MAxmB0GA,EAwnBjG,+EAhBT;IAAA;EAAA;EAAA,eA+B0C8N,oBA/B1C,EA+BkLsC,eA/BlL,EA+B8YpP,EAAE,CAACkI,IA/BjZ;EAAA;EAAA;AAAA;;AAgCA;EAAA,mDAxoB0GlJ,EAwoB1G,mBAA2FyR,cAA3F,EAAuH,CAAC;IAC5G3J,IAAI,EAAE5H,SADsG;IAE5G2D,IAAI,EAAE,CAAC;MACC+O,SAAS,EAAE,CAAClF,cAAD,CADZ;MAECrE,QAAQ,EAAE,kBAFX;MAGCC,QAAQ,+zCAHT;MAmCCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAnC1C,CAAD;EAFsG,CAAD,CAAvH,QAuC4B;IAAEuD,IAAI,EAAE,CAAC;MACrBzK,IAAI,EAAEzH;IADe,CAAD,CAAR;IAEZqR,UAAU,EAAE,CAAC;MACb5J,IAAI,EAAEzH;IADO,CAAD,CAFA;IAIZ6R,aAAa,EAAE,CAAC;MAChBpK,IAAI,EAAEzH;IADU,CAAD,CAJH;IAMZ2R,UAAU,EAAE,CAAC;MACblK,IAAI,EAAEzH;IADO,CAAD,CANA;IAQZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CARH;IAUZsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CAVA;IAYZuR,gBAAgB,EAAE,CAAC;MACnB9J,IAAI,EAAElH;IADa,CAAD,CAZN;IAcZiR,mBAAmB,EAAE,CAAC;MACtB/J,IAAI,EAAElH;IADgB,CAAD,CAdT;IAgBZkR,qBAAqB,EAAE,CAAC;MACxBhK,IAAI,EAAElH;IADkB,CAAD;EAhBX,CAvC5B;AAAA;AA2DA;AACA;AACA;;;IACMiS,kB;EACF,4BAAYnL,OAAZ,EAAqBoL,IAArB,EAA2B;IAAA;;IACvB,KAAKpL,OAAL,GAAeA,OAAf;IACA,KAAKoL,IAAL,GAAYA,IAAZ;IACA,KAAKC,OAAL,GAAe,IAAIpS,YAAJ,EAAf;IACA,KAAKqS,SAAL,GAAiB,KAAjB;IACA,KAAKC,QAAL;EACH;;;;WACD,mBAAU;MACNzO,YAAY,CAAC,KAAKT,OAAN,CAAZ;IACH;;;WACD,8BAAqB;MAAA;;MACjB;MACA,KAAK+O,IAAL,CAAUI,GAAV,CAAc,YAAM;QAChB,MAAI,CAACF,SAAL,GAAiB,IAAjB;;QACA,MAAI,CAACD,OAAL,CAAahD,IAAb,CAAkB,IAAlB;MACH,CAHD;IAIH;;;WACD,oBAAW;MAAA;;MACP,IAAMoD,KAAK,GAAG,SAARA,KAAQ,GAAM;QAChB,IAAI,CAAC,MAAI,CAACzL,OAAV,EAAmB;UACf;QACH,CAHe,CAIhB;;;QACA,4BAAsC,MAAI,CAACA,OAAL,CAAaS,aAAnD;QAAA,IAAQiL,YAAR,yBAAQA,YAAR;QAAA,IAAsBC,WAAtB,yBAAsBA,WAAtB;;QACA,IAAID,YAAY,IAAIC,WAApB,EAAiC;UAC7B7O,YAAY,CAAC,MAAI,CAACT,OAAN,CAAZ;;UACA,MAAI,CAACuP,kBAAL;QACH,CAHD,MAIK;UACD9O,YAAY,CAAC,MAAI,CAACT,OAAN,CAAZ;;UACA,MAAI,CAAC+O,IAAL,CAAUS,iBAAV,CAA4B,YAAM;YAC9B,MAAI,CAACxP,OAAL,GAAeW,UAAU,CAAC;cAAA,OAAMyO,KAAK,EAAX;YAAA,CAAD,EAAgB,GAAhB,CAAzB;UACH,CAFD;QAGH;MACJ,CAhBD;;MAiBA,KAAKL,IAAL,CAAUS,iBAAV,CAA4B,YAAM;QAC9B,MAAI,CAACxP,OAAL,GAAeW,UAAU,CAAC;UAAA,OAAMyO,KAAK,EAAX;QAAA,CAAD,CAAzB;MACH,CAFD;IAGH;;;;;;AAELN,kBAAkB,CAAC/J,IAAnB;EAAA,iBAA+G+J,kBAA/G,EA/uB0G7S,EA+uB1G,mBAAmJA,EAAE,CAAC+I,UAAtJ,GA/uB0G/I,EA+uB1G,mBAA6KA,EAAE,CAACwT,MAAhL;AAAA;;AACAX,kBAAkB,CAACY,IAAnB,kBAhvB0GzT,EAgvB1G;EAAA,MAAmG6S,kBAAnG;EAAA;EAAA;IAAA;EAAA;AAAA;;AACA;EAAA,mDAjvB0G7S,EAivB1G,mBAA2F6S,kBAA3F,EAA2H,CAAC;IAChH/K,IAAI,EAAEjH,SAD0G;IAEhHgD,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE;IADX,CAAD;EAF0G,CAAD,CAA3H,EAK4B,YAAY;IAAE,OAAO,CAAC;MAAEvB,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAD,EAA0B;MAAEjB,IAAI,EAAE9H,EAAE,CAACwT;IAAX,CAA1B,CAAP;EAAwD,CALlG,EAKoH;IAAET,OAAO,EAAE,CAAC;MAChHjL,IAAI,EAAElH;IAD0G,CAAD;EAAX,CALpH;AAAA;;AASA,SAAS8S,MAAT,CAAgBnO,KAAhB,EAAuB;EACnB,OAAOoO,QAAQ,CAACC,IAAT,CAAcrO,KAAd,MAAyB,eAAhC;AACH;;AACD,SAASsO,QAAT,CAAkBtO,KAAlB,EAAyB;EACrB,OAAO,OAAOA,KAAP,KAAiB,QAAxB;AACH;;IAEKuO,kB;EACF,4BAAYC,YAAZ,EAA0BjB,IAA1B,EAAgCzC,EAAhC,EAAoCzI,UAApC,EAAgD;IAAA;;IAC5C,KAAKmM,YAAL,GAAoBA,YAApB;IACA,KAAKjB,IAAL,GAAYA,IAAZ;IACA,KAAKzC,EAAL,GAAUA,EAAV;IACA,KAAKzI,UAAL,GAAkBA,UAAlB;IACA,KAAKoM,MAAL,GAAc,MAAd;IACA,KAAKC,UAAL,GAAkBpG,SAAS,CAACqG,OAA5B;IACA,KAAKvC,UAAL,GAAkB,IAAlB;IACA,KAAK9P,MAAL,GAAc,IAAIlB,YAAJ,EAAd;EACH;;;;WACD,oBAAW;MACP,IAAIO,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAK+J,UAAL,GAAkB,KAAlB;MACH;IACJ;;;WACD,2BAAkB;MACd,KAAKwC,qBAAL,GADc,CAEd;;MACA,KAAKC,kBAAL,GAA0B,IAAIvB,kBAAJ,CAAuB,KAAKkB,YAA5B,EAA0C,KAAKjB,IAA/C,CAA1B;MACA,KAAKsB,kBAAL,CAAwBrB,OAAxB,CAAgCsB,SAAhC,CAA0C,KAAK3D,MAAL,CAAYzI,IAAZ,CAAiB,IAAjB,CAA1C;IACH;;;WACD,uBAAc;MACV,KAAKqM,YAAL;;MACA,IAAI,KAAKF,kBAAT,EAA6B;QACzB,KAAKA,kBAAL,CAAwBrB,OAAxB,CAAgCwB,WAAhC;QACA,KAAKH,kBAAL,CAAwBrJ,OAAxB;MACH;IACJ;;;WACD,qBAAYiD,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MACL,IAAI,KAAK8D,OAAT,EAAkB;QACd,KAAKA,OAAL,GAAe,KAAKC,SAAL,CAAe,KAAKD,OAApB,CAAf;MACH,CAFD,MAGK;QACD,KAAKA,OAAL,GAAe,EAAf;MACH;;MACD,IAAI,KAAKjC,IAAT,EAAe;QACX,KAAK/L,KAAL,GAAa,KAAK+L,IAAL,CAAU,CAAV,CAAb;QACA,KAAKtM,MAAL,GAAc,KAAKsM,IAAL,CAAU,CAAV,CAAd;MACH,CAHD,MAIK;QACD,IAAMmC,IAAI,GAAG,KAAKC,gBAAL,EAAb;;QACA,IAAID,IAAJ,EAAU;UACN,KAAKlO,KAAL,GAAakO,IAAI,CAAClO,KAAlB;UACA,KAAKP,MAAL,GAAcyO,IAAI,CAACzO,MAAnB;QACH;MACJ,CAjBI,CAkBL;;;MACA,IAAI,CAAC,KAAKO,KAAV,EAAiB;QACb,KAAKA,KAAL,GAAa,GAAb;MACH;;MACD,IAAI,CAAC,KAAKP,MAAV,EAAkB;QACd,KAAKA,MAAL,GAAc,GAAd;MACH;;MACD,KAAKO,KAAL,GAAaoI,IAAI,CAAC0D,KAAL,CAAW,KAAK9L,KAAhB,CAAb;MACA,KAAKP,MAAL,GAAc2I,IAAI,CAAC0D,KAAL,CAAW,KAAKrM,MAAhB,CAAd;;MACA,IAAI,KAAKoK,EAAT,EAAa;QACT,KAAKA,EAAL,CAAQM,YAAR;MACH;IACJ;;;WACD,4BAAmB;MACf,IAAInK,KAAJ;MACA,IAAIP,MAAJ;MACA,IAAM2O,QAAQ,GAAG,KAAKb,YAAL,CAAkB5L,aAAnC;;MACA,IAAIlH,iBAAiB,CAAC,KAAK2G,UAAN,CAAjB,IAAsCgN,QAAQ,CAACC,UAAT,KAAwB,IAAlE,EAAwE;QACpE;QACA,IAAMH,IAAI,GAAGE,QAAQ,CAACC,UAAT,CAAoBxM,qBAApB,EAAb;QACA7B,KAAK,GAAGkO,IAAI,CAAClO,KAAb;QACAP,MAAM,GAAGyO,IAAI,CAACzO,MAAd;MACH;;MACD,IAAIO,KAAK,IAAIP,MAAb,EAAqB;QACjB,OAAO;UAAEO,KAAK,EAALA,KAAF;UAASP,MAAM,EAANA;QAAT,CAAP;MACH;;MACD,OAAO,IAAP;IACH;IACD;AACJ;AACA;AACA;;;;WACI,uBAAc;MACV,KAAK,IAAIkF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKqJ,OAAL,CAAa5J,MAAjC,EAAyCO,CAAC,EAA1C,EAA8C;QAC1C,IAAM2J,CAAC,GAAG,KAAKN,OAAL,CAAarJ,CAAb,CAAV;QACA2J,CAAC,CAAC3F,KAAF,GAAU2F,CAAC,CAAC9E,IAAZ;;QACA,IAAI0D,MAAM,CAACoB,CAAC,CAAC3F,KAAH,CAAV,EAAqB;UACjB2F,CAAC,CAAC3F,KAAF,GAAU2F,CAAC,CAAC3F,KAAF,CAAQC,kBAAR,EAAV;QACH;;QACD,IAAI0F,CAAC,CAACC,MAAN,EAAc;UACV,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAAC,CAACC,MAAF,CAASnK,MAA7B,EAAqCoK,CAAC,EAAtC,EAA0C;YACtC,IAAM3D,CAAC,GAAGyD,CAAC,CAACC,MAAF,CAASC,CAAT,CAAV;YACA3D,CAAC,CAAClC,KAAF,GAAUkC,CAAC,CAACrB,IAAZ;;YACA,IAAI0D,MAAM,CAACrC,CAAC,CAAClC,KAAH,CAAV,EAAqB;cACjBkC,CAAC,CAAClC,KAAF,GAAUkC,CAAC,CAAClC,KAAF,CAAQC,kBAAR,EAAV;YACH;UACJ;QACJ;MACJ;IACJ;;;WACD,wBAAe;MACX,IAAI,KAAK6F,kBAAT,EAA6B;QACzB,KAAKA,kBAAL,CAAwBV,WAAxB;MACH;IACJ;;;WACD,iCAAwB;MAAA;;MACpB,IAAI,CAACtT,iBAAiB,CAAC,KAAK2G,UAAN,CAAtB,EAAyC;QACrC;MACH;;MACD,IAAMsN,MAAM,GAAG3T,SAAS,CAACmF,MAAD,EAAS,QAAT,CAAxB;MACA,IAAMyO,YAAY,GAAGD,MAAM,CAACE,IAAP,CAAY5T,YAAY,CAAC,GAAD,CAAxB,EAA+B6S,SAA/B,CAAyC,UAAAgB,CAAC,EAAI;QAC/D,MAAI,CAAC3E,MAAL;;QACA,IAAI,MAAI,CAACL,EAAT,EAAa;UACT,MAAI,CAACA,EAAL,CAAQM,YAAR;QACH;MACJ,CALoB,CAArB;MAMA,KAAKsE,kBAAL,GAA0BE,YAA1B;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,mBAAUrE,IAAV,EAAgB;MACZ,IAAM0D,OAAO,GAAG,EAAhB;;MADY,4CAEO1D,IAFP;MAAA;;MAAA;QAEZ,uDAAyB;UAAA,IAAdK,IAAc;UACrB,IAAMmE,IAAI,GAAG;YACTtF,IAAI,EAAEmB,IAAI,CAAC,MAAD;UADD,CAAb;;UAGA,IAAIA,IAAI,CAAC,OAAD,CAAJ,KAAkBhL,SAAtB,EAAiC;YAC7BmP,IAAI,CAAC,OAAD,CAAJ,GAAgBnE,IAAI,CAAC,OAAD,CAApB;UACH;;UACD,IAAIA,IAAI,CAAC,QAAD,CAAJ,KAAmBhL,SAAvB,EAAkC;YAC9BmP,IAAI,CAAC,QAAD,CAAJ,GAAiB,EAAjB;;YAD8B,4CAELnE,IAAI,CAAC,QAAD,CAFC;YAAA;;YAAA;cAE9B,uDAAyC;gBAAA,IAA9BoE,UAA8B;gBACrC,IAAMC,cAAc,GAAGnQ,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBF,UAAlB,CAAvB;gBACAD,IAAI,CAAC,QAAD,CAAJ,CAAe5J,IAAf,CAAoB8J,cAApB;cACH;YAL6B;cAAA;YAAA;cAAA;YAAA;UAMjC;;UACD,IAAIrE,IAAI,CAAC,OAAD,CAAJ,KAAkBhL,SAAtB,EAAiC;YAC7BmP,IAAI,CAAC,OAAD,CAAJ,GAAgBI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAezE,IAAI,CAAC,OAAD,CAAnB,CAAX,CAAhB;UACH;;UACDqD,OAAO,CAAC9I,IAAR,CAAa4J,IAAb;QACH;MApBW;QAAA;MAAA;QAAA;MAAA;;MAqBZ,OAAOd,OAAP;IACH;;;;;;AAELV,kBAAkB,CAAChL,IAAnB;EAAA,iBAA+GgL,kBAA/G,EAp5B0G9T,EAo5B1G,mBAAmJA,EAAE,CAAC+I,UAAtJ,GAp5B0G/I,EAo5B1G,mBAA6KA,EAAE,CAACwT,MAAhL,GAp5B0GxT,EAo5B1G,mBAAmMA,EAAE,CAACuR,iBAAtM,GAp5B0GvR,EAo5B1G,mBAAoOC,WAApO;AAAA;;AACA6T,kBAAkB,CAAC7K,IAAnB,kBAr5B0GjJ,EAq5B1G;EAAA,MAAmG8T,kBAAnG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WAr5B0G9T,EAq5B1G;EAAA;EAAA;EAAA;IAAA;MAr5B0GA,EAq5BqQ,oBAA/W;IAAA;EAAA;EAAA;AAAA;;AACA;EAAA,mDAt5B0GA,EAs5B1G,mBAA2F8T,kBAA3F,EAA2H,CAAC;IAChHhM,IAAI,EAAE5H,SAD0G;IAEhH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,YADX;MAECC,QAAQ;IAFT,CAAD;EAF0G,CAAD,CAA3H,EAM4B,YAAY;IAAE,OAAO,CAAC;MAAExB,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAD,EAA0B;MAAEjB,IAAI,EAAE9H,EAAE,CAACwT;IAAX,CAA1B,EAA+C;MAAE1L,IAAI,EAAE9H,EAAE,CAACuR;IAAX,CAA/C,EAA+E;MAAEzJ,IAAI,EAAE3B,SAAR;MAAmBuD,UAAU,EAAE,CAAC;QAC5I5B,IAAI,EAAE1H,MADsI;QAE5IyD,IAAI,EAAE,CAAC5D,WAAD;MAFsI,CAAD;IAA/B,CAA/E,CAAP;EAGlB,CATxB,EAS0C;IAAEuU,OAAO,EAAE,CAAC;MACtC1M,IAAI,EAAEzH;IADgC,CAAD,CAAX;IAE1BkS,IAAI,EAAE,CAAC;MACPzK,IAAI,EAAEzH;IADC,CAAD,CAFoB;IAI1B2T,MAAM,EAAE,CAAC;MACTlM,IAAI,EAAEzH;IADG,CAAD,CAJkB;IAM1B4T,UAAU,EAAE,CAAC;MACbnM,IAAI,EAAEzH;IADO,CAAD,CANc;IAQ1BwV,YAAY,EAAE,CAAC;MACf/N,IAAI,EAAEzH;IADS,CAAD,CARY;IAU1BsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CAVc;IAY1BwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD;EAZkB,CAT1C;AAAA;;AAyBA,IAAIkV,WAAJ;;AACA,CAAC,UAAUA,WAAV,EAAuB;EACpBA,WAAW,CAAC,KAAD,CAAX,GAAqB,KAArB;EACAA,WAAW,CAAC,QAAD,CAAX,GAAwB,QAAxB;EACAA,WAAW,CAAC,MAAD,CAAX,GAAsB,MAAtB;EACAA,WAAW,CAAC,OAAD,CAAX,GAAuB,OAAvB;AACH,CALD,EAKGA,WAAW,KAAKA,WAAW,GAAG,EAAnB,CALd;;IAOMC,kB;EACF,4BAAYrO,OAAZ,EAAqB;IAAA;;IACjB,KAAKsO,UAAL,GAAkB,EAAlB;IACA,KAAKC,MAAL,GAAc,CAAd;IACA,KAAKvO,OAAL,GAAeA,OAAO,CAACS,aAAvB;EACH;;;;WACD,qBAAY6F,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MACL,KAAKwF,WAAL,GAAmB,MAAnB;MACA,KAAKC,UAAL,GAAkB,QAAlB;MACA,KAAKC,SAAL,GAAiB,EAAjB;;MACA,QAAQ,KAAKC,MAAb;QACI,KAAKP,WAAW,CAAChQ,GAAjB;UACI,KAAKwQ,CAAL,GAAS,KAAKC,MAAd;UACA,KAAK3K,CAAL,GAAS,KAAKpF,KAAL,GAAa,CAAtB;UACA;;QACJ,KAAKsP,WAAW,CAAC9P,MAAjB;UACI,KAAKsQ,CAAL,GAAS,KAAKC,MAAd;UACA,KAAK3K,CAAL,GAAS,KAAKpF,KAAL,GAAa,CAAtB;UACA;;QACJ,KAAKsP,WAAW,CAACzP,IAAjB;UACI,KAAKiQ,CAAL,GAAS,EAAE,KAAKC,MAAL,GAAc,KAAKP,UAAnB,GAAgC,KAAKC,MAAvC,CAAT;UACA,KAAKrK,CAAL,GAAS,CAAC,KAAK3F,MAAN,GAAe,CAAxB;UACA,KAAKmQ,SAAL,GAAiB,aAAjB;UACA;;QACJ,KAAKN,WAAW,CAACvP,KAAjB;UACI,KAAK+P,CAAL,GAAS,KAAKC,MAAL,GAAc,KAAKN,MAA5B;UACA,KAAKrK,CAAL,GAAS,CAAC,KAAK3F,MAAN,GAAe,CAAxB;UACA,KAAKmQ,SAAL,GAAiB,aAAjB;UACA;;QACJ;MAnBJ;IAqBH;;;;;;AAELL,kBAAkB,CAACjN,IAAnB;EAAA,iBAA+GiN,kBAA/G,EA39B0G/V,EA29B1G,mBAAmJA,EAAE,CAAC+I,UAAtJ;AAAA;;AACAgN,kBAAkB,CAAC9M,IAAnB,kBA59B0GjJ,EA49B1G;EAAA,MAAmG+V,kBAAnG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WA59B0G/V,EA49B1G;EAAA;EAAA;EAAA;EAAA;IAAA;MA59B0GA,EA69BtG,iBADJ;MA59B0GA,EA69BtG,0BADJ;MA59B0GA,EAo+BpG,UARN;MA59B0GA,EAq+BtG,eATJ;IAAA;;IAAA;MA59B0GA,EA89BpG,gIAFN;MA59B0GA,EAo+BpG,aARN;MA59B0GA,EAo+BpG,wCARN;IAAA;EAAA;EAAA;EAAA;AAAA;;AAWA;EAAA,mDAv+B0GA,EAu+B1G,mBAA2F+V,kBAA3F,EAA2H,CAAC;IAChHjO,IAAI,EAAE5H,SAD0G;IAEhH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,0BADX;MAECC,QAAQ,wOAFT;MAaCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAb1C,CAAD;EAF0G,CAAD,CAA3H,EAiB4B,YAAY;IAAE,OAAO,CAAC;MAAElH,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAD,CAAP;EAAmC,CAjB7E,EAiB+F;IAAEsN,MAAM,EAAE,CAAC;MAC1FvO,IAAI,EAAEzH;IADoF,CAAD,CAAV;IAE/E8O,KAAK,EAAE,CAAC;MACRrH,IAAI,EAAEzH;IADE,CAAD,CAFwE;IAI/EkW,MAAM,EAAE,CAAC;MACTzO,IAAI,EAAEzH;IADG,CAAD,CAJuE;IAM/EmG,KAAK,EAAE,CAAC;MACRsB,IAAI,EAAEzH;IADE,CAAD,CANwE;IAQ/E4F,MAAM,EAAE,CAAC;MACT6B,IAAI,EAAEzH;IADG,CAAD;EARuE,CAjB/F;AAAA;;AA6BA,SAASmW,SAAT,CAAmBC,CAAnB,EAAgC;EAAA,IAAV3T,GAAU,uEAAJ,EAAI;;EAC5B,IAAI,OAAO2T,CAAP,KAAa,QAAjB,EAA2B;IACvB,IAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;MACvB,OAAOA,CAAC,GAAG,EAAX;IACH,CAFD,MAGK;MACD,OAAO,EAAP;IACH;EACJ;;EACDA,CAAC,GAAGA,CAAC,CAACC,IAAF,EAAJ;;EACA,IAAID,CAAC,CAAC7L,MAAF,IAAY9H,GAAhB,EAAqB;IACjB,OAAO2T,CAAP;EACH,CAFD,MAGK;IACD,iBAAUA,CAAC,CAACE,KAAF,CAAQ,CAAR,EAAW7T,GAAX,CAAV;EACH;AACJ;;AAED,SAAS8T,WAAT,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;EAClC,IAAID,KAAK,CAACjM,MAAN,GAAekM,QAAnB,EAA6B;IACzB,IAAMC,OAAO,GAAG,EAAhB;IACA,IAAMC,OAAO,GAAGpI,IAAI,CAAC0D,KAAL,CAAWuE,KAAK,CAACjM,MAAN,GAAekM,QAA1B,CAAhB;;IACA,KAAK,IAAI3L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0L,KAAK,CAACjM,MAA1B,EAAkCO,CAAC,EAAnC,EAAuC;MACnC,IAAIA,CAAC,GAAG6L,OAAJ,KAAgB,CAApB,EAAuB;QACnBD,OAAO,CAACrL,IAAR,CAAamL,KAAK,CAAC1L,CAAD,CAAlB;MACH;IACJ;;IACD0L,KAAK,GAAGE,OAAR;EACH;;EACD,OAAOF,KAAP;AACH;;AAED,IAAII,UAAJ;;AACA,CAAC,UAAUA,UAAV,EAAsB;EACnBA,UAAU,CAAC,OAAD,CAAV,GAAsB,OAAtB;EACAA,UAAU,CAAC,QAAD,CAAV,GAAuB,QAAvB;EACAA,UAAU,CAAC,KAAD,CAAV,GAAoB,KAApB;AACH,CAJD,EAIGA,UAAU,KAAKA,UAAU,GAAG,EAAlB,CAJb;;IAMMC,mB;EACF,6BAAYtP,UAAZ,EAAwB;IAAA;;IACpB,KAAKA,UAAL,GAAkBA,UAAlB;IACA,KAAKuP,aAAL,GAAqB,CAAC,CAAD,CAArB;IACA,KAAKC,UAAL,GAAkB,MAAlB;IACA,KAAKC,SAAL,GAAiB,IAAjB;IACA,KAAKC,aAAL,GAAqB,EAArB;IACA,KAAKC,aAAL,GAAqB,KAArB;IACA,KAAKC,WAAL,GAAmB,IAAnB;IACA,KAAKC,iBAAL,GAAyB,IAAI9W,YAAJ,EAAzB;IACA,KAAK+W,eAAL,GAAuB,EAAvB;IACA,KAAKC,YAAL,GAAoB,KAApB;IACA,KAAKC,aAAL,GAAqB,CAArB;IACA,KAAKC,aAAL,GAAqB,CAArB;IACA,KAAKC,WAAL,GAAmB,CAAnB;IACA,KAAK3B,UAAL,GAAkBc,UAAU,CAACc,MAA7B;IACA,KAAKC,cAAL,GAAsB,CAAtB;IACA,KAAKC,gBAAL,GAAwB,EAAxB;IACA,KAAKhS,MAAL,GAAc,CAAd;IACA,KAAKiS,YAAL,GAAoB,EAApB;EACH;;;;WACD,qBAAYlK,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,2BAAkB;MAAA;;MACdhM,UAAU,CAAC;QAAA,OAAM,MAAI,CAACyT,UAAL,EAAN;MAAA,CAAD,CAAV;IACH;;;WACD,sBAAa;MAAA;;MACT,IAAI,CAAClX,iBAAiB,CAAC,KAAK2G,UAAN,CAAtB,EAAyC;QACrC;QACA,KAAK6P,iBAAL,CAAuB1H,IAAvB,CAA4B;UAAE9J,MAAM,EAAE,KAAKiS;QAAf,CAA5B;QACA;MACH;;MACD,IAAMjS,MAAM,GAAGmS,QAAQ,CAAC,KAAKC,YAAL,CAAkBlQ,aAAlB,CAAgCE,qBAAhC,GAAwDpC,MAAzD,EAAiE,EAAjE,CAAvB;;MACA,IAAIA,MAAM,KAAK,KAAKA,MAApB,EAA4B;QACxB,KAAKA,MAAL,GAAcA,MAAd;QACA,KAAKwR,iBAAL,CAAuB1H,IAAvB,CAA4B;UAAE9J,MAAM,EAAE,KAAKA;QAAf,CAA5B;QACAvB,UAAU,CAAC;UAAA,OAAM,MAAI,CAACyT,UAAL,EAAN;QAAA,CAAD,CAAV;MACH;IACJ;;;WACD,kBAAS;MAAA;;MACL,IAAMG,KAAK,GAAG,KAAKA,KAAnB;MACA,KAAKzB,KAAL,GAAa,KAAK0B,QAAL,EAAb;;MACA,IAAI,KAAKC,cAAT,EAAyB;QACrB,KAAKC,UAAL,GAAkB,KAAKD,cAAvB;MACH,CAFD,MAGK,IAAIF,KAAK,CAACG,UAAV,EAAsB;QACvB;QACA,KAAKA,UAAL,GAAkBH,KAAK,CAACG,UAAN,CAAiBrU,KAAjB,CAAuBkU,KAAvB,EAA8B,KAAKnB,aAAnC,CAAlB;MACH,CAHI,MAIA;QACD,KAAKsB,UAAL,GAAkB,UAAUpH,CAAV,EAAa;UAC3B,IAAIA,CAAC,CAACqH,WAAF,CAAc1I,IAAd,KAAuB,MAA3B,EAAmC;YAC/B,OAAOqB,CAAC,CAACjC,kBAAF,EAAP;UACH;;UACD,OAAOiC,CAAC,CAAChC,cAAF,EAAP;QACH,CALD;MAMH;;MACD,IAAMsJ,KAAK,GAAG,KAAKnB,WAAL,GAAmB,KAAKoB,gBAAL,CAAsB,KAAK/B,KAA3B,CAAnB,GAAuD,IAArE;MACA,KAAKgC,aAAL,GAAqB,KAAKP,KAAL,CAAWQ,SAAX,GACf,UAAUzH,CAAV,EAAa;QACX,OAAO,KAAKiH,KAAL,CAAWjH,CAAX,IAAgB,KAAKiH,KAAL,CAAWQ,SAAX,KAAyB,GAAhD;MACH,CAHgB,GAIf,KAAKR,KAJX;MAKA,KAAKS,aAAL,GAAqB,EAArB;;MACA,IAAIJ,KAAK,IAAIA,KAAK,KAAK,CAAvB,EAA0B;QACtB,KAAKI,aAAL,oBAA+BJ,KAA/B;QACA,KAAKxC,UAAL,GAAkBc,UAAU,CAAC+B,GAA7B;QACA,KAAKtB,eAAL,GAAuB,EAAvB;MACH,CAJD,MAKK;QACD,KAAKvB,UAAL,GAAkBc,UAAU,CAACc,MAA7B;MACH;;MACDrT,UAAU,CAAC;QAAA,OAAM,MAAI,CAACyT,UAAL,EAAN;MAAA,CAAD,CAAV;IACH;;;WACD,0BAAiBtB,KAAjB,EAAwB;MACpB,IAAI8B,KAAK,GAAG,CAAZ;MACA,KAAKX,cAAL,GAAsB,CAAtB;;MACA,KAAK,IAAI7M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0L,KAAK,CAACjM,MAA1B,EAAkCO,CAAC,EAAnC,EAAuC;QACnC,IAAM8N,IAAI,GAAG,KAAKR,UAAL,CAAgB5B,KAAK,CAAC1L,CAAD,CAArB,EAA0BwI,QAA1B,EAAb;QACA,IAAIuF,UAAU,GAAGD,IAAI,CAACrO,MAAtB;;QACA,IAAI,KAAKyM,SAAT,EAAoB;UAChB6B,UAAU,GAAG,KAAKC,QAAL,CAAcF,IAAd,EAAoBrO,MAAjC;QACH;;QACD,IAAIsO,UAAU,GAAG,KAAKlB,cAAtB,EAAsC;UAClC,KAAKA,cAAL,GAAsBkB,UAAtB;QACH;MACJ;;MACD,IAAME,GAAG,GAAGxK,IAAI,CAAC/L,GAAL,CAAS,KAAKmV,cAAd,EAA8B,KAAKC,gBAAnC,CAAZ;MACA,IAAMoB,SAAS,GAAG,CAAlB,CAdoB,CAcC;;MACrB,IAAMC,SAAS,GAAGF,GAAG,GAAGC,SAAxB;MACA,IAAIE,SAAS,GAAGD,SAAhB;MACA,IAAME,YAAY,GAAG5K,IAAI,CAAC0D,KAAL,CAAW,KAAK9L,KAAL,GAAaqQ,KAAK,CAACjM,MAA9B,CAArB,CAjBoB,CAkBpB;;MACA,OAAO2O,SAAS,GAAGC,YAAZ,IAA4Bb,KAAK,GAAG,CAAC,EAA5C,EAAgD;QAC5CA,KAAK,IAAI,EAAT;QACAY,SAAS,GAAG3K,IAAI,CAAC6K,GAAL,CAASd,KAAK,IAAI/J,IAAI,CAAC8K,EAAL,GAAU,GAAd,CAAd,IAAoCJ,SAAhD;MACH;;MACD,KAAKpB,YAAL,GAAoBtJ,IAAI,CAAC9L,GAAL,CAAS8L,IAAI,CAAC+K,GAAL,CAAS/K,IAAI,CAACgL,GAAL,CAASjB,KAAK,IAAI/J,IAAI,CAAC8K,EAAL,GAAU,GAAd,CAAd,IAAoCJ,SAA7C,CAAT,EAAkE,EAAlE,CAApB;MACA,OAAOX,KAAP;IACH;;;WACD,oBAAW;MACP,IAAI9B,KAAJ;MACA,IAAMC,QAAQ,GAAG,KAAK+C,WAAL,CAAiB,EAAjB,CAAjB;MACA,IAAMC,aAAa,GAAG,KAAKD,WAAL,CAAiB,GAAjB,CAAtB;;MACA,IAAI,KAAKE,UAAT,EAAqB;QACjBlD,KAAK,GAAG,KAAKkD,UAAb;MACH,CAFD,MAGK,IAAI,KAAKzB,KAAL,CAAWzB,KAAf,EAAsB;QACvBA,KAAK,GAAG,KAAKyB,KAAL,CAAWzB,KAAX,CAAiBzS,KAAjB,CAAuB,KAAKkU,KAA5B,EAAmC,CAACwB,aAAD,CAAnC,CAAR;MACH,CAFI,MAGA;QACDjD,KAAK,GAAG,KAAKyB,KAAL,CAAWlK,MAAX,EAAR;QACAyI,KAAK,GAAGD,WAAW,CAACC,KAAD,EAAQC,QAAR,CAAnB;MACH;;MACD,OAAOD,KAAP;IACH;;;WACD,qBAAYmD,SAAZ,EAAuB;MACnB,OAAOpL,IAAI,CAAC0D,KAAL,CAAW,KAAK9L,KAAL,GAAawT,SAAxB,CAAP;IACH;;;WACD,uBAAcf,IAAd,EAAoB;MAChB,OAAO,eAAe,KAAKJ,aAAL,CAAmBI,IAAnB,CAAf,GAA0C,GAA1C,GAAgD,KAAKvB,eAArD,GAAuE,GAA9E;IACH;;;WACD,6BAAoB;MAChB,6BAAsB,CAAC,KAAKA,eAAN,GAAwB,CAA9C;IACH;;;WACD,kBAASvI,KAAT,EAAgB;MACZ,OAAO,KAAKkI,SAAL,GAAiBb,SAAS,CAACrH,KAAD,EAAQ,KAAKmI,aAAb,CAA1B,GAAwDnI,KAA/D;IACH;;;;;;AAEL+H,mBAAmB,CAACpO,IAApB;EAAA,iBAAgHoO,mBAAhH,EA7qC0GlX,EA6qC1G,mBAAqJC,WAArJ;AAAA;;AACAiX,mBAAmB,CAACjO,IAApB,kBA9qC0GjJ,EA8qC1G;EAAA,MAAoGkX,mBAApG;EAAA;EAAA;IAAA;MA9qC0GlX,EA8qC1G;IAAA;;IAAA;MAAA;;MA9qC0GA,EA8qC1G,qBA9qC0GA,EA8qC1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WA9qC0GA,EA8qC1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA9qC0GA,EA+qCtG,iBADJ;MA9qC0GA,EA+qCtG,gCADJ;MA9qC0GA,EAgrCpG,mEAFN;MA9qC0GA,EA2rCtG,eAbJ;MA9qC0GA,EA6rCtG,mEAfJ;IAAA;;IAAA;MA9qC0GA,EAgrC5E,aAF9B;MA9qC0GA,EAgrC5E,iCAF9B;MA9qC0GA,EA6rC9E,aAf5B;MA9qC0GA,EA6rC9E,iCAf5B;IAAA;EAAA;EAAA,eAoB0CgB,EAAE,CAACwQ,OApB7C,EAoBoJxQ,EAAE,CAACkI,IApBvJ;EAAA;EAAA;AAAA;;AAqBA;EAAA,mDAnsC0GlJ,EAmsC1G,mBAA2FkX,mBAA3F,EAA4H,CAAC;IACjHpP,IAAI,EAAE5H,SAD2G;IAEjH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,4BADX;MAECC,QAAQ,iwBAFT;MAuBCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAvB1C,CAAD;EAF2G,CAAD,CAA5H,EA2B4B,YAAY;IAAE,OAAO,CAAC;MAAElH,IAAI,EAAE3B,SAAR;MAAmBuD,UAAU,EAAE,CAAC;QAC9D5B,IAAI,EAAE1H,MADwD;QAE9DyD,IAAI,EAAE,CAAC5D,WAAD;MAFwD,CAAD;IAA/B,CAAD,CAAP;EAGlB,CA9BxB,EA8B0C;IAAEqY,KAAK,EAAE,CAAC;MACpCxQ,IAAI,EAAEzH;IAD8B,CAAD,CAAT;IAE1BgW,MAAM,EAAE,CAAC;MACTvO,IAAI,EAAEzH;IADG,CAAD,CAFkB;IAI1B8W,aAAa,EAAE,CAAC;MAChBrP,IAAI,EAAEzH;IADU,CAAD,CAJW;IAM1B0Z,UAAU,EAAE,CAAC;MACbjS,IAAI,EAAEzH;IADO,CAAD,CANc;IAQ1B+W,UAAU,EAAE,CAAC;MACbtP,IAAI,EAAEzH;IADO,CAAD,CARc;IAU1BgX,SAAS,EAAE,CAAC;MACZvP,IAAI,EAAEzH;IADM,CAAD,CAVe;IAY1BiX,aAAa,EAAE,CAAC;MAChBxP,IAAI,EAAEzH;IADU,CAAD,CAZW;IAc1BmY,cAAc,EAAE,CAAC;MACjB1Q,IAAI,EAAEzH;IADW,CAAD,CAdU;IAgB1BkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CAhBW;IAkB1B4Z,cAAc,EAAE,CAAC;MACjBnS,IAAI,EAAEzH;IADW,CAAD,CAlBU;IAoB1BmG,KAAK,EAAE,CAAC;MACRsB,IAAI,EAAEzH;IADE,CAAD,CApBmB;IAsB1BmX,WAAW,EAAE,CAAC;MACd1P,IAAI,EAAEzH;IADQ,CAAD,CAtBa;IAwB1BoX,iBAAiB,EAAE,CAAC;MACpB3P,IAAI,EAAElH;IADc,CAAD,CAxBO;IA0B1ByX,YAAY,EAAE,CAAC;MACfvQ,IAAI,EAAExH,SADS;MAEfuD,IAAI,EAAE,CAAC,SAAD;IAFS,CAAD;EA1BY,CA9B1C;AAAA;;IA6DMqW,c;EACF,0BAAc;IAAA;;IACV,KAAK1C,WAAL,GAAmB,IAAnB;IACA,KAAKD,aAAL,GAAqB,KAArB;IACA,KAAK4C,OAAL,GAAerE,WAAW,CAAC9P,MAA3B;IACA,KAAKoU,WAAL,GAAmB,CAAnB;IACA,KAAK3C,iBAAL,GAAyB,IAAI9W,YAAJ,EAAzB;IACA,KAAK0Z,cAAL,GAAsB,QAAtB;IACA,KAAKC,WAAL,GAAmB,CAAnB;IACA,KAAKC,IAAL,GAAY,MAAZ;IACA,KAAKC,MAAL,GAAc,QAAd;IACA,KAAKpD,UAAL,GAAkB,MAAlB;IACA,KAAKlB,WAAL,GAAmB,MAAnB;IACA,KAAKuE,OAAL,GAAe,CAAf;IACA,KAAKC,WAAL,GAAmB5E,WAAnB;EACH;;;;WACD,qBAAY9H,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MACL,KAAK0F,SAAL,yBAAgC,KAAKgE,WAAL,GAAmB,KAAKK,OAAxB,GAAkC,KAAK/F,IAAL,CAAUzO,MAA5E;;MACA,IAAI,OAAO,KAAK0U,cAAZ,KAA+B,WAAnC,EAAgD;QAC5C,KAAKxD,aAAL,GAAqB,CAAC,KAAKwD,cAAN,CAArB;MACH;IACJ;;;WACD,+BAA4B;MAAA;;MAAA,IAAV1U,MAAU,QAAVA,MAAU;MACxB,IAAM2U,cAAc,GAAG3U,MAAM,GAAG,EAAT,GAAc,CAArC;;MACA,IAAI2U,cAAc,KAAK,KAAKN,WAA5B,EAAyC;QACrC,KAAKA,WAAL,GAAmBM,cAAnB;QACAlW,UAAU,CAAC,YAAM;UACb,OAAI,CAAC+S,iBAAL,CAAuB1H,IAAvB,CAA4B;YAAE9J,MAAM,EAANA;UAAF,CAA5B;QACH,CAFS,EAEP,CAFO,CAAV;MAGH;IACJ;;;;;;AAELiU,cAAc,CAACpR,IAAf;EAAA,iBAA2GoR,cAA3G;AAAA;;AACAA,cAAc,CAACjR,IAAf,kBApyC0GjJ,EAoyC1G;EAAA,MAA+Fka,cAA/F;EAAA;EAAA;IAAA;MApyC0Gla,EAoyC1G,aAAkmBkX,mBAAlmB;IAAA;;IAAA;MAAA;;MApyC0GlX,EAoyC1G,qBApyC0GA,EAoyC1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WApyC0GA,EAoyC1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MApyC0GA,EAqyCtG,iBADJ;MApyC0GA,EAqyCtG,uBADJ;MApyC0GA,EAsyCpG,+DAFN;MApyC0GA,EAuzCpG,8DAnBN;MApyC0GA,EAg0CtG,eA5BJ;IAAA;;IAAA;MApyC0GA,EAqyC/F,qEADX;MApyC0GA,EAwyCjG,aAJT;MApyC0GA,EAwyCjG,+BAJT;MApyC0GA,EAyzCjG,aArBT;MApyC0GA,EAyzCjG,kCArBT;IAAA;EAAA;EAAA,eA6B0CkX,mBA7B1C,EA6BsUnB,kBA7BtU,EA6Bkd/U,EAAE,CAACkI,IA7Brd;EAAA;EAAA;AAAA;;AA8BA;EAAA,mDAl0C0GlJ,EAk0C1G,mBAA2Fka,cAA3F,EAAuH,CAAC;IAC5GpS,IAAI,EAAE5H,SADsG;IAE5G2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,sBADX;MAECC,QAAQ,s7BAFT;MAgCCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAhC1C,CAAD;EAFsG,CAAD,CAAvH,QAoC4B;IAAE6L,MAAM,EAAE,CAAC;MACvB/S,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZqU,IAAI,EAAE,CAAC;MACP5M,IAAI,EAAEzH;IADC,CAAD,CAFM;IAIZgX,SAAS,EAAE,CAAC;MACZvP,IAAI,EAAEzH;IADM,CAAD,CAJC;IAMZmX,WAAW,EAAE,CAAC;MACd1P,IAAI,EAAEzH;IADQ,CAAD,CAND;IAQZiX,aAAa,EAAE,CAAC;MAChBxP,IAAI,EAAEzH;IADU,CAAD,CARH;IAUZmY,cAAc,EAAE,CAAC;MACjB1Q,IAAI,EAAEzH;IADW,CAAD,CAVJ;IAYZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CAZH;IAcZya,SAAS,EAAE,CAAC;MACZhT,IAAI,EAAEzH;IADM,CAAD,CAdC;IAgBZ0a,SAAS,EAAE,CAAC;MACZjT,IAAI,EAAEzH;IADM,CAAD,CAhBC;IAkBZwW,KAAK,EAAE,CAAC;MACR/O,IAAI,EAAEzH;IADE,CAAD,CAlBK;IAoBZsa,cAAc,EAAE,CAAC;MACjB7S,IAAI,EAAEzH;IADW,CAAD,CApBJ;IAsBZ8Z,OAAO,EAAE,CAAC;MACVrS,IAAI,EAAEzH;IADI,CAAD,CAtBG;IAwBZ+Z,WAAW,EAAE,CAAC;MACdtS,IAAI,EAAEzH;IADQ,CAAD,CAxBD;IA0BZoX,iBAAiB,EAAE,CAAC;MACpB3P,IAAI,EAAElH;IADc,CAAD,CA1BP;IA4BZoa,cAAc,EAAE,CAAC;MACjBlT,IAAI,EAAExH,SADW;MAEjBuD,IAAI,EAAE,CAACqT,mBAAD;IAFW,CAAD;EA5BJ,CApC5B;AAAA;AAqEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS+D,WAAT,CAAqBrP,CAArB,EAAwB0K,CAAxB,EAA2B4E,CAA3B,EAA8BC,CAA9B,EAAiCC,CAAjC,SAAsD;EAAA;EAAA,IAAjBC,EAAiB;EAAA,IAAbC,EAAa;EAAA,IAATC,EAAS;EAAA,IAALC,EAAK;;EAClD,IAAIC,MAAM,GAAG,EAAb;EACAP,CAAC,GAAGtM,IAAI,CAAC0D,KAAL,CAAW4I,CAAX,CAAJ;EACAC,CAAC,GAAGvM,IAAI,CAAC0D,KAAL,CAAW6I,CAAX,CAAJ;EACAD,CAAC,GAAGA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcA,CAAlB;EACAC,CAAC,GAAGA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcA,CAAlB;EACAM,MAAM,cAAO,CAAC7P,CAAC,GAAGwP,CAAL,EAAQ9E,CAAR,CAAP,CAAN;EACAmF,MAAM,eAAQP,CAAC,GAAG,IAAIE,CAAhB,CAAN;;EACA,IAAIE,EAAJ,EAAQ;IACJG,MAAM,eAAQ,CAACL,CAAD,EAAIA,CAAJ,CAAR,oBAAwB,CAACA,CAAD,EAAIA,CAAJ,CAAxB,CAAN;EACH,CAFD,MAGK;IACDK,MAAM,eAAQL,CAAR,cAAaA,CAAb,CAAN;EACH;;EACDK,MAAM,eAAQN,CAAC,GAAG,IAAIC,CAAhB,CAAN;;EACA,IAAII,EAAJ,EAAQ;IACJC,MAAM,eAAQ,CAACL,CAAD,EAAIA,CAAJ,CAAR,oBAAwB,CAAC,CAACA,CAAF,EAAKA,CAAL,CAAxB,CAAN;EACH,CAFD,MAGK;IACDK,MAAM,eAAQL,CAAR,cAAa,CAACA,CAAd,CAAN;EACH;;EACDK,MAAM,eAAQ,IAAIL,CAAJ,GAAQF,CAAhB,CAAN;;EACA,IAAIK,EAAJ,EAAQ;IACJE,MAAM,eAAQ,CAACL,CAAD,EAAIA,CAAJ,CAAR,oBAAwB,CAAC,CAACA,CAAF,EAAK,CAACA,CAAN,CAAxB,CAAN;EACH,CAFD,MAGK;IACDK,MAAM,eAAQ,CAACL,CAAT,cAAc,CAACA,CAAf,CAAN;EACH;;EACDK,MAAM,eAAQ,IAAIL,CAAJ,GAAQD,CAAhB,CAAN;;EACA,IAAIE,EAAJ,EAAQ;IACJI,MAAM,eAAQ,CAACL,CAAD,EAAIA,CAAJ,CAAR,oBAAwB,CAACA,CAAD,EAAI,CAACA,CAAL,CAAxB,CAAN;EACH,CAFD,MAGK;IACDK,MAAM,eAAQ,CAACL,CAAT,cAAcA,CAAd,CAAN;EACH;;EACDK,MAAM,OAAN;EACA,OAAOA,MAAP;AACH;;IAEKC,mB;EACF,6BAAY9T,UAAZ,EAAwB;IAAA;;IACpB,KAAKA,UAAL,GAAkBA,UAAlB;IACA,KAAKuP,aAAL,GAAqB,CAAC,CAAD,CAArB;IACA,KAAKC,UAAL,GAAkB,MAAlB;IACA,KAAKC,SAAL,GAAiB,IAAjB;IACA,KAAKC,aAAL,GAAqB,EAArB;IACA,KAAKC,aAAL,GAAqB,KAArB;IACA,KAAKoE,aAAL,GAAqB,KAArB;IACA,KAAKC,YAAL,GAAoB,KAApB;IACA,KAAKnE,iBAAL,GAAyB,IAAI9W,YAAJ,EAAzB;IACA,KAAKiX,aAAL,GAAqB,CAArB;IACA,KAAKE,WAAL,GAAmB,CAAnB;IACA,KAAKJ,eAAL,GAAuB,EAAvB;IACA,KAAKvB,UAAL,GAAkBc,UAAU,CAACc,MAA7B;IACA,KAAKvR,KAAL,GAAa,CAAb;IACA,KAAKqR,aAAL,GAAqB,CAArB;IACA,KAAKF,YAAL,GAAoB,KAApB;IACA,KAAKkE,mBAAL,GAA2B,CAA3B;IACA,KAAK/F,WAAL,GAAmBA,WAAnB;EACH;;;;WACD,qBAAY9H,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,2BAAkB;MAAA;;MACdhM,UAAU,CAAC;QAAA,OAAM,OAAI,CAACyT,UAAL,EAAN;MAAA,CAAD,CAAV;IACH;;;WACD,sBAAa;MAAA;;MACT,IAAI,CAAClX,iBAAiB,CAAC,KAAK2G,UAAN,CAAtB,EAAyC;QACrC;QACA,KAAKpB,KAAL,GAAa,KAAKsV,uBAAL,EAAb;QACA,KAAKrE,iBAAL,CAAuB1H,IAAvB,CAA4B;UAAEvJ,KAAK,EAAE,KAAKA;QAAd,CAA5B;QACA;MACH;;MACD,IAAMA,KAAK,GAAG4R,QAAQ,CAAC,KAAKC,YAAL,CAAkBlQ,aAAlB,CAAgCE,qBAAhC,GAAwD7B,KAAzD,EAAgE,EAAhE,CAAtB;;MACA,IAAIA,KAAK,KAAK,KAAKA,KAAnB,EAA0B;QACtB,KAAKA,KAAL,GAAaA,KAAb;QACA,KAAKiR,iBAAL,CAAuB1H,IAAvB,CAA4B;UAAEvJ,KAAK,EAALA;QAAF,CAA5B;QACA9B,UAAU,CAAC;UAAA,OAAM,OAAI,CAACyT,UAAL,EAAN;QAAA,CAAD,CAAV;MACH;IACJ;;;WACD,kBAAS;MAAA;;MACL,IAAMG,KAAK,GAAG,KAAKA,KAAnB;MACA,IAAMyD,IAAI,GAAG,KAAK1F,MAAL,KAAgBP,WAAW,CAAChQ,GAA5B,IAAmC,KAAKuQ,MAAL,KAAgBP,WAAW,CAACvP,KAA/D,GAAuE,CAAC,CAAxE,GAA4E,CAAzF;MACA,KAAKyV,WAAL,GAAmBpN,IAAI,CAAC9L,GAAL,CAAS,KAAK8U,aAAd,EAA6B,CAA7B,IAAkC,KAAKE,WAA1D;MACA,KAAKjB,KAAL,GAAa,KAAK0B,QAAL,EAAb;;MACA,IAAI,KAAKC,cAAT,EAAyB;QACrB,KAAKC,UAAL,GAAkB,KAAKD,cAAvB;MACH,CAFD,MAGK,IAAIF,KAAK,CAACG,UAAV,EAAsB;QACvB;QACA,KAAKA,UAAL,GAAkBH,KAAK,CAACG,UAAN,CAAiBrU,KAAjB,CAAuBkU,KAAvB,EAA8B,KAAKnB,aAAnC,CAAlB;MACH,CAHI,MAIA;QACD,KAAKsB,UAAL,GAAkB,UAAUpH,CAAV,EAAa;UAC3B,IAAIA,CAAC,CAACqH,WAAF,CAAc1I,IAAd,KAAuB,MAA3B,EAAmC;YAC/B,OAAOqB,CAAC,CAACjC,kBAAF,EAAP;UACH;;UACD,OAAOiC,CAAC,CAAChC,cAAF,EAAP;QACH,CALD;MAMH;;MACD,KAAKwJ,aAAL,GAAqBP,KAAK,CAACQ,SAAN,GACf,UAAUzH,CAAV,EAAa;QACX,OAAOiH,KAAK,CAACjH,CAAD,CAAL,GAAWiH,KAAK,CAACQ,SAAN,KAAoB,GAAtC;MACH,CAHgB,GAIfR,KAJN;;MAKA,IAAI,KAAKsD,YAAL,IAAqB,KAAKK,cAA9B,EAA8C;QAC1C,KAAKC,iBAAL;MACH;;MACD,QAAQ,KAAK7F,MAAb;QACI,KAAKP,WAAW,CAAChQ,GAAjB;UACI,KAAKsQ,SAAL,GAAiB,UAAU6C,IAAV,EAAgB;YAC7B,OAAO,eAAe,KAAKJ,aAAL,CAAmBI,IAAnB,CAAf,GAA0C,KAAjD;UACH,CAFD;;UAGA,KAAK9C,UAAL,GAAkBc,UAAU,CAACc,MAA7B;UACA,KAAKoE,EAAL,GAAU,KAAKvE,aAAL,GAAqBmE,IAA/B;UACA,KAAKK,EAAL,GAAU,KAAKJ,WAAL,GAAmBD,IAA7B;UACA,KAAKM,EAAL,GAAUN,IAAI,GAAG,CAAP,GAAW,KAAX,GAAmB,OAA7B;UACA;;QACJ,KAAKjG,WAAW,CAAC9P,MAAjB;UACI,KAAKoQ,SAAL,GAAiB,UAAU6C,IAAV,EAAgB;YAC7B,OAAO,eAAe,KAAKJ,aAAL,CAAmBI,IAAnB,CAAf,GAA0C,KAAjD;UACH,CAFD;;UAGA,KAAK9C,UAAL,GAAkBc,UAAU,CAACc,MAA7B;UACA,KAAKoE,EAAL,GAAU,KAAKvE,aAAL,GAAqBmE,IAA/B;UACA,KAAKK,EAAL,GAAU,KAAKJ,WAAL,GAAmBD,IAA7B;UACA,KAAKM,EAAL,GAAUN,IAAI,GAAG,CAAP,GAAW,KAAX,GAAmB,OAA7B;UACA;;QACJ,KAAKjG,WAAW,CAACzP,IAAjB;UACI,KAAK+P,SAAL,GAAiB,UAAU6C,IAAV,EAAgB;YAC7B,OAAO,iBAAiB,KAAKJ,aAAL,CAAmBI,IAAnB,CAAjB,GAA4C,GAAnD;UACH,CAFD;;UAGA,KAAK9C,UAAL,GAAkBc,UAAU,CAAC+B,GAA7B;UACA,KAAKsD,EAAL,GAAU,KAAK1E,aAAL,GAAqB,CAACmE,IAAhC;UACA,KAAKQ,EAAL,GAAU,KAAKP,WAAL,GAAmB,CAACD,IAA9B;UACA,KAAKM,EAAL,GAAU,OAAV;UACA;;QACJ,KAAKvG,WAAW,CAACvP,KAAjB;UACI,KAAK6P,SAAL,GAAiB,UAAU6C,IAAV,EAAgB;YAC7B,OAAO,iBAAiB,KAAKJ,aAAL,CAAmBI,IAAnB,CAAjB,GAA4C,GAAnD;UACH,CAFD;;UAGA,KAAK9C,UAAL,GAAkBc,UAAU,CAACuF,KAA7B;UACA,KAAKF,EAAL,GAAU,KAAK1E,aAAL,GAAqB,CAACmE,IAAhC;UACA,KAAKQ,EAAL,GAAU,KAAKP,WAAL,GAAmB,CAACD,IAA9B;UACA,KAAKM,EAAL,GAAU,OAAV;UACA;;QACJ;MArCJ;;MAuCA3X,UAAU,CAAC;QAAA,OAAM,OAAI,CAACyT,UAAL,EAAN;MAAA,CAAD,CAAV;IACH;;;WACD,6BAAoB;MAChB,KAAKsE,MAAL,GAAc,KAAK5D,aAAL,CAAmBjK,IAAI,CAAC/L,GAAL,CAASuB,KAAT,CAAe,IAAf,EAAqB,KAAK6X,cAAL,CAAoBS,GAApB,CAAwB,UAAAvL,IAAI;QAAA,OAAIA,IAAI,CAAC5L,KAAT;MAAA,CAA5B,CAArB,CAAnB,CAAd;MACA,KAAKoX,MAAL,GAAc,KAAK9D,aAAL,CAAmBjK,IAAI,CAAC9L,GAAL,CAASsB,KAAT,CAAe,IAAf,EAAqB,KAAK6X,cAAL,CAAoBS,GAApB,CAAwB,UAAAvL,IAAI;QAAA,OAAIA,IAAI,CAAC5L,KAAT;MAAA,CAA5B,CAArB,CAAnB,CAAd;MACA,KAAKsW,mBAAL,GAA2B,KAAKI,cAAL,CAAoBrR,MAA/C;MACA,KAAKgS,iBAAL,GAAyB3B,WAAW,CAAC,CAAD,EAAI,KAAK0B,MAAT,EAAiB,KAAKE,aAAtB,EAAqC,KAAKJ,MAAL,GAAc,KAAKE,MAAxD,EAAgE,CAAhE,EAAmE,CACnG,KADmG,EAEnG,KAFmG,EAGnG,KAHmG,EAInG,KAJmG,CAAnE,CAApC;IAMH;;;WACD,oBAAW;MACP,IAAI9F,KAAJ;MACA,IAAMC,QAAQ,GAAG,KAAK+C,WAAL,CAAiB,EAAjB,CAAjB;MACA,IAAMC,aAAa,GAAG,KAAKD,WAAL,CAAiB,EAAjB,CAAtB;;MACA,IAAI,KAAKE,UAAT,EAAqB;QACjBlD,KAAK,GAAG,KAAKkD,UAAb;MACH,CAFD,MAGK,IAAI,KAAKzB,KAAL,CAAWzB,KAAf,EAAsB;QACvBA,KAAK,GAAG,KAAKyB,KAAL,CAAWzB,KAAX,CAAiBzS,KAAjB,CAAuB,KAAKkU,KAA5B,EAAmC,CAACwB,aAAD,CAAnC,CAAR;MACH,CAFI,MAGA;QACDjD,KAAK,GAAG,KAAKyB,KAAL,CAAWlK,MAAX,EAAR;QACAyI,KAAK,GAAGD,WAAW,CAACC,KAAD,EAAQC,QAAR,CAAnB;MACH;;MACD,OAAOD,KAAP;IACH;;;WACD,qBAAYiG,UAAZ,EAAwB;MACpB,OAAOlO,IAAI,CAAC0D,KAAL,CAAW,KAAKrM,MAAL,GAAc6W,UAAzB,CAAP;IACH;;;WACD,uBAAc7D,IAAd,EAAoB;MAChB,2BAAoB,KAAKJ,aAAL,CAAmBI,IAAnB,CAApB,cAAgD,KAAKvB,eAArD;IACH;;;WACD,6BAAoB;MAChB;IACH;;;WACD,kBAASvI,KAAT,EAAgB;MACZ,OAAO,KAAKkI,SAAL,GAAiBb,SAAS,CAACrH,KAAD,EAAQ,KAAKmI,aAAb,CAA1B,GAAwDnI,KAA/D;IACH;;;WACD,mCAA0B;MAAA;;MACtB,IAAM4N,QAAQ,GAAGnO,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQ,KAAKiI,KAAL,CAAW6F,GAAX,CAAe,UAAAM,CAAC;QAAA,OAAI,OAAI,CAAC7D,QAAL,CAAc,OAAI,CAACV,UAAL,CAAgBuE,CAAhB,CAAd,EAAkCpS,MAAtC;MAAA,CAAhB,CAAR,EAArB;MACA,IAAMyO,SAAS,GAAG,CAAlB;MACA,OAAO0D,QAAQ,GAAG1D,SAAlB;IACH;;;;;;AAELqC,mBAAmB,CAAC5S,IAApB;EAAA,iBAAgH4S,mBAAhH,EA/kD0G1b,EA+kD1G,mBAAqJC,WAArJ;AAAA;;AACAyb,mBAAmB,CAACzS,IAApB,kBAhlD0GjJ,EAglD1G;EAAA,MAAoG0b,mBAApG;EAAA;EAAA;IAAA;MAhlD0G1b,EAglD1G;IAAA;;IAAA;MAAA;;MAhlD0GA,EAglD1G,qBAhlD0GA,EAglD1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WAhlD0GA,EAglD1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAhlD0GA,EAilDtG,iBADJ;MAhlD0GA,EAilDtG,gCADJ;MAhlD0GA,EAklDpG,mEAFN;MAhlD0GA,EA+lDtG,eAfJ;MAhlD0GA,EAimDtG,yEAjBJ;MAhlD0GA,EAumDtG,mEAvBJ;MAhlD0GA,EAwnDtG,mEAxCJ;IAAA;;IAAA;MAhlD0GA,EAklD5E,aAF9B;MAhlD0GA,EAklD5E,iCAF9B;MAhlD0GA,EAkmDnG,aAlBP;MAhlD0GA,EAkmDnG,gGAlBP;MAhlD0GA,EAumD9E,aAvB5B;MAhlD0GA,EAumD9E,iCAvB5B;MAhlD0GA,EAwnD3E,aAxC/B;MAhlD0GA,EAwnD3E,0CAxC/B;IAAA;EAAA;EAAA,eA8D0CgB,EAAE,CAACwQ,OA9D7C,EA8DoJxQ,EAAE,CAACkI,IA9DvJ;EAAA;EAAA;AAAA;;AA+DA;EAAA,mDA/oD0GlJ,EA+oD1G,mBAA2F0b,mBAA3F,EAA4H,CAAC;IACjH5T,IAAI,EAAE5H,SAD2G;IAEjH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,4BADX;MAECC,QAAQ,6hEAFT;MAiECyF,eAAe,EAAErO,uBAAuB,CAACsO;IAjE1C,CAAD;EAF2G,CAAD,CAA5H,EAqE4B,YAAY;IAAE,OAAO,CAAC;MAAElH,IAAI,EAAE3B,SAAR;MAAmBuD,UAAU,EAAE,CAAC;QAC9D5B,IAAI,EAAE1H,MADwD;QAE9DyD,IAAI,EAAE,CAAC5D,WAAD;MAFwD,CAAD;IAA/B,CAAD,CAAP;EAGlB,CAxExB,EAwE0C;IAAEqY,KAAK,EAAE,CAAC;MACpCxQ,IAAI,EAAEzH;IAD8B,CAAD,CAAT;IAE1BgW,MAAM,EAAE,CAAC;MACTvO,IAAI,EAAEzH;IADG,CAAD,CAFkB;IAI1B8W,aAAa,EAAE,CAAC;MAChBrP,IAAI,EAAEzH;IADU,CAAD,CAJW;IAM1B0Z,UAAU,EAAE,CAAC;MACbjS,IAAI,EAAEzH;IADO,CAAD,CANc;IAQ1B+W,UAAU,EAAE,CAAC;MACbtP,IAAI,EAAEzH;IADO,CAAD,CARc;IAU1BgX,SAAS,EAAE,CAAC;MACZvP,IAAI,EAAEzH;IADM,CAAD,CAVe;IAY1BiX,aAAa,EAAE,CAAC;MAChBxP,IAAI,EAAEzH;IADU,CAAD,CAZW;IAc1BmY,cAAc,EAAE,CAAC;MACjB1Q,IAAI,EAAEzH;IADW,CAAD,CAdU;IAgB1BkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CAhBW;IAkB1Bwc,aAAa,EAAE,CAAC;MAChB/U,IAAI,EAAEzH;IADU,CAAD,CAlBW;IAoB1B4F,MAAM,EAAE,CAAC;MACT6B,IAAI,EAAEzH;IADG,CAAD,CApBkB;IAsB1B4b,cAAc,EAAE,CAAC;MACjBnU,IAAI,EAAEzH;IADW,CAAD,CAtBU;IAwB1Bsb,aAAa,EAAE,CAAC;MAChB7T,IAAI,EAAEzH;IADU,CAAD,CAxBW;IA0B1Bub,YAAY,EAAE,CAAC;MACf9T,IAAI,EAAEzH;IADS,CAAD,CA1BY;IA4B1BoX,iBAAiB,EAAE,CAAC;MACpB3P,IAAI,EAAElH;IADc,CAAD,CA5BO;IA8B1ByX,YAAY,EAAE,CAAC;MACfvQ,IAAI,EAAExH,SADS;MAEfuD,IAAI,EAAE,CAAC,SAAD;IAFS,CAAD;EA9BY,CAxE1C;AAAA;;IA2GMoZ,c;EACF,0BAAc;IAAA;;IACV,KAAK1F,aAAL,GAAqB,KAArB;IACA,KAAK2F,OAAL,GAAepH,WAAW,CAACzP,IAA3B;IACA,KAAK8W,WAAL,GAAmB,CAAnB;IACA,KAAK1F,iBAAL,GAAyB,IAAI9W,YAAJ,EAAzB;IACA,KAAKyc,cAAL,GAAsB,QAAtB;IACA,KAAK9C,WAAL,GAAmB,EAAnB;IACA,KAAKC,IAAL,GAAY,MAAZ;IACA,KAAKC,MAAL,GAAc,MAAd;IACA,KAAKpD,UAAL,GAAkB,MAAlB;IACA,KAAKlB,WAAL,GAAmB,CAAnB;IACA,KAAKuE,OAAL,GAAe,CAAf;EACH;;;;WACD,qBAAYzM,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MACL,KAAK6F,MAAL,GAAc,EAAE,KAAK4G,WAAL,GAAmB,KAAK1C,OAA1B,CAAd;;MACA,IAAI,KAAKyC,OAAL,KAAiBpH,WAAW,CAACvP,KAAjC,EAAwC;QACpC,KAAK+T,WAAL,GAAmB,EAAnB;QACA,KAAKlE,SAAL,uBAA8B,KAAKG,MAAL,GAAc,KAAK7B,IAAL,CAAUlO,KAAtD;MACH,CAHD,MAIK;QACD,KAAK4P,SAAL,uBAA8B,KAAKG,MAAnC;MACH;;MACD,IAAI,KAAK8G,cAAL,KAAwBlX,SAA5B,EAAuC;QACnC,KAAKgR,aAAL,GAAqB,CAAC,KAAKkG,cAAN,CAArB;MACH;IACJ;;;WACD,+BAA0B;MAAA;;MAAA,IAAT7W,KAAS,SAATA,KAAS;;MACtB,IAAIA,KAAK,KAAK,KAAK8T,WAAf,IAA8B,KAAK4C,OAAL,KAAiBpH,WAAW,CAACvP,KAA/D,EAAsE;QAClE,KAAK+T,WAAL,GAAmB9T,KAAK,GAAG,KAAK8T,WAAhC;QACA5V,UAAU,CAAC,YAAM;UACb,OAAI,CAAC+S,iBAAL,CAAuB1H,IAAvB,CAA4B;YAAEvJ,KAAK,EAALA;UAAF,CAA5B;QACH,CAFS,EAEP,CAFO,CAAV;MAGH,CALD,MAMK,IAAIA,KAAK,KAAK,KAAK8T,WAAnB,EAAgC;QACjC,KAAKA,WAAL,GAAmB9T,KAAnB;QACA9B,UAAU,CAAC,YAAM;UACb,OAAI,CAAC+S,iBAAL,CAAuB1H,IAAvB,CAA4B;YAAEvJ,KAAK,EAALA;UAAF,CAA5B;QACH,CAFS,EAEP,CAFO,CAAV;MAGH;IACJ;;;;;;AAELyW,cAAc,CAACnU,IAAf;EAAA,iBAA2GmU,cAA3G;AAAA;;AACAA,cAAc,CAAChU,IAAf,kBAxyD0GjJ,EAwyD1G;EAAA,MAA+Fid,cAA/F;EAAA;EAAA;IAAA;MAxyD0Gjd,EAwyD1G,aAAsqB0b,mBAAtqB;IAAA;;IAAA;MAAA;;MAxyD0G1b,EAwyD1G,qBAxyD0GA,EAwyD1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WAxyD0GA,EAwyD1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAxyD0GA,EAyyDtG,iBADJ;MAxyD0GA,EAyyDtG,uBADJ;MAxyD0GA,EA0yDpG,+DAFN;MAxyD0GA,EA8zDpG,8DAtBN;MAxyD0GA,EAu0DtG,eA/BJ;IAAA;;IAAA;MAxyD0GA,EAyyD/F,qEADX;MAxyD0GA,EA4yDjG,aAJT;MAxyD0GA,EA4yDjG,+BAJT;MAxyD0GA,EAg0DjG,aAxBT;MAxyD0GA,EAg0DjG,kCAxBT;IAAA;EAAA;EAAA,eAgC0C0b,mBAhC1C,EAgC0W3F,kBAhC1W,EAgCsf/U,EAAE,CAACkI,IAhCzf;EAAA;EAAA;AAAA;;AAiCA;EAAA,mDAz0D0GlJ,EAy0D1G,mBAA2Fid,cAA3F,EAAuH,CAAC;IAC5GnV,IAAI,EAAE5H,SADsG;IAE5G2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,sBADX;MAECC,QAAQ,sgCAFT;MAmCCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAnC1C,CAAD;EAFsG,CAAD,CAAvH,QAuC4B;IAAEsO,MAAM,EAAE,CAAC;MACvBxV,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZqU,IAAI,EAAE,CAAC;MACP5M,IAAI,EAAEzH;IADC,CAAD,CAFM;IAIZgX,SAAS,EAAE,CAAC;MACZvP,IAAI,EAAEzH;IADM,CAAD,CAJC;IAMZiX,aAAa,EAAE,CAAC;MAChBxP,IAAI,EAAEzH;IADU,CAAD,CANH;IAQZmY,cAAc,EAAE,CAAC;MACjB1Q,IAAI,EAAEzH;IADW,CAAD,CARJ;IAUZwW,KAAK,EAAE,CAAC;MACR/O,IAAI,EAAEzH;IADE,CAAD,CAVK;IAYZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CAZH;IAcZya,SAAS,EAAE,CAAC;MACZhT,IAAI,EAAEzH;IADM,CAAD,CAdC;IAgBZ0a,SAAS,EAAE,CAAC;MACZjT,IAAI,EAAEzH;IADM,CAAD,CAhBC;IAkBZgd,cAAc,EAAE,CAAC;MACjBvV,IAAI,EAAEzH;IADW,CAAD,CAlBJ;IAoBZ6c,OAAO,EAAE,CAAC;MACVpV,IAAI,EAAEzH;IADI,CAAD,CApBG;IAsBZ4b,cAAc,EAAE,CAAC;MACjBnU,IAAI,EAAEzH;IADW,CAAD,CAtBJ;IAwBZub,YAAY,EAAE,CAAC;MACf9T,IAAI,EAAEzH;IADS,CAAD,CAxBF;IA0BZsb,aAAa,EAAE,CAAC;MAChB7T,IAAI,EAAEzH;IADU,CAAD,CA1BH;IA4BZ8c,WAAW,EAAE,CAAC;MACdrV,IAAI,EAAEzH;IADQ,CAAD,CA5BD;IA8BZoX,iBAAiB,EAAE,CAAC;MACpB3P,IAAI,EAAElH;IADc,CAAD,CA9BP;IAgCZoa,cAAc,EAAE,CAAC;MACjBlT,IAAI,EAAExH,SADW;MAEjBuD,IAAI,EAAE,CAAC6X,mBAAD;IAFW,CAAD;EAhCJ,CAvC5B;AAAA;;IA4EM6B,U;;;;AAENA,UAAU,CAACzU,IAAX;EAAA,iBAAuGyU,UAAvG;AAAA;;AACAA,UAAU,CAACC,IAAX,kBAx5D0Gxd,EAw5D1G;EAAA,MAAwGud;AAAxG;AACAA,UAAU,CAACE,IAAX,kBAz5D0Gzd,EAy5D1G;EAAA,UAA8H,CAACmB,YAAD,CAA9H;AAAA;;AACA;EAAA,mDA15D0GnB,EA05D1G,mBAA2Fud,UAA3F,EAAmH,CAAC;IACxGzV,IAAI,EAAEhH,QADkG;IAExG+C,IAAI,EAAE,CAAC;MACC6Z,OAAO,EAAE,CAACvc,YAAD,CADV;MAECwc,YAAY,EAAE,CAAC5H,kBAAD,EAAqBmE,cAArB,EAAqChD,mBAArC,EAA0D+F,cAA1D,EAA0EvB,mBAA1E,CAFf;MAGCkC,OAAO,EAAE,CAAC7H,kBAAD,EAAqBmE,cAArB,EAAqChD,mBAArC,EAA0D+F,cAA1D,EAA0EvB,mBAA1E;IAHV,CAAD;EAFkG,CAAD,CAAnH;AAAA;;AASA,IAAImC,UAAJ;;AACA,CAAC,UAAUA,UAAV,EAAsB;EACnBA,UAAU,CAAC,SAAD,CAAV,GAAwB,SAAxB;EACAA,UAAU,CAAC,SAAD,CAAV,GAAwB,SAAxB;AACH,CAHD,EAGGA,UAAU,KAAKA,UAAU,GAAG,EAAlB,CAHb;;AAKA,IAAIC,SAAJ;;AACA,CAAC,UAAUA,SAAV,EAAqB;EAClBA,SAAS,CAACA,SAAS,CAAC,KAAD,CAAT,GAAmB,KAApB,CAAT,GAAsC,KAAtC;EACAA,SAAS,CAACA,SAAS,CAAC,OAAD,CAAT,GAAqB,OAAtB,CAAT,GAA0C,OAA1C;EACAA,SAAS,CAACA,SAAS,CAAC,WAAD,CAAT,GAAyB,WAA1B,CAAT,GAAkD,WAAlD;AACH,CAJD,EAIGA,SAAS,KAAKA,SAAS,GAAG,EAAjB,CAJZ;;IAMMC,gB;EACF,0BAAYC,cAAZ,EAA4BC,gBAA5B,EAA8CtW,QAA9C,EAAwD;IAAA;;IACpD,KAAKqW,cAAL,GAAsBA,cAAtB;IACA,KAAKC,gBAAL,GAAwBA,gBAAxB;IACA,KAAKtW,QAAL,GAAgBA,QAAhB;IACA,KAAKuW,eAAL,GAAuB,EAAvB;IACA,KAAKC,mBAAL,GAA2B,IAA3B;IACA,KAAKC,cAAL,GAAsB,EAAtB;IACA,KAAKC,eAAL,GAAuB,KAAvB;IACA,KAAKC,gBAAL,GAAwB,IAAxB;IACA,KAAKC,gBAAL,GAAwB/Y,cAAc,CAACM,GAAvC;IACA,KAAK0Y,gBAAL,GAAwBhZ,cAAc,CAACU,MAAvC;IACA,KAAKuY,WAAL,GAAmBZ,UAAU,CAACa,OAA9B;IACA,KAAKC,0BAAL,GAAkC,IAAlC;IACA,KAAKC,wBAAL,GAAgC,IAAhC;IACA,KAAKC,kBAAL,GAA0B,GAA1B;IACA,KAAKC,kBAAL,GAA0B,GAA1B;IACA,KAAKC,gBAAL,GAAwBjB,SAAS,CAACkB,GAAlC;IACA,KAAKC,oBAAL,GAA4B,KAA5B;IACA,KAAKC,IAAL,GAAY,IAAIve,YAAJ,EAAZ;IACA,KAAKwe,IAAL,GAAY,IAAIxe,YAAJ,EAAZ;EACH;;;;SACD,eAAsB;MAClB,OAAO,KAAKoe,gBAAL,KAA0BjB,SAAS,CAACkB,GAApC,IAA2C,KAAKD,gBAAL,KAA0BjB,SAAS,CAACsB,KAAtF;IACH;;;SACD,eAAsB;MAClB,OAAO,KAAKL,gBAAL,KAA0BjB,SAAS,CAACkB,GAApC,IAA2C,KAAKD,gBAAL,KAA0BjB,SAAS,CAACuB,SAAtF;IACH;;;WACD,uBAAc;MACV,KAAKC,WAAL,CAAiB,IAAjB;IACH;;;WACD,mBAAU;MACN,IAAI,KAAKC,eAAT,EAA0B;QACtB,KAAKC,WAAL;MACH;IACJ;;;WACD,kBAAS;MACL,IAAI,KAAKD,eAAT,EAA0B;QACtB,KAAKD,WAAL,CAAiB,IAAjB;MACH;IACJ;;;WACD,wBAAe;MACX,IAAI,KAAKG,eAAT,EAA0B;QACtB,KAAKD,WAAL;MACH;IACJ;;;WACD,sBAAa1a,MAAb,EAAqB;MACjB,IAAI,KAAK2a,eAAL,IAAwB,KAAKb,wBAAjC,EAA2D;QACvDpa,YAAY,CAAC,KAAKT,OAAN,CAAZ;;QACA,IAAI,KAAKuG,SAAT,EAAoB;UAChB,IAAMoV,UAAU,GAAG,KAAKpV,SAAL,CAAeG,QAAf,CAAwB/C,OAAxB,CAAgCS,aAAnD;UACA,IAAMwX,QAAQ,GAAGD,UAAU,CAACC,QAAX,CAAoB7a,MAApB,CAAjB;UACA,IAAI6a,QAAJ,EACI;QACP;;QACD,KAAKL,WAAL,CAAiB,KAAKL,oBAAtB;MACH;IACJ;;;WACD,wBAAe;MACX,IAAI,KAAKQ,eAAT,EAA0B;QACtB,KAAKH,WAAL,CAAiB,IAAjB;MACH;IACJ;;;WACD,qBAAYM,SAAZ,EAAuB;MAAA;;MACnB,IAAI,KAAKtV,SAAL,IAAkB,KAAK+T,eAA3B,EACI;MACJ,IAAMwB,IAAI,GAAGD,SAAS,GAChB,CADgB,GAEhB,KAAKd,kBAAL,IAA2BgB,SAAS,CAACC,SAAV,CAAoBvQ,KAApB,CAA0B,+BAA1B,IAA6D,GAA7D,GAAmE,CAA9F,CAFN;MAGAhL,YAAY,CAAC,KAAKT,OAAN,CAAZ;MACA,KAAKA,OAAL,GAAeW,UAAU,CAAC,YAAM;QAC5B,OAAI,CAACsZ,cAAL,CAAoBgC,UAApB;;QACA,IAAMrc,OAAO,GAAG,OAAI,CAACsc,kBAAL,EAAhB;;QACA,OAAI,CAAC3V,SAAL,GAAiB,OAAI,CAAC0T,cAAL,CAAoBkC,MAApB,CAA2Bvc,OAA3B,CAAjB,CAH4B,CAI5B;;QACAe,UAAU,CAAC,YAAM;UACb,IAAI,OAAI,CAAC4F,SAAT,EAAoB;YAChB,OAAI,CAAC6V,gBAAL,CAAsB,OAAI,CAAC7V,SAAL,CAAeG,QAAf,CAAwB/C,OAAxB,CAAgCS,aAAtD;UACH;QACJ,CAJS,EAIP,EAJO,CAAV;;QAKA,OAAI,CAAC+W,IAAL,CAAUnP,IAAV,CAAe,IAAf;MACH,CAXwB,EAWtB8P,IAXsB,CAAzB;IAYH;;;WACD,0BAAiBO,OAAjB,EAA0B;MAAA;;MACtB;MACA,KAAKC,sBAAL,GAA8B,KAAK1Y,QAAL,CAAc2Y,MAAd,CAAqBF,OAArB,EAA8B,YAA9B,EAA4C,YAAM;QAC5E5b,YAAY,CAAC,OAAI,CAACT,OAAN,CAAZ;MACH,CAF6B,CAA9B,CAFsB,CAKtB;;MACA,IAAI,KAAK6a,wBAAT,EAAmC;QAC/B,KAAK2B,sBAAL,GAA8B,KAAK5Y,QAAL,CAAc2Y,MAAd,CAAqBF,OAArB,EAA8B,YAA9B,EAA4C,YAAM;UAC5E,OAAI,CAACd,WAAL,CAAiB,OAAI,CAACL,oBAAtB;QACH,CAF6B,CAA9B;MAGH,CAVqB,CAWtB;;;MACA,IAAI,KAAKN,0BAAT,EAAqC;QACjC,KAAK6B,kBAAL,GAA0B,KAAK7Y,QAAL,CAAc2Y,MAAd,CAAqB,QAArB,EAA+B,OAA/B,EAAwC,UAAAG,KAAK,EAAI;UACvE,IAAMd,QAAQ,GAAGS,OAAO,CAACT,QAAR,CAAiBc,KAAK,CAAC3b,MAAvB,CAAjB;UACA,IAAI,CAAC6a,QAAL,EACI,OAAI,CAACL,WAAL;QACP,CAJyB,CAA1B;MAKH;IACJ;;;WACD,uBAA+B;MAAA;;MAAA,IAAnBM,SAAmB,uEAAP,KAAO;MAC3B,IAAI,CAAC,KAAKtV,SAAV,EACI;;MACJ,IAAMoW,SAAS,GAAG,SAAZA,SAAY,GAAM;QACpB;QACA,IAAI,OAAI,CAACH,sBAAT,EACI,OAAI,CAACA,sBAAL;QACJ,IAAI,OAAI,CAACF,sBAAT,EACI,OAAI,CAACA,sBAAL;QACJ,IAAI,OAAI,CAACG,kBAAT,EACI,OAAI,CAACA,kBAAL,GAPgB,CAQpB;;QACA,OAAI,CAACrB,IAAL,CAAUpP,IAAV,CAAe,IAAf,EAToB,CAUpB;;;QACA,OAAI,CAACiO,cAAL,CAAoBjT,OAApB,CAA4B,OAAI,CAACT,SAAjC;;QACA,OAAI,CAACA,SAAL,GAAiBnE,SAAjB;MACH,CAbD;;MAcA3B,YAAY,CAAC,KAAKT,OAAN,CAAZ;;MACA,IAAI,CAAC6b,SAAL,EAAgB;QACZ,KAAK7b,OAAL,GAAeW,UAAU,CAACgc,SAAD,EAAY,KAAK7B,kBAAjB,CAAzB;MACH,CAFD,MAGK;QACD6B,SAAS;MACZ;IACJ;;;WACD,8BAAqB;MACjB,OAAO;QACH/W,KAAK,EAAE,KAAKgX,YADT;QAEHrX,QAAQ,EAAE,KAAKsX,eAFZ;QAGHxY,IAAI,EAAE,KAAK6V,gBAAL,CAAsBvW,OAHzB;QAIHX,SAAS,EAAE,KAAKwX,gBAJb;QAKH1Y,SAAS,EAAE,KAAK2Y,gBALb;QAMH1W,IAAI,EAAE,KAAK2W,WANR;QAOHjW,SAAS,EAAE,KAAK8V,gBAPb;QAQHvW,QAAQ,EAAE,KAAKmW,eARZ;QASHlX,OAAO,EAAE,KAAKoX,cATX;QAUHxa,OAAO,EAAE,KAAKid;MAVX,CAAP;IAYH;;;;;;AAEL9C,gBAAgB,CAACjV,IAAjB;EAAA,iBAA6GiV,gBAA7G,EA/jE0G/d,EA+jE1G,mBAA+I0N,cAA/I,GA/jE0G1N,EA+jE1G,mBAA0KA,EAAE,CAAC8gB,gBAA7K,GA/jE0G9gB,EA+jE1G,mBAA0MA,EAAE,CAACgJ,SAA7M;AAAA;;AACA+U,gBAAgB,CAACtK,IAAjB,kBAhkE0GzT,EAgkE1G;EAAA,MAAiG+d,gBAAjG;EAAA;EAAA;IAAA;MAhkE0G/d,EAgkE1G;QAAA,OAAiG,aAAjG;MAAA;QAAA,OAAiG,YAAjG;MAAA;QAAA,OAAiG,kBAAjG;MAAA;QAAA,OAAiG,+BAAjG;MAAA;QAAA,OAAiG,kBAAjG;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;AAAA;;AACA;EAAA,mDAjkE0GA,EAikE1G,mBAA2F+d,gBAA3F,EAAyH,CAAC;IAC9GjW,IAAI,EAAEjH,SADwG;IAE9GgD,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE;IAAZ,CAAD;EAFwG,CAAD,CAAzH,EAG4B,YAAY;IAAE,OAAO,CAAC;MAAEvB,IAAI,EAAE4F;IAAR,CAAD,EAA2B;MAAE5F,IAAI,EAAE9H,EAAE,CAAC8gB;IAAX,CAA3B,EAA0D;MAAEhZ,IAAI,EAAE9H,EAAE,CAACgJ;IAAX,CAA1D,CAAP;EAA2F,CAHrI,EAGuJ;IAAEkV,eAAe,EAAE,CAAC;MAC3JpW,IAAI,EAAEzH;IADqJ,CAAD,CAAnB;IAEvIsgB,YAAY,EAAE,CAAC;MACf7Y,IAAI,EAAEzH;IADS,CAAD,CAFyH;IAIvI8d,mBAAmB,EAAE,CAAC;MACtBrW,IAAI,EAAEzH;IADgB,CAAD,CAJkH;IAMvI+d,cAAc,EAAE,CAAC;MACjBtW,IAAI,EAAEzH;IADW,CAAD,CANuH;IAQvIge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CARsH;IAUvIie,gBAAgB,EAAE,CAAC;MACnBxW,IAAI,EAAEzH;IADa,CAAD,CAVqH;IAYvIke,gBAAgB,EAAE,CAAC;MACnBzW,IAAI,EAAEzH;IADa,CAAD,CAZqH;IAcvIme,gBAAgB,EAAE,CAAC;MACnB1W,IAAI,EAAEzH;IADa,CAAD,CAdqH;IAgBvIoe,WAAW,EAAE,CAAC;MACd3W,IAAI,EAAEzH;IADQ,CAAD,CAhB0H;IAkBvIse,0BAA0B,EAAE,CAAC;MAC7B7W,IAAI,EAAEzH;IADuB,CAAD,CAlB2G;IAoBvIue,wBAAwB,EAAE,CAAC;MAC3B9W,IAAI,EAAEzH;IADqB,CAAD,CApB6G;IAsBvIwe,kBAAkB,EAAE,CAAC;MACrB/W,IAAI,EAAEzH;IADe,CAAD,CAtBmH;IAwBvIye,kBAAkB,EAAE,CAAC;MACrBhX,IAAI,EAAEzH;IADe,CAAD,CAxBmH;IA0BvIugB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAEzH;IADY,CAAD,CA1BsH;IA4BvI0e,gBAAgB,EAAE,CAAC;MACnBjX,IAAI,EAAEzH;IADa,CAAD,CA5BqH;IA8BvIwgB,cAAc,EAAE,CAAC;MACjB/Y,IAAI,EAAEzH;IADW,CAAD,CA9BuH;IAgCvI4e,oBAAoB,EAAE,CAAC;MACvBnX,IAAI,EAAEzH;IADiB,CAAD,CAhCiH;IAkCvI6e,IAAI,EAAE,CAAC;MACPpX,IAAI,EAAElH;IADC,CAAD,CAlCiI;IAoCvIue,IAAI,EAAE,CAAC;MACPrX,IAAI,EAAElH;IADC,CAAD,CApCiI;IAsCvImgB,OAAO,EAAE,CAAC;MACVjZ,IAAI,EAAEtH,YADI;MAEVqD,IAAI,EAAE,CAAC,SAAD;IAFI,CAAD,CAtC8H;IAyCvImd,MAAM,EAAE,CAAC;MACTlZ,IAAI,EAAEtH,YADG;MAETqD,IAAI,EAAE,CAAC,MAAD;IAFG,CAAD,CAzC+H;IA4CvIqM,YAAY,EAAE,CAAC;MACfpI,IAAI,EAAEtH,YADS;MAEfqD,IAAI,EAAE,CAAC,YAAD;IAFS,CAAD,CA5CyH;IA+CvIsM,YAAY,EAAE,CAAC;MACfrI,IAAI,EAAEtH,YADS;MAEfqD,IAAI,EAAE,CAAC,YAAD,EAAe,CAAC,eAAD,CAAf;IAFS,CAAD,CA/CyH;IAkDvIod,YAAY,EAAE,CAAC;MACfnZ,IAAI,EAAEtH,YADS;MAEfqD,IAAI,EAAE,CAAC,OAAD;IAFS,CAAD;EAlDyH,CAHvJ;AAAA;;IA0DMqd,a;;;;AAENA,aAAa,CAACpY,IAAd;EAAA,iBAA0GoY,aAA1G;AAAA;;AACAA,aAAa,CAAC1D,IAAd,kBA9nE0Gxd,EA8nE1G;EAAA,MAA2GkhB;AAA3G;AACAA,aAAa,CAACzD,IAAd,kBA/nE0Gzd,EA+nE1G;EAAA,WAAqI,CAAC6L,gBAAD,EAAmB6B,cAAnB,CAArI;EAAA,UAAmL,CAACvM,YAAD,CAAnL;AAAA;;AACA;EAAA,mDAhoE0GnB,EAgoE1G,mBAA2FkhB,aAA3F,EAAsH,CAAC;IAC3GpZ,IAAI,EAAEhH,QADqG;IAE3G+C,IAAI,EAAE,CAAC;MACC8Z,YAAY,EAAE,CAAClW,uBAAD,EAA0BsW,gBAA1B,CADf;MAECnL,SAAS,EAAE,CAAC/G,gBAAD,EAAmB6B,cAAnB,CAFZ;MAGCkQ,OAAO,EAAE,CAACnW,uBAAD,EAA0BsW,gBAA1B,CAHV;MAICL,OAAO,EAAE,CAACvc,YAAD,CAJV;MAKCggB,eAAe,EAAE,CAAC1Z,uBAAD;IALlB,CAAD;EAFqG,CAAD,CAAtH;AAAA;;AAWA,IAAM2Z,KAAK,GAAG,EAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,EAAT,GAAc;EACV,IAAIC,KAAK,GAAG,CAAC,SAAS,CAAE1S,IAAI,CAAC2S,MAAL,KAAgB3S,IAAI,CAAC4S,GAAL,CAAS,EAAT,EAAa,CAAb,CAAjB,IAAqC,CAAtC,EAAyC7N,QAAzC,CAAkD,EAAlD,CAAV,EAAiEgD,KAAjE,CAAuE,CAAC,CAAxE,CAAZ,CADU,CAEV;;EACA2K,KAAK,cAAOA,KAAP,CAAL,CAHU,CAIV;;EACA,IAAI,CAACF,KAAK,CAACE,KAAD,CAAV,EAAmB;IACfF,KAAK,CAACE,KAAD,CAAL,GAAe,IAAf;IACA,OAAOA,KAAP;EACH;;EACD,OAAOD,EAAE,EAAT;AACH;;AAED,IAAII,cAAJ;;AACA,CAAC,UAAUA,cAAV,EAA0B;EACvBA,cAAc,CAAC,UAAD,CAAd,GAA6B,UAA7B;EACAA,cAAc,CAAC,YAAD,CAAd,GAA+B,YAA/B;AACH,CAHD,EAGGA,cAAc,KAAKA,cAAc,GAAG,EAAtB,CAHjB;;IAKMC,0B;EACF,sCAAc;IAAA;;IACV,KAAKhH,WAAL,GAAmB+G,cAAc,CAACE,QAAlC;EACH;;;;WACD,qBAAY3T,OAAZ,EAAqB;MACjB,KAAKuO,EAAL,GAAU,IAAV;MACA,KAAKD,EAAL,GAAU,IAAV;MACA,KAAKF,EAAL,GAAU,IAAV;MACA,KAAKD,EAAL,GAAU,IAAV;;MACA,IAAI,KAAKzB,WAAL,KAAqB+G,cAAc,CAACG,UAAxC,EAAoD;QAChD,KAAKtF,EAAL,GAAU,MAAV;MACH,CAFD,MAGK,IAAI,KAAK5B,WAAL,KAAqB+G,cAAc,CAACE,QAAxC,EAAkD;QACnD,KAAKvF,EAAL,GAAU,MAAV;MACH;IACJ;;;;;;AAELsF,0BAA0B,CAAC5Y,IAA3B;EAAA,iBAAuH4Y,0BAAvH;AAAA;;AACAA,0BAA0B,CAACzY,IAA3B,kBA1rE0GjJ,EA0rE1G;EAAA,MAA2G0hB,0BAA3G;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WA1rE0G1hB,EA0rE1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA1rE0GA,EA2rEtG,iBADJ;MA1rE0GA,EA2rEtG,uCADJ;MA1rE0GA,EA4rEpG,gFAFN;MA1rE0GA,EAksEtG,eARJ;IAAA;;IAAA;MA1rE0GA,EA2rElF,2BADxB;MA1rE0GA,EA2rEtE,oEADpC;MA1rE0GA,EA6rEjF,aAHzB;MA1rE0GA,EA6rEjF,iCAHzB;IAAA;EAAA;EAAA,eAS0CgB,EAAE,CAACwQ,OAT7C;EAAA;EAAA;AAAA;;AAUA;EAAA,mDApsE0GxR,EAosE1G,mBAA2F0hB,0BAA3F,EAAmI,CAAC;IACxH5Z,IAAI,EAAE5H,SADkH;IAExH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,mCADX;MAECC,QAAQ,uVAFT;MAYCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAZ1C,CAAD;EAFkH,CAAD,CAAnI,QAgB4B;IAAE0L,WAAW,EAAE,CAAC;MAC5B5S,IAAI,EAAEzH;IADsB,CAAD,CAAf;IAEZ2P,IAAI,EAAE,CAAC;MACPlI,IAAI,EAAEzH;IADC,CAAD,CAFM;IAIZwhB,KAAK,EAAE,CAAC;MACR/Z,IAAI,EAAEzH;IADE,CAAD;EAJK,CAhB5B;AAAA;;IAwBMyhB,e;EACF,2BAAc;IAAA;;IACV,KAAKjgB,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;EACH;;;;WACD,mBAAU;MACN,KAAKkB,MAAL,CAAYkO,IAAZ,CAAiB,KAAKe,IAAtB;IACH;;;WACD,wBAAe;MACX,KAAKnB,QAAL,CAAcI,IAAd,CAAmB,KAAKe,IAAxB;IACH;;;WACD,wBAAe;MACX,KAAKlB,UAAL,CAAgBG,IAAhB,CAAqB,KAAKe,IAA1B;IACH;;;WACD,qBAAY9C,OAAZ,EAAqB;MACjB,KAAK+T,UAAL,GAAkBC,KAAK,CAACC,OAAN,CAAc,KAAKF,UAAnB,IAAiC,KAAKA,UAAL,CAAgBjT,IAAhB,CAAqB,GAArB,CAAjC,GAA6D,EAA/E;MACA,KAAKiT,UAAL,IAAmB,QAAnB;IACH;;;;;;AAELD,eAAe,CAAChZ,IAAhB;EAAA,iBAA4GgZ,eAA5G;AAAA;;AACAA,eAAe,CAAC7Y,IAAhB,kBAjvE0GjJ,EAivE1G;EAAA,MAAgG8hB,eAAhG;EAAA;EAAA;IAAA;MAjvE0G9hB,EAivE1G;QAAA,OAAgG,aAAhG;MAAA;QAAA,OAAgG,kBAAhG;MAAA;QAAA,OAAgG,kBAAhG;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAjvE0GA,EAivE1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAjvE0GA,EAkvEtG,iBADJ;MAjvE0GA,EAkvEtG,uBADJ;IAAA;;IAAA;MAjvE0GA,EAmvEpG,wLAFN;IAAA;EAAA;EAAA;EAAA;AAAA;;AAYA;EAAA,mDA7vE0GA,EA6vE1G,mBAA2F8hB,eAA3F,EAAwH,CAAC;IAC7Gha,IAAI,EAAE5H,SADuG;IAE7G2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,sBADX;MAECC,QAAQ,6RAFT;MAcCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAd1C,CAAD;EAFuG,CAAD,CAAxH,QAkB4B;IAAEkT,EAAE,EAAE,CAAC;MACnBpa,IAAI,EAAEzH;IADa,CAAD,CAAN;IAEZ8hB,EAAE,EAAE,CAAC;MACLra,IAAI,EAAEzH;IADD,CAAD,CAFQ;IAIZ+a,CAAC,EAAE,CAAC;MACJtT,IAAI,EAAEzH;IADF,CAAD,CAJS;IAMZka,IAAI,EAAE,CAAC;MACPzS,IAAI,EAAEzH;IADC,CAAD,CANM;IAQZma,MAAM,EAAE,CAAC;MACT1S,IAAI,EAAEzH;IADG,CAAD,CARI;IAUZyQ,IAAI,EAAE,CAAC;MACPhJ,IAAI,EAAEzH;IADC,CAAD,CAVM;IAYZ0hB,UAAU,EAAE,CAAC;MACbja,IAAI,EAAEzH;IADO,CAAD,CAZA;IAcZ+hB,aAAa,EAAE,CAAC;MAChBta,IAAI,EAAEzH;IADU,CAAD,CAdH;IAgBZgiB,aAAa,EAAE,CAAC;MAChBva,IAAI,EAAEzH;IADU,CAAD,CAhBH;IAkBZwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CAlBI;IAoBZ+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CApBE;IAsBZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAtBA;IAwBZ0hB,OAAO,EAAE,CAAC;MACVxa,IAAI,EAAEtH,YADI;MAEVqD,IAAI,EAAE,CAAC,OAAD;IAFI,CAAD,CAxBG;IA2BZqM,YAAY,EAAE,CAAC;MACfpI,IAAI,EAAEtH,YADS;MAEfqD,IAAI,EAAE,CAAC,YAAD;IAFS,CAAD,CA3BF;IA8BZsM,YAAY,EAAE,CAAC;MACfrI,IAAI,EAAEtH,YADS;MAEfqD,IAAI,EAAE,CAAC,YAAD;IAFS,CAAD;EA9BF,CAlB5B;AAAA;;AAqDA,IAAI0e,UAAJ;;AACA,CAAC,UAAUA,UAAV,EAAsB;EACnBA,UAAU,CAAC,UAAD,CAAV,GAAyB,UAAzB;EACAA,UAAU,CAAC,SAAD,CAAV,GAAwB,SAAxB;AACH,CAHD,EAGGA,UAAU,KAAKA,UAAU,GAAG,EAAlB,CAHb;;IAIMC,qB;EACF,+BAAY5a,UAAZ,EAAwB;IAAA;;IACpB,KAAKA,UAAL,GAAkBA,UAAlB;IACA,KAAKE,IAAL,GAAYya,UAAU,CAACE,QAAvB;IACA,KAAKpE,eAAL,GAAuB,KAAvB;IACA,KAAKxc,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,KAAK+hB,UAAL,GAAkB,KAAlB;IACA,KAAKC,cAAL,GAAsBlB,cAAtB;IACA,KAAKmB,cAAL,GAAsBpd,cAAtB;IACA,KAAKqd,UAAL,GAAkBhF,UAAlB;IACA,KAAKiF,KAAL,GAAa,KAAb;EACH;;;;WACD,oBAAW;MACP,KAAKC,UAAL,GAAkB,SAAS1B,EAAE,GAAG1N,QAAL,EAA3B;MACA,KAAKqP,YAAL,kBAA4B,KAAKD,UAAjC;;MACA,IAAI7hB,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKkb,KAAL,GAAa,IAAb;MACH;IACJ;;;WACD,uBAAc;MACV,KAAKpS,MAAL;IACH;;;WACD,kBAAS;MACL,KAAKuS,MAAL,GAAc,KAAKC,eAAL,EAAd;IACH;;;WACD,2BAAkB;MAAA;;MACd,IAAMC,oBAAoB,GAAG,KAAKrS,IAAL,CAAUiE,MAAV,CAAiBhE,SAAjB,CAA2B,UAAAM,CAAC,EAAI;QACzD,IAAMlC,KAAK,GAAGkC,CAAC,CAACrB,IAAhB;QACA,OAAOb,KAAK,IAAI,OAAI,CAACiU,YAAd,IAA8BjU,KAAK,CAACwE,QAAN,OAAqB,OAAI,CAACyP,YAAL,CAAkBzP,QAAlB,EAAnD,IAAmFtC,CAAC,CAAC9L,KAAF,KAAYY,SAAtG;MACH,CAH4B,CAA7B;;MAIA,IAAIgd,oBAAoB,KAAK,CAAC,CAA9B,EAAiC;QAC7B;QACA,OAAOhd,SAAP;MACH;;MACD,OAAO,KAAKkd,oBAAL,CAA0B,KAAKvS,IAAL,CAAUiE,MAAV,CAAiBoO,oBAAjB,CAA1B,EAAkEA,oBAAlE,CAAP;IACH;;;WACD,8BAAqB9R,CAArB,EAAwBlG,CAAxB,EAA2B;MACvB,IAAMmY,UAAU,GAAG,KAAKxS,IAAL,CAAUd,IAA7B;MACA,IAAMzK,KAAK,GAAG8L,CAAC,CAAC9L,KAAhB;MACA,IAAM4J,KAAK,GAAGkC,CAAC,CAACrB,IAAhB;MACA,IAAMuT,YAAY,GAAGrU,WAAW,CAACC,KAAD,CAAhC;MACA,IAAI+S,EAAJ;;MACA,IAAI,KAAKzP,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACnCtB,EAAE,GAAG,KAAKrH,MAAL,CAAY1L,KAAZ,CAAL;MACH,CAFD,MAGK,IAAI,KAAKsD,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QAC1CwP,EAAE,GAAG,KAAKrH,MAAL,CAAY4I,MAAM,CAACtU,KAAD,CAAlB,CAAL;MACH,CAFI,MAGA;QACD+S,EAAE,GAAG,KAAKrH,MAAL,CAAY1L,KAAZ,CAAL;MACH;;MACD,IAAMgT,EAAE,GAAG,KAAK7E,MAAL,CAAY,KAAKxV,IAAL,KAAcya,UAAU,CAACE,QAAzB,GAAoCld,KAApC,GAA4C8L,CAAC,CAACqS,EAA1D,CAAX;MACA,IAAMC,MAAM,GAAG,CAAf;MACA,IAAM1d,MAAM,GAAG,KAAKqX,MAAL,CAAY1a,KAAZ,GAAoB,CAApB,IAAyBuf,EAAxC;MACA,IAAMyB,OAAO,GAAG,CAAhB;MACA,IAAI3T,KAAJ;;MACA,IAAI,KAAK9B,MAAL,CAAYsE,SAAZ,KAA0B5E,SAAS,CAAC6E,MAAxC,EAAgD;QAC5C,IAAI,KAAK5K,IAAL,KAAcya,UAAU,CAACE,QAA7B,EAAuC;UACnCxS,KAAK,GAAG,KAAK9B,MAAL,CAAY6C,QAAZ,CAAqBzL,KAArB,CAAR;QACH,CAFD,MAGK;UACD0K,KAAK,GAAG,KAAK9B,MAAL,CAAY6C,QAAZ,CAAqBK,CAAC,CAACqS,EAAvB,CAAR;QACH;MACJ,CAPD,MAQK;QACDzT,KAAK,GAAG,KAAK9B,MAAL,CAAY6C,QAAZ,CAAqBsS,UAArB,CAAR;MACH;;MACD,IAAMxS,IAAI,GAAGzL,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBpE,CAAlB,EAAqB;QAC9B0D,MAAM,EAAEuO,UADsB;QAE9B/d,KAAK,EAALA,KAF8B;QAG9ByK,IAAI,EAAEb;MAHwB,CAArB,CAAb;MAKA,OAAO;QACH4S,UAAU,EAAE,uBAAgB5W,CAAhB,EADT;QAEH5F,KAAK,EAALA,KAFG;QAGH4J,KAAK,EAALA,KAHG;QAIH2B,IAAI,EAAJA,IAJG;QAKHoR,EAAE,EAAFA,EALG;QAMHC,EAAE,EAAFA,EANG;QAOHwB,MAAM,EAANA,MAPG;QAQH1d,MAAM,EAANA,MARG;QASHsd,YAAY,EAAZA,YATG;QAUHtT,KAAK,EAALA,KAVG;QAWH2T,OAAO,EAAPA,OAXG;QAYHN,UAAU,EAAVA,UAZG;QAaHO,aAAa,EAAE,KAAKC,gBAAL,CAAsB7T,KAAtB,CAbZ;QAcHpN,GAAG,EAAEwO,CAAC,CAACxO,GAdJ;QAeHC,GAAG,EAAEuO,CAAC,CAACvO;MAfJ,CAAP;IAiBH;;;WACD,+BAA8D;MAAA,IAA7CygB,YAA6C,SAA7CA,YAA6C;MAAA,IAA/Bhe,KAA+B,SAA/BA,KAA+B;MAAA,IAAxB+d,UAAwB,SAAxBA,UAAwB;MAAA,IAAZzgB,GAAY,SAAZA,GAAY;MAAA,IAAPC,GAAO,SAAPA,GAAO;MAC1D,uDAC4BwM,WAAW,CAACgU,UAAD,CADvC,qBACyDhU,WAAW,CAACiU,YAAD,CADpE,wDAE0Bhe,KAAK,CAAC8J,cAAN,EAF1B,SAEmD,KAAK0U,oBAAL,CAA0BlhB,GAA1B,EAA+BC,GAA/B,CAFnD;IAIH;;;WACD,8BAAqBD,GAArB,EAA0BC,GAA1B,EAA+B;MAC3B,IAAID,GAAG,KAAKsD,SAAR,IAAqBrD,GAAG,KAAKqD,SAAjC,EAA4C;QACxC,IAAIrC,MAAM,GAAG,IAAb;;QACA,IAAIjB,GAAG,KAAKsD,SAAZ,EAAuB;UACnB,IAAIrD,GAAG,KAAKqD,SAAZ,EAAuB;YACnBrC,MAAM,IAAI,GAAV;UACH;;UACDA,MAAM,IAAIjB,GAAG,CAACwM,cAAJ,EAAV;;UACA,IAAIvM,GAAG,KAAKqD,SAAZ,EAAuB;YACnBrC,MAAM,IAAI,KAAV;UACH;QACJ,CARD,MASK,IAAIhB,GAAG,KAAKqD,SAAZ,EAAuB;UACxBrC,MAAM,IAAI,GAAV;QACH;;QACD,IAAIhB,GAAG,KAAKqD,SAAZ,EAAuB;UACnBrC,MAAM,IAAIhB,GAAG,CAACuM,cAAJ,EAAV;QACH;;QACDvL,MAAM,IAAI,GAAV;QACA,OAAOA,MAAP;MACH,CAnBD,MAoBK;QACD,OAAO,EAAP;MACH;IACJ;;;WACD,0BAAiBmM,KAAjB,EAAwB;MACpB,OAAO,CACH;QACIsG,MAAM,EAAE,CADZ;QAEItG,KAAK,EAALA,KAFJ;QAGI2T,OAAO,EAAE;MAHb,CADG,EAMH;QACIrN,MAAM,EAAE,GADZ;QAEItG,KAAK,EAALA,KAFJ;QAGI2T,OAAO,EAAE;MAHb,CANG,CAAP;IAYH;;;WACD,iBAAQ9S,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,kBAASG,KAAT,EAAgB;MACZ,IAAI,CAAC,KAAKC,aAAV,EACI,OAAO,KAAP;MACJ,IAAMC,IAAI,GAAG,KAAKD,aAAL,CAAmBE,IAAnB,CAAwB,UAAAC,CAAC,EAAI;QACtC,OAAOJ,KAAK,CAACjB,IAAN,KAAeqB,CAAC,CAACrB,IAAxB;MACH,CAFY,CAAb;MAGA,OAAOmB,IAAI,KAAKhL,SAAhB;IACH;;;WACD,0BAAiB;MACb,KAAKuc,UAAL,GAAkB,IAAlB;MACA,KAAK/S,QAAL,CAAcI,IAAd,CAAmB;QAAEC,IAAI,EAAE,KAAKc,IAAL,CAAUd;MAAlB,CAAnB;IACH;;;WACD,4BAAmB;MACf,KAAK0S,UAAL,GAAkB,KAAlB;MACA,KAAKO,MAAL,CAAYW,OAAZ,GAAsB,CAAtB;MACA,KAAKhU,UAAL,CAAgBG,IAAhB,CAAqB;QAAEC,IAAI,EAAE,KAAKc,IAAL,CAAUd;MAAlB,CAArB;IACH;;;;;;AAELwS,qBAAqB,CAAC1Z,IAAtB;EAAA,iBAAkH0Z,qBAAlH,EAr9E0GxiB,EAq9E1G,mBAAyJC,WAAzJ;AAAA;;AACAuiB,qBAAqB,CAACvZ,IAAtB,kBAt9E0GjJ,EAs9E1G;EAAA,MAAsGwiB,qBAAtG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAt9E0GxiB,EAs9E1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAt9E0GA,EAu9EtG,sEADJ;IAAA;;IAAA;MAt9E0GA,EAu9E9F,+BADZ;IAAA;EAAA;EAAA,eAoD0C0hB,0BApD1C,EAoDyKI,eApDzK,EAoDwY9gB,EAAE,CAACkI,IApD3Y,EAoDyd6U,gBApDzd;EAAA;EAAA;IAAA,WAoD25B,CACn5Btc,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACFiiB,OAAO,EAAE;IADP,CAAD,CADY,EAIjBhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MAAEiiB,OAAO,EAAE;IAAX,CAAD,CAAX,CAJU,CAAX,CADY,CAAnB,CAD44B;EApD35B;EAAA;AAAA;;AA8DA;EAAA,mDAphF0G5jB,EAohF1G,mBAA2FwiB,qBAA3F,EAA8H,CAAC;IACnH1a,IAAI,EAAE5H,SAD6G;IAEnH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,6BADX;MAECC,QAAQ,6yDAFT;MAuDCyF,eAAe,EAAErO,uBAAuB,CAACsO,MAvD1C;MAwDC2C,UAAU,EAAE,CACRlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;QACFiiB,OAAO,EAAE;MADP,CAAD,CADY,EAIjBhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QAAEiiB,OAAO,EAAE;MAAX,CAAD,CAAX,CAJU,CAAX,CADY,CAAnB,CADC;IAxDb,CAAD;EAF6G,CAAD,CAA9H,EAqE4B,YAAY;IAAE,OAAO,CAAC;MAAE9b,IAAI,EAAE3B,SAAR;MAAmBuD,UAAU,EAAE,CAAC;QAC9D5B,IAAI,EAAE1H,MADwD;QAE9DyD,IAAI,EAAE,CAAC5D,WAAD;MAFwD,CAAD;IAA/B,CAAD,CAAP;EAGlB,CAxExB,EAwE0C;IAAE6Q,IAAI,EAAE,CAAC;MACnChJ,IAAI,EAAEzH;IAD6B,CAAD,CAAR;IAE1ByH,IAAI,EAAE,CAAC;MACPA,IAAI,EAAEzH;IADC,CAAD,CAFoB;IAI1Bwa,MAAM,EAAE,CAAC;MACT/S,IAAI,EAAEzH;IADG,CAAD,CAJkB;IAM1Bid,MAAM,EAAE,CAAC;MACTxV,IAAI,EAAEzH;IADG,CAAD,CANkB;IAQ1B8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CARkB;IAU1BoS,SAAS,EAAE,CAAC;MACZ3K,IAAI,EAAEzH;IADM,CAAD,CAVe;IAY1B+iB,YAAY,EAAE,CAAC;MACftb,IAAI,EAAEzH;IADS,CAAD,CAZY;IAc1B6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAdW;IAgB1Bge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAhBS;IAkB1BugB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAEzH;IADY,CAAD,CAlBS;IAoB1BwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CApBkB;IAsB1B+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAtBgB;IAwB1BgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD;EAxBc,CAxE1C;AAAA;;IAoGMojB,kB;;;;AAENA,kBAAkB,CAAClb,IAAnB;EAAA,iBAA+Gkb,kBAA/G;AAAA;;AACAA,kBAAkB,CAAC/a,IAAnB,kBA3nF0GjJ,EA2nF1G;EAAA,MAAmGgkB,kBAAnG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA3nF0GhkB,EA4nFtG,iBADJ;MA3nF0GA,EA4nFtG,wBADJ;IAAA;;IAAA;MA3nF0GA,EA4nF5F,8EADd;IAAA;EAAA;EAAA;EAAA;AAAA;;AAGA;EAAA,mDA9nF0GA,EA8nF1G,mBAA2FgkB,kBAA3F,EAA2H,CAAC;IAChHlc,IAAI,EAAE5H,SAD0G;IAEhH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,0BADX;MAECC,QAAQ,4IAFT;MAKCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAL1C,CAAD;EAF0G,CAAD,CAA3H,QAS4B;IAAExI,KAAK,EAAE,CAAC;MACtBsB,IAAI,EAAEzH;IADgB,CAAD,CAAT;IAEZ4F,MAAM,EAAE,CAAC;MACT6B,IAAI,EAAEzH;IADG,CAAD,CAFI;IAIZuL,CAAC,EAAE,CAAC;MACJ9D,IAAI,EAAEzH;IADF,CAAD,CAJS;IAMZiW,CAAC,EAAE,CAAC;MACJxO,IAAI,EAAEzH;IADF,CAAD;EANS,CAT5B;AAAA;;AAmBA,IAAI4jB,SAAJ;;AACA,CAAC,UAAUA,SAAV,EAAqB;EAClBA,SAAS,CAAC,KAAD,CAAT,GAAmB,KAAnB;EACAA,SAAS,CAAC,MAAD,CAAT,GAAoB,MAApB;AACH,CAHD,EAGGA,SAAS,KAAKA,SAAS,GAAG,EAAjB,CAHZ;;IAIMC,wB;;;;;;;WACF,qBAAYlW,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MACL,KAAKyT,UAAL,GAAkB,KAAKC,aAAL,EAAlB;IACH;;;WACD,yBAAgB;MAAA;;MACZ,OAAO,KAAKtT,IAAL,CAAU4L,GAAV,CAAc,UAAArL,CAAC,EAAI;QACtB,IAAIkF,MAAJ;QACA,IAAI/P,KAAJ;QACA,IAAIP,MAAJ;QACA,IAAI2F,CAAJ;QACA,IAAI0K,CAAJ;QACA,IAAI+N,SAAS,GAAGJ,SAAS,CAACK,GAA1B;;QACA,IAAI,OAAI,CAACjO,MAAL,KAAgBoL,cAAc,CAACE,QAAnC,EAA6C;UACzC,IAAM3Z,QAAQ,GAAG,OAAI,CAAC6S,MAAL,CAAYxJ,CAAC,CAACrB,IAAd,CAAjB;;UACA,IAAMuU,aAAa,GAAGd,MAAM,CAACrL,QAAP,CAAgB,CAACpQ,QAAQ,GAAG,OAAI,CAAC6S,MAAL,CAAY2J,IAAZ,EAAZ,EAAgC7Q,QAAhC,EAAhB,EAA4D,EAA5D,CAAtB;;UACA,IAAI4Q,aAAa,GAAG,CAAhB,KAAsB,CAA1B,EAA6B;YACzBF,SAAS,GAAGJ,SAAS,CAACQ,IAAtB;UACH;;UACDlO,MAAM,GAAG,OAAI,CAACsE,MAAL,CAAY/B,SAAZ,KAA0B,OAAI,CAAC+B,MAAL,CAAY6J,YAAZ,EAAnC;UACAle,KAAK,GAAG,OAAI,CAACqU,MAAL,CAAY/B,SAAZ,KAA0BvC,MAAlC;UACAtQ,MAAM,GAAG,OAAI,CAACyO,IAAL,CAAUzO,MAAnB;UACA2F,CAAC,GAAG,OAAI,CAACiP,MAAL,CAAYxJ,CAAC,CAACrB,IAAd,IAAsBuG,MAAM,GAAG,CAAnC;UACAD,CAAC,GAAG,CAAJ;QACH,CAXD,MAYK,IAAI,OAAI,CAACD,MAAL,KAAgBoL,cAAc,CAACG,UAAnC,EAA+C;UAChD,IAAM5Z,SAAQ,GAAG,OAAI,CAACsV,MAAL,CAAYjM,CAAC,CAACrB,IAAd,CAAjB;;UACA,IAAMuU,cAAa,GAAGd,MAAM,CAACrL,QAAP,CAAgB,CAACpQ,SAAQ,GAAG,OAAI,CAACsV,MAAL,CAAYkH,IAAZ,EAAZ,EAAgC7Q,QAAhC,EAAhB,EAA4D,EAA5D,CAAtB;;UACA,IAAI4Q,cAAa,GAAG,CAAhB,KAAsB,CAA1B,EAA6B;YACzBF,SAAS,GAAGJ,SAAS,CAACQ,IAAtB;UACH;;UACDlO,MAAM,GAAG,OAAI,CAAC+G,MAAL,CAAYxE,SAAZ,KAA0B,OAAI,CAACwE,MAAL,CAAYoH,YAAZ,EAAnC;UACAle,KAAK,GAAG,OAAI,CAACkO,IAAL,CAAUlO,KAAlB;UACAP,MAAM,GAAG,OAAI,CAACqX,MAAL,CAAYxE,SAAZ,KAA0BvC,MAAnC;UACA3K,CAAC,GAAG,CAAJ;UACA0K,CAAC,GAAG,OAAI,CAACgH,MAAL,CAAYjM,CAAC,CAACrB,IAAd,IAAsBuG,MAAM,GAAG,CAAnC;QACH;;QACD,OAAO;UACHvG,IAAI,EAAEqB,CAAC,CAACrB,IADL;UAEH2U,KAAK,EAAEN,SAFJ;UAGHpe,MAAM,EAANA,MAHG;UAIHO,KAAK,EAALA,KAJG;UAKHoF,CAAC,EAADA,CALG;UAMH0K,CAAC,EAADA;QANG,CAAP;MAQH,CAvCM,CAAP;IAwCH;;;;;;AAEL4N,wBAAwB,CAACpb,IAAzB;EAAA,iBAAqHob,wBAArH;AAAA;;AACAA,wBAAwB,CAACjb,IAAzB,kBAzsF0GjJ,EAysF1G;EAAA,MAAyGkkB,wBAAzG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAzsF0GlkB,EAysF1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAzsF0GA,EA0sFtG,yEADJ;IAAA;;IAAA;MAzsF0GA,EA4sF9E,sCAH5B;IAAA;EAAA;EAAA,eAY0CgkB,kBAZ1C,EAYmKhjB,EAAE,CAACwQ,OAZtK;EAAA;EAAA;AAAA;;AAaA;EAAA,mDAttF0GxR,EAstF1G,mBAA2FkkB,wBAA3F,EAAiI,CAAC;IACtHpc,IAAI,EAAE5H,SADgH;IAEtH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,iCADX;MAECC,QAAQ,mXAFT;MAeCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAf1C,CAAD;EAFgH,CAAD,CAAjI,QAmB4B;IAAE8B,IAAI,EAAE,CAAC;MACrBhJ,IAAI,EAAEzH;IADe,CAAD,CAAR;IAEZqU,IAAI,EAAE,CAAC;MACP5M,IAAI,EAAEzH;IADC,CAAD,CAFM;IAIZwa,MAAM,EAAE,CAAC;MACT/S,IAAI,EAAEzH;IADG,CAAD,CAJI;IAMZid,MAAM,EAAE,CAAC;MACTxV,IAAI,EAAEzH;IADG,CAAD,CANI;IAQZgW,MAAM,EAAE,CAAC;MACTvO,IAAI,EAAEzH;IADG,CAAD;EARI,CAnB5B;AAAA;;IA+BMukB,0B;EACF,sCAAc;IAAA;;IACV,KAAKC,UAAL,GAAkB,CAAlB;IACA,KAAK3C,EAAL,GAAU,CAAV;IACA,KAAKC,EAAL,GAAU,CAAV;EACH;;;;SACD,eAAY;MACR,OAAO,KAAK2C,UAAL,IAAmB,KAAKC,YAA/B;IACH,C;SACD,aAAUxf,KAAV,EAAiB;MACb,KAAKuf,UAAL,GAAkBvf,KAAlB;IACH;;;WACD,qBAAYyI,OAAZ,EAAqB;MACjB,KAAKoN,CAAL,GAAS,KAAT;;MACA,IAAI,WAAWpN,OAAX,IAAsB,kBAAkBA,OAAxC,IAAmD,gBAAgBA,OAAvE,EAAgF;QAC5E,KAAK+W,YAAL,GAAoB,CAChB;UACIxO,MAAM,EAAE,CADZ;UAEItG,KAAK,EAAE,KAAKA,KAFhB;UAGI2T,OAAO,EAAE,KAAKoB;QAHlB,CADgB,EAMhB;UACIzO,MAAM,EAAE,GADZ;UAEItG,KAAK,EAAE,KAAKA,KAFhB;UAGI2T,OAAO,EAAE,KAAKiB;QAHlB,CANgB,CAApB;MAYH;IACJ;;;;;;AAELD,0BAA0B,CAAC9b,IAA3B;EAAA,iBAAuH8b,0BAAvH;AAAA;;AACAA,0BAA0B,CAAC3b,IAA3B,kBApxF0GjJ,EAoxF1G;EAAA,MAA2G4kB,0BAA3G;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WApxF0G5kB,EAoxF1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MApxF0GA,EAqxFtG,iBADJ;MApxF0GA,EAqxFtG,uCADJ;MApxF0GA,EAsxFpG,gFAFN;MApxF0GA,EA4xFtG,eARJ;IAAA;;IAAA;MApxF0GA,EAqxFlF,2BADxB;MApxF0GA,EAqxFtE,oDADpC;MApxF0GA,EAuxFjF,aAHzB;MApxF0GA,EAuxFjF,iCAHzB;IAAA;EAAA;EAAA,eAS0CgB,EAAE,CAACwQ,OAT7C;EAAA;EAAA;AAAA;;AAUA;EAAA,mDA9xF0GxR,EA8xF1G,mBAA2F4kB,0BAA3F,EAAmI,CAAC;IACxH9c,IAAI,EAAE5H,SADkH;IAExH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,mCADX;MAECC,QAAQ,qWAFT;MAYCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAZ1C,CAAD;EAFkH,CAAD,CAAnI,QAgB4B;IAAEiB,KAAK,EAAE,CAAC;MACtBnI,IAAI,EAAEzH;IADgB,CAAD,CAAT;IAEZ2P,IAAI,EAAE,CAAC;MACPlI,IAAI,EAAEzH;IADC,CAAD,CAFM;IAIZ2kB,YAAY,EAAE,CAAC;MACfld,IAAI,EAAEzH;IADS,CAAD,CAJF;IAMZwkB,UAAU,EAAE,CAAC;MACb/c,IAAI,EAAEzH;IADO,CAAD,CANA;IAQZ6hB,EAAE,EAAE,CAAC;MACLpa,IAAI,EAAEzH;IADD,CAAD,CARQ;IAUZ8hB,EAAE,EAAE,CAAC;MACLra,IAAI,EAAEzH;IADD,CAAD,CAVQ;IAYZwhB,KAAK,EAAE,CAAC;MACR/Z,IAAI,EAAEzH;IADE,CAAD;EAZK,CAhB5B;AAAA;;IAgCM4kB,a;EACF,uBAAYvd,OAAZ,EAAqB;IAAA;;IACjB,KAAKkc,OAAL,GAAe,CAAf;IACA,KAAKoB,YAAL,GAAoB,GAApB;IACA,KAAKH,UAAL,GAAkB,CAAlB;IACA,KAAKvW,QAAL,GAAgB,KAAhB;IACA,KAAKqD,UAAL,GAAkB,IAAlB;IACA,KAAK9P,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKukB,gBAAL,GAAwB,KAAxB;IACA,KAAKC,WAAL,GAAmB,KAAnB;IACA,KAAKxC,cAAL,GAAsBlB,cAAtB;IACA,KAAK/Z,OAAL,GAAeA,OAAO,CAACS,aAAvB;EACH;;;;WACD,uBAAc;MACV,KAAKuI,MAAL;;MACA,IAAI,CAAC,KAAKwU,gBAAV,EAA4B;QACxB,KAAKE,aAAL;QACA,KAAKF,gBAAL,GAAwB,IAAxB;MACH;IACJ;;;WACD,kBAAS;MACL,KAAKnC,UAAL,GAAkB,SAAS1B,EAAE,GAAG1N,QAAL,EAA3B;MACA,KAAKqP,YAAL,kBAA4B,KAAKD,UAAjC;;MACA,IAAI,KAAKzU,QAAL,IAAiB,KAAKuT,KAA1B,EAAiC;QAC7B,KAAKgC,aAAL,GAAqB,KAAKwB,WAAL,EAArB;QACA,KAAKF,WAAL,GAAmB,IAAnB;MACH,CAHD,MAIK;QACD,KAAKA,WAAL,GAAmB,KAAnB;MACH;;MACD,KAAKG,YAAL;IACH;;;WACD,yBAAgB;MACZ,KAAKC,QAAL,GAAgB,KAAKC,YAArB;MACA9gB,UAAU,CAAC,KAAK4gB,YAAL,CAAkBrd,IAAlB,CAAuB,IAAvB,CAAD,EAA+B,GAA/B,CAAV;IACH;;;WACD,wBAAe;MACX,IAAMwd,IAAI,GAAG5jB,MAAM,CAAC,KAAK6F,OAAN,CAAN,CAAqB7F,MAArB,CAA4B,OAA5B,CAAb;;MACA,IAAI,KAAK8P,UAAT,EAAqB;QACjB8T,IAAI,CAAC/jB,UAAL,GAAkBkD,QAAlB,CAA2B,GAA3B,EAAgC8gB,IAAhC,CAAqC,GAArC,EAA0C,KAAKC,IAA/C;MACH,CAFD,MAGK;QACDF,IAAI,CAACC,IAAL,CAAU,GAAV,EAAe,KAAKC,IAApB;MACH;IACJ;;;WACD,uBAAc;MACV,IAAI,KAAK9D,KAAT,EAAgB;QACZ,OAAO,KAAKA,KAAZ;MACH;;MACD,OAAO,CACH;QACItL,MAAM,EAAE,CADZ;QAEItG,KAAK,EAAE,KAAKsK,IAFhB;QAGIqJ,OAAO,EAAE,KAAKoB;MAHlB,CADG,EAMH;QACIzO,MAAM,EAAE,GADZ;QAEItG,KAAK,EAAE,KAAKsK,IAFhB;QAGIqJ,OAAO,EAAE,KAAKiB;MAHlB,CANG,CAAP;IAYH;;;;;;AAELI,aAAa,CAACnc,IAAd;EAAA,iBAA0Gmc,aAA1G,EA73F0GjlB,EA63F1G,mBAAyIA,EAAE,CAAC+I,UAA5I;AAAA;;AACAkc,aAAa,CAAChc,IAAd,kBA93F0GjJ,EA83F1G;EAAA,MAA8FilB,aAA9F;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WA93F0GjlB,EA83F1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA93F0GA,EA+3FtG,mEADJ;MA93F0GA,EAu4FtG,iBATJ;MA93F0GA,EAu4FtG,wBATJ;IAAA;;IAAA;MA93F0GA,EA+3F3F,iCADf;MA93F0GA,EAu4Fd,aAT5F;MA93F0GA,EAu4Fd,oCAT5F;MA93F0GA,EAu4F/E,mFAT3B;IAAA;EAAA;EAAA,eAU0C0hB,0BAV1C,EAUuL1gB,EAAE,CAACkI,IAV1L;EAAA;EAAA;AAAA;;AAWA;EAAA,mDAz4F0GlJ,EAy4F1G,mBAA2FilB,aAA3F,EAAsH,CAAC;IAC3Gnd,IAAI,EAAE5H,SADqG;IAE3G2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,oBADX;MAECC,QAAQ,mXAFT;MAaCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAb1C,CAAD;EAFqG,CAAD,CAAtH,EAiB4B,YAAY;IAAE,OAAO,CAAC;MAAElH,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAD,CAAP;EAAmC,CAjB7E,EAiB+F;IAAE+H,IAAI,EAAE,CAAC;MACxFhJ,IAAI,EAAEzH;IADkF,CAAD,CAAR;IAE/EslB,IAAI,EAAE,CAAC;MACP7d,IAAI,EAAEzH;IADC,CAAD,CAFyE;IAI/EmlB,YAAY,EAAE,CAAC;MACf1d,IAAI,EAAEzH;IADS,CAAD,CAJiE;IAM/Eka,IAAI,EAAE,CAAC;MACPzS,IAAI,EAAEzH;IADC,CAAD,CANyE;IAQ/EujB,OAAO,EAAE,CAAC;MACV9b,IAAI,EAAEzH;IADI,CAAD,CARsE;IAU/E2kB,YAAY,EAAE,CAAC;MACfld,IAAI,EAAEzH;IADS,CAAD,CAViE;IAY/EwkB,UAAU,EAAE,CAAC;MACb/c,IAAI,EAAEzH;IADO,CAAD,CAZmE;IAc/EiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CAdqE;IAgB/EwhB,KAAK,EAAE,CAAC;MACR/Z,IAAI,EAAEzH;IADE,CAAD,CAhBwE;IAkB/EsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CAlBmE;IAoB/EwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD;EApBuE,CAjB/F;AAAA,K,CAyCA;;;AACA,SAASglB,WAAT,CAAqB5I,CAArB,EAAwB6I,CAAxB,EAA2BlX,CAA3B,EAA8B0C,CAA9B,EAAiC;EAC7B,OAAQ1C,CAAC,IAAI,CAACC,IAAI,CAAC4S,GAAL,CAAS,CAAT,EAAa,CAAC,EAAD,GAAMxE,CAAP,GAAY3L,CAAxB,CAAD,GAA8B,CAAlC,CAAD,GAAwC,IAAzC,GAAiD,IAAjD,GAAwDwU,CAA/D;AACH;AACD;AACA;AACA;;;AACA,SAASC,KAAT,CAAeC,SAAf,EAA0BC,OAA1B,EAAmCC,aAAnC,EAAkDC,aAAlD,EAAiEC,QAAjE,EAA2E;EACvE,IAAMC,QAAQ,GAAG3C,MAAM,CAACsC,SAAD,CAAvB;EACA,IAAMM,MAAM,GAAG5C,MAAM,CAACuC,OAAD,CAArB;EACA,IAAMM,SAAS,GAAGF,QAAQ,GAAGC,MAA7B;EACA,IAAME,QAAQ,GAAG3X,IAAI,CAAC9L,GAAL,CAAS,CAAT,EAAYmjB,aAAZ,CAAjB;EACA,IAAMO,GAAG,GAAG5X,IAAI,CAAC4S,GAAL,CAAS,EAAT,EAAa+E,QAAb,CAAZ;EACA,IAAM3hB,QAAQ,GAAG6e,MAAM,CAACyC,aAAD,CAAN,GAAwB,IAAzC;EACA,IAAIO,SAAJ;;EACA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;IACzB,IAAIC,QAAJ;IACA,IAAMC,QAAQ,GAAGF,SAAS,GAAGF,SAA7B;;IACA,IAAIH,SAAJ,EAAe;MACXM,QAAQ,GAAGR,QAAQ,GAAGR,WAAW,CAACiB,QAAD,EAAW,CAAX,EAAcT,QAAQ,GAAGC,MAAzB,EAAiCzhB,QAAjC,CAAjC;IACH,CAFD,MAGK;MACDgiB,QAAQ,GAAGhB,WAAW,CAACiB,QAAD,EAAWT,QAAX,EAAqBC,MAAM,GAAGD,QAA9B,EAAwCxhB,QAAxC,CAAtB;IACH;;IACD,IAAI0hB,SAAJ,EAAe;MACXM,QAAQ,GAAGA,QAAQ,GAAGP,MAAX,GAAoBA,MAApB,GAA6BO,QAAxC;IACH,CAFD,MAGK;MACDA,QAAQ,GAAGA,QAAQ,GAAGP,MAAX,GAAoBA,MAApB,GAA6BO,QAAxC;IACH;;IACDA,QAAQ,GAAGhY,IAAI,CAACC,KAAL,CAAW+X,QAAQ,GAAGJ,GAAtB,IAA6BA,GAAxC;IACA,IAAMvN,IAAI,GAAG4N,QAAQ,GAAGjiB,QAAxB;IACAuhB,QAAQ,CAAC;MACL5gB,KAAK,EAAEqhB,QADF;MAELC,QAAQ,EAARA,QAFK;MAGLF,SAAS,EAATA,SAHK;MAILG,QAAQ,EAAE,CAAC7N;IAJN,CAAD,CAAR;;IAMA,IAAIA,IAAJ,EAAU;MACN,OAAO8N,qBAAqB,CAAC,UAAAC,GAAG;QAAA,OAAIN,QAAQ,CAACM,GAAD,CAAZ;MAAA,CAAJ,CAA5B;IACH;EACJ;;EACD,OAAOD,qBAAqB,CAAC,UAAAJ,SAAS,EAAI;IACtCF,SAAS,GAAGE,SAAZ;IACA,OAAOD,QAAQ,CAACC,SAAD,CAAf;EACH,CAH2B,CAA5B;AAIH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASM,cAAT,CAAwBjB,OAAxB,EAAiC;EAC7B,IAAMK,MAAM,GAAG5C,MAAM,CAACuC,OAAD,CAArB;;EACA,IAAIK,MAAM,GAAG,CAAT,KAAe,CAAf,IAAoBzX,IAAI,CAAC+K,GAAL,CAAS0M,MAAT,KAAoB,EAA5C,EAAgD;IAC5C,OAAO,CAAP;EACH;;EACD,OAAO,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACMa,gB;EACF,0BAAY7W,EAAZ,EAAgB3I,OAAhB,EAAyB;IAAA;;IACrB,KAAK2I,EAAL,GAAUA,EAAV;IACA,KAAK6V,aAAL,GAAqB,CAArB;IACA,KAAKiB,WAAL,GAAmB,EAAnB;IACA,KAAKC,WAAL,GAAmB,EAAnB;IACA,KAAKC,WAAL,GAAmB,IAAI1mB,YAAJ,EAAnB;IACA,KAAK2mB,WAAL,GAAmB,IAAI3mB,YAAJ,EAAnB;IACA,KAAK4E,KAAL,GAAa,EAAb;IACA,KAAKgiB,cAAL,GAAsB,CAAtB;IACA,KAAKC,QAAL,GAAgB,CAAhB;IACA,KAAKC,UAAL,GAAkB,CAAlB;IACA,KAAKtf,aAAL,GAAqBT,OAAO,CAACS,aAA7B;EACH;;;;SAID,eAAoB;MAChB,IAAI,KAAKof,cAAT,EACI,OAAO,KAAKA,cAAZ;MACJ,OAAON,cAAc,CAAC,KAAKjB,OAAN,CAArB;IACH,C;SAPD,aAAkBgB,GAAlB,EAAuB;MACnB,KAAKO,cAAL,GAAsBP,GAAtB;IACH;;;SAUD,eAAc;MACV,OAAO,KAAKQ,QAAZ;IACH,C;SAND,aAAYR,GAAZ,EAAiB;MACb,KAAKQ,QAAL,GAAgBE,UAAU,CAACV,GAAD,CAA1B;MACA,KAAKW,KAAL;IACH;;;SAQD,eAAgB;MACZ,OAAO,KAAKF,UAAZ;IACH,C;SAND,aAAcT,GAAd,EAAmB;MACf,KAAKS,UAAL,GAAkBC,UAAU,CAACV,GAAD,CAA5B;MACA,KAAKW,KAAL;IACH;;;WAID,uBAAc;MACVC,oBAAoB,CAAC,KAAKC,YAAN,CAApB;IACH;;;WACD,iBAAQ;MAAA;;MACJD,oBAAoB,CAAC,KAAKC,YAAN,CAApB;;MACA,IAAMC,eAAe,GAAG,KAAKA,eAAL,IAAyB,UAAAviB,KAAK;QAAA,iBAAO,OAAI,CAAC4hB,WAAZ,SAA0B5hB,KAAK,CAAC8J,cAAN,EAA1B,SAAmD,OAAI,CAAC+X,WAAxD;MAAA,CAAtD;;MACA,IAAMjB,QAAQ,GAAG,SAAXA,QAAW,QAAmC;QAAA,IAAhC5gB,KAAgC,SAAhCA,KAAgC;QAAA,IAAzBshB,QAAyB,SAAzBA,QAAyB;QAAA,IAAfC,QAAe,SAAfA,QAAe;QAChD,OAAI,CAACvhB,KAAL,GAAauiB,eAAe,CAACviB,KAAD,CAA5B;;QACA,OAAI,CAAC8K,EAAL,CAAQM,YAAR;;QACA,IAAI,CAACmW,QAAL,EACI,OAAI,CAACO,WAAL,CAAiBtX,IAAjB,CAAsB;UAAExK,KAAK,EAAE,OAAI,CAACA,KAAd;UAAqBshB,QAAQ,EAARA;QAArB,CAAtB;QACJ,IAAIC,QAAJ,EACI,OAAI,CAACQ,WAAL,CAAiBvX,IAAjB,CAAsB;UAAExK,KAAK,EAAE,OAAI,CAACA,KAAd;UAAqBshB,QAAQ,EAARA;QAArB,CAAtB;MACP,CAPD;;MAQA,KAAKgB,YAAL,GAAoB/B,KAAK,CAAC,KAAKC,SAAN,EAAiB,KAAKC,OAAtB,EAA+B,KAAKC,aAApC,EAAmD,KAAKC,aAAxD,EAAuEC,QAAvE,CAAzB;IACH;;;;;;AAELe,gBAAgB,CAACpe,IAAjB;EAAA,iBAA6Goe,gBAA7G,EA5iG0GlnB,EA4iG1G,mBAA+IA,EAAE,CAACuR,iBAAlJ,GA5iG0GvR,EA4iG1G,mBAAgLA,EAAE,CAAC+I,UAAnL;AAAA;;AACAme,gBAAgB,CAACje,IAAjB,kBA7iG0GjJ,EA6iG1G;EAAA,MAAiGknB,gBAAjG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA7iG0GlnB,EA6iG+V,UAAzc;IAAA;;IAAA;MA7iG0GA,EA6iG+V,wCAAzc;IAAA;EAAA;EAAA;AAAA;;AACA;EAAA,mDA9iG0GA,EA8iG1G,mBAA2FknB,gBAA3F,EAAyH,CAAC;IAC9Gpf,IAAI,EAAE5H,SADwG;IAE9G2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,uBADX;MAECC,QAAQ;IAFT,CAAD;EAFwG,CAAD,CAAzH,EAM4B,YAAY;IAAE,OAAO,CAAC;MAAExB,IAAI,EAAE9H,EAAE,CAACuR;IAAX,CAAD,EAAiC;MAAEzJ,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAjC,CAAP;EAAmE,CAN7G,EAM+H;IAAEmd,aAAa,EAAE,CAAC;MACjIpe,IAAI,EAAEzH;IAD2H,CAAD,CAAjB;IAE/G8mB,WAAW,EAAE,CAAC;MACdrf,IAAI,EAAEzH;IADQ,CAAD,CAFkG;IAI/G+mB,WAAW,EAAE,CAAC;MACdtf,IAAI,EAAEzH;IADQ,CAAD,CAJkG;IAM/GynB,eAAe,EAAE,CAAC;MAClBhgB,IAAI,EAAEzH;IADY,CAAD,CAN8F;IAQ/G4lB,aAAa,EAAE,CAAC;MAChBne,IAAI,EAAEzH;IADU,CAAD,CARgG;IAU/G2lB,OAAO,EAAE,CAAC;MACVle,IAAI,EAAEzH;IADI,CAAD,CAVsG;IAY/G0lB,SAAS,EAAE,CAAC;MACZje,IAAI,EAAEzH;IADM,CAAD,CAZoG;IAc/GgnB,WAAW,EAAE,CAAC;MACdvf,IAAI,EAAElH;IADQ,CAAD,CAdkG;IAgB/G0mB,WAAW,EAAE,CAAC;MACdxf,IAAI,EAAElH;IADQ,CAAD;EAhBkG,CAN/H;AAAA,K,CA0BA;AACA;;;AACA,IAAImnB,IAAJ;;AACA,IAAI,OAAOrhB,MAAP,KAAkB,WAAtB,EAAmC;EAC/BqhB,IAAI,GAAGrhB,MAAP;AACH,CAFD,MAGK,IAAI,OAAOshB,MAAP,KAAkB,WAAtB,EAAmC;EACpCD,IAAI,GAAGC,MAAP;AACH,C,CACD;;;AACA,IAAMC,UAAU,GAAGF,IAAI,CAACE,UAAxB;;AACA,SAASC,gBAAT,CAA0BlY,IAA1B,EAAoE;EAAA,IAApCmY,OAAoC,uEAA1B,KAA0B;EAAA,IAAnBC,UAAmB,uEAAN,IAAM;;EAChE;EACA;EACA,IAAI,OAAOH,UAAP,KAAsB,UAA1B,EAAsC;IAClC;IACA,OAAO,IAAIA,UAAJ,CAAejY,IAAf,EAAqB;MAAEmY,OAAO,EAAPA,OAAF;MAAWC,UAAU,EAAVA;IAAX,CAArB,CAAP;EACH,CAHD,MAIK;IACD;IACA,IAAM3H,KAAK,GAAG4H,QAAQ,CAACC,WAAT,CAAqB,YAArB,CAAd;IACA7H,KAAK,CAAC8H,SAAN,CAAgBvY,IAAhB,EAAsBmY,OAAtB,EAA+BC,UAA/B;IACA,OAAO3H,KAAP;EACH;AACJ;;IAEK+H,W;EACF,qBAAY5gB,UAAZ,EAAwB;IAAA;;IACpB,KAAKA,UAAL,GAAkBA,UAAlB;IACA,KAAK6gB,aAAL,GAAqB,CAArB;IACA,KAAKC,SAAL,GAAiB,CAAC,CAAlB;IACA,KAAKC,YAAL,GAAoB,EAApB;IACA,KAAK/F,cAAL,GAAsBpd,cAAtB;IACA,KAAKqd,UAAL,GAAkBhF,UAAlB;IACA,KAAK+K,cAAL,GAAsB,KAAtB;IACA,KAAKvK,eAAL,GAAuB,KAAvB;IACA,KAAKwK,KAAL,GAAa,IAAIloB,YAAJ,EAAb;EACH;;;;WACD,mBAAUmoB,IAAV,EAAgB;MACZ,IAAMtU,OAAO,GAAG,EAAhB;;MADY,4CAEQ,KAAKA,OAFb;MAAA;;MAAA;QAEZ,uDAAkC;UAAA,IAAvBuU,KAAuB;UAC9B,IAAM5X,IAAI,GAAG4X,KAAK,CAAChU,MAAN,CAAa3D,IAAb,CAAkB,UAAAC,CAAC;YAAA,OAAIA,CAAC,CAACrB,IAAF,CAAO2D,QAAP,OAAsBmV,IAAI,CAACnV,QAAL,EAA1B;UAAA,CAAnB,CAAb;UACA,IAAIqV,SAAS,GAAGD,KAAK,CAAC/Y,IAAtB;;UACA,IAAIgZ,SAAS,YAAY7kB,IAAzB,EAA+B;YAC3B6kB,SAAS,GAAGA,SAAS,CAAC5Z,kBAAV,EAAZ;UACH;;UACD,IAAI+B,IAAJ,EAAU;YACN,IAAMhC,KAAK,GAAGgC,IAAI,CAACnB,IAAnB;YACA,IAAIgX,GAAG,GAAG7V,IAAI,CAAC5L,KAAf;;YACA,IAAI,KAAKqjB,cAAT,EAAyB;cACrB5B,GAAG,GAAG,CAAC7V,IAAI,CAACuS,EAAL,GAAUvS,IAAI,CAAC8X,EAAhB,EAAoBC,OAApB,CAA4B,CAA5B,IAAiC,GAAvC;YACH;;YACD,IAAIjZ,KAAK,SAAT;;YACA,IAAI,KAAK9B,MAAL,CAAYsE,SAAZ,KAA0B5E,SAAS,CAAC6E,MAAxC,EAAgD;cAC5C,IAAIyW,CAAC,GAAGnC,GAAR;;cACA,IAAI7V,IAAI,CAACuS,EAAT,EAAa;gBACTyF,CAAC,GAAGhY,IAAI,CAACuS,EAAT;cACH;;cACDzT,KAAK,GAAG,KAAK9B,MAAL,CAAY6C,QAAZ,CAAqBmY,CAArB,CAAR;YACH,CAND,MAOK;cACDlZ,KAAK,GAAG,KAAK9B,MAAL,CAAY6C,QAAZ,CAAqB+X,KAAK,CAAC/Y,IAA3B,CAAR;YACH;;YACD,IAAMc,IAAI,GAAGzL,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBtE,IAAlB,EAAwB;cACjC5L,KAAK,EAAEyhB,GAD0B;cAEjChX,IAAI,EAAEb,KAF2B;cAGjC4F,MAAM,EAAEiU,SAHyB;cAIjCnmB,GAAG,EAAEsO,IAAI,CAACtO,GAJuB;cAKjCC,GAAG,EAAEqO,IAAI,CAACrO,GALuB;cAMjCmN,KAAK,EAALA;YANiC,CAAxB,CAAb;YAQAuE,OAAO,CAAC9I,IAAR,CAAaoF,IAAb;UACH;QACJ;MAnCW;QAAA;MAAA;QAAA;MAAA;;MAoCZ,OAAO0D,OAAP;IACH;;;WACD,mBAAUiM,KAAV,EAAiB;MACb,IAAI,CAACxf,iBAAiB,CAAC,KAAK2G,UAAN,CAAtB,EAAyC;QACrC;MACH;;MACD,IAAMwhB,IAAI,GAAG3I,KAAK,CAAC4I,KAAN,GAAc5I,KAAK,CAAC3b,MAAN,CAAauD,qBAAb,GAAqC/B,IAAhE;MACA,IAAMgjB,YAAY,GAAG,KAAKC,qBAAL,CAA2BH,IAA3B,CAArB;MACA,IAAMI,YAAY,GAAG,KAAKC,IAAL,CAAUH,YAAV,CAArB;MACA,KAAKZ,SAAL,GAAiB,KAAK7N,MAAL,CAAY2O,YAAZ,CAAjB;MACA,KAAKd,SAAL,GAAiB9Z,IAAI,CAAC9L,GAAL,CAAS,CAAT,EAAY,KAAK4lB,SAAjB,CAAjB;MACA,KAAKA,SAAL,GAAiB9Z,IAAI,CAAC/L,GAAL,CAAS,KAAK6R,IAAL,CAAUlO,KAAnB,EAA0B,KAAKkiB,SAA/B,CAAjB;MACA,KAAKC,YAAL,GAAoB,KAAKe,SAAL,CAAeF,YAAf,CAApB;;MACA,IAAI,KAAKd,SAAL,KAAmB,KAAKiB,aAA5B,EAA2C;QACvC,IAAMC,EAAE,GAAG1B,gBAAgB,CAAC,YAAD,CAA3B;QACA,KAAK2B,aAAL,CAAmB1hB,aAAnB,CAAiC2hB,aAAjC,CAA+CF,EAA/C;QACA,KAAKnB,aAAL,GAAqB,GAArB;QACA,KAAKI,KAAL,CAAW9Y,IAAX,CAAgB;UACZxK,KAAK,EAAEikB;QADK,CAAhB;QAGA,KAAKhK,WAAL;QACA,KAAKmK,aAAL,GAAqB,KAAKjB,SAA1B;MACH;IACJ;;;WACD,+BAAsBU,IAAtB,EAA4B;MACxB,IAAIW,QAAQ,GAAG,CAAf;MACA,IAAIC,QAAQ,GAAG,KAAKP,IAAL,CAAU7e,MAAV,GAAmB,CAAlC;MACA,IAAIqf,OAAO,GAAGxG,MAAM,CAACyG,SAArB;MACA,IAAIZ,YAAY,GAAG,CAAnB;;MACA,OAAOS,QAAQ,IAAIC,QAAnB,EAA6B;QACzB,IAAMG,YAAY,GAAI,CAACJ,QAAQ,GAAGC,QAAZ,IAAwB,CAAzB,GAA8B,CAAnD;QACA,IAAMI,cAAc,GAAG,KAAKvP,MAAL,CAAY,KAAK4O,IAAL,CAAUU,YAAV,CAAZ,CAAvB;QACA,IAAME,OAAO,GAAGzb,IAAI,CAAC+K,GAAL,CAASyQ,cAAc,GAAGhB,IAA1B,CAAhB;;QACA,IAAIiB,OAAO,GAAGJ,OAAd,EAAuB;UACnBA,OAAO,GAAGI,OAAV;UACAf,YAAY,GAAGa,YAAf;QACH;;QACD,IAAIC,cAAc,GAAGhB,IAArB,EAA2B;UACvBW,QAAQ,GAAGI,YAAY,GAAG,CAA1B;QACH,CAFD,MAGK,IAAIC,cAAc,GAAGhB,IAArB,EAA2B;UAC5BY,QAAQ,GAAGG,YAAY,GAAG,CAA1B;QACH,CAFI,MAGA;UACDF,OAAO,GAAG,CAAV;UACAX,YAAY,GAAGa,YAAf;UACA;QACH;MACJ;;MACD,OAAOb,YAAP;IACH;;;WACD,uBAAc;MACV,IAAM7I,KAAK,GAAGyH,gBAAgB,CAAC,YAAD,CAA9B;MACA,KAAK2B,aAAL,CAAmB1hB,aAAnB,CAAiC2hB,aAAjC,CAA+CrJ,KAA/C;IACH;;;WACD,uBAAc;MACV,IAAMA,KAAK,GAAGyH,gBAAgB,CAAC,YAAD,CAA9B;MACA,KAAK2B,aAAL,CAAmB1hB,aAAnB,CAAiC2hB,aAAjC,CAA+CrJ,KAA/C;MACA,KAAKgI,aAAL,GAAqB,CAArB;MACA,KAAKkB,aAAL,GAAqB,CAAC,CAAtB;IACH;;;WACD,wBAAeW,WAAf,EAA4B;MACxB,IAAIxmB,MAAM,GAAG,EAAb;;MACA,IAAIwmB,WAAW,CAACvV,MAAZ,KAAuB5O,SAA3B,EAAsC;QAClCrC,MAAM,IAAIwmB,WAAW,CAACvV,MAAtB;MACH,CAFD,MAGK;QACDjR,MAAM,IAAI,KAAV;MACH;;MACDA,MAAM,IAAI,IAAV;;MACA,IAAIwmB,WAAW,CAAC/kB,KAAZ,KAAsBY,SAA1B,EAAqC;QACjCrC,MAAM,IAAIwmB,WAAW,CAAC/kB,KAAZ,CAAkB8J,cAAlB,EAAV;MACH;;MACD,IAAIib,WAAW,CAACznB,GAAZ,KAAoBsD,SAApB,IAAiCmkB,WAAW,CAACxnB,GAAZ,KAAoBqD,SAAzD,EAAoE;QAChErC,MAAM,IAAI,IAAV;;QACA,IAAIwmB,WAAW,CAACznB,GAAZ,KAAoBsD,SAAxB,EAAmC;UAC/B,IAAImkB,WAAW,CAACxnB,GAAZ,KAAoBqD,SAAxB,EAAmC;YAC/BrC,MAAM,IAAI,GAAV;UACH;;UACDA,MAAM,IAAIwmB,WAAW,CAACznB,GAAZ,CAAgBwM,cAAhB,EAAV;;UACA,IAAIib,WAAW,CAACxnB,GAAZ,KAAoBqD,SAAxB,EAAmC;YAC/BrC,MAAM,IAAI,KAAV;UACH;QACJ,CARD,MASK,IAAIwmB,WAAW,CAACxnB,GAAZ,KAAoBqD,SAAxB,EAAmC;UACpCrC,MAAM,IAAI,GAAV;QACH;;QACD,IAAIwmB,WAAW,CAACxnB,GAAZ,KAAoBqD,SAAxB,EAAmC;UAC/BrC,MAAM,IAAIwmB,WAAW,CAACxnB,GAAZ,CAAgBuM,cAAhB,EAAV;QACH;;QACDvL,MAAM,IAAI,GAAV;MACH;;MACD,OAAOA,MAAP;IACH;;;;;;AAEL0kB,WAAW,CAAC1f,IAAZ;EAAA,iBAAwG0f,WAAxG,EAjvG0GxoB,EAivG1G,mBAAqIC,WAArI;AAAA;;AACAuoB,WAAW,CAACvf,IAAZ,kBAlvG0GjJ,EAkvG1G;EAAA,MAA4FwoB,WAA5F;EAAA;EAAA;IAAA;MAlvG0GxoB,EAkvG1G;IAAA;;IAAA;MAAA;;MAlvG0GA,EAkvG1G,qBAlvG0GA,EAkvG1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAlvG0GA,EAmvGtG,iBADJ;MAlvG0GA,EAmvGtG,qCADJ;MAlvG0GA,EA2vGlG;QAAA,OAAa,qBAAb;MAAA;QAAA,OACc,iBADd;MAAA,EATR;MAlvG0GA,EAovGpG,eAFN;MAlvG0GA,EA8vGpG,sFA9vGoGA,EA8vGpG,wBAZN;MAlvG0GA,EAswGpG,2BApBN;MAlvG0GA,EAyxGtG,eAvCJ;IAAA;;IAAA;MAAA,UAlvG0GA,EAkvG1G;;MAlvG0GA,EAsvGlG,aAJR;MAlvG0GA,EAsvGlG,wEAJR;MAlvG0GA,EA8wGlG,aA5BR;MAlvG0GA,EA8wGlG,oEA5BR;MAlvG0GA,EAwwGlG,wWAtBR;MAlvG0GA,EA0wGlG,uEAxBR;IAAA;EAAA;EAAA,eAwC0CgB,EAAE,CAACwQ,OAxC7C,EAwCoJuM,gBAxCpJ;EAAA;EAAA;IAAA,WAwCslB,CAC9kBtc,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,oBAAD,EAAuB,CAC7BC,KAAK,CAAC;MACFiiB,OAAO,EAAE;IADP,CAAD,CADwB,EAI7BhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MAAEiiB,OAAO,EAAE;IAAX,CAAD,CAAX,CAJsB,CAAvB,CADY,EAOtBliB,UAAU,CAAC,oBAAD,EAAuB,CAC7BC,KAAK,CAAC;MACFiiB,OAAO,EAAE;IADP,CAAD,CADwB,EAI7BhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MAAEiiB,OAAO,EAAE;IAAX,CAAD,CAAX,CAJsB,CAAvB,CAPY,CAAnB,CADukB;EAxCtlB;EAAA;AAAA;;AAwDA;EAAA,mDA1yG0G5jB,EA0yG1G,mBAA2FwoB,WAA3F,EAAoH,CAAC;IACzG1gB,IAAI,EAAE5H,SADmG;IAEzG2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,4BADX;MAECC,QAAQ,o+CAFT;MA2CCyF,eAAe,EAAErO,uBAAuB,CAACsO,MA3C1C;MA4CC2C,UAAU,EAAE,CACRlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,oBAAD,EAAuB,CAC7BC,KAAK,CAAC;QACFiiB,OAAO,EAAE;MADP,CAAD,CADwB,EAI7BhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QAAEiiB,OAAO,EAAE;MAAX,CAAD,CAAX,CAJsB,CAAvB,CADY,EAOtBliB,UAAU,CAAC,oBAAD,EAAuB,CAC7BC,KAAK,CAAC;QACFiiB,OAAO,EAAE;MADP,CAAD,CADwB,EAI7BhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QAAEiiB,OAAO,EAAE;MAAX,CAAD,CAAX,CAJsB,CAAvB,CAPY,CAAnB,CADC;IA5Cb,CAAD;EAFmG,CAAD,CAApH,EA+D4B,YAAY;IAAE,OAAO,CAAC;MAAE9b,IAAI,EAAE3B,SAAR;MAAmBuD,UAAU,EAAE,CAAC;QAC9D5B,IAAI,EAAE1H,MADwD;QAE9DyD,IAAI,EAAE,CAAC5D,WAAD;MAFwD,CAAD;IAA/B,CAAD,CAAP;EAGlB,CAlExB,EAkE0C;IAAEyU,IAAI,EAAE,CAAC;MACnC5M,IAAI,EAAEzH;IAD6B,CAAD,CAAR;IAE1BopB,IAAI,EAAE,CAAC;MACP3hB,IAAI,EAAEzH;IADC,CAAD,CAFoB;IAI1Bwa,MAAM,EAAE,CAAC;MACT/S,IAAI,EAAEzH;IADG,CAAD,CAJkB;IAM1Bid,MAAM,EAAE,CAAC;MACTxV,IAAI,EAAEzH;IADG,CAAD,CANkB;IAQ1BmU,OAAO,EAAE,CAAC;MACV1M,IAAI,EAAEzH;IADI,CAAD,CARiB;IAU1B8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CAVkB;IAY1BuoB,cAAc,EAAE,CAAC;MACjB9gB,IAAI,EAAEzH;IADW,CAAD,CAZU;IAc1Bge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAdS;IAgB1BugB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAEzH;IADY,CAAD,CAhBS;IAkB1BwoB,KAAK,EAAE,CAAC;MACR/gB,IAAI,EAAElH;IADE,CAAD,CAlBmB;IAoB1BipB,aAAa,EAAE,CAAC;MAChB/hB,IAAI,EAAExH,SADU;MAEhBuD,IAAI,EAAE,CAAC,eAAD,EAAkB;QAAE0mB,MAAM,EAAE;MAAV,CAAlB;IAFU,CAAD;EApBW,CAlE1C;AAAA;;IA2FMC,Q;EACF,kBAAY9iB,OAAZ,EAAqB2I,EAArB,EAAyB;IAAA;;IACrB,KAAKA,EAAL,GAAUA,EAAV;IACA,KAAKpK,MAAL,GAAc,EAAd;IACA,KAAKpE,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAK8pB,cAAL,GAAsB,IAAI9pB,YAAJ,EAAtB;IACA,KAAK+pB,WAAL,GAAmB,KAAnB;IACA,KAAKhjB,OAAL,GAAeA,OAAO,CAACS,aAAvB;EACH;;;;WACD,qBAAY6F,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;;MACA,IAAI,CAAC,KAAKga,WAAV,EAAuB;QACnB,KAAKC,QAAL;QACA,KAAKD,WAAL,GAAmB,IAAnB;MACH;IACJ;;;WACD,kBAAS;MACL,KAAKhW,IAAL,GAAY,KAAKkW,OAAL,EAAZ;MACA,KAAK3kB,MAAL,GAAc,KAAKyO,IAAL,CAAUzO,MAAxB;MACA,IAAM4kB,OAAO,GAAG,KAAKtY,IAAL,CAAU,CAAV,IAAe,KAAKtM,MAApC;MACA,KAAK6kB,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,KAAKlQ,MAAL,GAAc,KAAKmQ,SAAL,EAAd;;MACA,IAAI,KAAKC,KAAT,EAAgB;QACZ,KAAKC,WAAL;MACH;;MACD,KAAK9U,SAAL,2BAAkCyU,OAAlC;MACA,KAAKM,QAAL,GAAgB,WAAW9J,EAAE,GAAG1N,QAAL,EAA3B;MACA,KAAKyX,MAAL,kBAAsB,KAAKD,QAA3B;MACA,KAAK9a,EAAL,CAAQM,YAAR;IACH;;;WACD,sBAAa;MACT,IAAI0a,MAAM,GAAG,EAAb;;MADS,4CAEa,KAAK7W,OAFlB;MAAA;;MAAA;QAET,uDAAoC;UAAA,IAAzBA,OAAyB;;UAAA,4CAChBA,OAAO,CAACO,MADQ;UAAA;;UAAA;YAChC,uDAAgC;cAAA,IAArB1D,CAAqB;;cAC5B,IAAI,CAACga,MAAM,CAACC,QAAP,CAAgBja,CAAC,CAACrB,IAAlB,CAAL,EAA8B;gBAC1Bqb,MAAM,CAAC3f,IAAP,CAAY2F,CAAC,CAACrB,IAAd;cACH;YACJ;UAL+B;YAAA;UAAA;YAAA;UAAA;QAMnC;MARQ;QAAA;MAAA;QAAA;MAAA;;MAST,IAAI5B,MAAM,GAAG,EAAb;;MACA,IAAI,KAAKqE,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACnC,IAAM3gB,IAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAAhB;;QACA,IAAMvoB,IAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAAhB;;QACAjd,MAAM,GAAG,CAACvL,IAAD,EAAMC,IAAN,CAAT;MACH,CAJD,MAKK,IAAI,KAAK2P,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QAC1C2Y,MAAM,GAAGA,MAAM,CAAC3O,GAAP,CAAW,UAAAyM,CAAC;UAAA,OAAI1F,MAAM,CAAC0F,CAAD,CAAV;QAAA,CAAZ,CAAT;;QACA,IAAMtmB,KAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAAhB;;QACA,IAAMvoB,KAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAAhB;;QACAjd,MAAM,GAAG,CAACvL,KAAD,EAAMC,KAAN,CAAT;MACH,CALI,MAMA;QACDsL,MAAM,GAAGid,MAAT;MACH;;MACD,OAAOjd,MAAP;IACH;;;WACD,qBAAY;MACR,IAAIkK,KAAJ;;MACA,IAAI,KAAK7F,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACnClL,KAAK,GAAGvW,SAAS,GAAGa,KAAZ,CAAkB,CAAC,CAAD,EAAI,KAAK8R,IAAL,CAAUlO,KAAd,CAAlB,EAAwC4H,MAAxC,CAA+C,KAAK0c,OAApD,CAAR;MACH,CAFD,MAGK,IAAI,KAAKrY,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QAC1C4F,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAAC,CAAD,EAAI,KAAK8R,IAAL,CAAUlO,KAAd,CAApB,EAA0C4H,MAA1C,CAAiD,KAAK0c,OAAtD,CAAR;MACH,CAFI,MAGA,IAAI,KAAKrY,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QAC3CoE,KAAK,GAAGrW,UAAU,GAAGW,KAAb,CAAmB,CAAC,CAAD,EAAI,KAAK8R,IAAL,CAAUlO,KAAd,CAAnB,EAAyCiU,OAAzC,CAAiD,GAAjD,EAAsDrM,MAAtD,CAA6D,KAAK0c,OAAlE,CAAR;MACH;;MACD,OAAOxS,KAAP;IACH;;;WACD,oBAAW;MAAA;;MACP,IAAI,KAAK2S,KAAT,EACI;MACJ,IAAMhlB,MAAM,GAAG,KAAKA,MAApB;MACA,IAAMO,KAAK,GAAG,KAAK+L,IAAL,CAAU,CAAV,CAAd;MACA,KAAK0Y,KAAL,GAAanpB,MAAM,GACdypB,MADQ,CACD,CACR,CAAC,CAAD,EAAI,CAAJ,CADQ,EAER,CAAC/kB,KAAD,EAAQP,MAAR,CAFQ,CADC,EAKRulB,EALQ,CAKL,WALK,EAKQ,iBAAmB;QAAA,IAAhBC,SAAgB,SAAhBA,SAAgB;;QACpC,IAAMC,YAAY,GAAGD,SAAS,IAAI,OAAI,CAAC5Q,MAAL,CAAYjY,KAAZ,EAAlC;;QACA,IAAM+oB,SAAS,GAAGD,YAAY,CAAChP,GAAb,CAAiB,OAAI,CAAC7B,MAAL,CAAY+Q,MAA7B,CAAlB;;QACA,OAAI,CAACnB,cAAL,CAAoB1a,IAApB,CAAyB4b,SAAzB;;QACA,OAAI,CAACtb,EAAL,CAAQM,YAAR;MACH,CAVY,CAAb;MAWA9O,MAAM,CAAC,KAAK6F,OAAN,CAAN,CAAqB7F,MAArB,CAA4B,QAA5B,EAAsC+R,IAAtC,CAA2C,KAAKqX,KAAhD;IACH;;;WACD,uBAAc;MACV,IAAI,CAAC,KAAKA,KAAV,EACI;MACJ,IAAMhlB,MAAM,GAAG,KAAKA,MAApB;MACA,IAAMO,KAAK,GAAG,KAAK+L,IAAL,CAAU,CAAV,CAAd;MACA,KAAK0Y,KAAL,CAAWM,MAAX,CAAkB,CACd,CAAC,CAAD,EAAI,CAAJ,CADc,EAEd,CAAC/kB,KAAD,EAAQP,MAAR,CAFc,CAAlB;MAIApE,MAAM,CAAC,KAAK6F,OAAN,CAAN,CAAqB7F,MAArB,CAA4B,QAA5B,EAAsC+R,IAAtC,CAA2C,KAAKqX,KAAhD,EATU,CAUV;;MACAppB,MAAM,CAAC,KAAK6F,OAAN,CAAN,CACK7F,MADL,CACY,YADZ,EAEK6jB,IAFL,CAEU,MAFV,EAEkBvf,SAFlB,EAGKuf,IAHL,CAGU,QAHV,EAGoBvf,SAHpB,EAIKuf,IAJL,CAIU,cAJV,EAI0Bvf,SAJ1B;MAKA,KAAKkK,EAAL,CAAQM,YAAR;IACH;;;WACD,mBAAU;MACN,IAAMnK,KAAK,GAAG,KAAK+L,IAAL,CAAU,CAAV,CAAd;MACA,IAAMmC,IAAI,GAAG;QACTlO,KAAK,EAALA,KADS;QAETP,MAAM,EAAE,KAAKA;MAFJ,CAAb;MAIA,OAAOyO,IAAP;IACH;;;;;;AAEL8V,QAAQ,CAAC1hB,IAAT;EAAA,iBAAqG0hB,QAArG,EAv/G0GxqB,EAu/G1G,mBAA+HA,EAAE,CAAC+I,UAAlI,GAv/G0G/I,EAu/G1G,mBAAyJA,EAAE,CAACuR,iBAA5J;AAAA;;AACAiZ,QAAQ,CAACvhB,IAAT,kBAx/G0GjJ,EAw/G1G;EAAA,MAAyFwqB,QAAzF;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WAx/G0GxqB,EAw/G1G;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAx/G0GA,EAw/G1G;MAx/G0GA,EAy/GtG,iBADJ;MAx/G0GA,EAy/GtG,uCADJ;MAx/G0GA,EA2/GlG,iCAHR;MAx/G0GA,EAggHpG,eARN;MAx/G0GA,EAigHpG,0BATN;MAx/G0GA,EAkgHlG,gBAVR;MAx/G0GA,EAmgHpG,eAXN;MAx/G0GA,EAogHpG,mCAZN;MAx/G0GA,EAsgHtG,eAdJ;IAAA;;IAAA;MAx/G0GA,EAy/G9E,wCAD5B;MAx/G0GA,EA0/GxF,aAFlB;MAx/G0GA,EA0/GxF,gCAFlB;MAx/G0GA,EAogHpF,aAZtB;MAx/G0GA,EAogHpF,wDAZtB;IAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAgBA;EAAA,mDAxgH0GA,EAwgH1G,mBAA2FwqB,QAA3F,EAAiH,CAAC;IACtG1iB,IAAI,EAAE5H,SADgG;IAEtG2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,wBAAZ;MAAsCC,QAAQ,slBAA9C;MAedC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAfnB;MAeyBuF,eAAe,EAAErO,uBAAuB,CAACsO,MAflE;MAe0EvF,MAAM,EAAE,CAAC,oMAAD;IAflF,CAAD;EAFgG,CAAD,CAAjH,EAkB4B,YAAY;IAAE,OAAO,CAAC;MAAE3B,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAD,EAA0B;MAAEjB,IAAI,EAAE9H,EAAE,CAACuR;IAAX,CAA1B,CAAP;EAAmE,CAlB7G,EAkB+H;IAAEgB,IAAI,EAAE,CAAC;MACxHzK,IAAI,EAAEzH;IADkH,CAAD,CAAR;IAE/GmU,OAAO,EAAE,CAAC;MACV1M,IAAI,EAAEzH;IADI,CAAD,CAFsG;IAI/G2T,MAAM,EAAE,CAAC;MACTlM,IAAI,EAAEzH;IADG,CAAD,CAJuG;IAM/GwV,YAAY,EAAE,CAAC;MACf/N,IAAI,EAAEzH;IADS,CAAD,CANiG;IAQ/GwrB,MAAM,EAAE,CAAC;MACT/jB,IAAI,EAAEzH;IADG,CAAD,CARuG;IAU/GyrB,SAAS,EAAE,CAAC;MACZhkB,IAAI,EAAEzH;IADM,CAAD,CAVoG;IAY/GoS,SAAS,EAAE,CAAC;MACZ3K,IAAI,EAAEzH;IADM,CAAD,CAZoG;IAc/G4F,MAAM,EAAE,CAAC;MACT6B,IAAI,EAAEzH;IADG,CAAD,CAduG;IAgB/GwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CAhBuG;IAkB/G6pB,cAAc,EAAE,CAAC;MACjB3iB,IAAI,EAAElH;IADW,CAAD;EAlB+F,CAlB/H;AAAA;;IAwCMmrB,uB;EACF,mCAAc;IAAA;;IACV,KAAK5c,KAAL,GAAa,OAAb;IACA,KAAKwC,UAAL,GAAkB,IAAlB;IACA,KAAK9P,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,KAAKqrB,WAAL,GAAmB,EAAnB;;IACA,KAAKC,eAAL,GAAuB,UAAA9c,KAAK;MAAA,OAAIA,KAAJ;IAAA,CAA5B;;IACA,KAAK+c,oBAAL,GAA4B,UAAAC,UAAU;MAAA,OAAIA,UAAJ;IAAA,CAAtC;;IACA,KAAKC,sBAAL,GAA8B,UAAA7mB,KAAK;MAAA,OAAIA,KAAK,CAAC8J,cAAN,EAAJ;IAAA,CAAnC;EACH;;;;WACD,qBAAYrB,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,oBAAW;MACP,OAAO,KAAKI,IAAL,CAAU4L,GAAV,CAAc,UAAArL,CAAC;QAAA,OAAIoS,MAAM,CAACpS,CAAC,CAAC9L,KAAH,CAAV;MAAA,CAAf,EAAoC8mB,MAApC,CAA2C,UAACC,GAAD,EAAMjb,CAAN;QAAA,OAAYib,GAAG,GAAGjb,CAAlB;MAAA,CAA3C,EAAgE,CAAhE,CAAP;IACH;;;WACD,kBAAS;MACL,KAAKkb,KAAL,GAAa,KAAKC,QAAL,EAAb;MACA,KAAKC,YAAL,GAAoB,KAAKF,KAAzB;MACA,KAAKP,WAAL,GAAmB,KAAKU,cAAL,EAAnB;IACH;;;WACD,0BAAiB;MAAA;;MACb,OAAO,KAAK5b,IAAL,CAAU4L,GAAV,CAAc,UAAArL,CAAC,EAAI;QACtB,IAAMlC,KAAK,GAAGD,WAAW,CAACmC,CAAC,CAACrB,IAAH,CAAzB;QACA,IAAMzK,KAAK,GAAG8L,CAAC,CAAC9L,KAAhB;;QACA,IAAM0K,KAAK,GAAG,OAAI,CAAC9B,MAAL,CAAY6C,QAAZ,CAAqB7B,KAArB,CAAd;;QACA,IAAMgd,UAAU,GAAG,OAAI,CAACI,KAAL,GAAa,CAAb,GAAkBhnB,KAAK,GAAG,OAAI,CAACgnB,KAAd,GAAuB,GAAxC,GAA8C,CAAjE;QACA,IAAMzc,cAAc,GAAG,OAAO,OAAI,CAACmc,eAAZ,KAAgC,UAAhC,GAA6C,OAAI,CAACA,eAAL,CAAqB9c,KAArB,CAA7C,GAA2EA,KAAlG;QACA,OAAO;UACHwd,MAAM,EAAEpnB,KADL;UAEHuL,IAAI,EAAEO,CAFH;UAGH9L,KAAK,EAALA,KAHG;UAIH0K,KAAK,EAALA,KAJG;UAKHd,KAAK,EAAEW,cALJ;UAMH8c,YAAY,EAAEpW,SAAS,CAAC1G,cAAD,EAAiB,EAAjB,CANpB;UAOH+c,YAAY,EAAExb,CAAC,CAACrB,IAPb;UAQHmc,UAAU,EAAE,OAAI,CAACD,oBAAL,GAA4B,OAAI,CAACA,oBAAL,CAA0BC,UAA1B,CAA5B,GAAoEA,UAAU,CAAC9c,cAAX;QAR7E,CAAP;MAUH,CAhBM,CAAP;IAiBH;;;WACD,iBAAQiC,KAAR,EAAeH,IAAf,EAAqB;MACjB,OAAOA,IAAI,CAAChC,KAAZ;IACH;;;;;;AAEL4c,uBAAuB,CAACjjB,IAAxB;EAAA,iBAAoHijB,uBAApH;AAAA;;AACAA,uBAAuB,CAAC9iB,IAAxB,kBA/lH0GjJ,EA+lH1G;EAAA,MAAwG+rB,uBAAxG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WA/lH0G/rB,EA+lH1G;EAAA;EAAA;EAAA;EAAA;IAAA;MA/lH0GA,EAgmHtG,4BADJ;MA/lH0GA,EAimHpG,sEAFN;MA/lH0GA,EAwmHpG,sEATN;MA/lH0GA,EA2mHpG,4BAZN;MA/lH0GA,EA4mHlG,UAbR;MA/lH0GA,EA6mHpG,eAdN;MA/lH0GA,EA8mHpG,yCAfN;MA/lH0GA,EAgnHhG,sEAjBV;MA/lH0GA,EA6oHlG,mBA9CR;IAAA;;IAAA;MA/lH0GA,EAgmHrE,sCADrC;MA/lH0GA,EAkmHjG,aAHT;MA/lH0GA,EAkmHjG,mCAHT;MA/lH0GA,EAwmH1E,aAThC;MA/lH0GA,EAwmH1E,oCAThC;MA/lH0GA,EA4mHlG,aAbR;MA/lH0GA,EA4mHlG,wCAbR;MA/lH0GA,EAinHvE,aAlBnC;MA/lH0GA,EAinHvE,oEAlBnC;IAAA;EAAA;EAAA,eAiDywCknB,gBAjDzwC,EAiDo/ClmB,EAAE,CAACkI,IAjDv/C,EAiDqkDlI,EAAE,CAACwQ,OAjDxkD;EAAA;EAAA;EAAA;AAAA;;AAkDA;EAAA,mDAjpH0GxR,EAipH1G,mBAA2F+rB,uBAA3F,EAAgI,CAAC;IACrHjkB,IAAI,EAAE5H,SAD+G;IAErH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,4BAAZ;MAA0CC,QAAQ,i7DAAlD;MAiDdC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAjDnB;MAiDyBuF,eAAe,EAAErO,uBAAuB,CAACsO,MAjDlE;MAiD0EvF,MAAM,EAAE,CAAC,mtCAAD;IAjDlF,CAAD;EAF+G,CAAD,CAAhI,QAoD4B;IAAEjD,KAAK,EAAE,CAAC;MACtBsB,IAAI,EAAEzH;IADgB,CAAD,CAAT;IAEZyQ,IAAI,EAAE,CAAC;MACPhJ,IAAI,EAAEzH;IADC,CAAD,CAFM;IAIZ8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CAJI;IAMZ8O,KAAK,EAAE,CAAC;MACRrH,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CARA;IAUZwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CAVI;IAYZ+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAZE;IAcZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAdA;IAgBZknB,eAAe,EAAE,CAAC;MAClBhgB,IAAI,EAAEzH;IADY,CAAD,CAhBL;IAkBZ4rB,eAAe,EAAE,CAAC;MAClBnkB,IAAI,EAAEzH;IADY,CAAD,CAlBL;IAoBZ6rB,oBAAoB,EAAE,CAAC;MACvBpkB,IAAI,EAAEzH;IADiB,CAAD;EApBV,CApD5B;AAAA;;AA4EA,IAAMysB,UAAU,GAAG,CACf7H,aADe,EAEfnR,kBAFe,EAGfoT,gBAHe,EAIfsB,WAJe,EAKf/W,cALe,EAMfrB,eANe,EAOfX,oBAPe,EAQf3B,oBARe,EASfgU,eATe,EAUfU,qBAVe,EAWfwB,kBAXe,EAYfE,wBAZe,EAafxC,0BAbe,EAcfkD,0BAde,EAef4F,QAfe,EAgBfuB,uBAhBe,CAAnB;;IAkBMgB,iB;;;;AAENA,iBAAiB,CAACjkB,IAAlB;EAAA,iBAA8GikB,iBAA9G;AAAA;;AACAA,iBAAiB,CAACvP,IAAlB,kBAlvH0Gxd,EAkvH1G;EAAA,MAA+G+sB;AAA/G;AA+BAA,iBAAiB,CAACtP,IAAlB,kBAjxH0Gzd,EAixH1G;EAAA,UAA4I,CAACmB,YAAD,EAAeoc,UAAf,EAA2B2D,aAA3B,CAA5I,EAAuL/f,YAAvL,EAAqMoc,UAArM,EAAiN2D,aAAjN;AAAA;;AACA;EAAA,mDAlxH0GlhB,EAkxH1G,mBAA2F+sB,iBAA3F,EAA0H,CAAC;IAC/GjlB,IAAI,EAAEhH,QADyG;IAE/G+C,IAAI,EAAE,CAAC;MACC6Z,OAAO,EAAE,CAACvc,YAAD,EAAeoc,UAAf,EAA2B2D,aAA3B,CADV;MAECvD,YAAY,YAAMmP,UAAN,GAAkBja,kBAAlB,EAFb;MAGC+K,OAAO,GAAGzc,YAAH,EAAiBoc,UAAjB,EAA6B2D,aAA7B,SAA+C4L,UAA/C,GAA2Dja,kBAA3D;IAHR,CAAD;EAFyG,CAAD,CAA1H;AAAA;;AASA,SAASma,uBAAT,QAAqR;EAAA,IAAlPxmB,KAAkP,SAAlPA,KAAkP;EAAA,IAA3OP,MAA2O,SAA3OA,MAA2O;EAAA,IAAnOgnB,OAAmO,SAAnOA,OAAmO;EAAA,4BAA1NC,SAA0N;EAAA,IAA1NA,SAA0N,gCAA9M,KAA8M;EAAA,4BAAvMC,SAAuM;EAAA,IAAvMA,SAAuM,gCAA3L,KAA2L;EAAA,8BAApLC,WAAoL;EAAA,IAApLA,WAAoL,kCAAtK,CAAsK;EAAA,6BAAnKC,UAAmK;EAAA,IAAnKA,UAAmK,iCAAtJ,CAAsJ;EAAA,6BAAnJC,UAAmJ;EAAA,IAAnJA,UAAmJ,iCAAtI,KAAsI;EAAA,6BAA/HC,UAA+H;EAAA,IAA/HA,UAA+H,iCAAlH,KAAkH;EAAA,6BAA3G7b,UAA2G;EAAA,IAA3GA,UAA2G,iCAA9F,KAA8F;EAAA,6BAAvFM,UAAuF;EAAA,IAAvFA,UAAuF,iCAA1EnE,SAAS,CAACqG,OAAgE;EAAA,iCAAvDsZ,cAAuD;EAAA,IAAvDA,cAAuD,qCAAtC7f,cAAc,CAACpH,KAAuB;EAAA,0BAAhBknB,OAAgB;EAAA,IAAhBA,OAAgB,8BAAN,EAAM;EACjR,IAAIC,OAAO,GAAGT,OAAO,CAAC,CAAD,CAArB;EACA,IAAI5a,UAAU,GAAG7L,KAAjB;EACA,IAAImnB,WAAW,GAAG1nB,MAAM,GAAGgnB,OAAO,CAAC,CAAD,CAAhB,GAAsBA,OAAO,CAAC,CAAD,CAA/C;;EACA,IAAIvb,UAAU,IAAI8b,cAAc,KAAK7f,cAAc,CAACpH,KAApD,EAA2D;IACvD,IAAIyL,UAAU,KAAKnE,SAAS,CAACqG,OAA7B,EAAsC;MAClCuZ,OAAO,IAAI,CAAX;IACH,CAFD,MAGK;MACDA,OAAO,IAAI,CAAX;IACH;EACJ;;EACDpb,UAAU,GAAIA,UAAU,GAAGob,OAAd,GAAyB,EAAtC;EACApb,UAAU,GAAGA,UAAU,GAAG4a,OAAO,CAAC,CAAD,CAApB,GAA0BA,OAAO,CAAC,CAAD,CAA9C;;EACA,IAAIC,SAAJ,EAAe;IACXS,WAAW,IAAI,CAAf;IACAA,WAAW,IAAIP,WAAf;;IACA,IAAIE,UAAJ,EAAgB;MACZ;MACA,IAAM/W,MAAM,GAAG,KAAK,CAApB;MACAoX,WAAW,IAAIpX,MAAf;IACH;EACJ;;EACD,IAAI4W,SAAJ,EAAe;IACX9a,UAAU,IAAI,CAAd;IACAA,UAAU,IAAIgb,UAAd;IACAK,OAAO,IAAIL,UAAX;IACAK,OAAO,IAAI,EAAX;;IACA,IAAIH,UAAJ,EAAgB;MACZ;MACA,IAAMhX,OAAM,GAAG,KAAK,CAApB;;MACAlE,UAAU,IAAIkE,OAAd;MACAmX,OAAO,IAAInX,OAAX;IACH;EACJ;;EACDlE,UAAU,GAAGzD,IAAI,CAAC9L,GAAL,CAAS,CAAT,EAAYuP,UAAZ,CAAb;EACAsb,WAAW,GAAG/e,IAAI,CAAC9L,GAAL,CAAS,CAAT,EAAY6qB,WAAZ,CAAd;EACA,OAAO;IACHnnB,KAAK,EAAEoI,IAAI,CAAC0D,KAAL,CAAWD,UAAX,CADJ;IAEHpM,MAAM,EAAE2I,IAAI,CAAC0D,KAAL,CAAWqb,WAAX,CAFL;IAGHD,OAAO,EAAE9e,IAAI,CAAC0D,KAAL,CAAWob,OAAX;EAHN,CAAP;AAKH;;AAED,IAAME,SAAS,GAAG,CACd;EACI5d,IAAI,EAAE,OADV;EAEI6d,UAAU,EAAE,IAFhB;EAGI9E,KAAK,EAAElb,SAAS,CAACqG,OAHrB;EAII9F,MAAM,EAAE,CACJ,SADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,SALI,EAMJ,SANI,EAOJ,SAPI,EAQJ,SARI,EASJ,SATI,EAUJ,SAVI;AAJZ,CADc,EAkBd;EACI4B,IAAI,EAAE,SADV;EAEI6d,UAAU,EAAE,IAFhB;EAGI9E,KAAK,EAAElb,SAAS,CAACqG,OAHrB;EAII9F,MAAM,EAAE,CACJ,SADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,SALI,EAMJ,SANI,EAOJ,SAPI,EAQJ,SARI,EASJ,SATI,EAUJ,SAVI;AAJZ,CAlBc,EAmCd;EACI4B,IAAI,EAAE,MADV;EAEI6d,UAAU,EAAE,IAFhB;EAGI9E,KAAK,EAAElb,SAAS,CAACqG,OAHrB;EAII9F,MAAM,EAAE,CACJ,SADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,SALI,EAMJ,SANI,EAOJ,SAPI,EAQJ,SARI,EASJ,SATI,EAUJ,SAVI;AAJZ,CAnCc,EAoDd;EACI4B,IAAI,EAAE,MADV;EAEI6d,UAAU,EAAE,IAFhB;EAGI9E,KAAK,EAAElb,SAAS,CAACqG,OAHrB;EAII9F,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E;AAJZ,CApDc,EA0Dd;EACI4B,IAAI,EAAE,OADV;EAEI6d,UAAU,EAAE,IAFhB;EAGI9E,KAAK,EAAElb,SAAS,CAAC6E,MAHrB;EAIItE,MAAM,EAAE,CACJ,SADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,SALI,EAMJ,SANI,EAOJ,SAPI,EAQJ,SARI,EASJ,SATI,EAUJ,SAVI;AAJZ,CA1Dc,EA2Ed;EACI4B,IAAI,EAAE,KADV;EAEI6d,UAAU,EAAE,IAFhB;EAGI9E,KAAK,EAAElb,SAAS,CAAC6E,MAHrB;EAIItE,MAAM,EAAE,CACJ,SADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,SALI,EAMJ,SANI,EAOJ,SAPI,EAQJ,SARI,EASJ,SATI,EAUJ,SAVI;AAJZ,CA3Ec,EA4Fd;EACI4B,IAAI,EAAE,MADV;EAEI6d,UAAU,EAAE,IAFhB;EAGI9E,KAAK,EAAElb,SAAS,CAAC6E,MAHrB;EAIItE,MAAM,EAAE,CACJ,SADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,SALI,EAMJ,SANI,EAOJ,SAPI,EAQJ,SARI,EASJ,SATI,EAUJ,SAVI;AAJZ,CA5Fc,EA6Gd;EACI4B,IAAI,EAAE,OADV;EAEI6d,UAAU,EAAE,KAFhB;EAGI9E,KAAK,EAAElb,SAAS,CAACqG,OAHrB;EAII9F,MAAM,EAAE,CACJ,SADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,SALI,EAMJ,SANI,EAOJ,SAPI,EAQJ,SARI,EASJ,SATI,EAUJ,SAVI;AAJZ,CA7Gc,EA8Hd;EACI4B,IAAI,EAAE,OADV;EAEI6d,UAAU,EAAE,KAFhB;EAGI9E,KAAK,EAAElb,SAAS,CAACqG,OAHrB;EAII9F,MAAM,EAAE,CACJ,SADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,SALI,EAMJ,SANI,EAOJ,SAPI,EAQJ,SARI,EASJ,SATI,EAUJ,SAVI;AAJZ,CA9Hc,EA+Id;EACI4B,IAAI,EAAE,QADV;EAEI6d,UAAU,EAAE,KAFhB;EAGI9E,KAAK,EAAElb,SAAS,CAACqG,OAHrB;EAII9F,MAAM,EAAE,CACJ,SADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,SALI,EAMJ,SANI,EAOJ,SAPI,EAQJ,SARI,EASJ,SATI,EAUJ,SAVI;AAJZ,CA/Ic,EAgKd;EACI4B,IAAI,EAAE,SADV;EAEI6d,UAAU,EAAE,KAFhB;EAGI9E,KAAK,EAAElb,SAAS,CAACqG,OAHrB;EAII9F,MAAM,EAAE,CACJ,SADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,SALI,EAMJ,SANI,EAOJ,SAPI,EAQJ,SARI,EASJ,SATI,EAUJ,SAVI;AAJZ,CAhKc,EAiLd;EACI4B,IAAI,EAAE,OADV;EAEI6d,UAAU,EAAE,KAFhB;EAGI9E,KAAK,EAAElb,SAAS,CAACqG,OAHrB;EAII9F,MAAM,EAAE,CACJ,SADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,SALI,EAMJ,SANI,EAOJ,SAPI,EAQJ,SARI,EASJ,SATI,EAUJ,SAVI;AAJZ,CAjLc,EAkMd;EACI4B,IAAI,EAAE,QADV;EAEI6d,UAAU,EAAE,KAFhB;EAGI9E,KAAK,EAAElb,SAAS,CAACqG,OAHrB;EAII9F,MAAM,EAAE,CACJ,SADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,SALI,EAMJ,SANI,EAOJ,SAPI,EAQJ,SARI,EASJ,SATI,EAUJ,SAVI;AAJZ,CAlMc,EAmNd;EACI4B,IAAI,EAAE,OADV;EAEI6d,UAAU,EAAE,KAFhB;EAGI9E,KAAK,EAAElb,SAAS,CAACqG,OAHrB;EAII9F,MAAM,EAAE,CACJ,SADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,SALI,EAMJ,SANI,EAOJ,SAPI,EAQJ,SARI,EASJ,SATI,EAUJ,SAVI,EAWJ,SAXI,EAYJ,SAZI,EAaJ,SAbI,EAcJ,SAdI,EAeJ,SAfI;AAJZ,CAnNc,EAyOd;EACI4B,IAAI,EAAE,aADV;EAEI6d,UAAU,EAAE,KAFhB;EAGI9E,KAAK,EAAElb,SAAS,CAACqG,OAHrB;EAII9F,MAAM,EAAE,CACJ,SADI,EAEJ,SAFI,EAGJ,SAHI,EAIJ,SAJI,EAKJ,SALI,EAMJ,SANI,EAOJ,SAPI,EAQJ,SARI,EASJ,SATI,EAUJ,SAVI,EAWJ,SAXI,EAYJ,SAZI,EAaJ,SAbI,EAcJ,SAdI,EAeJ,SAfI;AAJZ,CAzOc,CAAlB;;IAiQM0f,W;EACF,qBAAY9Z,MAAZ,EAAoBlM,IAApB,EAA0BsG,MAA1B,EAAkCyH,YAAlC,EAAgD;IAAA;;IAC5C,IAAI,OAAO7B,MAAP,KAAkB,QAAtB,EAAgC;MAC5BA,MAAM,GAAG4Z,SAAS,CAACxc,IAAV,CAAe,UAAA2c,EAAE,EAAI;QAC1B,OAAOA,EAAE,CAAC/d,IAAH,KAAYgE,MAAnB;MACH,CAFQ,CAAT;IAGH;;IACD,KAAKga,WAAL,GAAmBha,MAAM,CAAC5F,MAA1B;IACA,KAAKqE,SAAL,GAAiB3K,IAAjB;IACA,KAAKsG,MAAL,GAAcA,MAAd;IACA,KAAKyH,YAAL,GAAoBA,YAApB;IACA,KAAKyC,KAAL,GAAa,KAAK2V,mBAAL,CAAyBja,MAAzB,EAAiClM,IAAjC,EAAuC,KAAKsG,MAA5C,CAAb;EACH;;;;WACD,6BAAoB4F,MAApB,EAA4BlM,IAA5B,EAAkCsG,MAAlC,EAA0C;MACtC,IAAI,OAAO4F,MAAP,KAAkB,QAAtB,EAAgC;QAC5BA,MAAM,GAAG4Z,SAAS,CAACxc,IAAV,CAAe,UAAA2c,EAAE,EAAI;UAC1B,OAAOA,EAAE,CAAC/d,IAAH,KAAYgE,MAAnB;QACH,CAFQ,CAAT;MAGH;;MACD,IAAIka,UAAJ;;MACA,QAAQpmB,IAAR;QACI,KAAK+F,SAAS,CAACsgB,QAAf;UACID,UAAU,GAAG/rB,aAAa,GACrBS,KADQ,CACFoR,MAAM,CAAC5F,MADL,EAERA,MAFQ,CAEDA,MAFC,CAAb;UAGA;;QACJ,KAAKP,SAAS,CAACqG,OAAf;UACIga,UAAU,GAAGhsB,YAAY,GACpBU,KADQ,CACFoR,MAAM,CAAC5F,MADL,EAERA,MAFQ,CAEDA,MAFC,CAAb;UAGA;;QACJ,KAAKP,SAAS,CAAC6E,MAAf;UACI;YACI,IAAMsb,WAAW,sBAAOha,MAAM,CAAC5F,MAAd,CAAjB;;YACA,IAAI4f,WAAW,CAACpjB,MAAZ,KAAuB,CAA3B,EAA8B;cAC1BojB,WAAW,CAACtiB,IAAZ,CAAiBsiB,WAAW,CAAC,CAAD,CAA5B;cACA,KAAKA,WAAL,GAAmBA,WAAnB;YACH;;YACD,IAAMI,MAAM,GAAGxrB,KAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,MAAMorB,WAAW,CAACpjB,MAAzB,CAApB;YACAsjB,UAAU,GAAGlsB,WAAW,GACnBY,KADQ,CACForB,WADE,EAER5f,MAFQ,CAEDggB,MAFC,CAAb;UAGH;UACD;;QACJ;UACI;MAzBR;;MA2BA,OAAOF,UAAP;IACH;;;WACD,kBAAS3oB,KAAT,EAAgB;MACZ,IAAIA,KAAK,KAAKY,SAAV,IAAuBZ,KAAK,KAAK,IAArC,EAA2C;QACvC,MAAM,IAAI4G,KAAJ,CAAU,uBAAV,CAAN;MACH;;MACD,IAAI,KAAKsG,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QACrC,IAAM2b,UAAU,GAAGrsB,WAAW,GACzBoM,MADc,CACP,KAAKA,MADE,EAEdxL,KAFc,CAER,CAAC,CAAD,EAAI,CAAJ,CAFQ,CAAnB;QAGA,OAAO,KAAK0V,KAAL,CAAW+V,UAAU,CAAC9oB,KAAD,CAArB,CAAP;MACH,CALD,MAMK;QACD,IAAI,OAAO,KAAKsQ,YAAZ,KAA6B,UAAjC,EAA6C;UACzC,OAAO,KAAKA,YAAL,CAAkBtQ,KAAlB,CAAP;QACH;;QACD,IAAM+oB,cAAc,GAAG/oB,KAAK,CAACoO,QAAN,EAAvB;QACA,IAAI4a,KAAJ,CALC,CAKU;;QACX,IAAI,KAAK1Y,YAAL,IAAqB,KAAKA,YAAL,CAAkBjL,MAAlB,GAA2B,CAApD,EAAuD;UACnD2jB,KAAK,GAAG,KAAK1Y,YAAL,CAAkBzE,IAAlB,CAAuB,UAAAod,OAAO,EAAI;YACtC,OAAOA,OAAO,CAACxe,IAAR,CAAaye,WAAb,OAA+BH,cAAc,CAACG,WAAf,EAAtC;UACH,CAFO,CAAR;QAGH;;QACD,IAAIF,KAAJ,EAAW;UACP,OAAOA,KAAK,CAAChpB,KAAb;QACH,CAFD,MAGK;UACD,OAAO,KAAK+S,KAAL,CAAW/S,KAAX,CAAP;QACH;MACJ;IACJ;;;WACD,gCAAuBA,KAAvB,EAA8BoiB,KAA9B,EAAqC;MACjC,IAAIA,KAAK,KAAKxhB,SAAd,EAAyB;QACrBwhB,KAAK,GAAG,KAAKvZ,MAAL,CAAY,CAAZ,CAAR;MACH;;MACD,IAAMigB,UAAU,GAAGrsB,WAAW,GACzBoM,MADc,CACP,KAAKA,MADE,EAEdxL,KAFc,CAER,CAAC,CAAD,EAAI,CAAJ,CAFQ,CAAnB;MAGA,IAAM8rB,eAAe,GAAGtsB,SAAS,GAAGgM,MAAZ,CAAmB,KAAK4f,WAAxB,EAAqCprB,KAArC,CAA2C,CAAC,CAAD,EAAI,CAAJ,CAA3C,CAAxB;MACA,IAAM+rB,QAAQ,GAAG,KAAK3d,QAAL,CAAczL,KAAd,CAAjB,CARiC,CASjC;;MACA,IAAM6gB,QAAQ,GAAGiI,UAAU,CAAC1G,KAAD,CAA3B;MACA,IAAMiH,UAAU,GAAG,KAAK5d,QAAL,CAAc2W,KAAd,CAAnB;MACA,IAAMtB,MAAM,GAAGgI,UAAU,CAAC9oB,KAAD,CAAzB;MACA,IAAI4F,CAAC,GAAG,CAAR;MACA,IAAI0jB,UAAU,GAAGzI,QAAjB;MACA,IAAMvE,KAAK,GAAG,EAAd;MACAA,KAAK,CAACnW,IAAN,CAAW;QACPuE,KAAK,EAAE2e,UADA;QAEPrY,MAAM,EAAE6P,QAFD;QAGP0I,cAAc,EAAE1I,QAHT;QAIPxC,OAAO,EAAE;MAJF,CAAX;;MAMA,OAAOiL,UAAU,GAAGxI,MAAb,IAAuBlb,CAAC,GAAG,KAAK6iB,WAAL,CAAiBpjB,MAAnD,EAA2D;QACvD,IAAMqF,KAAK,GAAG,KAAK+d,WAAL,CAAiB7iB,CAAjB,CAAd;QACA,IAAMoL,MAAM,GAAGmY,eAAe,CAACze,KAAD,CAA9B;;QACA,IAAIsG,MAAM,IAAI6P,QAAd,EAAwB;UACpBjb,CAAC;UACD;QACH;;QACD,IAAIoL,MAAM,CAAC2S,OAAP,CAAe,CAAf,KAAqB,CAAC7C,MAAM,GAAGqI,eAAe,CAAC5V,SAAhB,EAAV,EAAuCoQ,OAAvC,CAA+C,CAA/C,CAAzB,EAA4E;UACxE;QACH;;QACDrH,KAAK,CAACnW,IAAN,CAAW;UACPuE,KAAK,EAALA,KADO;UAEPsG,MAAM,EAANA,MAFO;UAGPqN,OAAO,EAAE;QAHF,CAAX;QAKAiL,UAAU,GAAGtY,MAAb;QACApL,CAAC;MACJ;;MACD,IAAI0W,KAAK,CAACA,KAAK,CAACjX,MAAN,GAAe,CAAhB,CAAL,CAAwB2L,MAAxB,GAAiC,GAArC,EAA0C;QACtCsL,KAAK,CAACnW,IAAN,CAAW;UACPuE,KAAK,EAAE0e,QADA;UAEPpY,MAAM,EAAE8P,MAFD;UAGPzC,OAAO,EAAE;QAHF,CAAX;MAKH;;MACD,IAAIyC,MAAM,KAAKD,QAAf,EAAyB;QACrBvE,KAAK,CAAC,CAAD,CAAL,CAAStL,MAAT,GAAkB,CAAlB;QACAsL,KAAK,CAAC,CAAD,CAAL,CAAStL,MAAT,GAAkB,GAAlB;MACH,CAHD,MAIK;QACD;QACA,IAAIsL,KAAK,CAACA,KAAK,CAACjX,MAAN,GAAe,CAAhB,CAAL,CAAwB2L,MAAxB,KAAmC,GAAvC,EAA4C;UAAA,4CACxBsL,KADwB;UAAA;;UAAA;YACxC,uDAAuB;cAAA,IAAZpL,CAAY;cACnBA,CAAC,CAACF,MAAF,GAAY,CAACE,CAAC,CAACF,MAAF,GAAW6P,QAAZ,KAAyBC,MAAM,GAAGD,QAAlC,CAAD,GAAgD,GAA3D;YACH;UAHuC;YAAA;UAAA;YAAA;UAAA;QAI3C;MACJ;;MACD,OAAOvE,KAAP;IACH;;;;;AAGL;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkN,sBAAT,CAAgCva,OAAhC,EAAyC;EACrC,IAAMwa,QAAQ,GAAG,IAAIC,GAAJ,EAAjB;;EADqC,6CAEhBza,OAFgB;EAAA;;EAAA;IAErC,0DAA8B;MAAA,IAAnB1Q,MAAmB;;MAAA,6CACVA,MAAM,CAACiR,MADG;MAAA;;MAAA;QAC1B,0DAA+B;UAAA,IAApB1D,CAAoB;UAC3B2d,QAAQ,CAACE,GAAT,CAAa7d,CAAC,CAACrB,IAAf;QACH;MAHyB;QAAA;MAAA;QAAA;MAAA;IAI7B;EANoC;IAAA;EAAA;IAAA;EAAA;;EAOrC,OAAOgS,KAAK,CAACmN,IAAN,CAAWH,QAAX,CAAP;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASI,YAAT,CAAsB/D,MAAtB,EAAoD;EAAA,IAAtBgE,aAAsB,uEAAN,IAAM;;EAChD,IAAIA,aAAJ,EAAmB;IACf,IAAMC,QAAQ,GAAGjE,MAAM,CAACkE,KAAP,CAAa,UAAAhqB,KAAK;MAAA,OAAIA,KAAK,YAAYpB,IAArB;IAAA,CAAlB,CAAjB;;IACA,IAAImrB,QAAJ,EAAc;MACV,OAAOzhB,SAAS,CAAC2V,IAAjB;IACH;EACJ;;EACD,IAAMgM,UAAU,GAAGnE,MAAM,CAACkE,KAAP,CAAa,UAAAhqB,KAAK;IAAA,OAAI,OAAOA,KAAP,KAAiB,QAArB;EAAA,CAAlB,CAAnB;;EACA,IAAIiqB,UAAJ,EAAgB;IACZ,OAAO3hB,SAAS,CAAC6E,MAAjB;EACH;;EACD,OAAO7E,SAAS,CAACqG,OAAjB;AACH;;AACD,SAASub,eAAT,CAAyBpE,MAAzB,EAAiCqE,SAAjC,EAA4CC,SAA5C,EAAuD;EACnD,IAAMld,SAAS,GAAG2c,YAAY,CAAC/D,MAAD,CAA9B;EACA,IAAI5B,IAAI,GAAG,EAAX;EACA,IAAIrb,MAAM,GAAG,EAAb;;EACA,IAAIqE,SAAS,KAAK5E,SAAS,CAAC6E,MAA5B,EAAoC;IAChC2Y,MAAM,GAAGA,MAAM,CAAC3O,GAAP,CAAW,UAAAyM,CAAC;MAAA,OAAI1F,MAAM,CAAC0F,CAAD,CAAV;IAAA,CAAZ,CAAT;EACH;;EACD,IAAItmB,GAAJ;EACA,IAAIC,GAAJ;;EACA,IAAI2P,SAAS,KAAK5E,SAAS,CAAC2V,IAAxB,IAAgC/Q,SAAS,KAAK5E,SAAS,CAAC6E,MAA5D,EAAoE;IAChE,IAAMkd,YAAY,GAAGvE,MAAM,CAAC3O,GAAP,CAAW,UAAAyM,CAAC;MAAA,OAAI1F,MAAM,CAAC0F,CAAD,CAAV;IAAA,CAAZ,CAArB;IACAtmB,GAAG,GAAG6sB,SAAS,GAAGA,SAAH,GAAe9gB,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQghB,YAAR,EAAlC;IACA9sB,GAAG,GAAG6sB,SAAS,GAAGA,SAAH,GAAe/gB,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQghB,YAAR,EAAlC;EACH;;EACD,IAAInd,SAAS,KAAK5E,SAAS,CAAC2V,IAA5B,EAAkC;IAC9BpV,MAAM,GAAG,CAAC,IAAIjK,IAAJ,CAAStB,GAAT,CAAD,EAAgB,IAAIsB,IAAJ,CAASrB,GAAT,CAAhB,CAAT;IACA2mB,IAAI,GAAG,mBAAI4B,MAAJ,EAAYwE,IAAZ,CAAiB,UAACC,CAAD,EAAIjK,CAAJ,EAAU;MAC9B,IAAMkK,KAAK,GAAGD,CAAC,CAACE,OAAF,EAAd;MACA,IAAMC,KAAK,GAAGpK,CAAC,CAACmK,OAAF,EAAd;MACA,IAAID,KAAK,GAAGE,KAAZ,EACI,OAAO,CAAP;MACJ,IAAIA,KAAK,GAAGF,KAAZ,EACI,OAAO,CAAC,CAAR;MACJ,OAAO,CAAP;IACH,CARM,CAAP;EASH,CAXD,MAYK,IAAItd,SAAS,KAAK5E,SAAS,CAAC6E,MAA5B,EAAoC;IACrCtE,MAAM,GAAG,CAACvL,GAAD,EAAMC,GAAN,CAAT,CADqC,CAErC;;IACA2mB,IAAI,GAAG,mBAAI4B,MAAJ,EAAYwE,IAAZ,CAAiB,UAACC,CAAD,EAAIjK,CAAJ;MAAA,OAAUiK,CAAC,GAAGjK,CAAd;IAAA,CAAjB,CAAP;EACH,CAJI,MAKA;IACDzX,MAAM,GAAGid,MAAT;IACA5B,IAAI,GAAG4B,MAAP;EACH;;EACD,OAAO;IAAEjd,MAAM,EAANA,MAAF;IAAUqb,IAAI,EAAJA,IAAV;IAAgBhX,SAAS,EAATA;EAAhB,CAAP;AACH;;AAED,SAASyd,UAAT,CAAoBpf,IAApB,EAA0Bqf,QAA1B,EAAuD;EAAA,IAAnB9hB,SAAmB,uEAAP,KAAO;EACnD,OAAOyC,IAAI,CAAC+e,IAAL,CAAU,UAACC,CAAD,EAAIjK,CAAJ,EAAU;IACvB,IAAIxX,SAAS,KAAK,KAAlB,EAAyB;MACrB,OAAOyhB,CAAC,CAACK,QAAD,CAAD,GAActK,CAAC,CAACsK,QAAD,CAAtB;IACH,CAFD,MAGK;MACD,OAAOtK,CAAC,CAACsK,QAAD,CAAD,GAAcL,CAAC,CAACK,QAAD,CAAtB;IACH;EACJ,CAPM,CAAP;AAQH;;AACD,SAASC,YAAT,CAAsBtf,IAAtB,EAA4Bqf,QAA5B,EAAiE;EAAA,IAA3B9hB,SAA2B,uEAAf,KAAe;EAAA,IAARD,MAAQ;EAC7D,OAAO0C,IAAI,CAAC+e,IAAL,CAAU,UAACC,CAAD,EAAIjK,CAAJ,EAAU;IACvB,IAAMwK,IAAI,GAAGP,CAAC,CAACK,QAAD,CAAd;IACA,IAAMG,IAAI,GAAGzK,CAAC,CAACsK,QAAD,CAAd;IACA,IAAMI,IAAI,GAAGniB,MAAM,CAACtD,OAAP,CAAeulB,IAAf,CAAb;IACA,IAAMG,IAAI,GAAGpiB,MAAM,CAACtD,OAAP,CAAewlB,IAAf,CAAb;;IACA,IAAIjiB,SAAS,KAAK,KAAlB,EAAyB;MACrB,OAAOkiB,IAAI,GAAGC,IAAd;IACH,CAFD,MAGK;MACD,OAAOA,IAAI,GAAGD,IAAd;IACH;EACJ,CAXM,CAAP;AAYH;;AACD,SAASE,UAAT,CAAoB3f,IAApB,EAA0Bqf,QAA1B,EAAuD;EAAA,IAAnB9hB,SAAmB,uEAAP,KAAO;EACnD,OAAOyC,IAAI,CAAC+e,IAAL,CAAU,UAACC,CAAD,EAAIjK,CAAJ,EAAU;IACvB,IAAMkK,KAAK,GAAGD,CAAC,CAACK,QAAD,CAAD,CAAYH,OAAZ,EAAd;IACA,IAAMC,KAAK,GAAGpK,CAAC,CAACsK,QAAD,CAAD,CAAYH,OAAZ,EAAd;;IACA,IAAI3hB,SAAS,KAAK,KAAlB,EAAyB;MACrB,IAAI0hB,KAAK,GAAGE,KAAZ,EACI,OAAO,CAAP;MACJ,IAAIA,KAAK,GAAGF,KAAZ,EACI,OAAO,CAAC,CAAR;MACJ,OAAO,CAAP;IACH,CAND,MAOK;MACD,IAAIA,KAAK,GAAGE,KAAZ,EACI,OAAO,CAAC,CAAR;MACJ,IAAIA,KAAK,GAAGF,KAAZ,EACI,OAAO,CAAP;MACJ,OAAO,CAAP;IACH;EACJ,CAjBM,CAAP;AAkBH;;IAEKW,mB;EACF,+BAAc;IAAA;;IACV,KAAKC,SAAL,GAAiB,MAAjB;IACA,KAAKC,OAAL,GAAe,KAAf;IACA,KAAKC,UAAL,GAAkB,KAAlB;IACA,KAAKlf,UAAL,GAAkB,IAAlB;IACA,KAAK9P,MAAL,GAAc,IAAIlB,YAAJ,EAAd;EACH;;;;WACD,qBAAYqN,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MAAA;;MACL,KAAKogB,cAAL;MACA,IAAIC,WAAJ;MACA,IAAIC,YAAJ;;MACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAA5f,CAAC,EAAI;QACnB,IAAMlC,KAAK,GAAGkC,CAAC,CAACrB,IAAhB;QACA,OAAO,OAAI,CAAC6K,MAAL,CAAY1L,KAAZ,CAAP;MACH,CAHD;;MAIA,IAAI,KAAKyhB,OAAL,IAAgB,KAAKC,UAAzB,EAAqC;QACjCE,WAAW,GAAG1uB,IAAI,GACbuJ,CADS,CACPqlB,SADO,EAETC,EAFS,CAEN,UAAC7f,CAAD,EAAIlG,CAAJ;UAAA,OAAU,OAAI,CAACmS,MAAL,CAAYjM,CAAC,CAAC4X,EAAd,CAAV;QAAA,CAFM,EAGT7M,EAHS,CAGN,UAAC/K,CAAD,EAAIlG,CAAJ;UAAA,OAAU,OAAI,CAACmS,MAAL,CAAYjM,CAAC,CAACqS,EAAd,CAAV;QAAA,CAHM,CAAd;QAIAsN,YAAY,GAAG3uB,IAAI,GACduJ,CADU,CACRqlB,SADQ,EAEVC,EAFU,CAEP,UAAA7f,CAAC;UAAA,OAAI,OAAI,CAACiM,MAAL,CAAY1a,KAAZ,GAAoB,CAApB,CAAJ;QAAA,CAFM,EAGVwZ,EAHU,CAGP,UAAA/K,CAAC;UAAA,OAAI,OAAI,CAACiM,MAAL,CAAY1a,KAAZ,GAAoB,CAApB,CAAJ;QAAA,CAHM,CAAf;MAIH,CATD,MAUK;QACDmuB,WAAW,GAAG1uB,IAAI,GACbuJ,CADS,CACPqlB,SADO,EAETC,EAFS,CAEN;UAAA,OAAO,OAAI,CAACP,SAAL,KAAmB,MAAnB,GAA4B,OAAI,CAACrT,MAAL,CAAY1a,KAAZ,GAAoB,CAApB,CAA5B,GAAqD,OAAI,CAAC0a,MAAL,CAAY,OAAI,CAACqT,SAAjB,CAA5D;QAAA,CAFM,EAGTvU,EAHS,CAGN,UAAA/K,CAAC;UAAA,OAAI,OAAI,CAACiM,MAAL,CAAYjM,CAAC,CAAC9L,KAAd,CAAJ;QAAA,CAHK,CAAd;QAIAyrB,YAAY,GAAG3uB,IAAI,GACduJ,CADU,CACRqlB,SADQ,EAEVC,EAFU,CAEP,UAAA7f,CAAC;UAAA,OAAK,OAAI,CAACsf,SAAL,KAAmB,MAAnB,GAA4B,OAAI,CAACrT,MAAL,CAAY1a,KAAZ,GAAoB,CAApB,CAA5B,GAAqD,OAAI,CAAC0a,MAAL,CAAY,OAAI,CAACqT,SAAjB,CAA1D;QAAA,CAFM,EAGVvU,EAHU,CAGP,UAAA/K,CAAC;UAAA,OAAK,OAAI,CAACsf,SAAL,KAAmB,MAAnB,GAA4B,OAAI,CAACrT,MAAL,CAAY1a,KAAZ,GAAoB,CAApB,CAA5B,GAAqD,OAAI,CAAC0a,MAAL,CAAY,OAAI,CAACqT,SAAjB,CAA1D;QAAA,CAHM,CAAf;MAIH;;MACDI,WAAW,CAACI,KAAZ,CAAkB,KAAKA,KAAvB;MACAH,YAAY,CAACG,KAAb,CAAmB,KAAKA,KAAxB;MACA,KAAKvN,OAAL,GAAe,GAAf;MACA,IAAI9S,IAAI,GAAG,KAAKA,IAAL,CAAUiE,MAArB;;MACA,IAAI,KAAKtC,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QACrC5B,IAAI,GAAGof,UAAU,CAACpf,IAAD,EAAO,MAAP,CAAjB;MACH,CAFD,MAGK,IAAI,KAAK2B,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACxC1S,IAAI,GAAG2f,UAAU,CAAC3f,IAAD,EAAO,MAAP,CAAjB;MACH,CAFI,MAGA;QACDA,IAAI,GAAGsf,YAAY,CAACtf,IAAD,EAAO,MAAP,EAAe,KAAf,EAAsB,KAAK+J,MAAL,CAAYzM,MAAZ,EAAtB,CAAnB;MACH;;MACD,KAAKuX,IAAL,GAAYoL,WAAW,CAACjgB,IAAD,CAAvB;MACA,KAAK0U,YAAL,GAAoBwL,YAAY,CAAClgB,IAAD,CAAhC;IACH;;;WACD,0BAAiB;MACb,IAAI,KAAK3C,MAAL,CAAYsE,SAAZ,KAA0B5E,SAAS,CAAC6E,MAAxC,EAAgD;QAC5C,KAAKyS,WAAL,GAAmB,IAAnB;;QACA,IAAI,KAAKyL,OAAL,IAAgB,KAAKC,UAAzB,EAAqC;UACjC,IAAMO,QAAQ,GAAG,KAAKtgB,IAAL,CAAUiE,MAAV,CAAiB2H,GAAjB,CAAqB,UAAArL,CAAC;YAAA,OAAIA,CAAC,CAAC4X,EAAN;UAAA,CAAtB,CAAjB;UACA,IAAMoI,QAAQ,GAAG,KAAKvgB,IAAL,CAAUiE,MAAV,CAAiB2H,GAAjB,CAAqB,UAAArL,CAAC;YAAA,OAAIA,CAAC,CAACqS,EAAN;UAAA,CAAtB,CAAjB;;UACA,IAAM5gB,KAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyiB,QAAR,EAAhB;;UACA,IAAMxuB,KAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQwiB,QAAR,EAAhB;;UACA,KAAKvN,aAAL,GAAqB,KAAK1V,MAAL,CAAYmjB,sBAAZ,CAAmCxuB,KAAnC,EAAwCD,KAAxC,CAArB;QACH,CAND,MAOK;UACD,IAAMwoB,MAAM,GAAG,KAAKva,IAAL,CAAUiE,MAAV,CAAiB2H,GAAjB,CAAqB,UAAArL,CAAC;YAAA,OAAIA,CAAC,CAAC9L,KAAN;UAAA,CAAtB,CAAf;;UACA,IAAMzC,KAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAAhB;;UACA,KAAKxH,aAAL,GAAqB,KAAK1V,MAAL,CAAYmjB,sBAAZ,CAAmCxuB,KAAnC,CAArB;QACH;MACJ,CAdD,MAeK;QACD,KAAKqiB,WAAL,GAAmB,KAAnB;QACA,KAAKtB,aAAL,GAAqB1d,SAArB;MACH;IACJ;;;WACD,kBAAS8K,KAAT,EAAgB;MACZ,IAAI,CAAC,KAAKC,aAAV,EACI,OAAO,KAAP;MACJ,IAAMC,IAAI,GAAG,KAAKD,aAAL,CAAmBE,IAAnB,CAAwB,UAAAC,CAAC,EAAI;QACtC,OAAOJ,KAAK,CAACjB,IAAN,KAAeqB,CAAC,CAACrB,IAAxB;MACH,CAFY,CAAb;MAGA,OAAOmB,IAAI,KAAKhL,SAAhB;IACH;;;WACD,oBAAW8K,KAAX,EAAkB;MACd,IAAI,CAAC,KAAKC,aAAN,IAAuB,KAAKA,aAAL,CAAmBtG,MAAnB,KAA8B,CAAzD,EACI,OAAO,KAAP;MACJ,IAAMuG,IAAI,GAAG,KAAKD,aAAL,CAAmBE,IAAnB,CAAwB,UAAAC,CAAC,EAAI;QACtC,OAAOJ,KAAK,CAACjB,IAAN,KAAeqB,CAAC,CAACrB,IAAxB;MACH,CAFY,CAAb;MAGA,OAAOmB,IAAI,KAAKhL,SAAhB;IACH;;;;;;AAELuqB,mBAAmB,CAAC5nB,IAApB;EAAA,iBAAgH4nB,mBAAhH;AAAA;;AACAA,mBAAmB,CAACznB,IAApB,kBAt6I0GjJ,EAs6I1G;EAAA,MAAoG0wB,mBAApG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WAt6I0G1wB,EAs6I1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAt6I0GA,EAu6ItG,iBADJ;MAt6I0GA,EAu6ItG,qBADJ;IAAA;;IAAA;MAt6I0GA,EAk7IpG,oFAZN;MAt6I0GA,EA06IpG,4PAJN;IAAA;EAAA;EAAA,eAe0CilB,aAf1C;EAAA;EAAA;AAAA;;AAgBA;EAAA,mDAt7I0GjlB,EAs7I1G,mBAA2F0wB,mBAA3F,EAA4H,CAAC;IACjH5oB,IAAI,EAAE5H,SAD2G;IAEjH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,2BADX;MAECC,QAAQ,ubAFT;MAkBCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAlB1C,CAAD;EAF2G,CAAD,CAA5H,QAsB4B;IAAE8B,IAAI,EAAE,CAAC;MACrBhJ,IAAI,EAAEzH;IADe,CAAD,CAAR;IAEZwa,MAAM,EAAE,CAAC;MACT/S,IAAI,EAAEzH;IADG,CAAD,CAFI;IAIZid,MAAM,EAAE,CAAC;MACTxV,IAAI,EAAEzH;IADG,CAAD,CAJI;IAMZswB,SAAS,EAAE,CAAC;MACZ7oB,IAAI,EAAEzH;IADM,CAAD,CANC;IAQZ8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CARI;IAUZoS,SAAS,EAAE,CAAC;MACZ3K,IAAI,EAAEzH;IADM,CAAD,CAVC;IAYZuwB,OAAO,EAAE,CAAC;MACV9oB,IAAI,EAAEzH;IADI,CAAD,CAZG;IAcZwwB,UAAU,EAAE,CAAC;MACb/oB,IAAI,EAAEzH;IADO,CAAD,CAdA;IAgBZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CAhBE;IAkBZ8wB,KAAK,EAAE,CAAC;MACRrpB,IAAI,EAAEzH;IADE,CAAD,CAlBK;IAoBZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CApBH;IAsBZsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CAtBA;IAwBZwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD;EAxBI,CAtB5B;AAAA;;IAkDM2wB,kB;;;;;EACF,8BAAc;IAAA;;IAAA;;IACV,8BAAShtB,SAAT;IACA,QAAKsnB,MAAL,GAAc,KAAd;IACA,QAAK2F,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAKkrB,KAAL,GAAa,KAAb;IACA,QAAKC,KAAL,GAAa,KAAb;IACA,QAAKf,SAAL,GAAiB,MAAjB;IACA,QAAK7E,SAAL,GAAiB,KAAjB;IACA,QAAK6F,QAAL,GAAgB,KAAhB;IACA,QAAKpa,aAAL,GAAqB,IAArB;IACA,QAAK4Z,KAAL,GAAa7uB,WAAb;IACA,QAAK4O,aAAL,GAAqB,EAArB;IACA,QAAK0gB,cAAL,GAAsB,IAAtB;IACA,QAAKC,cAAL,GAAsB,IAAtB;IACA,QAAKC,gBAAL,GAAwB,IAAxB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,YAAL,GAAoB,KAApB;IACA,QAAK5T,eAAL,GAAuB,KAAvB;IACA,QAAK1O,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAKsV,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKmX,WAAL,GAAmB,CAAnB;IACA,QAAKC,UAAL,GAAkB,CAAlB;IACA,QAAK6E,cAAL,GAAsB,EAAtB;IACA,QAAKC,eAAL,GAAuB,EAAvB;;IACA,QAAKC,OAAL,GAAe,UAAC9gB,KAAD,EAAQH,IAAR,EAAiB;MAC5B,OAAOA,IAAI,CAACnB,IAAZ;IACH,CAFD;;IA3BU;EA8Bb;;;;WACD,kBAAS;MACL;;MACA,KAAK0E,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC7Z,UAAU,EAAE,KAAKiC,UAXe;QAYhCuZ,cAAc,EAAE,KAAKA;MAZW,CAAD,CAAnC;;MAcA,IAAI,KAAKmE,QAAT,EAAmB;QACf,KAAKjd,IAAL,CAAUzO,MAAV,IAAoB,KAAKisB,cAAL,GAAsB,KAAKjc,MAAL,CAAY,CAAZ,CAAtB,GAAuC,KAAKkc,eAAhE;MACH;;MACD,KAAKrH,OAAL,GAAe,KAAKC,UAAL,EAAf;;MACA,IAAI,KAAKwH,cAAT,EAAyB;QACrB,KAAKzH,OAAL,GAAe,KAAKyH,cAApB;MACH;;MACD,KAAKC,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,KAAKC,YAAL,GAAoB,KAAKC,eAAL,EAApB;MACA,KAAK9X,MAAL,GAAc,KAAKmQ,SAAL,CAAe,KAAKF,OAApB,EAA6B,KAAKpW,IAAL,CAAUlO,KAAvC,CAAd;MACA,KAAK8W,MAAL,GAAc,KAAKsV,SAAL,CAAe,KAAKJ,OAApB,EAA6B,KAAK9d,IAAL,CAAUzO,MAAvC,CAAd;MACA,KAAK4sB,cAAL;MACA,KAAKC,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAK3c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,eAAoD,KAAKzX,MAAL,CAAY,CAAZ,CAApD;MACA,KAAK+c,UAAL,GAAkB,SAAS3R,EAAE,GAAG1N,QAAL,EAA3B;MACA,KAAKsf,QAAL,kBAAwB,KAAKD,UAA7B;IACH;;;WACD,0BAAiB;MACb,IAAI,KAAKrB,QAAT,EAAmB;QACf,KAAKuB,aAAL,GAAqB,KAAKxe,IAAL,CAAUlO,KAA/B;QACA,KAAK2sB,eAAL,GAAuB,KAAKpI,UAAL,EAAvB;QACA,KAAKqI,cAAL,GAAsB,KAAKpI,SAAL,CAAe,KAAKmI,eAApB,EAAqC,KAAKD,aAA1C,CAAtB;QACA,KAAKG,cAAL,GAAsB,KAAKT,SAAL,CAAe,KAAKJ,OAApB,EAA6B,KAAKN,cAAlC,CAAtB;QACA,KAAKoB,iBAAL,uBAAsC,KAAK5e,IAAL,CAAUgZ,OAAhD,eAA4D,CAAC,KAAKzX,MAAL,CAAY,CAAZ,CAA7D;MACH;IACJ;;;WACD,sBAAa;MACT,IAAIoV,MAAM,GAAG0D,sBAAsB,CAAC,KAAKva,OAAN,CAAnC;MACA,KAAK/B,SAAL,GAAiB2c,YAAY,CAAC/D,MAAD,CAA7B;MACA,IAAIjd,MAAM,GAAG,EAAb;;MACA,IAAI,KAAKqE,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QACrC2Y,MAAM,GAAGA,MAAM,CAAC3O,GAAP,CAAW,UAAAyM,CAAC;UAAA,OAAI1F,MAAM,CAAC0F,CAAD,CAAV;QAAA,CAAZ,CAAT;MACH;;MACD,IAAItmB,GAAJ;MACA,IAAIC,GAAJ;;MACA,IAAI,KAAK2P,SAAL,KAAmB5E,SAAS,CAAC2V,IAA7B,IAAqC,KAAK/Q,SAAL,KAAmB5E,SAAS,CAAC6E,MAAtE,EAA8E;QAC1E7P,GAAG,GAAG,KAAK6sB,SAAL,GAAiB,KAAKA,SAAtB,GAAkC9gB,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAA5C;QACAvoB,GAAG,GAAG,KAAK6sB,SAAL,GAAiB,KAAKA,SAAtB,GAAkC/gB,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAA5C;MACH;;MACD,IAAI,KAAK5Y,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACnCpV,MAAM,GAAG,CAAC,IAAIjK,IAAJ,CAAStB,GAAT,CAAD,EAAgB,IAAIsB,IAAJ,CAASrB,GAAT,CAAhB,CAAT;QACA,KAAK2mB,IAAL,GAAY,mBAAI4B,MAAJ,EAAYwE,IAAZ,CAAiB,UAACC,CAAD,EAAIjK,CAAJ,EAAU;UACnC,IAAMkK,KAAK,GAAGD,CAAC,CAACE,OAAF,EAAd;UACA,IAAMC,KAAK,GAAGpK,CAAC,CAACmK,OAAF,EAAd;UACA,IAAID,KAAK,GAAGE,KAAZ,EACI,OAAO,CAAP;UACJ,IAAIA,KAAK,GAAGF,KAAZ,EACI,OAAO,CAAC,CAAR;UACJ,OAAO,CAAP;QACH,CARW,CAAZ;MASH,CAXD,MAYK,IAAI,KAAKtd,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QAC1CtE,MAAM,GAAG,CAACvL,GAAD,EAAMC,GAAN,CAAT,CAD0C,CAE1C;;QACA,KAAK2mB,IAAL,GAAY,mBAAI4B,MAAJ,EAAYwE,IAAZ,CAAiB,UAACC,CAAD,EAAIjK,CAAJ;UAAA,OAAUiK,CAAC,GAAGjK,CAAd;QAAA,CAAjB,CAAZ;MACH,CAJI,MAKA;QACDzX,MAAM,GAAGid,MAAT;QACA,KAAK5B,IAAL,GAAY4B,MAAZ;MACH;;MACD,OAAOjd,MAAP;IACH;;;WACD,sBAAa;MACT,IAAMA,MAAM,GAAG,EAAf;;MADS,6CAEa,KAAKoG,OAFlB;MAAA;;MAAA;QAET,0DAAoC;UAAA,IAAzBA,OAAyB;;UAAA,6CAChBA,OAAO,CAACO,MADQ;UAAA;;UAAA;YAChC,0DAAgC;cAAA,IAArB1D,CAAqB;;cAC5B,IAAI,CAACjD,MAAM,CAACkd,QAAP,CAAgBja,CAAC,CAAC9L,KAAlB,CAAL,EAA+B;gBAC3B6I,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAAC9L,KAAd;cACH;YACJ;UAL+B;YAAA;UAAA;YAAA;UAAA;QAMnC;MARQ;QAAA;MAAA;QAAA;MAAA;;MAST,IAAM8lB,MAAM,aAAOjd,MAAP,CAAZ;;MACA,IAAI,CAAC,KAAK0d,SAAV,EAAqB;QACjBT,MAAM,CAAC3f,IAAP,CAAY,CAAZ;MACH;;MACD,IAAI,KAAKilB,SAAL,KAAmB,MAAvB,EAA+B;QAC3BtF,MAAM,CAAC3f,IAAP,CAAY,KAAKilB,SAAjB;MACH;;MACD,IAAM9tB,GAAG,GAAG,KAAK0wB,SAAL,GAAiB,KAAKA,SAAtB,GAAkC3kB,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAAlD;MACA,IAAMvoB,GAAG,GAAG,KAAK0wB,SAAL,GAAiB,KAAKA,SAAtB,GAAkC5kB,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAAlD;MACA,OAAO,CAACxoB,GAAD,EAAMC,GAAN,CAAP;IACH;;;WACD,2BAAkB;MACd,OAAO,KAAK0R,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAACrB,IAAN;MAAA,CAAlB,CAAP;IACH;;;WACD,mBAAU5B,MAAV,EAAkB5H,KAAlB,EAAyB;MACrB,IAAI8R,KAAJ;;MACA,IAAI,KAAK7F,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACnClL,KAAK,GAAGvW,SAAS,EAAjB;MACH,CAFD,MAGK,IAAI,KAAK0Q,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QAC1C4F,KAAK,GAAGtW,WAAW,EAAnB;MACH,CAFI,MAGA,IAAI,KAAKyQ,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QAC3CoE,KAAK,GAAGrW,UAAU,GAAGwY,OAAb,CAAqB,GAArB,CAAR;MACH;;MACDnC,KAAK,CAAC1V,KAAN,CAAY,CAAC,CAAD,EAAI4D,KAAJ,CAAZ,EAAwB4H,MAAxB,CAA+BA,MAA/B;MACA,OAAO,KAAK6jB,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,mBAAUlK,MAAV,EAAkBnI,MAAlB,EAA0B;MACtB,IAAMqS,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAACqD,MAAD,EAAS,CAAT,CAApB,EAAiCmI,MAAjC,CAAwCA,MAAxC,CAAd;MACA,OAAO,KAAK6jB,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,sBAAa+S,MAAb,EAAqB;MACjB,IAAIqI,IAAI,GAAG,IAAX;MACA,IAAIC,GAAG,GAAG,IAAV;;MAFiB,6CAGGtI,MAHH;MAAA;;MAAA;QAGjB,0DAA4B;UAAA,IAAjB9lB,KAAiB;;UACxB,IAAImO,MAAM,CAACnO,KAAD,CAAV,EAAmB;YACfmuB,IAAI,GAAG,KAAP;UACH;;UACD,IAAI7f,QAAQ,CAACtO,KAAD,CAAZ,EAAqB;YACjBouB,GAAG,GAAG,KAAN;UACH;QACJ;MAVgB;QAAA;MAAA;QAAA;MAAA;;MAWjB,IAAID,IAAJ,EAAU;QACN,OAAO7lB,SAAS,CAAC2V,IAAjB;MACH;;MACD,IAAImQ,GAAJ,EAAS;QACL,OAAO9lB,SAAS,CAAC6E,MAAjB;MACH;;MACD,OAAO7E,SAAS,CAACqG,OAAjB;IACH;;;WACD,sBAAa9F,MAAb,EAAqB;MACjB,KAAKmkB,cAAL,GAAsBnkB,MAAtB;MACA,KAAK0c,OAAL,GAAe,KAAKyH,cAApB;MACA,KAAK1X,MAAL,GAAc,KAAKmQ,SAAL,CAAe,KAAKF,OAApB,EAA6B,KAAKpW,IAAL,CAAUlO,KAAvC,CAAd;IACH;;;WACD,+BAAsB2K,IAAtB,EAA4B;MACxB,KAAKyiB,eAAL,GAAuBziB,IAAI,CAAC5L,KAA5B;MACA,KAAKsuB,aAAL;IACH;;;WACD,uBAAc;MACV,KAAKD,eAAL,GAAuB,IAAvB;MACA,KAAKC,aAAL;IACH;;;WACD,iBAAQ/iB,IAAR,EAAciE,MAAd,EAAsB;MAClB,IAAIA,MAAJ,EAAY;QACRjE,IAAI,CAACiE,MAAL,GAAcA,MAAM,CAAC/E,IAArB;MACH;;MACD,KAAKnO,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,IAAI1C,MAAJ;;MACA,IAAI,KAAK6F,UAAL,KAAoBpG,SAAS,CAACqG,OAAlC,EAA2C;QACvC9F,MAAM,GAAG,KAAKskB,YAAd;MACH,CAFD,MAGK;QACDtkB,MAAM,GAAG,KAAKokB,OAAd;MACH;;MACD,KAAKrkB,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKC,UAAlC,EAA8C7F,MAA9C,EAAsD,KAAKyH,YAA3D,CAAd;IACH;;;WACD,4BAAmB;MACf,IAAMie,IAAI,GAAG;QACTrhB,SAAS,EAAE,KAAKwB,UADP;QAET9F,MAAM,EAAEhI,SAFC;QAGTiI,MAAM,EAAE,EAHC;QAITzE,KAAK,EAAExD,SAJE;QAKT6B,QAAQ,EAAE,KAAKwlB;MALN,CAAb;;MAOA,IAAIsG,IAAI,CAACrhB,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QACtC4f,IAAI,CAAC1lB,MAAL,GAAc,KAAKskB,YAAnB;QACAoB,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAnB;QACA2lB,IAAI,CAACnqB,KAAL,GAAa,KAAK6nB,WAAlB;MACH,CAJD,MAKK;QACDsC,IAAI,CAAC1lB,MAAL,GAAc,KAAKokB,OAAnB;QACAsB,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAL,CAAYmK,KAA1B;MACH;;MACD,OAAOwb,IAAP;IACH;;;WACD,iCAA4B;MAAA,IAATttB,KAAS,SAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,oBAAWS,IAAX,EAAiB;MACb,IAAMtG,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAhD;MACH,CAFW,CAAZ;;MAGA,IAAIsF,GAAG,GAAG,CAAC,CAAX,EAAc;QACV;MACH;;MACD,KAAKqG,aAAL,IAAsBC,IAAtB,4BAA+B,KAAKD,aAApC;MACA,KAAKvB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAaC,IAAb,EAAmB;MACf,IAAMtG,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAhD;MACH,CAFW,CAAZ;MAGA,KAAK2L,aAAL,CAAmBlG,MAAnB,CAA0BH,GAA1B,EAA+B,CAA/B;MACA,KAAKqG,aAAL,sBAAyB,KAAKA,aAA9B;MACA,KAAKtB,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;WACD,yBAAgB;MACZ,KAAKA,aAAL,sBAAyB,KAAKA,aAA9B;;MADY,6CAEQ,KAAKA,aAFb;MAAA;;MAAA;QAEZ,0DAAwC;UAAA,IAA7BD,KAA6B;UACpC,KAAKrB,UAAL,CAAgBG,IAAhB,CAAqB;YAAExK,KAAK,EAAE0L,KAAT;YAAgB8iB,OAAO,EAAE;UAAzB,CAArB;QACH;MAJW;QAAA;MAAA;QAAA;MAAA;;MAKZ,KAAK7iB,aAAL,GAAqB,EAArB;IACH;;;;EA3P4B4C,kB;;AA6PjCyd,kBAAkB,CAACzoB,IAAnB;EAAA;EAAA;IAAA,8EAruJ0G9I,EAquJ1G,uBAA+GuxB,kBAA/G,SAA+GA,kBAA/G;EAAA;AAAA;;AACAA,kBAAkB,CAACtoB,IAAnB,kBAtuJ0GjJ,EAsuJ1G;EAAA,MAAmGuxB,kBAAnG;EAAA;EAAA;IAAA;MAtuJ0GvxB,EAsuJ1G;MAtuJ0GA,EAsuJ1G;IAAA;;IAAA;MAAA;;MAtuJ0GA,EAsuJ1G,qBAtuJ0GA,EAsuJ1G;MAtuJ0GA,EAsuJ1G,qBAtuJ0GA,EAsuJ1G;IAAA;EAAA;EAAA;IAAA;MAtuJ0GA,EAsuJ1G;QAAA,OAAmG,iBAAnG;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WAtuJ0GA,EAsuJ1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAtuJ0GA,EAuuJtG,yCADJ;MAtuJ0GA,EA6uJpG;QAAA,OAAoB,mBAApB;MAAA;QAAA,OACuB,sBADvB;MAAA;QAAA,OAEyB,wBAFzB;MAAA,EAPN;MAtuJ0GA,EAivJpG,iBAXN;MAtuJ0GA,EAivJpG,yCAXN;MAtuJ0GA,EAmvJhG,qBAbV;MAtuJ0GA,EAwvJlG,iBAlBR;MAtuJ0GA,EA0vJpG,0BApBN;MAtuJ0GA,EA2vJlG,mEArBR;MAtuJ0GA,EA0wJlG,kEApCR;MAtuJ0GA,EAwxJlG,uBAlDR;MAtuJ0GA,EAyxJhG,mEAnDV;MAtuJ0GA,EAyyJhG,kEAnEV;MAtuJ0GA,EAy0JlG,iBAnGR;MAtuJ0GA,EA20JpG,qEArGN;MAtuJ0GA,EAu2JtG,eAjIJ;IAAA;;IAAA;MAtuJ0GA,EAwuJpG,oBAxuJoGA,EAwuJpG,kLAFN;MAtuJ0GA,EAkvJpF,aAZtB;MAtuJ0GA,EAkvJpF,kCAZtB;MAtuJ0GA,EAovJ9F,aAdZ;MAtuJ0GA,EAovJ9F,4GAdZ;MAtuJ0GA,EA0vJ7F,aApBb;MAtuJ0GA,EA0vJ7F,wCApBb;MAtuJ0GA,EA6vJ/F,aAvBX;MAtuJ0GA,EA6vJ/F,8BAvBX;MAtuJ0GA,EA4wJ/F,aAtCX;MAtuJ0GA,EA4wJ/F,8BAtCX;MAtuJ0GA,EAwxJ3F,aAlDf;MAtuJ0GA,EAwxJ3F,uCAlDf;MAtuJ0GA,EAyxJtE,aAnDpC;MAtuJ0GA,EAyxJtE,gEAnDpC;MAtuJ0GA,EAyyJxF,aAnElB;MAtuJ0GA,EAyyJxF,yCAnElB;MAtuJ0GA,EA60JjG,aAvGT;MAtuJ0GA,EA60JjG,+DAvGT;IAAA;EAAA;EAAA,eAkI+yDyR,cAlI/yD,EAkIohEyI,cAlIphE,EAkI2yE+C,cAlI3yE,EAkIsmFyT,mBAlItmF,EAkIw1FlI,WAlIx1F,EAkIsiGhG,qBAlItiG,EAkI2yGgI,QAlI3yG,EAkI6/GxpB,EAAE,CAACkI,IAlIhgH,EAkI8kHlI,EAAE,CAACwQ,OAlIjlH;EAAA;EAAA;EAAA;AAAA;;AAmIA;EAAA,mDAz2J0GxR,EAy2J1G,mBAA2FuxB,kBAA3F,EAA2H,CAAC;IAChHzpB,IAAI,EAAE5H,SAD0G;IAEhH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,uBAAZ;MAAqCC,QAAQ,ilJAA7C;MAkIdyF,eAAe,EAAErO,uBAAuB,CAACsO,MAlI3B;MAkImCzF,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAlIpE;MAkI0EC,MAAM,EAAE,CAAC,yvDAAD;IAlIlF,CAAD;EAF0G,CAAD,CAA3H,QAqI4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAFD;IAIZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZswB,SAAS,EAAE,CAAC;MACZ7oB,IAAI,EAAEzH;IADM,CAAD,CAVC;IAYZyrB,SAAS,EAAE,CAAC;MACZhkB,IAAI,EAAEzH;IADM,CAAD,CAZC;IAcZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAdJ;IAgBZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAhBJ;IAkBZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAlBA;IAoBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CApBA;IAsBZsxB,QAAQ,EAAE,CAAC;MACX7pB,IAAI,EAAEzH;IADK,CAAD,CAtBE;IAwBZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CAxBE;IA0BZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CA1BH;IA4BZ8wB,KAAK,EAAE,CAAC;MACRrpB,IAAI,EAAEzH;IADE,CAAD,CA5BK;IA8BZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CA9BH;IAgCZ4T,UAAU,EAAE,CAAC;MACbnM,IAAI,EAAEzH;IADO,CAAD,CAhCA;IAkCZuxB,cAAc,EAAE,CAAC;MACjB9pB,IAAI,EAAEzH;IADW,CAAD,CAlCJ;IAoCZwxB,cAAc,EAAE,CAAC;MACjB/pB,IAAI,EAAEzH;IADW,CAAD,CApCJ;IAsCZyxB,gBAAgB,EAAE,CAAC;MACnBhqB,IAAI,EAAEzH;IADa,CAAD,CAtCN;IAwCZ0xB,kBAAkB,EAAE,CAAC;MACrBjqB,IAAI,EAAEzH;IADe,CAAD,CAxCR;IA0CZ2xB,kBAAkB,EAAE,CAAC;MACrBlqB,IAAI,EAAEzH;IADe,CAAD,CA1CR;IA4CZ6zB,mBAAmB,EAAE,CAAC;MACtBpsB,IAAI,EAAEzH;IADgB,CAAD,CA5CT;IA8CZ8zB,mBAAmB,EAAE,CAAC;MACtBrsB,IAAI,EAAEzH;IADgB,CAAD,CA9CT;IAgDZ+zB,UAAU,EAAE,CAAC;MACbtsB,IAAI,EAAEzH;IADO,CAAD,CAhDA;IAkDZg0B,UAAU,EAAE,CAAC;MACbvsB,IAAI,EAAEzH;IADO,CAAD,CAlDA;IAoDZ4xB,YAAY,EAAE,CAAC;MACfnqB,IAAI,EAAEzH;IADS,CAAD,CApDF;IAsDZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAtDL;IAwDZqvB,SAAS,EAAE,CAAC;MACZ5nB,IAAI,EAAEzH;IADM,CAAD,CAxDC;IA0DZsvB,SAAS,EAAE,CAAC;MACZ7nB,IAAI,EAAEzH;IADM,CAAD,CA1DC;IA4DZkzB,SAAS,EAAE,CAAC;MACZzrB,IAAI,EAAEzH;IADM,CAAD,CA5DC;IA8DZmzB,SAAS,EAAE,CAAC;MACZ1rB,IAAI,EAAEzH;IADM,CAAD,CA9DC;IAgEZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAhEE;IAkEZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAlEA;IAoEZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD,CApEL;IAuEZywB,qBAAqB,EAAE,CAAC;MACxBxsB,IAAI,EAAE/G,YADkB;MAExB8C,IAAI,EAAE,CAAC,uBAAD;IAFkB,CAAD,CAvEX;IA0EZ0wB,WAAW,EAAE,CAAC;MACdzsB,IAAI,EAAEtH,YADQ;MAEdqD,IAAI,EAAE,CAAC,YAAD;IAFQ,CAAD;EA1ED,CArI5B;AAAA;;IAoNM2wB,4B;;;;;EACF,wCAAc;IAAA;;IAAA;;IACV,8BAASjwB,SAAT;IACA,QAAKsnB,MAAL,GAAc,KAAd;IACA,QAAK2F,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAK8rB,cAAL,GAAsB,KAAtB;IACA,QAAKC,cAAL,GAAsB,KAAtB;IACA,QAAK/a,aAAL,GAAqB,IAArB;IACA,QAAK4Z,KAAL,GAAa7uB,WAAb;IACA,QAAK4O,aAAL,GAAqB,EAArB;IACA,QAAK0gB,cAAL,GAAsB,IAAtB;IACA,QAAKC,cAAL,GAAsB,IAAtB;IACA,QAAKC,gBAAL,GAAwB,IAAxB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,YAAL,GAAoB,KAApB;IACA,QAAK5T,eAAL,GAAuB,KAAvB;IACA,QAAK1O,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAK6xB,OAAL,GAAe,CAAC,CAAD,EAAI,GAAJ,CAAf;IACA,QAAKvc,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKmX,WAAL,GAAmB,CAAnB;IACA,QAAKC,UAAL,GAAkB,CAAlB;IACA,QAAKoH,UAAL,GAAkBlS,UAAlB;IACA,QAAK2P,cAAL,GAAsB,EAAtB;IACA,QAAKC,eAAL,GAAuB,EAAvB;;IACA,QAAKC,OAAL,GAAe,UAAC9gB,KAAD,EAAQH,IAAR,EAAiB;MAC5B,OAAOA,IAAI,CAACnB,IAAZ;IACH,CAFD;;IA1BU;EA6Bb;;;;WACD,kBAAS;MAAA;;MACL;;MACA,KAAK0E,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC7Z,UAAU,EAAE,KAAKiC,UAXe;QAYhCuZ,cAAc,EAAE,KAAKA;MAZW,CAAD,CAAnC;;MAcA,IAAI,KAAKmE,QAAT,EAAmB;QACf,KAAKjd,IAAL,CAAUzO,MAAV,IAAoB,KAAKisB,cAAL,GAAsB,KAAKjc,MAAL,CAAY,CAAZ,CAAtB,GAAuC,KAAKkc,eAAhE;MACH;;MACD,KAAKrH,OAAL,GAAe,KAAKC,UAAL,EAAf;;MACA,IAAI,KAAKwH,cAAT,EAAyB;QACrB,KAAKzH,OAAL,GAAe,KAAKyH,cAApB;MACH;;MACD,KAAKG,YAAL,GAAoB,KAAKC,eAAL,EAApB;MACA,KAAK9X,MAAL,GAAc,KAAKmQ,SAAL,CAAe,KAAKF,OAApB,EAA6B,KAAKpW,IAAL,CAAUlO,KAAvC,CAAd;MACA,KAAK8W,MAAL,GAAc,KAAKsV,SAAL,CAAe,KAAKJ,OAApB,EAA6B,KAAK9d,IAAL,CAAUzO,MAAvC,CAAd;;MAzBK,+BA0BsC;QACvC,IAAM+gB,GAAG,GAAG,OAAI,CAACyC,IAAL,CAAUte,CAAV,CAAZ;QACA,IAAI8d,EAAE,GAAG,CAAT;QACA,IAAIsD,KAAK,GAAG,CAAZ;;QAHuC,6CAInB,OAAI,CAAC/X,OAJc;QAAA;;QAAA;UAIvC,0DAAkC;YAAA,IAAvBuU,KAAuB;YAC9B,IAAM1X,CAAC,GAAG0X,KAAK,CAAChU,MAAN,CAAa3D,IAAb,CAAkB,UAAAD,IAAI,EAAI;cAChC,IAAI2e,CAAC,GAAG3e,IAAI,CAACnB,IAAb;cACA,IAAI6V,CAAC,GAAGmB,GAAR;;cACA,IAAI,OAAI,CAACvU,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;gBACnCsM,CAAC,GAAGA,CAAC,CAAC4E,OAAF,EAAJ;gBACA7O,CAAC,GAAGA,CAAC,CAAC6O,OAAF,EAAJ;cACH;;cACD,OAAO5E,CAAC,KAAKjK,CAAb;YACH,CARS,CAAV;;YASA,IAAIxU,CAAJ,EAAO;cACHkb,KAAK,IAAIlb,CAAC,CAAC9L,KAAX;YACH;UACJ;QAjBsC;UAAA;QAAA;UAAA;QAAA;;QAAA,6CAkBnB,OAAI,CAACiP,OAlBc;QAAA;;QAAA;UAkBvC,0DAAkC;YAAA,IAAvBuU,MAAuB;;YAC9B,IAAI1X,EAAC,GAAG0X,MAAK,CAAChU,MAAN,CAAa3D,IAAb,CAAkB,UAAAD,IAAI,EAAI;cAC9B,IAAI2e,CAAC,GAAG3e,IAAI,CAACnB,IAAb;cACA,IAAI6V,CAAC,GAAGmB,GAAR;;cACA,IAAI,OAAI,CAACvU,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;gBACnCsM,CAAC,GAAGA,CAAC,CAAC4E,OAAF,EAAJ;gBACA7O,CAAC,GAAGA,CAAC,CAAC6O,OAAF,EAAJ;cACH;;cACD,OAAO5E,CAAC,KAAKjK,CAAb;YACH,CARO,CAAR;;YASA,IAAIxU,EAAJ,EAAO;cACHA,EAAC,CAAC4X,EAAF,GAAOA,EAAP;cACA5X,EAAC,CAACqS,EAAF,GAAOuF,EAAE,GAAG5X,EAAC,CAAC9L,KAAd;cACA0jB,EAAE,IAAI5X,EAAC,CAAC9L,KAAR;YACH,CAJD,MAKK;cACD8L,EAAC,GAAG;gBACArB,IAAI,EAAEgX,GADN;gBAEAzhB,KAAK,EAAE,CAFP;gBAGA0jB,EAAE,EAAFA,EAHA;gBAIAvF,EAAE,EAAEuF;cAJJ,CAAJ;;cAMAF,MAAK,CAAChU,MAAN,CAAarJ,IAAb,CAAkB2F,EAAlB;YACH;;YACD,IAAIkb,KAAK,GAAG,CAAZ,EAAe;cACXlb,EAAC,CAAC4X,EAAF,GAAQ5X,EAAC,CAAC4X,EAAF,GAAO,GAAR,GAAesD,KAAtB;cACAlb,EAAC,CAACqS,EAAF,GAAQrS,EAAC,CAACqS,EAAF,GAAO,GAAR,GAAe6I,KAAtB;YACH,CAHD,MAIK;cACDlb,EAAC,CAAC4X,EAAF,GAAO,CAAP;cACA5X,EAAC,CAACqS,EAAF,GAAO,CAAP;YACH;UACJ;QAlDsC;UAAA;QAAA;UAAA;QAAA;MAmD1C,CA7EI;;MA0BL,KAAK,IAAIvY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKse,IAAL,CAAU7e,MAA9B,EAAsCO,CAAC,EAAvC;QAAA;MAAA;;MAoDA,KAAK0nB,cAAL;MACA,KAAKC,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAK3c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,gBAAqD,KAAKzX,MAAL,CAAY,CAAZ,CAArD;MACA,KAAK+c,UAAL,GAAkB,SAAS3R,EAAE,GAAG1N,QAAL,EAA3B;MACA,KAAKsf,QAAL,kBAAwB,KAAKD,UAA7B;IACH;;;WACD,0BAAiB;MACb,IAAI,KAAKrB,QAAT,EAAmB;QACf,KAAKuB,aAAL,GAAqB,KAAKxe,IAAL,CAAUlO,KAA/B;QACA,KAAK2sB,eAAL,GAAuB,KAAKpI,UAAL,EAAvB;QACA,KAAKqI,cAAL,GAAsB,KAAKpI,SAAL,CAAe,KAAKmI,eAApB,EAAqC,KAAKD,aAA1C,CAAtB;QACA,KAAKG,cAAL,GAAsB,KAAKT,SAAL,CAAe,KAAKJ,OAApB,EAA6B,KAAKN,cAAlC,CAAtB;QACA,KAAKoB,iBAAL,uBAAsC,KAAK5e,IAAL,CAAUgZ,OAAhD,eAA4D,CAAC,KAAKzX,MAAL,CAAY,CAAZ,CAA7D;MACH;IACJ;;;WACD,sBAAa;MACT,IAAIoV,MAAM,GAAG0D,sBAAsB,CAAC,KAAKva,OAAN,CAAnC;MACA,KAAK/B,SAAL,GAAiB2c,YAAY,CAAC/D,MAAD,CAA7B;MACA,IAAIjd,MAAM,GAAG,EAAb;;MACA,IAAI,KAAKqE,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACnC,IAAM3gB,KAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAAhB;;QACA,IAAMvoB,KAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAAhB;;QACAjd,MAAM,GAAG,CAAC,IAAIjK,IAAJ,CAAStB,KAAT,CAAD,EAAgB,IAAIsB,IAAJ,CAASrB,KAAT,CAAhB,CAAT;QACA,KAAK2mB,IAAL,GAAY,mBAAI4B,MAAJ,EAAYwE,IAAZ,CAAiB,UAACC,CAAD,EAAIjK,CAAJ,EAAU;UACnC,IAAMkK,KAAK,GAAGD,CAAC,CAACE,OAAF,EAAd;UACA,IAAMC,KAAK,GAAGpK,CAAC,CAACmK,OAAF,EAAd;UACA,IAAID,KAAK,GAAGE,KAAZ,EACI,OAAO,CAAP;UACJ,IAAIA,KAAK,GAAGF,KAAZ,EACI,OAAO,CAAC,CAAR;UACJ,OAAO,CAAP;QACH,CARW,CAAZ;MASH,CAbD,MAcK,IAAI,KAAKtd,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QAC1C2Y,MAAM,GAAGA,MAAM,CAAC3O,GAAP,CAAW,UAAAyM,CAAC;UAAA,OAAI1F,MAAM,CAAC0F,CAAD,CAAV;QAAA,CAAZ,CAAT;;QACA,IAAMtmB,KAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAAhB;;QACA,IAAMvoB,KAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAAhB;;QACAjd,MAAM,GAAG,CAACvL,KAAD,EAAMC,KAAN,CAAT,CAJ0C,CAK1C;;QACA,KAAK2mB,IAAL,GAAY,mBAAI4B,MAAJ,EAAYwE,IAAZ,CAAiB,UAACC,CAAD,EAAIjK,CAAJ;UAAA,OAAUiK,CAAC,GAAGjK,CAAd;QAAA,CAAjB,CAAZ;MACH,CAPI,MAQA;QACDzX,MAAM,GAAGid,MAAT;QACA,KAAK5B,IAAL,GAAY4B,MAAZ;MACH;;MACD,OAAOjd,MAAP;IACH;;;WACD,2BAAkB;MACd,OAAO,KAAKoG,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAACrB,IAAN;MAAA,CAAlB,CAAP;IACH;;;WACD,mBAAU5B,MAAV,EAAkB5H,KAAlB,EAAyB;MACrB,IAAI8R,KAAJ;;MACA,IAAI,KAAK7F,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACnClL,KAAK,GAAGvW,SAAS,EAAjB;MACH,CAFD,MAGK,IAAI,KAAK0Q,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QAC1C4F,KAAK,GAAGtW,WAAW,EAAnB;MACH,CAFI,MAGA,IAAI,KAAKyQ,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QAC3CoE,KAAK,GAAGrW,UAAU,GAAGwY,OAAb,CAAqB,GAArB,CAAR;MACH;;MACDnC,KAAK,CAAC1V,KAAN,CAAY,CAAC,CAAD,EAAI4D,KAAJ,CAAZ,EAAwB4H,MAAxB,CAA+BA,MAA/B;MACA,OAAO,KAAK6jB,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,mBAAUlK,MAAV,EAAkBnI,MAAlB,EAA0B;MACtB,IAAMqS,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAACqD,MAAD,EAAS,CAAT,CAApB,EAAiCmI,MAAjC,CAAwCA,MAAxC,CAAd;MACA,OAAO,KAAK6jB,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,sBAAalK,MAAb,EAAqB;MACjB,KAAKmkB,cAAL,GAAsBnkB,MAAtB;MACA,KAAK0c,OAAL,GAAe,KAAKyH,cAApB;MACA,KAAK1X,MAAL,GAAc,KAAKmQ,SAAL,CAAe,KAAKF,OAApB,EAA6B,KAAKpW,IAAL,CAAUlO,KAAvC,CAAd;IACH;;;WACD,+BAAsB2K,IAAtB,EAA4B;MACxB,KAAKyiB,eAAL,GAAuBziB,IAAI,CAAC5L,KAA5B;MACA,KAAKsuB,aAAL;IACH;;;WACD,uBAAc;MACV,KAAKD,eAAL,GAAuB,IAAvB;MACA,KAAKC,aAAL;IACH;;;WACD,iBAAQ/iB,IAAR,EAAciE,MAAd,EAAsB;MAClB,IAAIA,MAAJ,EAAY;QACRjE,IAAI,CAACiE,MAAL,GAAcA,MAAM,CAAC/E,IAArB;MACH;;MACD,KAAKnO,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,IAAI1C,MAAJ;;MACA,IAAI,KAAK6F,UAAL,KAAoBpG,SAAS,CAACqG,OAAlC,EAA2C;QACvC9F,MAAM,GAAG,KAAKskB,YAAd;MACH,CAFD,MAGK;QACDtkB,MAAM,GAAG,KAAKokB,OAAd;MACH;;MACD,KAAKrkB,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKC,UAAlC,EAA8C7F,MAA9C,EAAsD,KAAKyH,YAA3D,CAAd;IACH;;;WACD,4BAAmB;MACf,IAAMie,IAAI,GAAG;QACTrhB,SAAS,EAAE,KAAKwB,UADP;QAET9F,MAAM,EAAEhI,SAFC;QAGTiI,MAAM,EAAE,EAHC;QAITzE,KAAK,EAAExD,SAJE;QAKT6B,QAAQ,EAAE,KAAKwlB;MALN,CAAb;;MAOA,IAAIsG,IAAI,CAACrhB,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QACtC4f,IAAI,CAAC1lB,MAAL,GAAc,KAAKskB,YAAnB;QACAoB,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAnB;QACA2lB,IAAI,CAACnqB,KAAL,GAAa,KAAK6nB,WAAlB;MACH,CAJD,MAKK;QACDsC,IAAI,CAAC1lB,MAAL,GAAc,KAAKokB,OAAnB;QACAsB,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAL,CAAYmK,KAA1B;MACH;;MACD,OAAOwb,IAAP;IACH;;;WACD,kCAA4B;MAAA,IAATttB,KAAS,UAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,oBAAWS,IAAX,EAAiB;MACb,IAAMtG,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAhD;MACH,CAFW,CAAZ;;MAGA,IAAIsF,GAAG,GAAG,CAAC,CAAX,EAAc;QACV;MACH;;MACD,KAAKqG,aAAL,IAAsBC,IAAtB,4BAA+B,KAAKD,aAApC;MACA,KAAKvB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAaC,IAAb,EAAmB;MACf,IAAMtG,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAhD;MACH,CAFW,CAAZ;MAGA,KAAK2L,aAAL,CAAmBlG,MAAnB,CAA0BH,GAA1B,EAA+B,CAA/B;MACA,KAAKqG,aAAL,sBAAyB,KAAKA,aAA9B;MACA,KAAKtB,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;WACD,yBAAgB;MACZ,KAAKA,aAAL,sBAAyB,KAAKA,aAA9B;;MADY,6CAEQ,KAAKA,aAFb;MAAA;;MAAA;QAEZ,0DAAwC;UAAA,IAA7BD,KAA6B;UACpC,KAAKrB,UAAL,CAAgBG,IAAhB,CAAqB;YAAExK,KAAK,EAAE0L,KAAT;YAAgB8iB,OAAO,EAAE;UAAzB,CAArB;QACH;MAJW;QAAA;MAAA;QAAA;MAAA;;MAKZ,KAAK7iB,aAAL,GAAqB,EAArB;IACH;;;;EAlQsC4C,kB;;AAoQ3C0gB,4BAA4B,CAAC1rB,IAA7B;EAAA;EAAA;IAAA,kGAj0K0G9I,EAi0K1G,uBAAyHw0B,4BAAzH,SAAyHA,4BAAzH;EAAA;AAAA;;AACAA,4BAA4B,CAACvrB,IAA7B,kBAl0K0GjJ,EAk0K1G;EAAA,MAA6Gw0B,4BAA7G;EAAA;EAAA;IAAA;MAl0K0Gx0B,EAk0K1G;MAl0K0GA,EAk0K1G;IAAA;;IAAA;MAAA;;MAl0K0GA,EAk0K1G,qBAl0K0GA,EAk0K1G;MAl0K0GA,EAk0K1G,qBAl0K0GA,EAk0K1G;IAAA;EAAA;EAAA;IAAA;MAl0K0GA,EAk0K1G;QAAA,OAA6G,iBAA7G;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WAl0K0GA,EAk0K1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAl0K0GA,EAm0KtG,yCADJ;MAl0K0GA,EAy0KpG;QAAA,OAAoB,mBAApB;MAAA;QAAA,OACuB,sBADvB;MAAA;QAAA,OAEyB,wBAFzB;MAAA,EAPN;MAl0K0GA,EA60KpG,iBAXN;MAl0K0GA,EA60KpG,yCAXN;MAl0K0GA,EA+0KhG,qBAbV;MAl0K0GA,EAo1KlG,iBAlBR;MAl0K0GA,EAs1KpG,0BApBN;MAl0K0GA,EAu1KlG,6EArBR;MAl0K0GA,EAs2KlG,4EApCR;MAl0K0GA,EAo3KlG,uBAlDR;MAl0K0GA,EAq3KhG,6EAnDV;MAl0K0GA,EAq4KhG,6EAnEV;MAl0K0GA,EAu6KlG,iBArGR;MAl0K0GA,EAy6KpG,+EAvGN;MAl0K0GA,EAq8KtG,eAnIJ;IAAA;;IAAA;MAl0K0GA,EAo0KpG,oBAp0KoGA,EAo0KpG,kLAFN;MAl0K0GA,EA80KpF,aAZtB;MAl0K0GA,EA80KpF,kCAZtB;MAl0K0GA,EAg1K9F,aAdZ;MAl0K0GA,EAg1K9F,4GAdZ;MAl0K0GA,EAs1K7F,aApBb;MAl0K0GA,EAs1K7F,wCApBb;MAl0K0GA,EAy1K/F,aAvBX;MAl0K0GA,EAy1K/F,8BAvBX;MAl0K0GA,EAw2K/F,aAtCX;MAl0K0GA,EAw2K/F,8BAtCX;MAl0K0GA,EAo3K3F,aAlDf;MAl0K0GA,EAo3K3F,uCAlDf;MAl0K0GA,EAq3KtE,aAnDpC;MAl0K0GA,EAq3KtE,gEAnDpC;MAl0K0GA,EAq4KxF,aAnElB;MAl0K0GA,EAq4KxF,yCAnElB;MAl0K0GA,EA26KjG,aAzGT;MAl0K0GA,EA26KjG,+DAzGT;IAAA;EAAA;EAAA,eAoI+yDyR,cApI/yD,EAoIohEyI,cApIphE,EAoI2yE+C,cApI3yE,EAoIsmFyT,mBApItmF,EAoIw1FlI,WApIx1F,EAoIsiGhG,qBApItiG,EAoI2yGgI,QApI3yG,EAoI6/GxpB,EAAE,CAACkI,IApIhgH,EAoI8kHlI,EAAE,CAACwQ,OApIjlH;EAAA;EAAA;EAAA;AAAA;;AAqIA;EAAA,mDAv8K0GxR,EAu8K1G,mBAA2Fw0B,4BAA3F,EAAqI,CAAC;IAC1H1sB,IAAI,EAAE5H,SADoH;IAE1H2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,kCAAZ;MAAgDC,QAAQ,iqJAAxD;MAoIdyF,eAAe,EAAErO,uBAAuB,CAACsO,MApI3B;MAoImCzF,aAAa,EAAEpJ,iBAAiB,CAACqJ,IApIpE;MAoI0EC,MAAM,EAAE,CAAC,yvDAAD;IApIlF,CAAD;EAFoH,CAAD,CAArI,QAuI4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAFD;IAIZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAVJ;IAYZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAZJ;IAcZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAdA;IAgBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZsxB,QAAQ,EAAE,CAAC;MACX7pB,IAAI,EAAEzH;IADK,CAAD,CAlBE;IAoBZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CApBE;IAsBZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CAtBH;IAwBZ8wB,KAAK,EAAE,CAAC;MACRrpB,IAAI,EAAEzH;IADE,CAAD,CAxBK;IA0BZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CA1BH;IA4BZ4T,UAAU,EAAE,CAAC;MACbnM,IAAI,EAAEzH;IADO,CAAD,CA5BA;IA8BZuxB,cAAc,EAAE,CAAC;MACjB9pB,IAAI,EAAEzH;IADW,CAAD,CA9BJ;IAgCZwxB,cAAc,EAAE,CAAC;MACjB/pB,IAAI,EAAEzH;IADW,CAAD,CAhCJ;IAkCZyxB,gBAAgB,EAAE,CAAC;MACnBhqB,IAAI,EAAEzH;IADa,CAAD,CAlCN;IAoCZ0xB,kBAAkB,EAAE,CAAC;MACrBjqB,IAAI,EAAEzH;IADe,CAAD,CApCR;IAsCZ2xB,kBAAkB,EAAE,CAAC;MACrBlqB,IAAI,EAAEzH;IADe,CAAD,CAtCR;IAwCZ6zB,mBAAmB,EAAE,CAAC;MACtBpsB,IAAI,EAAEzH;IADgB,CAAD,CAxCT;IA0CZ8zB,mBAAmB,EAAE,CAAC;MACtBrsB,IAAI,EAAEzH;IADgB,CAAD,CA1CT;IA4CZ+zB,UAAU,EAAE,CAAC;MACbtsB,IAAI,EAAEzH;IADO,CAAD,CA5CA;IA8CZg0B,UAAU,EAAE,CAAC;MACbvsB,IAAI,EAAEzH;IADO,CAAD,CA9CA;IAgDZ4xB,YAAY,EAAE,CAAC;MACfnqB,IAAI,EAAEzH;IADS,CAAD,CAhDF;IAkDZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAlDL;IAoDZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CApDE;IAsDZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAtDA;IAwDZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD,CAxDL;IA2DZywB,qBAAqB,EAAE,CAAC;MACxBxsB,IAAI,EAAE/G,YADkB;MAExB8C,IAAI,EAAE,CAAC,uBAAD;IAFkB,CAAD,CA3DX;IA8DZ0wB,WAAW,EAAE,CAAC;MACdzsB,IAAI,EAAEtH,YADQ;MAEdqD,IAAI,EAAE,CAAC,YAAD;IAFQ,CAAD;EA9DD,CAvI5B;AAAA;;IA0MM8wB,yB;;;;;EACF,qCAAc;IAAA;;IAAA;;IACV,8BAASpwB,SAAT;IACA,QAAKsnB,MAAL,GAAc,KAAd;IACA,QAAK2F,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAKkrB,KAAL,GAAa,KAAb;IACA,QAAKC,KAAL,GAAa,KAAb;IACA,QAAKC,QAAL,GAAgB,KAAhB;IACA,QAAKpa,aAAL,GAAqB,IAArB;IACA,QAAK4Z,KAAL,GAAa7uB,WAAb;IACA,QAAK4O,aAAL,GAAqB,EAArB;IACA,QAAK0gB,cAAL,GAAsB,IAAtB;IACA,QAAKC,cAAL,GAAsB,IAAtB;IACA,QAAKC,gBAAL,GAAwB,IAAxB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,YAAL,GAAoB,KAApB;IACA,QAAK5T,eAAL,GAAuB,KAAvB;IACA,QAAK1O,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAKsV,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKmX,WAAL,GAAmB,CAAnB;IACA,QAAKC,UAAL,GAAkB,CAAlB;IACA,QAAK6E,cAAL,GAAsB,EAAtB;IACA,QAAKC,eAAL,GAAuB,EAAvB;IACA,QAAKsC,UAAL,GAAkBlS,UAAlB;IAzBU;EA0Bb;;;;WACD,kBAAS;MAAA;;MACL;;MACA,KAAK7N,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC7Z,UAAU,EAAE,KAAKiC,UAXe;QAYhCuZ,cAAc,EAAE,KAAKA;MAZW,CAAD,CAAnC;;MAcA,IAAI,KAAKmE,QAAT,EAAmB;QACf,KAAKjd,IAAL,CAAUzO,MAAV,IAAoB,KAAKisB,cAAL,GAAsB,KAAKjc,MAAL,CAAY,CAAZ,CAAtB,GAAuC,KAAKkc,eAAhE;MACH;;MACD,KAAKrH,OAAL,GAAe,KAAKC,UAAL,EAAf;;MACA,IAAI,KAAKwH,cAAT,EAAyB;QACrB,KAAKzH,OAAL,GAAe,KAAKyH,cAApB;MACH;;MACD,KAAKC,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,KAAKC,YAAL,GAAoB,KAAKC,eAAL,EAApB;MACA,KAAK9X,MAAL,GAAc,KAAKmQ,SAAL,CAAe,KAAKF,OAApB,EAA6B,KAAKpW,IAAL,CAAUlO,KAAvC,CAAd;MACA,KAAK8W,MAAL,GAAc,KAAKsV,SAAL,CAAe,KAAKJ,OAApB,EAA6B,KAAK9d,IAAL,CAAUzO,MAAvC,CAAd;;MA1BK,+BA2BsC;QACvC,IAAM+gB,GAAG,GAAG,OAAI,CAACyC,IAAL,CAAUte,CAAV,CAAZ;QACA,IAAI8d,EAAE,GAAG,CAAT;;QAFuC,6CAGnB,OAAI,CAACzU,OAHc;QAAA;;QAAA;UAGvC,0DAAkC;YAAA,IAAvBuU,KAAuB;YAC9B,IAAI1X,CAAC,GAAG0X,KAAK,CAAChU,MAAN,CAAa3D,IAAb,CAAkB,UAAAD,IAAI,EAAI;cAC9B,IAAI2e,CAAC,GAAG3e,IAAI,CAACnB,IAAb;cACA,IAAI6V,CAAC,GAAGmB,GAAR;;cACA,IAAI,OAAI,CAACvU,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;gBACnCsM,CAAC,GAAGA,CAAC,CAAC4E,OAAF,EAAJ;gBACA7O,CAAC,GAAGA,CAAC,CAAC6O,OAAF,EAAJ;cACH;;cACD,OAAO5E,CAAC,KAAKjK,CAAb;YACH,CARO,CAAR;;YASA,IAAIxU,CAAJ,EAAO;cACHA,CAAC,CAAC4X,EAAF,GAAOA,EAAP;cACA5X,CAAC,CAACqS,EAAF,GAAOuF,EAAE,GAAG5X,CAAC,CAAC9L,KAAd;cACA0jB,EAAE,IAAI5X,CAAC,CAAC9L,KAAR;YACH,CAJD,MAKK;cACD8L,CAAC,GAAG;gBACArB,IAAI,EAAEgX,GADN;gBAEAzhB,KAAK,EAAE,CAFP;gBAGA0jB,EAAE,EAAFA,EAHA;gBAIAvF,EAAE,EAAEuF;cAJJ,CAAJ;cAMAF,KAAK,CAAChU,MAAN,CAAarJ,IAAb,CAAkB2F,CAAlB;YACH;UACJ;QA3BsC;UAAA;QAAA;UAAA;QAAA;MA4B1C,CAvDI;;MA2BL,KAAK,IAAIlG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKse,IAAL,CAAU7e,MAA9B,EAAsCO,CAAC,EAAvC;QAAA;MAAA;;MA6BA,KAAK0nB,cAAL;MACA,KAAKC,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAK3c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,gBAAqD,KAAKzX,MAAL,CAAY,CAAZ,CAArD;MACA,KAAK+c,UAAL,GAAkB,SAAS3R,EAAE,GAAG1N,QAAL,EAA3B;MACA,KAAKsf,QAAL,kBAAwB,KAAKD,UAA7B;IACH;;;WACD,0BAAiB;MACb,IAAI,KAAKrB,QAAT,EAAmB;QACf,KAAKuB,aAAL,GAAqB,KAAKxe,IAAL,CAAUlO,KAA/B;QACA,KAAK2sB,eAAL,GAAuB,KAAKpI,UAAL,EAAvB;QACA,KAAKqI,cAAL,GAAsB,KAAKpI,SAAL,CAAe,KAAKmI,eAApB,EAAqC,KAAKD,aAA1C,CAAtB;QACA,KAAKG,cAAL,GAAsB,KAAKT,SAAL,CAAe,KAAKJ,OAApB,EAA6B,KAAKN,cAAlC,CAAtB;QACA,KAAKoB,iBAAL,uBAAsC,KAAK5e,IAAL,CAAUgZ,OAAhD,eAA4D,CAAC,KAAKzX,MAAL,CAAY,CAAZ,CAA7D;MACH;IACJ;;;WACD,sBAAa;MACT,IAAIoV,MAAM,GAAG0D,sBAAsB,CAAC,KAAKva,OAAN,CAAnC;MACA,KAAK/B,SAAL,GAAiB2c,YAAY,CAAC/D,MAAD,CAA7B;MACA,IAAIjd,MAAM,GAAG,EAAb;;MACA,IAAI,KAAKqE,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QACrC2Y,MAAM,GAAGA,MAAM,CAAC3O,GAAP,CAAW,UAAAyM,CAAC;UAAA,OAAI1F,MAAM,CAAC0F,CAAD,CAAV;QAAA,CAAZ,CAAT;MACH;;MACD,IAAItmB,GAAJ;MACA,IAAIC,GAAJ;;MACA,IAAI,KAAK2P,SAAL,KAAmB5E,SAAS,CAAC2V,IAA7B,IAAqC,KAAK/Q,SAAL,KAAmB5E,SAAS,CAAC6E,MAAtE,EAA8E;QAC1E7P,GAAG,GAAG,KAAK6sB,SAAL,GAAiB,KAAKA,SAAtB,GAAkC9gB,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAA5C;QACAvoB,GAAG,GAAG,KAAK6sB,SAAL,GAAiB,KAAKA,SAAtB,GAAkC/gB,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAA5C;MACH;;MACD,IAAI,KAAK5Y,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACnCpV,MAAM,GAAG,CAAC,IAAIjK,IAAJ,CAAStB,GAAT,CAAD,EAAgB,IAAIsB,IAAJ,CAASrB,GAAT,CAAhB,CAAT;QACA,KAAK2mB,IAAL,GAAY,mBAAI4B,MAAJ,EAAYwE,IAAZ,CAAiB,UAACC,CAAD,EAAIjK,CAAJ,EAAU;UACnC,IAAMkK,KAAK,GAAGD,CAAC,CAACE,OAAF,EAAd;UACA,IAAMC,KAAK,GAAGpK,CAAC,CAACmK,OAAF,EAAd;UACA,IAAID,KAAK,GAAGE,KAAZ,EACI,OAAO,CAAP;UACJ,IAAIA,KAAK,GAAGF,KAAZ,EACI,OAAO,CAAC,CAAR;UACJ,OAAO,CAAP;QACH,CARW,CAAZ;MASH,CAXD,MAYK,IAAI,KAAKtd,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QAC1CtE,MAAM,GAAG,CAACvL,GAAD,EAAMC,GAAN,CAAT,CAD0C,CAE1C;;QACA,KAAK2mB,IAAL,GAAY,mBAAI4B,MAAJ,EAAYwE,IAAZ,CAAiB,UAACC,CAAD,EAAIjK,CAAJ;UAAA,OAAUiK,CAAC,GAAGjK,CAAd;QAAA,CAAjB,CAAZ;MACH,CAJI,MAKA;QACDzX,MAAM,GAAGid,MAAT;QACA,KAAK5B,IAAL,GAAY4B,MAAZ;MACH;;MACD,OAAOjd,MAAP;IACH;;;WACD,sBAAa;MAAA;;MACT,IAAMA,MAAM,GAAG,EAAf;;MADS,+BAEkC;QACvC,IAAM4Y,GAAG,GAAG,OAAI,CAACyC,IAAL,CAAUte,CAAV,CAAZ;QACA,IAAImhB,GAAG,GAAG,CAAV;;QAFuC,6CAGnB,OAAI,CAAC9X,OAHc;QAAA;;QAAA;UAGvC,0DAAkC;YAAA,IAAvBuU,KAAuB;YAC9B,IAAM1X,CAAC,GAAG0X,KAAK,CAAChU,MAAN,CAAa3D,IAAb,CAAkB,UAAAD,IAAI,EAAI;cAChC,IAAI2e,CAAC,GAAG3e,IAAI,CAACnB,IAAb;cACA,IAAI6V,CAAC,GAAGmB,GAAR;;cACA,IAAI,OAAI,CAACvU,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;gBACnCsM,CAAC,GAAGA,CAAC,CAAC4E,OAAF,EAAJ;gBACA7O,CAAC,GAAGA,CAAC,CAAC6O,OAAF,EAAJ;cACH;;cACD,OAAO5E,CAAC,KAAKjK,CAAb;YACH,CARS,CAAV;;YASA,IAAIxU,CAAJ,EAAO;cACHib,GAAG,IAAIjb,CAAC,CAAC9L,KAAT;YACH;UACJ;QAhBsC;UAAA;QAAA;UAAA;QAAA;;QAiBvC6I,MAAM,CAAC1C,IAAP,CAAY4gB,GAAZ;MACH,CApBQ;;MAET,KAAK,IAAInhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKse,IAAL,CAAU7e,MAA9B,EAAsCO,CAAC,EAAvC;QAAA;MAAA;;MAmBA,IAAMtI,GAAG,GAAG,KAAK0wB,SAAL,GAAiB,KAAKA,SAAtB,GAAkC3kB,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,GAAK,CAAL,SAAWR,MAAX,EAAlD;MACA,IAAMtL,GAAG,GAAG,KAAK0wB,SAAL,GAAiB,KAAKA,SAAtB,GAAkC5kB,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,EAAQR,MAAR,CAAlD;MACA,OAAO,CAACvL,GAAD,EAAMC,GAAN,CAAP;IACH;;;WACD,2BAAkB;MACd,OAAO,KAAK0R,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAACrB,IAAN;MAAA,CAAlB,CAAP;IACH;;;WACD,mBAAU5B,MAAV,EAAkB5H,KAAlB,EAAyB;MACrB,IAAI8R,KAAJ;;MACA,IAAI,KAAK7F,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACnClL,KAAK,GAAGvW,SAAS,EAAjB;MACH,CAFD,MAGK,IAAI,KAAK0Q,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QAC1C4F,KAAK,GAAGtW,WAAW,EAAnB;MACH,CAFI,MAGA,IAAI,KAAKyQ,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QAC3CoE,KAAK,GAAGrW,UAAU,GAAGwY,OAAb,CAAqB,GAArB,CAAR;MACH;;MACDnC,KAAK,CAAC1V,KAAN,CAAY,CAAC,CAAD,EAAI4D,KAAJ,CAAZ,EAAwB4H,MAAxB,CAA+BA,MAA/B;MACA,OAAO,KAAK6jB,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,mBAAUlK,MAAV,EAAkBnI,MAAlB,EAA0B;MACtB,IAAMqS,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAACqD,MAAD,EAAS,CAAT,CAApB,EAAiCmI,MAAjC,CAAwCA,MAAxC,CAAd;MACA,OAAO,KAAK6jB,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,sBAAalK,MAAb,EAAqB;MACjB,KAAKmkB,cAAL,GAAsBnkB,MAAtB;MACA,KAAK0c,OAAL,GAAe,KAAKyH,cAApB;MACA,KAAK1X,MAAL,GAAc,KAAKmQ,SAAL,CAAe,KAAKF,OAApB,EAA6B,KAAKpW,IAAL,CAAUlO,KAAvC,CAAd;IACH;;;WACD,+BAAsB2K,IAAtB,EAA4B;MACxB,KAAKyiB,eAAL,GAAuBziB,IAAI,CAAC5L,KAA5B;MACA,KAAKsuB,aAAL;IACH;;;WACD,uBAAc;MACV,KAAKD,eAAL,GAAuB,IAAvB;MACA,KAAKC,aAAL;IACH;;;WACD,iBAAQ/iB,IAAR,EAAciE,MAAd,EAAsB;MAClB,IAAIA,MAAJ,EAAY;QACRjE,IAAI,CAACiE,MAAL,GAAcA,MAAM,CAAC/E,IAArB;MACH;;MACD,KAAKnO,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,iBAAQQ,KAAR,EAAeH,IAAf,EAAqB;MACjB,iBAAUA,IAAI,CAACnB,IAAf;IACH;;;WACD,qBAAY;MACR,IAAI5B,MAAJ;;MACA,IAAI,KAAK6F,UAAL,KAAoBpG,SAAS,CAACqG,OAAlC,EAA2C;QACvC9F,MAAM,GAAG,KAAKskB,YAAd;MACH,CAFD,MAGK;QACDtkB,MAAM,GAAG,KAAKokB,OAAd;MACH;;MACD,KAAKrkB,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKC,UAAlC,EAA8C7F,MAA9C,EAAsD,KAAKyH,YAA3D,CAAd;IACH;;;WACD,4BAAmB;MACf,IAAMie,IAAI,GAAG;QACTrhB,SAAS,EAAE,KAAKwB,UADP;QAET9F,MAAM,EAAEhI,SAFC;QAGTiI,MAAM,EAAE,EAHC;QAITzE,KAAK,EAAExD,SAJE;QAKT6B,QAAQ,EAAE,KAAKwlB;MALN,CAAb;;MAOA,IAAIsG,IAAI,CAACrhB,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QACtC4f,IAAI,CAAC1lB,MAAL,GAAc,KAAKskB,YAAnB;QACAoB,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAnB;QACA2lB,IAAI,CAACnqB,KAAL,GAAa,KAAK6nB,WAAlB;MACH,CAJD,MAKK;QACDsC,IAAI,CAAC1lB,MAAL,GAAc,KAAKokB,OAAnB;QACAsB,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAL,CAAYmK,KAA1B;MACH;;MACD,OAAOwb,IAAP;IACH;;;WACD,kCAA4B;MAAA,IAATttB,KAAS,UAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,oBAAWS,IAAX,EAAiB;MACb,IAAMtG,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAhD;MACH,CAFW,CAAZ;;MAGA,IAAIsF,GAAG,GAAG,CAAC,CAAX,EAAc;QACV;MACH;;MACD,KAAKqG,aAAL,IAAsBC,IAAtB,4BAA+B,KAAKD,aAApC;MACA,KAAKvB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAaC,IAAb,EAAmB;MACf,IAAMtG,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAhD;MACH,CAFW,CAAZ;MAGA,KAAK2L,aAAL,CAAmBlG,MAAnB,CAA0BH,GAA1B,EAA+B,CAA/B;MACA,KAAKqG,aAAL,sBAAyB,KAAKA,aAA9B;MACA,KAAKtB,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;WACD,yBAAgB;MACZ,KAAKA,aAAL,sBAAyB,KAAKA,aAA9B;;MADY,6CAEQ,KAAKA,aAFb;MAAA;;MAAA;QAEZ,0DAAwC;UAAA,IAA7BD,KAA6B;UACpC,KAAKrB,UAAL,CAAgBG,IAAhB,CAAqB;YAAExK,KAAK,EAAE0L,KAAT;YAAgB8iB,OAAO,EAAE;UAAzB,CAArB;QACH;MAJW;QAAA;MAAA;QAAA;MAAA;;MAKZ,KAAK7iB,aAAL,GAAqB,EAArB;IACH;;;;EAzQmC4C,kB;;AA2QxC6gB,yBAAyB,CAAC7rB,IAA1B;EAAA;EAAA;IAAA,4FA55L0G9I,EA45L1G,uBAAsH20B,yBAAtH,SAAsHA,yBAAtH;EAAA;AAAA;;AACAA,yBAAyB,CAAC1rB,IAA1B,kBA75L0GjJ,EA65L1G;EAAA,MAA0G20B,yBAA1G;EAAA;EAAA;IAAA;MA75L0G30B,EA65L1G;MA75L0GA,EA65L1G;IAAA;;IAAA;MAAA;;MA75L0GA,EA65L1G,qBA75L0GA,EA65L1G;MA75L0GA,EA65L1G,qBA75L0GA,EA65L1G;IAAA;EAAA;EAAA;IAAA;MA75L0GA,EA65L1G;QAAA,OAA0G,iBAA1G;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WA75L0GA,EA65L1G;EAAA;EAAA;EAAA;EAAA;IAAA;MA75L0GA,EA85LtG,yCADJ;MA75L0GA,EAo6LpG;QAAA,OAAoB,mBAApB;MAAA;QAAA,OACuB,sBADvB;MAAA;QAAA,OAEyB,wBAFzB;MAAA,EAPN;MA75L0GA,EAw6LpG,iBAXN;MA75L0GA,EAw6LpG,yCAXN;MA75L0GA,EA06LhG,qBAbV;MA75L0GA,EA+6LlG,iBAlBR;MA75L0GA,EAi7LpG,0BApBN;MA75L0GA,EAk7LlG,0EArBR;MA75L0GA,EAi8LlG,yEApCR;MA75L0GA,EA+8LlG,uBAlDR;MA75L0GA,EAg9LhG,0EAnDV;MA75L0GA,EAg+LhG,0EAnEV;MA75L0GA,EAigMlG,iBApGR;MA75L0GA,EAmgMpG,4EAtGN;MA75L0GA,EA+hMtG,eAlIJ;IAAA;;IAAA;MA75L0GA,EA+5LpG,oBA/5LoGA,EA+5LpG,kLAFN;MA75L0GA,EAy6LpF,aAZtB;MA75L0GA,EAy6LpF,kCAZtB;MA75L0GA,EA26L9F,aAdZ;MA75L0GA,EA26L9F,4GAdZ;MA75L0GA,EAi7L7F,aApBb;MA75L0GA,EAi7L7F,wCApBb;MA75L0GA,EAo7L/F,aAvBX;MA75L0GA,EAo7L/F,8BAvBX;MA75L0GA,EAm8L/F,aAtCX;MA75L0GA,EAm8L/F,8BAtCX;MA75L0GA,EA+8L3F,aAlDf;MA75L0GA,EA+8L3F,uCAlDf;MA75L0GA,EAg9LtE,aAnDpC;MA75L0GA,EAg9LtE,gEAnDpC;MA75L0GA,EAg+LxF,aAnElB;MA75L0GA,EAg+LxF,yCAnElB;MA75L0GA,EAqgMjG,aAxGT;MA75L0GA,EAqgMjG,+DAxGT;IAAA;EAAA;EAAA,eAmI+yDyR,cAnI/yD,EAmIohEyI,cAnIphE,EAmI2yE+C,cAnI3yE,EAmIsmFyT,mBAnItmF,EAmIw1FlI,WAnIx1F,EAmIsiGhG,qBAnItiG,EAmI2yGgI,QAnI3yG,EAmI6/GxpB,EAAE,CAACkI,IAnIhgH,EAmI8kHlI,EAAE,CAACwQ,OAnIjlH;EAAA;EAAA;EAAA;AAAA;;AAoIA;EAAA,mDAjiM0GxR,EAiiM1G,mBAA2F20B,yBAA3F,EAAkI,CAAC;IACvH7sB,IAAI,EAAE5H,SADiH;IAEvH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,+BAAZ;MAA6CC,QAAQ,ooJAArD;MAmIdyF,eAAe,EAAErO,uBAAuB,CAACsO,MAnI3B;MAmImCzF,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAnIpE;MAmI0EC,MAAM,EAAE,CAAC,yvDAAD;IAnIlF,CAAD;EAFiH,CAAD,CAAlI,QAsI4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAFD;IAIZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAVJ;IAYZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAZJ;IAcZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAdA;IAgBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZsxB,QAAQ,EAAE,CAAC;MACX7pB,IAAI,EAAEzH;IADK,CAAD,CAlBE;IAoBZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CApBE;IAsBZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CAtBH;IAwBZ8wB,KAAK,EAAE,CAAC;MACRrpB,IAAI,EAAEzH;IADE,CAAD,CAxBK;IA0BZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CA1BH;IA4BZ4T,UAAU,EAAE,CAAC;MACbnM,IAAI,EAAEzH;IADO,CAAD,CA5BA;IA8BZuxB,cAAc,EAAE,CAAC;MACjB9pB,IAAI,EAAEzH;IADW,CAAD,CA9BJ;IAgCZwxB,cAAc,EAAE,CAAC;MACjB/pB,IAAI,EAAEzH;IADW,CAAD,CAhCJ;IAkCZyxB,gBAAgB,EAAE,CAAC;MACnBhqB,IAAI,EAAEzH;IADa,CAAD,CAlCN;IAoCZ0xB,kBAAkB,EAAE,CAAC;MACrBjqB,IAAI,EAAEzH;IADe,CAAD,CApCR;IAsCZ2xB,kBAAkB,EAAE,CAAC;MACrBlqB,IAAI,EAAEzH;IADe,CAAD,CAtCR;IAwCZ6zB,mBAAmB,EAAE,CAAC;MACtBpsB,IAAI,EAAEzH;IADgB,CAAD,CAxCT;IA0CZ8zB,mBAAmB,EAAE,CAAC;MACtBrsB,IAAI,EAAEzH;IADgB,CAAD,CA1CT;IA4CZ+zB,UAAU,EAAE,CAAC;MACbtsB,IAAI,EAAEzH;IADO,CAAD,CA5CA;IA8CZg0B,UAAU,EAAE,CAAC;MACbvsB,IAAI,EAAEzH;IADO,CAAD,CA9CA;IAgDZ4xB,YAAY,EAAE,CAAC;MACfnqB,IAAI,EAAEzH;IADS,CAAD,CAhDF;IAkDZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAlDL;IAoDZqvB,SAAS,EAAE,CAAC;MACZ5nB,IAAI,EAAEzH;IADM,CAAD,CApDC;IAsDZsvB,SAAS,EAAE,CAAC;MACZ7nB,IAAI,EAAEzH;IADM,CAAD,CAtDC;IAwDZkzB,SAAS,EAAE,CAAC;MACZzrB,IAAI,EAAEzH;IADM,CAAD,CAxDC;IA0DZmzB,SAAS,EAAE,CAAC;MACZ1rB,IAAI,EAAEzH;IADM,CAAD,CA1DC;IA4DZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CA5DE;IA8DZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CA9DA;IAgEZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD,CAhEL;IAmEZywB,qBAAqB,EAAE,CAAC;MACxBxsB,IAAI,EAAE/G,YADkB;MAExB8C,IAAI,EAAE,CAAC,uBAAD;IAFkB,CAAD,CAnEX;IAsEZ0wB,WAAW,EAAE,CAAC;MACdzsB,IAAI,EAAEtH,YADQ;MAEdqD,IAAI,EAAE,CAAC,YAAD;IAFQ,CAAD;EAtED,CAtI5B;AAAA;;IAiNM+wB,e;;;;AAENA,eAAe,CAAC9rB,IAAhB;EAAA,iBAA4G8rB,eAA5G;AAAA;;AACAA,eAAe,CAACpX,IAAhB,kBArvM0Gxd,EAqvM1G;EAAA,MAA6G40B;AAA7G;AACAA,eAAe,CAACnX,IAAhB,kBAtvM0Gzd,EAsvM1G;EAAA,UAAwI,CAAC+sB,iBAAD,CAAxI;AAAA;;AACA;EAAA,mDAvvM0G/sB,EAuvM1G,mBAA2F40B,eAA3F,EAAwH,CAAC;IAC7G9sB,IAAI,EAAEhH,QADuG;IAE7G+C,IAAI,EAAE,CAAC;MACC6Z,OAAO,EAAE,CAACqP,iBAAD,CADV;MAECpP,YAAY,EAAE,CAAC4T,kBAAD,EAAqBiD,4BAArB,EAAmDG,yBAAnD,EAA8EjE,mBAA9E,CAFf;MAGC9S,OAAO,EAAE,CAAC2T,kBAAD,EAAqBiD,4BAArB,EAAmDG,yBAAnD,EAA8EjE,mBAA9E;IAHV,CAAD;EAFuG,CAAD,CAAxH;AAAA;;IASMmE,Y;EACF,sBAAYntB,OAAZ,EAAqB;IAAA;;IACjB,KAAKotB,UAAL,GAAkB,IAAlB;IACA,KAAKxmB,QAAL,GAAgB,KAAhB;IACA,KAAKiI,MAAL,GAAc,CAAd;IACA,KAAK7G,QAAL,GAAgB,KAAhB;IACA,KAAKiC,UAAL,GAAkB,IAAlB;IACA,KAAKojB,aAAL,GAAqB,IAArB;IACA,KAAKlzB,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,KAAKwkB,WAAL,GAAmB,KAAnB;IACA,KAAK6P,OAAL,GAAe,KAAf;IACA,KAAKttB,OAAL,GAAeA,OAAO,CAACS,aAAvB;EACH;;;;WACD,qBAAY6F,OAAZ,EAAqB;MACjB,IAAIA,OAAO,CAAC8mB,UAAZ,EAAwB;QACpB,KAAK1P,aAAL;MACH;;MACD,KAAK1U,MAAL;IACH;;;WACD,kBAAS;MACL,KAAKqS,UAAL,GAAkB,SAAS1B,EAAE,GAAG1N,QAAL,EAA3B;MACA,KAAKqP,YAAL,kBAA4B,KAAKD,UAAjC;;MACA,IAAI,KAAKzU,QAAL,IAAiB,KAAKuT,KAA1B,EAAiC;QAC7B,KAAKgC,aAAL,GAAqB,KAAKwB,WAAL,EAArB;QACA,KAAKF,WAAL,GAAmB,IAAnB;MACH,CAHD,MAIK;QACD,KAAKA,WAAL,GAAmB,KAAnB;MACH;;MACD,KAAKG,YAAL;MACA,KAAK2P,cAAL;IACH;;;WACD,yBAAgB;MACZ,KAAKtP,IAAL,GAAY,KAAKuP,eAAL,EAAZ;MACAxwB,UAAU,CAAC,KAAKgM,MAAL,CAAYzI,IAAZ,CAAiB,IAAjB,CAAD,EAAyB,GAAzB,CAAV;IACH;;;WACD,wBAAe;MACX,IAAMwd,IAAI,GAAG5jB,MAAM,CAAC,KAAK6F,OAAN,CAAN,CAAqB7F,MAArB,CAA4B,MAA5B,CAAb;MACA,IAAM8jB,IAAI,GAAG,KAAKwP,OAAL,EAAb;;MACA,IAAI,KAAKxjB,UAAT,EAAqB;QACjB8T,IAAI,CAAC/jB,UAAL,GAAkBkD,QAAlB,CAA2B,GAA3B,EAAgC8gB,IAAhC,CAAqC,GAArC,EAA0CC,IAA1C;MACH,CAFD,MAGK;QACDF,IAAI,CAACC,IAAL,CAAU,GAAV,EAAeC,IAAf;MACH;IACJ;;;WACD,uBAAc;MACV,IAAI,KAAK9D,KAAT,EAAgB;QACZ,OAAO,KAAKA,KAAZ;MACH;;MACD,OAAO,CACH;QACItL,MAAM,EAAE,CADZ;QAEItG,KAAK,EAAE,KAAKsK,IAFhB;QAGIqJ,OAAO,EAAE,KAAKwR,eAAL;MAHb,CADG,EAMH;QACI7e,MAAM,EAAE,GADZ;QAEItG,KAAK,EAAE,KAAKsK,IAFhB;QAGIqJ,OAAO,EAAE;MAHb,CANG,CAAP;IAYH;;;WACD,2BAAkB;MACd,IAAI,CAAC,KAAKjS,UAAV,EAAsB;QAClB,OAAO,KAAKwjB,OAAL,EAAP;MACH;;MACD,IAAIxR,MAAM,GAAG,KAAK0R,SAAL,EAAb;MACA,IAAI1P,IAAJ;;MACA,IAAI,KAAKmP,UAAT,EAAqB;QACjB,IAAI,KAAKpa,WAAL,KAAqB+G,cAAc,CAACE,QAAxC,EAAkD;UAC9CgC,MAAM,GAAG/U,IAAI,CAAC/L,GAAL,CAAS,KAAKoD,MAAd,EAAsB0d,MAAtB,CAAT;UACAgC,IAAI,GAAG1K,WAAW,CAAC,KAAKrP,CAAN,EAAS,KAAK0K,CAAL,GAAS,KAAKrQ,MAAvB,EAA+B,KAAKO,KAApC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,KAAK8uB,KAAtD,CAAlB;QACH,CAHD,MAIK,IAAI,KAAK5a,WAAL,KAAqB+G,cAAc,CAACG,UAAxC,EAAoD;UACrD+B,MAAM,GAAG/U,IAAI,CAAC/L,GAAL,CAAS,KAAK2D,KAAd,EAAqBmd,MAArB,CAAT;UACAgC,IAAI,GAAG1K,WAAW,CAAC,KAAKrP,CAAN,EAAS,KAAK0K,CAAd,EAAiB,CAAjB,EAAoB,KAAKrQ,MAAzB,EAAiC,CAAjC,EAAoC,KAAKqvB,KAAzC,CAAlB;QACH;MACJ,CATD,MAUK;QACD,IAAI,KAAK5a,WAAL,KAAqB+G,cAAc,CAACE,QAAxC,EAAkD;UAC9CgE,IAAI,GAAG1K,WAAW,CAAC,KAAKrP,CAAN,EAAS,KAAK0K,CAAL,GAAS,KAAKrQ,MAAvB,EAA+B,KAAKO,KAApC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,KAAK8uB,KAAtD,CAAlB;QACH,CAFD,MAGK,IAAI,KAAK5a,WAAL,KAAqB+G,cAAc,CAACG,UAAxC,EAAoD;UACrD+D,IAAI,GAAG1K,WAAW,CAAC,KAAKrP,CAAN,EAAS,KAAK0K,CAAd,EAAiB,CAAjB,EAAoB,KAAKrQ,MAAzB,EAAiC,CAAjC,EAAoC,KAAKqvB,KAAzC,CAAlB;QACH;MACJ;;MACD,OAAO3P,IAAP;IACH;;;WACD,mBAAU;MACN,IAAIhC,MAAM,GAAG,KAAK0R,SAAL,EAAb;MACA,IAAI1P,IAAJ;;MACA,IAAI,KAAKmP,UAAT,EAAqB;QACjB,IAAI,KAAKpa,WAAL,KAAqB+G,cAAc,CAACE,QAAxC,EAAkD;UAC9CgC,MAAM,GAAG/U,IAAI,CAAC/L,GAAL,CAAS,KAAKoD,MAAd,EAAsB0d,MAAtB,CAAT;UACAgC,IAAI,GAAG1K,WAAW,CAAC,KAAKrP,CAAN,EAAS,KAAK0K,CAAd,EAAiB,KAAK9P,KAAtB,EAA6B,KAAKP,MAAlC,EAA0C0d,MAA1C,EAAkD,KAAK2R,KAAvD,CAAlB;QACH,CAHD,MAIK,IAAI,KAAK5a,WAAL,KAAqB+G,cAAc,CAACG,UAAxC,EAAoD;UACrD+B,MAAM,GAAG/U,IAAI,CAAC/L,GAAL,CAAS,KAAK2D,KAAd,EAAqBmd,MAArB,CAAT;UACAgC,IAAI,GAAG1K,WAAW,CAAC,KAAKrP,CAAN,EAAS,KAAK0K,CAAd,EAAiB,KAAK9P,KAAtB,EAA6B,KAAKP,MAAlC,EAA0C0d,MAA1C,EAAkD,KAAK2R,KAAvD,CAAlB;QACH;MACJ,CATD,MAUK;QACD3P,IAAI,GAAG1K,WAAW,CAAC,KAAKrP,CAAN,EAAS,KAAK0K,CAAd,EAAiB,KAAK9P,KAAtB,EAA6B,KAAKP,MAAlC,EAA0C0d,MAA1C,EAAkD,KAAK2R,KAAvD,CAAlB;MACH;;MACD,OAAO3P,IAAP;IACH;;;WACD,qBAAY;MACR,IAAIhC,MAAM,GAAG,CAAb;;MACA,IAAI,KAAKmR,UAAL,IAAmB,KAAK7uB,MAAL,GAAc,CAAjC,IAAsC,KAAKO,KAAL,GAAa,CAAvD,EAA0D;QACtDmd,MAAM,GAAG/U,IAAI,CAAC0D,KAAL,CAAW1D,IAAI,CAAC/L,GAAL,CAAS,CAAT,EAAY,KAAKoD,MAAL,GAAc,CAA1B,EAA6B,KAAKO,KAAL,GAAa,CAA1C,CAAX,CAAT;MACH;;MACD,OAAOmd,MAAP;IACH;;;WACD,2BAAkB;MACd,IAAI,KAAKmR,UAAT,EAAqB;QACjB,OAAO,GAAP;MACH,CAFD,MAGK;QACD,OAAO,GAAP;MACH;IACJ;;;SACD,eAAY;MACR,IAAIQ,KAAK,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,CAAZ;;MACA,IAAI,KAAKR,UAAT,EAAqB;QACjB,IAAI,KAAKpa,WAAL,KAAqB+G,cAAc,CAACE,QAAxC,EAAkD;UAC9C,IAAI,KAAK7Q,IAAL,CAAUvL,KAAV,GAAkB,CAAtB,EAAyB;YACrB+vB,KAAK,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,EAAoB,KAApB,CAAR;UACH,CAFD,MAGK;YACDA,KAAK,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,EAAqB,IAArB,CAAR;UACH;QACJ,CAPD,MAQK,IAAI,KAAK5a,WAAL,KAAqB+G,cAAc,CAACG,UAAxC,EAAoD;UACrD,IAAI,KAAK9Q,IAAL,CAAUvL,KAAV,GAAkB,CAAtB,EAAyB;YACrB+vB,KAAK,GAAG,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,EAAqB,IAArB,CAAR;UACH,CAFD,MAGK;YACDA,KAAK,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,KAApB,CAAR;UACH;QACJ;MACJ;;MACD,OAAOA,KAAP;IACH;;;WACD,wBAAe;MACX,KAAK3lB,QAAL,CAAcI,IAAd,CAAmB,KAAKe,IAAxB;IACH;;;WACD,wBAAe;MACX,KAAKlB,UAAL,CAAgBG,IAAhB,CAAqB,KAAKe,IAA1B;IACH;;;WACD,0BAAiB;MACb,KAAKkkB,OAAL,GACI,KAAKD,aAAL,KACM,KAAKra,WAAL,KAAqB+G,cAAc,CAACE,QAApC,IAAgD,KAAK1b,MAAL,KAAgB,CAAjE,IACI,KAAKyU,WAAL,KAAqB+G,cAAc,CAACG,UAApC,IAAkD,KAAKpb,KAAL,KAAe,CAF1E,CADJ;IAIH;;;;;;AAELquB,YAAY,CAAC/rB,IAAb;EAAA,iBAAyG+rB,YAAzG,EA/5M0G70B,EA+5M1G,mBAAuIA,EAAE,CAAC+I,UAA1I;AAAA;;AACA8rB,YAAY,CAAC5rB,IAAb,kBAh6M0GjJ,EAg6M1G;EAAA,MAA6F60B,YAA7F;EAAA;EAAA;IAAA;MAh6M0G70B,EAg6M1G;QAAA,OAA6F,kBAA7F;MAAA;QAAA,OAA6F,kBAA7F;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAh6M0GA,EAg6M1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAh6M0GA,EAi6MtG,kEADJ;MAh6M0GA,EAo6MtG,iBAJJ;MAh6M0GA,EAo6MtG,6BAJJ;MAh6M0GA,EA86MpG;QAAA,OAAS,yBAAT;MAAA,EAdN;MAh6M0GA,EAo6MtG,eAJJ;IAAA;;IAAA;MAh6M0GA,EAi6M3F,oCADf;MAh6M0GA,EAy6MpG,aATN;MAh6M0GA,EAy6MpG,2DATN;MAh6M0GA,EA26MpG,+GAXN;IAAA;EAAA;EAAA,eAgB0C0hB,0BAhB1C,EAgBuL1gB,EAAE,CAACkI,IAhB1L;EAAA;EAAA;AAAA;;AAiBA;EAAA,mDAj7M0GlJ,EAi7M1G,mBAA2F60B,YAA3F,EAAqH,CAAC;IAC1G/sB,IAAI,EAAE5H,SADoG;IAE1G2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,mBADX;MAECC,QAAQ,8gBAFT;MAmBCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAnB1C,CAAD;EAFoG,CAAD,CAArH,EAuB4B,YAAY;IAAE,OAAO,CAAC;MAAElH,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAD,CAAP;EAAmC,CAvB7E,EAuB+F;IAAEwR,IAAI,EAAE,CAAC;MACxFzS,IAAI,EAAEzH;IADkF,CAAD,CAAR;IAE/EyQ,IAAI,EAAE,CAAC;MACPhJ,IAAI,EAAEzH;IADC,CAAD,CAFyE;IAI/EmG,KAAK,EAAE,CAAC;MACRsB,IAAI,EAAEzH;IADE,CAAD,CAJwE;IAM/E4F,MAAM,EAAE,CAAC;MACT6B,IAAI,EAAEzH;IADG,CAAD,CANuE;IAQ/EuL,CAAC,EAAE,CAAC;MACJ9D,IAAI,EAAEzH;IADF,CAAD,CAR4E;IAU/EiW,CAAC,EAAE,CAAC;MACJxO,IAAI,EAAEzH;IADF,CAAD,CAV4E;IAY/Eqa,WAAW,EAAE,CAAC;MACd5S,IAAI,EAAEzH;IADQ,CAAD,CAZkE;IAc/Ey0B,UAAU,EAAE,CAAC;MACbhtB,IAAI,EAAEzH;IADO,CAAD,CAdmE;IAgB/EiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CAhBqE;IAkB/EkW,MAAM,EAAE,CAAC;MACTzO,IAAI,EAAEzH;IADG,CAAD,CAlBuE;IAoB/EqP,QAAQ,EAAE,CAAC;MACX5H,IAAI,EAAEzH;IADK,CAAD,CApBqE;IAsB/EwhB,KAAK,EAAE,CAAC;MACR/Z,IAAI,EAAEzH;IADE,CAAD,CAtBwE;IAwB/EsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CAxBmE;IA0B/Ek1B,SAAS,EAAE,CAAC;MACZztB,IAAI,EAAEzH;IADM,CAAD,CA1BoE;IA4B/E00B,aAAa,EAAE,CAAC;MAChBjtB,IAAI,EAAEzH;IADU,CAAD,CA5BgE;IA8B/EwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CA9BuE;IAgC/E+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAhCqE;IAkC/EgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAlCmE;IAoC/EsP,YAAY,EAAE,CAAC;MACfpI,IAAI,EAAEtH,YADS;MAEfqD,IAAI,EAAE,CAAC,YAAD;IAFS,CAAD,CApCiE;IAuC/EsM,YAAY,EAAE,CAAC;MACfrI,IAAI,EAAEtH,YADS;MAEfqD,IAAI,EAAE,CAAC,YAAD;IAFS,CAAD;EAvCiE,CAvB/F;AAAA;;AAmEA,IAAI2xB,YAAJ;;AACA,CAAC,UAAUA,YAAV,EAAwB;EACrBA,YAAY,CAAC,UAAD,CAAZ,GAA2B,UAA3B;EACAA,YAAY,CAAC,YAAD,CAAZ,GAA6B,YAA7B;EACAA,YAAY,CAAC,SAAD,CAAZ,GAA0B,SAA1B;AACH,CAJD,EAIGA,YAAY,KAAKA,YAAY,GAAG,EAApB,CAJf;;AAMA,IAAIC,OAAJ;;AACA,CAAC,UAAUA,OAAV,EAAmB;EAChBA,OAAO,CAAC,UAAD,CAAP,GAAsB,UAAtB;EACAA,OAAO,CAAC,UAAD,CAAP,GAAsB,UAAtB;AACH,CAHD,EAGGA,OAAO,KAAKA,OAAO,GAAG,EAAf,CAHV;;IAKMC,iB;EACF,2BAAYhuB,OAAZ,EAAqB;IAAA;;IACjB,KAAK+P,iBAAL,GAAyB,IAAI9W,YAAJ,EAAzB;IACA,KAAKg1B,iBAAL,GAAyB,CAAzB;IACA,KAAKC,eAAL,GAAuB,CAAvB;IACA,KAAKluB,OAAL,GAAeA,OAAO,CAACS,aAAvB;EACH;;;;WACD,qBAAY6F,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,mBAAU;MACN,IAAMyK,CAAC,GAAG,KAAKzT,OAAL,CAAaW,qBAAb,GAAqCpC,MAA/C;MACA,IAAMiV,CAAC,GAAG,KAAKxT,OAAL,CAAaW,qBAAb,GAAqC7B,KAA/C;MACA,OAAO;QAAEP,MAAM,EAAEkV,CAAV;QAAa3U,KAAK,EAAE0U,CAApB;QAAuB2a,QAAQ,EAAE,KAAKtwB,KAAL,GAAa;MAA9C,CAAP;IACH;;;WACD,2BAAkB;MACd,KAAKkS,iBAAL,CAAuB1H,IAAvB,CAA4B,KAAK+lB,OAAL,EAA5B;IACH;;;WACD,kBAAS;MACL,IAAI,KAAKhO,eAAT,EAA0B;QACtB,KAAKiO,aAAL,GAAqB,KAAKjO,eAAL,CAAqB,KAAKviB,KAA1B,CAArB;MACH,CAFD,MAGK;QACD,KAAKwwB,aAAL,GAAqB7mB,WAAW,CAAC,KAAK3J,KAAN,CAAhC;MACH;;MACD,IAAI,KAAKmV,WAAL,KAAqB,YAAzB,EAAuC;QACnC,KAAK9O,CAAL,GAAS,KAAKoqB,IAAL,GAAY,KAAKC,QAA1B,CADmC,CAEnC;QACA;;QACA,IAAI,KAAK1wB,KAAL,GAAa,CAAjB,EAAoB;UAChB,KAAKqG,CAAL,GAAS,KAAKA,CAAL,GAAS,KAAK+pB,iBAAvB;UACA,KAAKxf,UAAL,GAAkB,KAAlB;QACH,CAHD,MAIK;UACD,KAAKvK,CAAL,GAAS,KAAKA,CAAL,GAAS,KAAK+pB,iBAAvB;UACA,KAAKxf,UAAL,GAAkB,OAAlB;QACH;;QACD,KAAKG,CAAL,GAAS,KAAK4f,IAAL,GAAY,KAAKC,SAAL,GAAiB,CAAtC;MACH,CAbD,MAcK;QACD;QACA,KAAKvqB,CAAL,GAAS,KAAKoqB,IAAL,GAAY,KAAKC,QAAL,GAAgB,CAArC;QACA,KAAK3f,CAAL,GAAS,KAAK4f,IAAL,GAAY,KAAKC,SAA1B;;QACA,IAAI,KAAK5wB,KAAL,GAAa,CAAjB,EAAoB;UAChB,KAAK+Q,CAAL,GAAS,KAAKA,CAAL,GAAS,KAAKsf,eAAvB;UACA,KAAKzf,UAAL,GAAkB,KAAlB;QACH,CAHD,MAIK;UACD,KAAKG,CAAL,GAAS,KAAKA,CAAL,GAAS,KAAKsf,eAAvB;UACA,KAAKzf,UAAL,GAAkB,OAAlB;QACH;;QACD,KAAKC,SAAL,yBAAgC,KAAKxK,CAArC,gBAA4C,KAAK0K,CAAjD;MACH;IACJ;;;;;;AAELof,iBAAiB,CAAC5sB,IAAlB;EAAA,iBAA8G4sB,iBAA9G,EAxjN0G11B,EAwjN1G,mBAAiJA,EAAE,CAAC+I,UAApJ;AAAA;;AACA2sB,iBAAiB,CAACzsB,IAAlB,kBAzjN0GjJ,EAyjN1G;EAAA,MAAkG01B,iBAAlG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WAzjN0G11B,EAyjN1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAzjN0GA,EA0jNtG,iBADJ;MAzjN0GA,EA0jNtG,6BADJ;MAzjN0GA,EAkkNpG,UATN;MAzjN0GA,EAmkNtG,eAVJ;IAAA;;IAAA;MAzjN0GA,EA6jNpG,+FAJN;MAzjN0GA,EAkkNpG,aATN;MAzjN0GA,EAkkNpG,gDATN;IAAA;EAAA;EAAA;EAAA;AAAA;;AAYA;EAAA,mDArkN0GA,EAqkN1G,mBAA2F01B,iBAA3F,EAA0H,CAAC;IAC/G5tB,IAAI,EAAE5H,SADyG;IAE/G2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,yBAAZ;MAAuCC,QAAQ,yQAA/C;MAWdyF,eAAe,EAAErO,uBAAuB,CAACsO,MAX3B;MAWmCvF,MAAM,EAAE,CAAC,kCAAD;IAX3C,CAAD;EAFyG,CAAD,CAA1H,EAc4B,YAAY;IAAE,OAAO,CAAC;MAAE3B,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAD,CAAP;EAAmC,CAd7E,EAc+F;IAAExD,KAAK,EAAE,CAAC;MACzFuC,IAAI,EAAEzH;IADmF,CAAD,CAAT;IAE/EynB,eAAe,EAAE,CAAC;MAClBhgB,IAAI,EAAEzH;IADY,CAAD,CAF8D;IAI/E21B,IAAI,EAAE,CAAC;MACPluB,IAAI,EAAEzH;IADC,CAAD,CAJyE;IAM/E61B,IAAI,EAAE,CAAC;MACPpuB,IAAI,EAAEzH;IADC,CAAD,CANyE;IAQ/E41B,QAAQ,EAAE,CAAC;MACXnuB,IAAI,EAAEzH;IADK,CAAD,CARqE;IAU/E81B,SAAS,EAAE,CAAC;MACZruB,IAAI,EAAEzH;IADM,CAAD,CAVoE;IAY/Eqa,WAAW,EAAE,CAAC;MACd5S,IAAI,EAAEzH;IADQ,CAAD,CAZkE;IAc/EoX,iBAAiB,EAAE,CAAC;MACpB3P,IAAI,EAAElH;IADc,CAAD;EAd4D,CAd/F;AAAA;;IAgCMw1B,gB;EACF,4BAAc;IAAA;;IACV,KAAKtuB,IAAL,GAAY0tB,YAAY,CAAC/S,QAAzB;IACA,KAAKpE,eAAL,GAAuB,KAAvB;IACA,KAAK1M,UAAL,GAAkB,IAAlB;IACA,KAAK0kB,aAAL,GAAqB,KAArB;IACA,KAAKtB,aAAL,GAAqB,IAArB;IACA,KAAKlzB,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,KAAK21B,qBAAL,GAA6B,IAAI31B,YAAJ,EAA7B;IACA,KAAK41B,iBAAL,GAAyB,EAAzB;IACA,KAAK5T,cAAL,GAAsBlB,cAAtB;EACH;;;;WACD,qBAAYzT,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MAAA;MAAA;;MACL,KAAK8lB,qBAAL;MACA,IAAMvN,EAAE,mCACHwM,OAAO,CAACgB,QADL,EACgB,CADhB,wBAEHhB,OAAO,CAACI,QAFL,EAEgB,CAFhB,OAAR;MAIA,IAAIa,MAAJ;MACAA,MAAM,GAAGjB,OAAO,CAACgB,QAAjB;MACA,IAAIlK,KAAJ;;MACA,IAAI,KAAKzkB,IAAL,KAAc0tB,YAAY,CAACmB,UAA/B,EAA2C;QACvCpK,KAAK,GAAG,KAAKxX,MAAL,CAAY2H,GAAZ,CAAgB,UAAArL,CAAC;UAAA,OAAIA,CAAC,CAAC9L,KAAN;QAAA,CAAjB,EAA8B8mB,MAA9B,CAAqC,UAACC,GAAD,EAAMjb,CAAN;UAAA,OAAYib,GAAG,GAAGjb,CAAlB;QAAA,CAArC,EAA0D,CAA1D,CAAR;MACH;;MACD,IAAMqe,SAAS,GAAG9gB,IAAI,CAAC9L,GAAL,CAAS,KAAK+X,MAAL,CAAYzM,MAAZ,GAAqB,CAArB,CAAT,EAAkC,CAAlC,CAAlB;MACA,KAAKwoB,IAAL,GAAY,KAAK7hB,MAAL,CAAY2H,GAAZ,CAAgB,UAAArL,CAAC,EAAI;QAC7B,IAAI9L,KAAK,GAAG8L,CAAC,CAAC9L,KAAd;;QACA,IAAM4J,KAAK,GAAG,OAAI,CAAC0nB,QAAL,CAAcxlB,CAAd,CAAd;;QACA,IAAMvB,cAAc,GAAGZ,WAAW,CAACC,KAAD,CAAlC;QACA,IAAM2lB,UAAU,GAAG,OAAI,CAACA,UAAxB;QACA4B,MAAM,GAAGnxB,KAAK,GAAG,CAAR,GAAYkwB,OAAO,CAACgB,QAApB,GAA+BhB,OAAO,CAACI,QAAhD;QACA,IAAMiB,GAAG,GAAG;UACRvxB,KAAK,EAALA,KADQ;UAER4J,KAAK,EAALA,KAFQ;UAGR2lB,UAAU,EAAVA,UAHQ;UAIRhkB,IAAI,EAAEO,CAJE;UAKRvB,cAAc,EAAdA;QALQ,CAAZ;QAOAgnB,GAAG,CAAC7wB,MAAJ,GAAa,OAAI,CAACqX,MAAL,CAAYxE,SAAZ,EAAb;;QACA,IAAI,OAAI,CAAChR,IAAL,KAAc0tB,YAAY,CAAC/S,QAA/B,EAAyC;UACrCqU,GAAG,CAACtwB,KAAJ,GAAYoI,IAAI,CAAC+K,GAAL,CAAS,OAAI,CAACkB,MAAL,CAAYtV,KAAZ,IAAqB,OAAI,CAACsV,MAAL,CAAY6U,SAAZ,CAA9B,CAAZ;;UACA,IAAInqB,KAAK,GAAG,CAAZ,EAAe;YACXuxB,GAAG,CAAClrB,CAAJ,GAAQ,OAAI,CAACiP,MAAL,CAAYtV,KAAZ,CAAR;UACH,CAFD,MAGK;YACDuxB,GAAG,CAAClrB,CAAJ,GAAQ,OAAI,CAACiP,MAAL,CAAY6U,SAAZ,CAAR;UACH;;UACDoH,GAAG,CAACxgB,CAAJ,GAAQ,OAAI,CAACgH,MAAL,CAAYnO,KAAZ,CAAR;QACH,CATD,MAUK,IAAI,OAAI,CAACrH,IAAL,KAAc0tB,YAAY,CAACuB,OAA/B,EAAwC;UACzC,IAAMC,OAAO,GAAG/N,EAAE,CAACyN,MAAD,CAAlB;UACA,IAAMO,OAAO,GAAGD,OAAO,GAAGzxB,KAA1B;UACA0jB,EAAE,CAACyN,MAAD,CAAF,IAAcnxB,KAAd;UACAuxB,GAAG,CAACtwB,KAAJ,GAAY,OAAI,CAACqU,MAAL,CAAYoc,OAAZ,IAAuB,OAAI,CAACpc,MAAL,CAAYmc,OAAZ,CAAnC;UACAF,GAAG,CAAClrB,CAAJ,GAAQ,OAAI,CAACiP,MAAL,CAAYmc,OAAZ,CAAR;UACAF,GAAG,CAACxgB,CAAJ,GAAQ,CAAR;UACAwgB,GAAG,CAACE,OAAJ,GAAcA,OAAd;UACAF,GAAG,CAACG,OAAJ,GAAcA,OAAd;QACH,CATI,MAUA,IAAI,OAAI,CAACnvB,IAAL,KAAc0tB,YAAY,CAACmB,UAA/B,EAA2C;UAC5C,IAAIK,QAAO,GAAG/N,EAAE,CAACyN,MAAD,CAAhB;;UACA,IAAIO,QAAO,GAAGD,QAAO,GAAGzxB,KAAxB;;UACA0jB,EAAE,CAACyN,MAAD,CAAF,IAAcnxB,KAAd;;UACA,IAAIgnB,KAAK,GAAG,CAAZ,EAAe;YACXyK,QAAO,GAAIA,QAAO,GAAG,GAAX,GAAkBzK,KAA5B;YACA0K,QAAO,GAAIA,QAAO,GAAG,GAAX,GAAkB1K,KAA5B;UACH,CAHD,MAIK;YACDyK,QAAO,GAAG,CAAV;YACAC,QAAO,GAAG,CAAV;UACH;;UACDH,GAAG,CAACtwB,KAAJ,GAAY,OAAI,CAACqU,MAAL,CAAYoc,QAAZ,IAAuB,OAAI,CAACpc,MAAL,CAAYmc,QAAZ,CAAnC;UACAF,GAAG,CAAClrB,CAAJ,GAAQ,OAAI,CAACiP,MAAL,CAAYmc,QAAZ,CAAR;UACAF,GAAG,CAACxgB,CAAJ,GAAQ,CAAR;UACAwgB,GAAG,CAACE,OAAJ,GAAcA,QAAd;UACAF,GAAG,CAACG,OAAJ,GAAcA,QAAd;UACA1xB,KAAK,GAAG,CAAC0xB,QAAO,GAAGD,QAAX,EAAoB9N,OAApB,CAA4B,CAA5B,IAAiC,GAAzC;QACH;;QACD,IAAI,OAAI,CAAC/a,MAAL,CAAYsE,SAAZ,KAA0B5E,SAAS,CAACqG,OAAxC,EAAiD;UAC7C4iB,GAAG,CAAC7mB,KAAJ,GAAY,OAAI,CAAC9B,MAAL,CAAY6C,QAAZ,CAAqB7B,KAArB,CAAZ;QACH,CAFD,MAGK;UACD,IAAI,OAAI,CAACrH,IAAL,KAAc0tB,YAAY,CAAC/S,QAA/B,EAAyC;YACrCqU,GAAG,CAAC7mB,KAAJ,GAAY,OAAI,CAAC9B,MAAL,CAAY6C,QAAZ,CAAqBzL,KAArB,CAAZ;YACAuxB,GAAG,CAACjT,aAAJ,GAAoB,OAAI,CAAC1V,MAAL,CAAYmjB,sBAAZ,CAAmC/rB,KAAnC,CAApB;UACH,CAHD,MAIK;YACDuxB,GAAG,CAAC7mB,KAAJ,GAAY,OAAI,CAAC9B,MAAL,CAAY6C,QAAZ,CAAqB8lB,GAAG,CAACG,OAAzB,CAAZ;YACAH,GAAG,CAACjT,aAAJ,GAAoB,OAAI,CAAC1V,MAAL,CAAYmjB,sBAAZ,CAAmCwF,GAAG,CAACG,OAAvC,EAAgDH,GAAG,CAACE,OAApD,CAApB;UACH;QACJ;;QACD,IAAIzT,YAAY,GAAGzT,cAAnB;QACAgnB,GAAG,CAACvB,SAAJ,GAAgBzlB,cAAc,GAAG,GAAjB,GAAuBvK,KAAK,CAAC8J,cAAN,EAAvC;;QACA,IAAI,OAAI,CAACiU,UAAL,KAAoB,IAApB,IAA4B,OAAI,CAACA,UAAL,KAAoBnd,SAApD,EAA+D;UAC3Dod,YAAY,aAAM,OAAI,CAACD,UAAX,qBAA2BxT,cAA3B,CAAZ;UACAgnB,GAAG,CAAChmB,IAAJ,CAASiE,MAAT,GAAkB,OAAI,CAACuO,UAAvB;UACAwT,GAAG,CAACvB,SAAJ,GAAgB,OAAI,CAACjS,UAAL,GAAkB,GAAlB,GAAwBwT,GAAG,CAACvB,SAA5C;QACH;;QACDuB,GAAG,CAACI,WAAJ,GAAkB,OAAI,CAAC7Y,eAAL,GACZlY,SADY,qDAGQmJ,WAAW,CAACiU,YAAD,CAHnB,0DAIM,OAAI,CAAC4T,mBAAL,GAA2B,OAAI,CAACA,mBAAL,CAAyB5xB,KAAzB,CAA3B,GAA6DA,KAAK,CAAC8J,cAAN,EAJnE,oBAAlB;QAMA,OAAOynB,GAAP;MACH,CAhFW,CAAZ;MAiFA,KAAKM,gBAAL;IACH;;;WACD,4BAAmB;MAAA;;MACf,IAAI,KAAKtvB,IAAL,KAAc0tB,YAAY,CAACuB,OAA/B,EAAwC;QACpC,KAAKR,iBAAL,GAAyB,EAAzB;QACA,IAAMc,OAAO,GAAG,EAAhB;QACAA,OAAO,CAACtiB,MAAR,GAAiB,KAAKuO,UAAtB;QACA,IAAMgU,aAAa,GAAG,KAAKviB,MAAL,CAAY2H,GAAZ,CAAgB,UAAArL,CAAC;UAAA,OAAIA,CAAC,CAAC9L,KAAN;QAAA,CAAjB,EAA8B8mB,MAA9B,CAAqC,UAACC,GAAD,EAAMjb,CAAN;UAAA,OAAaA,CAAC,GAAG,CAAJ,GAAQib,GAAG,GAAGjb,CAAd,GAAkBib,GAA/B;QAAA,CAArC,EAA0E,CAA1E,CAAtB;QACA,IAAMiL,aAAa,GAAG,KAAKxiB,MAAL,CAAY2H,GAAZ,CAAgB,UAAArL,CAAC;UAAA,OAAIA,CAAC,CAAC9L,KAAN;QAAA,CAAjB,EAA8B8mB,MAA9B,CAAqC,UAACC,GAAD,EAAMjb,CAAN;UAAA,OAAaA,CAAC,GAAG,CAAJ,GAAQib,GAAG,GAAGjb,CAAd,GAAkBib,GAA/B;QAAA,CAArC,EAA0E,CAA1E,CAAtB;QACA+K,OAAO,CAAC9K,KAAR,GAAgB+K,aAAa,GAAGC,aAAhC;QACAF,OAAO,CAACzrB,CAAR,GAAY,CAAZ;QACAyrB,OAAO,CAAC/gB,CAAR,GAAY,CAAZ,CARoC,CASpC;;QACA,IAAI+gB,OAAO,CAAC9K,KAAR,GAAgB,CAApB,EAAuB;UACnB8K,OAAO,CAAC7wB,KAAR,GAAgB,KAAKqU,MAAL,CAAYyc,aAAZ,CAAhB;QACH,CAFD,MAGK;UACDD,OAAO,CAAC7wB,KAAR,GAAgB,KAAKqU,MAAL,CAAY0c,aAAZ,CAAhB;QACH;;QACDF,OAAO,CAACpxB,MAAR,GAAiB,KAAKqX,MAAL,CAAYxE,SAAZ,EAAjB;QACA,KAAKyd,iBAAL,CAAuB7qB,IAAvB,CAA4B2rB,OAA5B;MACH,CAlBD,MAmBK;QACD,KAAKd,iBAAL,GAAyB,KAAKxhB,MAAL,CAAY2H,GAAZ,CAAgB,UAAArL,CAAC,EAAI;UAAA;;UAC1C,IAAMgmB,OAAO,GAAG,EAAhB;UACAA,OAAO,CAACtiB,MAAR,yBAAiB,OAAI,CAACuO,UAAtB,mEAAoCjS,CAAC,CAAClC,KAAtC;UACAkoB,OAAO,CAAC9K,KAAR,GAAgBlb,CAAC,CAAC9L,KAAlB;UACA8xB,OAAO,CAACzrB,CAAR,GAAY,OAAI,CAACiP,MAAL,CAAY,CAAZ,CAAZ;UACAwc,OAAO,CAAC/gB,CAAR,GAAY,OAAI,CAACgH,MAAL,CAAYjM,CAAC,CAAClC,KAAd,CAAZ;UACAkoB,OAAO,CAAC7wB,KAAR,GAAgB,OAAI,CAACqU,MAAL,CAAYwc,OAAO,CAAC9K,KAApB,IAA6B,OAAI,CAAC1R,MAAL,CAAY,CAAZ,CAA7C;UACAwc,OAAO,CAACpxB,MAAR,GAAiB,OAAI,CAACqX,MAAL,CAAYxE,SAAZ,EAAjB;UACA,OAAOue,OAAP;QACH,CATwB,CAAzB;MAUH;IACJ;;;WACD,iCAAwB;MACpB,KAAK9Y,gBAAL,GAAwB,KAAKF,eAAL,GAAuBlY,SAAvB,GAAmCX,cAAc,CAACM,GAA1E;MACA,KAAK2Y,WAAL,GAAmB,KAAKJ,eAAL,GAAuBlY,SAAvB,GAAmC0X,UAAU,CAACuC,OAAjE;IACH;;;WACD,kBAASnP,KAAT,EAAgB;MACZ,IAAI,CAAC,KAAKC,aAAV,EACI,OAAO,KAAP;MACJ,IAAMC,IAAI,GAAG,KAAKD,aAAL,CAAmBE,IAAnB,CAAwB,UAAAomB,MAAM,EAAI;QAC3C,OAAOvmB,KAAK,CAACjB,IAAN,KAAewnB,MAAM,CAACxnB,IAAtB,IAA8BiB,KAAK,CAAC1L,KAAN,KAAgBiyB,MAAM,CAACjyB,KAA5D;MACH,CAFY,CAAb;MAGA,OAAO4L,IAAI,KAAKhL,SAAhB;IACH;;;WACD,kBAASsxB,QAAT,EAAmB;MACf,IAAIA,QAAQ,CAACtoB,KAAb,EAAoB;QAChB,OAAOsoB,QAAQ,CAACtoB,KAAhB;MACH;;MACD,OAAOsoB,QAAQ,CAACznB,IAAhB;IACH;;;WACD,iBAAQsB,KAAR,EAAewlB,GAAf,EAAoB;MAChB,OAAOA,GAAG,CAAC3nB,KAAX;IACH;;;WACD,0BAAiBmC,KAAjB,EAAwBomB,QAAxB,EAAkC;MAC9B,OAAOpmB,KAAK,GAAG,GAAR,GAAcomB,QAAQ,CAAC3iB,MAAvB,GAAgC,GAAhC,GAAsC2iB,QAAQ,CAACnL,KAAtD;IACH;;;WACD,eAAMzb,IAAN,EAAY;MACR,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;;;;AAELslB,gBAAgB,CAACttB,IAAjB;EAAA,iBAA6GstB,gBAA7G;AAAA;;AACAA,gBAAgB,CAACntB,IAAjB,kBApxN0GjJ,EAoxN1G;EAAA,MAAiGo2B,gBAAjG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WApxN0Gp2B,EAoxN1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MApxN0GA,EAqxNtG,iEADJ;MApxN0GA,EAkzNtG,gEA9BJ;IAAA;;IAAA;MApxN0GA,EAuxNpF,6DAHtB;MApxN0GA,EAkzN9F,aA9BZ;MApxN0GA,EAkzN9F,sCA9BZ;IAAA;EAAA;EAAA,eA4C0C60B,YA5C1C,EA4C2Ta,iBA5C3T,EA4CygB10B,EAAE,CAACwQ,OA5C5gB,EA4CmnBuM,gBA5CnnB,EA4CgjC/c,EAAE,CAACkI,IA5CnjC;EAAA;EAAA;IAAA,WA4CsoC,CAC9nCzH,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACFiiB,OAAO,EAAE;IADP,CAAD,CADY,EAIjBhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MAAEiiB,OAAO,EAAE;IAAX,CAAD,CAAX,CAJU,CAAX,CADY,CAAnB,CADunC;EA5CtoC;EAAA;AAAA;;AAsDA;EAAA,mDA10N0G5jB,EA00N1G,mBAA2Fo2B,gBAA3F,EAAyH,CAAC;IAC9GtuB,IAAI,EAAE5H,SADwG;IAE9G2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,iCADX;MAECC,QAAQ,qiDAFT;MA+CCyF,eAAe,EAAErO,uBAAuB,CAACsO,MA/C1C;MAgDC2C,UAAU,EAAE,CACRlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;QACFiiB,OAAO,EAAE;MADP,CAAD,CADY,EAIjBhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QAAEiiB,OAAO,EAAE;MAAX,CAAD,CAAX,CAJU,CAAX,CADY,CAAnB,CADC;IAhDb,CAAD;EAFwG,CAAD,CAAzH,QA6D4B;IAAElP,IAAI,EAAE,CAAC;MACrB5M,IAAI,EAAEzH;IADe,CAAD,CAAR;IAEZyH,IAAI,EAAE,CAAC;MACPA,IAAI,EAAEzH;IADC,CAAD,CAFM;IAIZ0U,MAAM,EAAE,CAAC;MACTjN,IAAI,EAAEzH;IADG,CAAD,CAJI;IAMZwa,MAAM,EAAE,CAAC;MACT/S,IAAI,EAAEzH;IADG,CAAD,CANI;IAQZid,MAAM,EAAE,CAAC;MACTxV,IAAI,EAAEzH;IADG,CAAD,CARI;IAUZ8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CAVI;IAYZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAZL;IAcZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CAdE;IAgBZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAhBH;IAkBZijB,UAAU,EAAE,CAAC;MACbxb,IAAI,EAAEzH;IADO,CAAD,CAlBA;IAoBZugB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAEzH;IADY,CAAD,CApBL;IAsBZy0B,UAAU,EAAE,CAAC;MACbhtB,IAAI,EAAEzH;IADO,CAAD,CAtBA;IAwBZsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CAxBA;IA0BZg2B,aAAa,EAAE,CAAC;MAChBvuB,IAAI,EAAEzH;IADU,CAAD,CA1BH;IA4BZ82B,mBAAmB,EAAE,CAAC;MACtBrvB,IAAI,EAAEzH;IADgB,CAAD,CA5BT;IA8BZ00B,aAAa,EAAE,CAAC;MAChBjtB,IAAI,EAAEzH;IADU,CAAD,CA9BH;IAgCZwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CAhCI;IAkCZ+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAlCE;IAoCZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CApCA;IAsCZ01B,qBAAqB,EAAE,CAAC;MACxBxuB,IAAI,EAAElH;IADkB,CAAD;EAtCX,CA7D5B;AAAA;;IAuGM+2B,sB;;;;;EACF,kCAAc;IAAA;;IAAA;;IACV,8BAASpzB,SAAT;IACA,QAAKsnB,MAAL,GAAc,KAAd;IACA,QAAK2F,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAK8X,eAAL,GAAuB,KAAvB;IACA,QAAK9G,aAAL,GAAqB,IAArB;IACA,QAAKrG,aAAL,GAAqB,EAArB;IACA,QAAK0gB,cAAL,GAAsB,IAAtB;IACA,QAAKC,cAAL,GAAsB,IAAtB;IACA,QAAKC,gBAAL,GAAwB,IAAxB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAK4F,UAAL,GAAkB,CAAlB;IACA,QAAK3F,YAAL,GAAoB,KAApB;IACA,QAAK6C,UAAL,GAAkB,IAAlB;IACA,QAAKuB,aAAL,GAAqB,KAArB;IACA,QAAKtB,aAAL,GAAqB,IAArB;IACA,QAAKplB,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAKsV,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKmX,WAAL,GAAmB,CAAnB;IACA,QAAKC,UAAL,GAAkB,CAAlB;IACA,QAAKwK,iBAAL,GAAyB;MAAEhC,QAAQ,EAAE,CAAZ;MAAeY,QAAQ,EAAE;IAAzB,CAAzB;IAvBU;EAwBb;;;;WACD,kBAAS;MACL;;MACA,IAAI,CAAC,KAAKJ,aAAV,EAAyB;QACrB,KAAKwB,iBAAL,GAAyB;UAAEhC,QAAQ,EAAE,CAAZ;UAAeY,QAAQ,EAAE;QAAzB,CAAzB;MACH;;MACD,KAAKxgB,MAAL,GAAc,CAAC,EAAD,EAAK,KAAK,KAAK4hB,iBAAL,CAAuBpB,QAAjC,EAA2C,EAA3C,EAA+C,KAAK,KAAKoB,iBAAL,CAAuBhC,QAA3E,CAAd;MACA,KAAKnhB,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC7Z,UAAU,EAAE,KAAKiC,UAXe;QAYhCuZ,cAAc,EAAE,KAAKA;MAZW,CAAD,CAAnC;MAcA,KAAKsK,WAAL;MACA,KAAKjd,MAAL,GAAc,KAAKmQ,SAAL,EAAd;MACA,KAAK1N,MAAL,GAAc,KAAKsV,SAAL,EAAd;MACA,KAAKE,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAK3c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,gBAAqD,KAAKzX,MAAL,CAAY,CAAZ,CAArD;IACH;;;WACD,qBAAY;MACR,KAAK6U,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,IAAMzS,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAAC,CAAD,EAAI,KAAK8R,IAAL,CAAUlO,KAAd,CAApB,EAA0C4H,MAA1C,CAAiD,KAAK0c,OAAtD,CAAd;MACA,OAAO,KAAKmH,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,qBAAY;MACR,KAAKka,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,IAAMzrB,OAAO,GAAG,KAAKwrB,OAAL,CAAa5nB,MAAb,IAAuB,KAAK8J,IAAL,CAAUzO,MAAV,GAAmB,KAAK2xB,UAAxB,GAAqC,CAA5D,CAAhB;MACA,OAAOx1B,SAAS,GAAG21B,UAAZ,CAAuB,CAAC,CAAD,EAAI,KAAKrjB,IAAL,CAAUzO,MAAd,CAAvB,EAA8Cye,YAA9C,CAA2D1d,OAA3D,EAAoEoH,MAApE,CAA2E,KAAKokB,OAAhF,CAAP;IACH;;;WACD,sBAAa;MACT,IAAMnH,MAAM,GAAG,KAAK7W,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAAC9L,KAAN;MAAA,CAAlB,CAAf;MACA,IAAM1C,GAAG,GAAG,KAAK6sB,SAAL,GAAiB9gB,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,GAAK,KAAK8gB,SAAV,4BAAwBrE,MAAxB,GAArB,GAAuDzc,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,GAAK,CAAL,4BAAWyc,MAAX,GAAvE;MACA,IAAMvoB,GAAG,GAAG,KAAK6sB,SAAL,GAAiB/gB,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,GAAK,KAAK+gB,SAAV,4BAAwBtE,MAAxB,GAArB,GAAuDzc,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,GAAK,CAAL,4BAAWyc,MAAX,GAAvE;MACA,OAAO,CAACxoB,GAAD,EAAMC,GAAN,CAAP;IACH;;;WACD,sBAAa;MACT,OAAO,KAAK0R,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAAClC,KAAN;MAAA,CAAlB,CAAP;IACH;;;WACD,iBAAQ2B,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,IAAI1C,MAAJ;;MACA,IAAI,KAAK6F,UAAL,KAAoBpG,SAAS,CAACqG,OAAlC,EAA2C;QACvC9F,MAAM,GAAG,KAAKokB,OAAd;MACH,CAFD,MAGK;QACDpkB,MAAM,GAAG,KAAK0c,OAAd;MACH;;MACD,KAAK3c,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKC,UAAlC,EAA8C7F,MAA9C,EAAsD,KAAKyH,YAA3D,CAAd;IACH;;;WACD,4BAAmB;MACf,IAAMie,IAAI,GAAG;QACTrhB,SAAS,EAAE,KAAKwB,UADP;QAET9F,MAAM,EAAEhI,SAFC;QAGTiI,MAAM,EAAE,EAHC;QAITzE,KAAK,EAAExD,SAJE;QAKT6B,QAAQ,EAAE,KAAKwlB;MALN,CAAb;;MAOA,IAAIsG,IAAI,CAACrhB,SAAL,KAAmB,SAAvB,EAAkC;QAC9BqhB,IAAI,CAAC1lB,MAAL,GAAc,KAAKokB,OAAnB;QACAsB,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAnB;QACA2lB,IAAI,CAACnqB,KAAL,GAAa,KAAK6nB,WAAlB;MACH,CAJD,MAKK;QACDsC,IAAI,CAAC1lB,MAAL,GAAc,KAAK0c,OAAnB;QACAgJ,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAL,CAAYmK,KAA1B;MACH;;MACD,OAAOwb,IAAP;IACH;;;WACD,kCAA4B;MAAA,IAATttB,KAAS,UAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,oCAA2B+P,KAA3B,EAAkC;MAAA;;MAC9B,IAAIA,KAAK,CAACuX,IAAN,CAAWnC,QAAf,EAAyB;QACrB,KAAKgC,iBAAL,CAAuBhC,QAAvB,GAAkCjnB,IAAI,CAAC9L,GAAL,CAAS,KAAK+0B,iBAAL,CAAuBhC,QAAhC,EAA0CpV,KAAK,CAACuX,IAAN,CAAWxxB,KAArD,CAAlC;MACH,CAFD,MAGK;QACD,KAAKqxB,iBAAL,CAAuBpB,QAAvB,GAAkC7nB,IAAI,CAAC9L,GAAL,CAAS,KAAK+0B,iBAAL,CAAuBpB,QAAhC,EAA0ChW,KAAK,CAACuX,IAAN,CAAWxxB,KAArD,CAAlC;MACH;;MACD,IAAIia,KAAK,CAACnP,KAAN,KAAgB,KAAKkD,OAAL,CAAa5J,MAAb,GAAsB,CAA1C,EAA6C;QACzClG,UAAU,CAAC;UAAA,OAAM,OAAI,CAACgM,MAAL,EAAN;QAAA,CAAD,CAAV;MACH;IACJ;;;WACD,oBAAWS,IAAX,EAAqC;MAAA,IAApB8mB,UAAoB,uEAAP,KAAO;MACjC9mB,IAAI,GAAG,KAAKqD,OAAL,CAAapD,IAAb,CAAkB,UAAAC,CAAC,EAAI;QAC1B,IAAI4mB,UAAJ,EAAgB;UACZ,OAAO5mB,CAAC,CAAClC,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAOqB,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAvB;QACH;MACJ,CAPM,CAAP;MAQA,IAAMnF,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAzC,IAAkD8L,CAAC,CAAC0D,MAAF,KAAa5D,IAAI,CAAC4D,MAA3E;MACH,CAFW,CAAZ;;MAGA,IAAIlK,GAAG,GAAG,CAAC,CAAX,EAAc;QACV;MACH;;MACD,KAAKqG,aAAL,IAAsBC,IAAtB,4BAA+B,KAAKD,aAApC;MACA,KAAKvB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAaC,IAAb,EAAuC;MAAA,IAApB8mB,UAAoB,uEAAP,KAAO;MACnC9mB,IAAI,GAAG,KAAKqD,OAAL,CAAapD,IAAb,CAAkB,UAAAC,CAAC,EAAI;QAC1B,IAAI4mB,UAAJ,EAAgB;UACZ,OAAO5mB,CAAC,CAAClC,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAOqB,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAvB;QACH;MACJ,CAPM,CAAP;MAQA,IAAMnF,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAzC,IAAkD8L,CAAC,CAAC0D,MAAF,KAAa5D,IAAI,CAAC4D,MAA3E;MACH,CAFW,CAAZ;MAGA,KAAK7D,aAAL,CAAmBlG,MAAnB,CAA0BH,GAA1B,EAA+B,CAA/B;MACA,KAAKqG,aAAL,sBAAyB,KAAKA,aAA9B;MACA,KAAKtB,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;;EA5JgC4C,kB;;AA8JrC6jB,sBAAsB,CAAC7uB,IAAvB;EAAA;EAAA;IAAA,sFA/kO0G9I,EA+kO1G,uBAAmH23B,sBAAnH,SAAmHA,sBAAnH;EAAA;AAAA;;AACAA,sBAAsB,CAAC1uB,IAAvB,kBAhlO0GjJ,EAglO1G;EAAA,MAAuG23B,sBAAvG;EAAA;EAAA;IAAA;MAhlO0G33B,EAglO1G;IAAA;;IAAA;MAAA;;MAhlO0GA,EAglO1G,qBAhlO0GA,EAglO1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WAhlO0GA,EAglO1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAhlO0GA,EAilOtG,yCADJ;MAhlO0GA,EAulOpG;QAAA,OAAoB,mBAApB;MAAA;QAAA,OACuB,uBAAmB,IAAnB,CADvB;MAAA;QAAA,OAEyB,yBAAqB,IAArB,CAFzB;MAAA,EAPN;MAhlO0GA,EA2lOpG,iBAXN;MAhlO0GA,EA2lOpG,0BAXN;MAhlO0GA,EA4lOlG,uEAZR;MAhlO0GA,EA2mOlG,sEA3BR;MAhlO0GA,EAynOlG,0BAzCR;MAhlO0GA,EAyoOhG;QAAA,OAAU,mBAAV;MAAA;QAAA,OACY,sBADZ;MAAA;QAAA,OAEc,wBAFd;MAAA;QAAA,OAGyB,sCAHzB;MAAA,EAzDV;MAhlO0GA,EA6oOjG,mBA7DT;IAAA;;IAAA;MAhlO0GA,EAklOpG,oBAllOoGA,EAklOpG,kLAFN;MAhlO0GA,EA2lO7F,aAXb;MAhlO0GA,EA2lO7F,wCAXb;MAhlO0GA,EA8lO/F,aAdX;MAhlO0GA,EA8lO/F,8BAdX;MAhlO0GA,EA6mO/F,aA7BX;MAhlO0GA,EA6mO/F,8BA7BX;MAhlO0GA,EA2nOhG,aA3CV;MAhlO0GA,EA2nOhG,wbA3CV;IAAA;EAAA;EAAA,eAgE+yDyR,cAhE/yD,EAgEohEyI,cAhEphE,EAgE2yE+C,cAhE3yE,EAgEsmFmZ,gBAhEtmF,EAgE6+Fp1B,EAAE,CAACkI,IAhEh/F;EAAA;EAAA;EAAA;AAAA;;AAiEA;EAAA,mDAjpO0GlJ,EAipO1G,mBAA2F23B,sBAA3F,EAA+H,CAAC;IACpH7vB,IAAI,EAAE5H,SAD8G;IAEpH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,2BAAZ;MAAyCC,QAAQ,m3EAAjD;MAgEdyF,eAAe,EAAErO,uBAAuB,CAACsO,MAhE3B;MAgEmCzF,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAhEpE;MAgE0EC,MAAM,EAAE,CAAC,yvDAAD;IAhElF,CAAD;EAF8G,CAAD,CAA/H,QAmE4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAFD;IAIZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAVJ;IAYZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAZJ;IAcZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAdA;IAgBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAlBL;IAoBZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CApBE;IAsBZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CAtBH;IAwBZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAxBH;IA0BZ4T,UAAU,EAAE,CAAC;MACbnM,IAAI,EAAEzH;IADO,CAAD,CA1BA;IA4BZuxB,cAAc,EAAE,CAAC;MACjB9pB,IAAI,EAAEzH;IADW,CAAD,CA5BJ;IA8BZwxB,cAAc,EAAE,CAAC;MACjB/pB,IAAI,EAAEzH;IADW,CAAD,CA9BJ;IAgCZyxB,gBAAgB,EAAE,CAAC;MACnBhqB,IAAI,EAAEzH;IADa,CAAD,CAhCN;IAkCZ0xB,kBAAkB,EAAE,CAAC;MACrBjqB,IAAI,EAAEzH;IADe,CAAD,CAlCR;IAoCZ2xB,kBAAkB,EAAE,CAAC;MACrBlqB,IAAI,EAAEzH;IADe,CAAD,CApCR;IAsCZ6zB,mBAAmB,EAAE,CAAC;MACtBpsB,IAAI,EAAEzH;IADgB,CAAD,CAtCT;IAwCZ8zB,mBAAmB,EAAE,CAAC;MACtBrsB,IAAI,EAAEzH;IADgB,CAAD,CAxCT;IA0CZ+zB,UAAU,EAAE,CAAC;MACbtsB,IAAI,EAAEzH;IADO,CAAD,CA1CA;IA4CZg0B,UAAU,EAAE,CAAC;MACbvsB,IAAI,EAAEzH;IADO,CAAD,CA5CA;IA8CZu3B,UAAU,EAAE,CAAC;MACb9vB,IAAI,EAAEzH;IADO,CAAD,CA9CA;IAgDZ4xB,YAAY,EAAE,CAAC;MACfnqB,IAAI,EAAEzH;IADS,CAAD,CAhDF;IAkDZy0B,UAAU,EAAE,CAAC;MACbhtB,IAAI,EAAEzH;IADO,CAAD,CAlDA;IAoDZsvB,SAAS,EAAE,CAAC;MACZ7nB,IAAI,EAAEzH;IADM,CAAD,CApDC;IAsDZqvB,SAAS,EAAE,CAAC;MACZ5nB,IAAI,EAAEzH;IADM,CAAD,CAtDC;IAwDZg2B,aAAa,EAAE,CAAC;MAChBvuB,IAAI,EAAEzH;IADU,CAAD,CAxDH;IA0DZ82B,mBAAmB,EAAE,CAAC;MACtBrvB,IAAI,EAAEzH;IADgB,CAAD,CA1DT;IA4DZ00B,aAAa,EAAE,CAAC;MAChBjtB,IAAI,EAAEzH;IADU,CAAD,CA5DH;IA8DZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CA9DE;IAgEZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAhEA;IAkEZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD;EAlEL,CAnE5B;AAAA;;IA0IMq0B,wB;;;;;EACF,oCAAc;IAAA;;IAAA;;IACV,8BAAS3zB,SAAT;IACA,QAAKsnB,MAAL,GAAc,KAAd;IACA,QAAK2F,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAK8X,eAAL,GAAuB,KAAvB;IACA,QAAK9G,aAAL,GAAqB,IAArB;IACA,QAAKrG,aAAL,GAAqB,EAArB;IACA,QAAK0gB,cAAL,GAAsB,IAAtB;IACA,QAAKC,cAAL,GAAsB,IAAtB;IACA,QAAKC,gBAAL,GAAwB,IAAxB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKmG,YAAL,GAAoB,EAApB;IACA,QAAKP,UAAL,GAAkB,CAAlB;IACA,QAAK3F,YAAL,GAAoB,KAApB;IACA,QAAK6C,UAAL,GAAkB,IAAlB;IACA,QAAKuB,aAAL,GAAqB,KAArB;IACA,QAAKtB,aAAL,GAAqB,IAArB;IACA,QAAKplB,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAKsV,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKmX,WAAL,GAAmB,CAAnB;IACA,QAAKC,UAAL,GAAkB,CAAlB;IACA,QAAKwK,iBAAL,GAAyB;MAAEhC,QAAQ,EAAE,CAAZ;MAAeY,QAAQ,EAAE;IAAzB,CAAzB;IACA,QAAK3T,KAAL,GAAa,KAAb;IACA,QAAKH,cAAL,GAAsBlB,cAAtB;;IACA,QAAK2Q,OAAL,GAAe,UAAC9gB,KAAD,EAAQH,IAAR,EAAiB;MAC5B,OAAOA,IAAI,CAACnB,IAAZ;IACH,CAFD;;IA3BU;EA8Bb;;;;WACD,oBAAW;MACP,IAAI9O,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKkb,KAAL,GAAa,IAAb;MACH;IACJ;;;WACD,kBAAS;MACL;;MACA,IAAI,CAAC,KAAKuT,aAAV,EAAyB;QACrB,KAAKwB,iBAAL,GAAyB;UAAEhC,QAAQ,EAAE,CAAZ;UAAeY,QAAQ,EAAE;QAAzB,CAAzB;MACH;;MACD,KAAKxgB,MAAL,GAAc,CAAC,EAAD,EAAK,KAAK,KAAK4hB,iBAAL,CAAuBpB,QAAjC,EAA2C,EAA3C,EAA+C,KAAK,KAAKoB,iBAAL,CAAuBhC,QAA3E,CAAd;MACA,KAAKnhB,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC7Z,UAAU,EAAE,KAAKiC,UAXe;QAYhCuZ,cAAc,EAAE,KAAKA;MAZW,CAAD,CAAnC;MAcA,KAAKsK,WAAL;MACA,KAAKM,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAKC,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAKC,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAKC,UAAL,GAAkB,KAAKC,aAAL,EAAlB;MACA,KAAKC,UAAL,GAAkB,KAAKC,aAAL,EAAlB;MACA,KAAKxK,UAAL,GAAkB,KAAKyK,aAAL,EAAlB;MACA,KAAKhG,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAK3c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,gBAAqD,KAAKzX,MAAL,CAAY,CAAZ,CAArD;IACH;;;WACD,yBAAgB;MACZ,IAAMjP,OAAO,GAAG,KAAKoxB,WAAL,CAAiBxtB,MAAjB,IAA2B,KAAK8J,IAAL,CAAUzO,MAAV,GAAmB,KAAKkyB,YAAxB,GAAuC,CAAlE,CAAhB;MACA,OAAO/1B,SAAS,GACX21B,UADE,CACS,CAAC,CAAD,EAAI,KAAKrjB,IAAL,CAAUzO,MAAd,CADT,EAEFye,YAFE,CAEW1d,OAFX,EAGF+xB,YAHE,CAGW/xB,OAAO,GAAG,CAHrB,EAIFoH,MAJE,CAIK,KAAKgqB,WAJV,CAAP;IAKH;;;WACD,yBAAgB;MACZ,IAAMnyB,MAAM,GAAG,KAAKyyB,UAAL,CAAgB5f,SAAhB,EAAf;MACA,IAAM9R,OAAO,GAAG,KAAKsxB,WAAL,CAAiB1tB,MAAjB,IAA2B3E,MAAM,GAAG,KAAK2xB,UAAd,GAA2B,CAAtD,CAAhB;MACA,OAAOx1B,SAAS,GAAG21B,UAAZ,CAAuB,CAAC,CAAD,EAAI9xB,MAAJ,CAAvB,EAAoCye,YAApC,CAAiD1d,OAAjD,EAA0DoH,MAA1D,CAAiE,KAAKkqB,WAAtE,CAAP;IACH;;;WACD,yBAAgB;MACZ,IAAMhgB,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAAC,CAAD,EAAI,KAAK8R,IAAL,CAAUlO,KAAd,CAApB,EAA0C4H,MAA1C,CAAiD,KAAKoqB,WAAtD,CAAd;MACA,OAAO,KAAKvG,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,0BAAiB;MACb,IAAMlK,MAAM,GAAG,EAAf;;MADa,6CAEO,KAAKoG,OAFZ;MAAA;;MAAA;QAEb,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAC9B,IAAI,CAAC3a,MAAM,CAACkd,QAAP,CAAgBvC,KAAK,CAAC5Z,KAAtB,CAAL,EAAmC;YAC/Bf,MAAM,CAAC1C,IAAP,CAAYqd,KAAK,CAAC5Z,KAAlB;UACH;QACJ;MANY;QAAA;MAAA;QAAA;MAAA;;MAOb,OAAOf,MAAP;IACH;;;WACD,0BAAiB;MACb,IAAMA,MAAM,GAAG,EAAf;;MADa,6CAEO,KAAKoG,OAFZ;MAAA;;MAAA;QAEb,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAAA,6CACdA,KAAK,CAAChU,MADQ;UAAA;;UAAA;YAC9B,0DAA8B;cAAA,IAAnB1D,CAAmB;;cAC1B,IAAI,CAACjD,MAAM,CAACkd,QAAP,CAAgBja,CAAC,CAAClC,KAAlB,CAAL,EAA+B;gBAC3Bf,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAAClC,KAAd;cACH;YACJ;UAL6B;YAAA;UAAA;YAAA;UAAA;QAMjC;MARY;QAAA;MAAA;QAAA;MAAA;;MASb,OAAOf,MAAP;IACH;;;WACD,0BAAiB;MACb,IAAMA,MAAM,GAAG,EAAf;;MADa,6CAEO,KAAKoG,OAFZ;MAAA;;MAAA;QAEb,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAAA,6CACdA,KAAK,CAAChU,MADQ;UAAA;;UAAA;YAC9B,0DAA8B;cAAA,IAAnB1D,CAAmB;;cAC1B,IAAI,CAACjD,MAAM,CAACkd,QAAP,CAAgBja,CAAC,CAAC9L,KAAlB,CAAL,EAA+B;gBAC3B6I,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAAC9L,KAAd;cACH;YACJ;UAL6B;YAAA;UAAA;YAAA;UAAA;QAMjC;MARY;QAAA;MAAA;QAAA;MAAA;;MASb,IAAM1C,GAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,GAAK,CAAL,SAAWR,MAAX,EAAhB;MACA,IAAMtL,GAAG,GAAG,KAAK6sB,SAAL,GAAiB/gB,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,GAAK,KAAK+gB,SAAV,SAAwBvhB,MAAxB,EAArB,GAAuDQ,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,GAAK,CAAL,SAAWR,MAAX,EAAvE;MACA,OAAO,CAACvL,GAAD,EAAMC,GAAN,CAAP;IACH;;;WACD,wBAAeimB,KAAf,EAAsB;MAClB,8BAAuB,KAAK2P,UAAL,CAAgB3P,KAAK,CAAC5Z,KAAtB,CAAvB;IACH;;;WACD,iBAAQ2B,IAAR,EAAciY,KAAd,EAAqB;MACjB,IAAIA,KAAJ,EAAW;QACPjY,IAAI,CAACiE,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,KAAKnO,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,IAAI1C,MAAJ;;MACA,IAAI,KAAK6F,UAAL,KAAoBpG,SAAS,CAACqG,OAAlC,EAA2C;QACvC9F,MAAM,GAAG,KAAKkqB,WAAd;MACH,CAFD,MAGK;QACDlqB,MAAM,GAAG,KAAKoqB,WAAd;MACH;;MACD,KAAKrqB,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKC,UAAlC,EAA8C7F,MAA9C,EAAsD,KAAKyH,YAA3D,CAAd;IACH;;;WACD,4BAAmB;MACf,IAAMie,IAAI,GAAG;QACTrhB,SAAS,EAAE,KAAKwB,UADP;QAET9F,MAAM,EAAEhI,SAFC;QAGTiI,MAAM,EAAE,EAHC;QAITzE,KAAK,EAAExD,SAJE;QAKT6B,QAAQ,EAAE,KAAKwlB;MALN,CAAb;;MAOA,IAAIsG,IAAI,CAACrhB,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QACtC4f,IAAI,CAAC1lB,MAAL,GAAc,KAAKkqB,WAAnB;QACAxE,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAnB;QACA2lB,IAAI,CAACnqB,KAAL,GAAa,KAAK6nB,WAAlB;MACH,CAJD,MAKK;QACDsC,IAAI,CAAC1lB,MAAL,GAAc,KAAKoqB,WAAnB;QACA1E,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAL,CAAYmK,KAA1B;MACH;;MACD,OAAOwb,IAAP;IACH;;;WACD,kCAA4B;MAAA,IAATttB,KAAS,UAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,oCAA2B+P,KAA3B,EAAkCuY,UAAlC,EAA8C;MAAA;;MAC1C,IAAIvY,KAAK,CAACuX,IAAN,CAAWnC,QAAf,EAAyB;QACrB,KAAKgC,iBAAL,CAAuBhC,QAAvB,GAAkCjnB,IAAI,CAAC9L,GAAL,CAAS,KAAK+0B,iBAAL,CAAuBhC,QAAhC,EAA0CpV,KAAK,CAACuX,IAAN,CAAWxxB,KAArD,CAAlC;MACH,CAFD,MAGK;QACD,KAAKqxB,iBAAL,CAAuBpB,QAAvB,GAAkC7nB,IAAI,CAAC9L,GAAL,CAAS,KAAK+0B,iBAAL,CAAuBpB,QAAhC,EAA0ChW,KAAK,CAACuX,IAAN,CAAWxxB,KAArD,CAAlC;MACH;;MACD,IAAIwyB,UAAU,KAAK,KAAKxkB,OAAL,CAAa5J,MAAb,GAAsB,CAAzC,EAA4C;QACxClG,UAAU,CAAC;UAAA,OAAM,OAAI,CAACgM,MAAL,EAAN;QAAA,CAAD,CAAV;MACH;IACJ;;;WACD,oBAAW+P,KAAX,EAAkBsI,KAAlB,EAA6C;MAAA,IAApBkP,UAAoB,uEAAP,KAAO;MACzC,IAAM9mB,IAAI,GAAG9L,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBgL,KAAlB,CAAb;;MACA,IAAIsI,KAAJ,EAAW;QACP5X,IAAI,CAAC4D,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,IAAMa,KAAK,GAAG,KAAK2D,OAAL,CACTkI,GADS,CACL,UAAA5H,CAAC;QAAA,OAAIA,CAAC,CAACC,MAAN;MAAA,CADI,EAETkkB,IAFS,GAGT7N,MAHS,CAGF,UAAAjgB,CAAC,EAAI;QACb,IAAI8sB,UAAJ,EAAgB;UACZ,OAAO9sB,CAAC,CAACgE,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAO7E,CAAC,CAAC6E,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwB7E,CAAC,CAAC4J,MAAF,KAAa5D,IAAI,CAAC4D,MAAjD;QACH;MACJ,CAVa,CAAd;MAWA,KAAK7D,aAAL,sBAAyBL,KAAzB;MACA,KAAKlB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAauP,KAAb,EAAoBsI,KAApB,EAA+C;MAAA,IAApBkP,UAAoB,uEAAP,KAAO;MAC3C,IAAM9mB,IAAI,GAAG9L,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBgL,KAAlB,CAAb;;MACA,IAAIsI,KAAJ,EAAW;QACP5X,IAAI,CAAC4D,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,KAAKkB,aAAL,GAAqB,KAAKA,aAAL,CAAmBka,MAAnB,CAA0B,UAAAjgB,CAAC,EAAI;QAChD,IAAI8sB,UAAJ,EAAgB;UACZ,OAAO9sB,CAAC,CAACgE,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAO,EAAE7E,CAAC,CAAC6E,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwB7E,CAAC,CAAC4J,MAAF,KAAa5D,IAAI,CAAC4D,MAA5C,CAAP;QACH;MACJ,CAPoB,CAArB;MAQA,KAAKnF,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;;EAhNkC4C,kB;;AAkNvCokB,wBAAwB,CAACpvB,IAAzB;EAAA;EAAA;IAAA,0FA7+O0G9I,EA6+O1G,uBAAqHk4B,wBAArH,SAAqHA,wBAArH;EAAA;AAAA;;AACAA,wBAAwB,CAACjvB,IAAzB,kBA9+O0GjJ,EA8+O1G;EAAA,MAAyGk4B,wBAAzG;EAAA;EAAA;IAAA;MA9+O0Gl4B,EA8+O1G;IAAA;;IAAA;MAAA;;MA9+O0GA,EA8+O1G,qBA9+O0GA,EA8+O1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WA9+O0GA,EA8+O1G;EAAA;EAAA;EAAA;EAAA;IAAA;MA9+O0GA,EA++OtG,yCADJ;MA9+O0GA,EAq/OpG;QAAA,OAAuB,uBAAmB,SAAnB,EAA8B,IAA9B,CAAvB;MAAA;QAAA,OACyB,yBAAqB,SAArB,EAAgC,IAAhC,CADzB;MAAA;QAAA,OAEoB,mBAFpB;MAAA,EAPN;MA9+O0GA,EAy/OpG,iBAXN;MA9+O0GA,EAy/OpG,0BAXN;MA9+O0GA,EA0/OlG,qBAZR;MA9+O0GA,EAkgPlG,yEApBR;MA9+O0GA,EAihPlG,wEAnCR;MA9+O0GA,EAgiPlG,wEAlDR;MA9+O0GA,EA8jPlG,wEAhFR;MA9+O0GA,EA2lPpG,iBA7GN;IAAA;;IAAA;MA9+O0GA,EAg/OpG,oBAh/OoGA,EAg/OpG,kLAFN;MA9+O0GA,EAy/O7F,aAXb;MA9+O0GA,EAy/O7F,wCAXb;MA9+O0GA,EA4/OhG,aAdV;MA9+O0GA,EA4/OhG,+IAdV;MA9+O0GA,EAogP/F,aAtBX;MA9+O0GA,EAogP/F,8BAtBX;MA9+O0GA,EAmhP/F,aArCX;MA9+O0GA,EAmhP/F,8BArCX;MA9+O0GA,EAgiP1F,aAlDhB;MA9+O0GA,EAgiP1F,+BAlDhB;MA9+O0GA,EA8jP1F,aAhFhB;MA9+O0GA,EA8jP1F,8BAhFhB;IAAA;EAAA;EAAA,eA+G+yDyR,cA/G/yD,EA+GohEyS,wBA/GphE,EA+G6pEhK,cA/G7pE,EA+Go7E+C,cA/Gp7E,EA+G+uFmZ,gBA/G/uF,EA+GsnGp1B,EAAE,CAACkI,IA/GznG,EA+GusGlI,EAAE,CAACwQ,OA/G1sG;EAAA;EAAA;EAAA;IAAA,WA+GszG,CAC9yG/P,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACFiiB,OAAO,EAAE,CADP;MAEFxN,SAAS,EAAE;IAFT,CAAD,CADY,EAKjBxU,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MAAEiiB,OAAO,EAAE,CAAX;MAAcxN,SAAS,EAAE;IAAzB,CAAD,CAAX,CALU,CAAX,CADY,CAAnB,CADuyG;EA/GtzG;EAAA;AAAA;;AA0HA;EAAA,mDAxmP0GpW,EAwmP1G,mBAA2Fk4B,wBAA3F,EAAiI,CAAC;IACtHpwB,IAAI,EAAE5H,SADgH;IAEtH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,8BAAZ;MAA4CC,QAAQ,oyIAApD;MA+GdyF,eAAe,EAAErO,uBAAuB,CAACsO,MA/G3B;MA+GmCzF,aAAa,EAAEpJ,iBAAiB,CAACqJ,IA/GpE;MA+G0EmI,UAAU,EAAE,CACjFlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;QACFiiB,OAAO,EAAE,CADP;QAEFxN,SAAS,EAAE;MAFT,CAAD,CADY,EAKjBxU,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QAAEiiB,OAAO,EAAE,CAAX;QAAcxN,SAAS,EAAE;MAAzB,CAAD,CAAX,CALU,CAAX,CADY,CAAnB,CAD0E,CA/GtF;MAyHI3M,MAAM,EAAE,CAAC,yvDAAD;IAzHZ,CAAD;EAFgH,CAAD,CAAjI,QA4H4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAFD;IAIZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAVJ;IAYZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAZJ;IAcZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAdA;IAgBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAlBL;IAoBZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CApBE;IAsBZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CAtBH;IAwBZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAxBH;IA0BZ4T,UAAU,EAAE,CAAC;MACbnM,IAAI,EAAEzH;IADO,CAAD,CA1BA;IA4BZuxB,cAAc,EAAE,CAAC;MACjB9pB,IAAI,EAAEzH;IADW,CAAD,CA5BJ;IA8BZwxB,cAAc,EAAE,CAAC;MACjB/pB,IAAI,EAAEzH;IADW,CAAD,CA9BJ;IAgCZyxB,gBAAgB,EAAE,CAAC;MACnBhqB,IAAI,EAAEzH;IADa,CAAD,CAhCN;IAkCZ0xB,kBAAkB,EAAE,CAAC;MACrBjqB,IAAI,EAAEzH;IADe,CAAD,CAlCR;IAoCZ2xB,kBAAkB,EAAE,CAAC;MACrBlqB,IAAI,EAAEzH;IADe,CAAD,CApCR;IAsCZ6zB,mBAAmB,EAAE,CAAC;MACtBpsB,IAAI,EAAEzH;IADgB,CAAD,CAtCT;IAwCZ8zB,mBAAmB,EAAE,CAAC;MACtBrsB,IAAI,EAAEzH;IADgB,CAAD,CAxCT;IA0CZ+zB,UAAU,EAAE,CAAC;MACbtsB,IAAI,EAAEzH;IADO,CAAD,CA1CA;IA4CZg0B,UAAU,EAAE,CAAC;MACbvsB,IAAI,EAAEzH;IADO,CAAD,CA5CA;IA8CZ83B,YAAY,EAAE,CAAC;MACfrwB,IAAI,EAAEzH;IADS,CAAD,CA9CF;IAgDZu3B,UAAU,EAAE,CAAC;MACb9vB,IAAI,EAAEzH;IADO,CAAD,CAhDA;IAkDZ4xB,YAAY,EAAE,CAAC;MACfnqB,IAAI,EAAEzH;IADS,CAAD,CAlDF;IAoDZy0B,UAAU,EAAE,CAAC;MACbhtB,IAAI,EAAEzH;IADO,CAAD,CApDA;IAsDZsvB,SAAS,EAAE,CAAC;MACZ7nB,IAAI,EAAEzH;IADM,CAAD,CAtDC;IAwDZg2B,aAAa,EAAE,CAAC;MAChBvuB,IAAI,EAAEzH;IADU,CAAD,CAxDH;IA0DZ82B,mBAAmB,EAAE,CAAC;MACtBrvB,IAAI,EAAEzH;IADgB,CAAD,CA1DT;IA4DZ00B,aAAa,EAAE,CAAC;MAChBjtB,IAAI,EAAEzH;IADU,CAAD,CA5DH;IA8DZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CA9DE;IAgEZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAhEA;IAkEZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD;EAlEL,CA5H5B;AAAA;;IAmMMq1B,gC;;;;;EACF,4CAAc;IAAA;;IAAA;;IACV,8BAAS30B,SAAT;IACA,QAAKsnB,MAAL,GAAc,KAAd;IACA,QAAK2F,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAK8X,eAAL,GAAuB,KAAvB;IACA,QAAK9G,aAAL,GAAqB,IAArB;IACA,QAAKrG,aAAL,GAAqB,EAArB;IACA,QAAK0gB,cAAL,GAAsB,IAAtB;IACA,QAAKC,cAAL,GAAsB,IAAtB;IACA,QAAKC,gBAAL,GAAwB,IAAxB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAK4F,UAAL,GAAkB,CAAlB;IACA,QAAK3F,YAAL,GAAoB,KAApB;IACA,QAAK8C,aAAL,GAAqB,IAArB;IACA,QAAKplB,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAK63B,WAAL,GAAmB,CAAC,CAAD,EAAI,GAAJ,CAAnB;IACA,QAAKviB,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKmX,WAAL,GAAmB,CAAnB;IACA,QAAKC,UAAL,GAAkB,CAAlB;IACA,QAAK8L,YAAL,GAAoB3D,YAApB;IACA,QAAK1S,KAAL,GAAa,KAAb;;IACA,QAAKsP,OAAL,GAAe,UAAC9gB,KAAD,EAAQH,IAAR,EAAiB;MAC5B,OAAOA,IAAI,CAACnB,IAAZ;IACH,CAFD;;IAxBU;EA2Bb;;;;WACD,oBAAW;MACP,IAAI9O,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKkb,KAAL,GAAa,IAAb;MACH;IACJ;;;WACD,kBAAS;MACL;;MACA,KAAKpO,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC7Z,UAAU,EAAE,KAAKiC,UAXe;QAYhCuZ,cAAc,EAAE,KAAKA;MAZW,CAAD,CAAnC;MAcA,KAAKsK,WAAL;MACA,KAAKM,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAKC,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAK1d,MAAL,GAAc,KAAKmQ,SAAL,EAAd;MACA,KAAK1N,MAAL,GAAc,KAAKsV,SAAL,EAAd;MACA,KAAKE,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAK3c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,gBAAqD,KAAKzX,MAAL,CAAY,CAAZ,CAArD;IACH;;;WACD,0BAAiB;MACb,IAAM7H,MAAM,GAAG,EAAf;;MADa,6CAEO,KAAKoG,OAFZ;MAAA;;MAAA;QAEb,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAC9B,IAAI,CAAC3a,MAAM,CAACkd,QAAP,CAAgBvC,KAAK,CAAC5Z,KAAtB,CAAL,EAAmC;YAC/Bf,MAAM,CAAC1C,IAAP,CAAYqd,KAAK,CAAC5Z,KAAlB;UACH;QACJ;MANY;QAAA;MAAA;QAAA;MAAA;;MAOb,OAAOf,MAAP;IACH;;;WACD,0BAAiB;MACb,IAAMA,MAAM,GAAG,EAAf;;MADa,6CAEO,KAAKoG,OAFZ;MAAA;;MAAA;QAEb,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAAA,6CACdA,KAAK,CAAChU,MADQ;UAAA;;UAAA;YAC9B,0DAA8B;cAAA,IAAnB1D,CAAmB;;cAC1B,IAAI,CAACjD,MAAM,CAACkd,QAAP,CAAgBja,CAAC,CAAClC,KAAlB,CAAL,EAA+B;gBAC3Bf,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAAClC,KAAd;cACH;YACJ;UAL6B;YAAA;UAAA;YAAA;UAAA;QAMjC;MARY;QAAA;MAAA;QAAA;MAAA;;MASb,OAAOf,MAAP;IACH;;;WACD,qBAAY;MACR,IAAMpH,OAAO,GAAG,KAAKoxB,WAAL,CAAiBxtB,MAAjB,IAA2B,KAAK8J,IAAL,CAAUzO,MAAV,GAAmB,KAAK2xB,UAAxB,GAAqC,CAAhE,CAAhB;MACA,OAAOx1B,SAAS,GAAG21B,UAAZ,CAAuB,CAAC,CAAD,EAAI,KAAKrjB,IAAL,CAAUzO,MAAd,CAAvB,EAA8Cye,YAA9C,CAA2D1d,OAA3D,EAAoEoH,MAApE,CAA2E,KAAKgqB,WAAhF,CAAP;IACH;;;WACD,qBAAY;MACR,IAAM9f,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAAC,CAAD,EAAI,KAAK8R,IAAL,CAAUlO,KAAd,CAApB,EAA0C4H,MAA1C,CAAiD,KAAKoqB,WAAtD,CAAd;MACA,OAAO,KAAKvG,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,wBAAeyQ,KAAf,EAAsB;MAClB,8BAAuB,KAAKzL,MAAL,CAAYyL,KAAK,CAAC/Y,IAAlB,CAAvB;IACH;;;WACD,iBAAQc,IAAR,EAAciY,KAAd,EAAqB;MACjB,IAAIA,KAAJ,EAAW;QACPjY,IAAI,CAACiE,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,KAAKnO,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,IAAI1C,MAAJ;;MACA,IAAI,KAAK6F,UAAL,KAAoBpG,SAAS,CAACqG,OAAlC,EAA2C;QACvC9F,MAAM,GAAG,KAAKkqB,WAAd;MACH,CAFD,MAGK;QACDlqB,MAAM,GAAG,KAAKoqB,WAAd;MACH;;MACD,KAAKrqB,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKC,UAAlC,EAA8C7F,MAA9C,EAAsD,KAAKyH,YAA3D,CAAd;IACH;;;WACD,4BAAmB;MACf,IAAMie,IAAI,GAAG;QACTrhB,SAAS,EAAE,KAAKwB,UADP;QAET9F,MAAM,EAAEhI,SAFC;QAGTiI,MAAM,EAAE,EAHC;QAITzE,KAAK,EAAExD,SAJE;QAKT6B,QAAQ,EAAE,KAAKwlB;MALN,CAAb;;MAOA,IAAIsG,IAAI,CAACrhB,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QACtC4f,IAAI,CAAC1lB,MAAL,GAAc,KAAKkqB,WAAnB;QACAxE,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAnB;QACA2lB,IAAI,CAACnqB,KAAL,GAAa,KAAK6nB,WAAlB;MACH,CAJD,MAKK;QACDsC,IAAI,CAAC1lB,MAAL,GAAc,KAAKoqB,WAAnB;QACA1E,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAL,CAAYmK,KAA1B;MACH;;MACD,OAAOwb,IAAP;IACH;;;WACD,kCAA4B;MAAA,IAATttB,KAAS,UAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,oBAAW+P,KAAX,EAAkBsI,KAAlB,EAA6C;MAAA,IAApBkP,UAAoB,uEAAP,KAAO;MACzC,IAAM9mB,IAAI,GAAG9L,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBgL,KAAlB,CAAb;;MACA,IAAIsI,KAAJ,EAAW;QACP5X,IAAI,CAAC4D,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,IAAMa,KAAK,GAAG,KAAK2D,OAAL,CACTkI,GADS,CACL,UAAA5H,CAAC;QAAA,OAAIA,CAAC,CAACC,MAAN;MAAA,CADI,EAETkkB,IAFS,GAGT7N,MAHS,CAGF,UAAAjgB,CAAC,EAAI;QACb,IAAI8sB,UAAJ,EAAgB;UACZ,OAAO9sB,CAAC,CAACgE,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAO7E,CAAC,CAAC6E,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwB7E,CAAC,CAAC4J,MAAF,KAAa5D,IAAI,CAAC4D,MAAjD;QACH;MACJ,CAVa,CAAd;MAWA,KAAK7D,aAAL,sBAAyBL,KAAzB;MACA,KAAKlB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAauP,KAAb,EAAoBsI,KAApB,EAA+C;MAAA,IAApBkP,UAAoB,uEAAP,KAAO;MAC3C,IAAM9mB,IAAI,GAAG9L,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBgL,KAAlB,CAAb;;MACA,IAAIsI,KAAJ,EAAW;QACP5X,IAAI,CAAC4D,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,KAAKkB,aAAL,GAAqB,KAAKA,aAAL,CAAmBka,MAAnB,CAA0B,UAAAjgB,CAAC,EAAI;QAChD,IAAI8sB,UAAJ,EAAgB;UACZ,OAAO9sB,CAAC,CAACgE,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAO,EAAE7E,CAAC,CAAC6E,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwB7E,CAAC,CAAC4J,MAAF,KAAa5D,IAAI,CAAC4D,MAA5C,CAAP;QACH;MACJ,CAPoB,CAArB;MAQA,KAAKnF,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;;EAtK0C4C,kB;;AAwK/ColB,gCAAgC,CAACpwB,IAAjC;EAAA;EAAA;IAAA,0GAn9P0G9I,EAm9P1G,uBAA6Hk5B,gCAA7H,SAA6HA,gCAA7H;EAAA;AAAA;;AACAA,gCAAgC,CAACjwB,IAAjC,kBAp9P0GjJ,EAo9P1G;EAAA,MAAiHk5B,gCAAjH;EAAA;EAAA;IAAA;MAp9P0Gl5B,EAo9P1G;IAAA;;IAAA;MAAA;;MAp9P0GA,EAo9P1G,qBAp9P0GA,EAo9P1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WAp9P0GA,EAo9P1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAp9P0GA,EAq9PtG,yCADJ;MAp9P0GA,EA29PpG;QAAA,OAAuB,uBAAmB,SAAnB,EAA8B,IAA9B,CAAvB;MAAA;QAAA,OACyB,yBAAqB,SAArB,EAAgC,IAAhC,CADzB;MAAA;QAAA,OAEoB,mBAFpB;MAAA,EAPN;MAp9P0GA,EA+9PpG,iBAXN;MAp9P0GA,EA+9PpG,0BAXN;MAp9P0GA,EAg+PlG,iFAZR;MAp9P0GA,EA++PlG,gFA3BR;MAp9P0GA,EA4/PlG,gFAxCR;MAp9P0GA,EAuhQlG,gFAnER;MAp9P0GA,EA8iQpG,iBA1FN;IAAA;;IAAA;MAp9P0GA,EAs9PpG,oBAt9PoGA,EAs9PpG,kLAFN;MAp9P0GA,EA+9P7F,aAXb;MAp9P0GA,EA+9P7F,wCAXb;MAp9P0GA,EAk+P/F,aAdX;MAp9P0GA,EAk+P/F,8BAdX;MAp9P0GA,EAi/P/F,aA7BX;MAp9P0GA,EAi/P/F,8BA7BX;MAp9P0GA,EA4/P1F,aAxChB;MAp9P0GA,EA4/P1F,+BAxChB;MAp9P0GA,EAuhQ1F,aAnEhB;MAp9P0GA,EAuhQ1F,8BAnEhB;IAAA;EAAA;EAAA,eA4F+yDyR,cA5F/yD,EA4FohEyI,cA5FphE,EA4F2yE+C,cA5F3yE,EA4FsmFmZ,gBA5FtmF,EA4F6+Fp1B,EAAE,CAACkI,IA5Fh/F,EA4F8jGlI,EAAE,CAACwQ,OA5FjkG;EAAA;EAAA;EAAA;IAAA,WA4F6qG,CACrqG/P,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACFiiB,OAAO,EAAE,CADP;MAEFxN,SAAS,EAAE;IAFT,CAAD,CADY,EAKjBxU,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MAAEiiB,OAAO,EAAE,CAAX;MAAcxN,SAAS,EAAE;IAAzB,CAAD,CAAX,CALU,CAAX,CADY,CAAnB,CAD8pG;EA5F7qG;EAAA;AAAA;;AAuGA;EAAA,mDA3jQ0GpW,EA2jQ1G,mBAA2Fk5B,gCAA3F,EAAyI,CAAC;IAC9HpxB,IAAI,EAAE5H,SADwH;IAE9H2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,sCAAZ;MAAoDC,QAAQ,khHAA5D;MA4FdyF,eAAe,EAAErO,uBAAuB,CAACsO,MA5F3B;MA4FmCzF,aAAa,EAAEpJ,iBAAiB,CAACqJ,IA5FpE;MA4F0EmI,UAAU,EAAE,CACjFlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;QACFiiB,OAAO,EAAE,CADP;QAEFxN,SAAS,EAAE;MAFT,CAAD,CADY,EAKjBxU,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QAAEiiB,OAAO,EAAE,CAAX;QAAcxN,SAAS,EAAE;MAAzB,CAAD,CAAX,CALU,CAAX,CADY,CAAnB,CAD0E,CA5FtF;MAsGI3M,MAAM,EAAE,CAAC,yvDAAD;IAtGZ,CAAD;EAFwH,CAAD,CAAzI,QAyG4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAFD;IAIZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAVJ;IAYZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAZJ;IAcZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAdA;IAgBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAlBL;IAoBZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CApBE;IAsBZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CAtBH;IAwBZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAxBH;IA0BZ4T,UAAU,EAAE,CAAC;MACbnM,IAAI,EAAEzH;IADO,CAAD,CA1BA;IA4BZuxB,cAAc,EAAE,CAAC;MACjB9pB,IAAI,EAAEzH;IADW,CAAD,CA5BJ;IA8BZwxB,cAAc,EAAE,CAAC;MACjB/pB,IAAI,EAAEzH;IADW,CAAD,CA9BJ;IAgCZyxB,gBAAgB,EAAE,CAAC;MACnBhqB,IAAI,EAAEzH;IADa,CAAD,CAhCN;IAkCZ0xB,kBAAkB,EAAE,CAAC;MACrBjqB,IAAI,EAAEzH;IADe,CAAD,CAlCR;IAoCZ2xB,kBAAkB,EAAE,CAAC;MACrBlqB,IAAI,EAAEzH;IADe,CAAD,CApCR;IAsCZ6zB,mBAAmB,EAAE,CAAC;MACtBpsB,IAAI,EAAEzH;IADgB,CAAD,CAtCT;IAwCZ8zB,mBAAmB,EAAE,CAAC;MACtBrsB,IAAI,EAAEzH;IADgB,CAAD,CAxCT;IA0CZ+zB,UAAU,EAAE,CAAC;MACbtsB,IAAI,EAAEzH;IADO,CAAD,CA1CA;IA4CZg0B,UAAU,EAAE,CAAC;MACbvsB,IAAI,EAAEzH;IADO,CAAD,CA5CA;IA8CZu3B,UAAU,EAAE,CAAC;MACb9vB,IAAI,EAAEzH;IADO,CAAD,CA9CA;IAgDZ4xB,YAAY,EAAE,CAAC;MACfnqB,IAAI,EAAEzH;IADS,CAAD,CAhDF;IAkDZ00B,aAAa,EAAE,CAAC;MAChBjtB,IAAI,EAAEzH;IADU,CAAD,CAlDH;IAoDZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CApDE;IAsDZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAtDA;IAwDZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD;EAxDL,CAzG5B;AAAA;;IAsKMu1B,6B;;;;;EACF,yCAAc;IAAA;;IAAA;;IACV,8BAAS70B,SAAT;IACA,QAAKsnB,MAAL,GAAc,KAAd;IACA,QAAK2F,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAK8X,eAAL,GAAuB,KAAvB;IACA,QAAK9G,aAAL,GAAqB,IAArB;IACA,QAAKrG,aAAL,GAAqB,EAArB;IACA,QAAK0gB,cAAL,GAAsB,IAAtB;IACA,QAAKC,cAAL,GAAsB,IAAtB;IACA,QAAKC,gBAAL,GAAwB,IAAxB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAK4F,UAAL,GAAkB,CAAlB;IACA,QAAK3F,YAAL,GAAoB,KAApB;IACA,QAAKoE,aAAL,GAAqB,KAArB;IACA,QAAKtB,aAAL,GAAqB,IAArB;IACA,QAAKplB,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAKsV,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKmX,WAAL,GAAmB,CAAnB;IACA,QAAKC,UAAL,GAAkB,CAAlB;IACA,QAAKwK,iBAAL,GAAyB;MAAEhC,QAAQ,EAAE,CAAZ;MAAeY,QAAQ,EAAE;IAAzB,CAAzB;IACA,QAAK0C,YAAL,GAAoB3D,YAApB;IACA,QAAK1S,KAAL,GAAa,KAAb;;IACA,QAAKsP,OAAL,GAAe,UAAC9gB,KAAD,EAAQH,IAAR,EAAiB;MAC5B,OAAOA,IAAI,CAACnB,IAAZ;IACH,CAFD;;IAzBU;EA4Bb;;;;WACD,oBAAW;MACP,IAAI9O,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKkb,KAAL,GAAa,IAAb;MACH;IACJ;;;WACD,kBAAS;MACL;;MACA,IAAI,CAAC,KAAKuT,aAAV,EAAyB;QACrB,KAAKwB,iBAAL,GAAyB;UAAEhC,QAAQ,EAAE,CAAZ;UAAeY,QAAQ,EAAE;QAAzB,CAAzB;MACH;;MACD,KAAKxgB,MAAL,GAAc,CAAC,EAAD,EAAK,KAAK,KAAK4hB,iBAAL,CAAuBpB,QAAjC,EAA2C,EAA3C,EAA+C,KAAK,KAAKoB,iBAAL,CAAuBhC,QAA3E,CAAd;MACA,KAAKnhB,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC7Z,UAAU,EAAE,KAAKiC,UAXe;QAYhCuZ,cAAc,EAAE,KAAKA;MAZW,CAAD,CAAnC;MAcA,KAAKsK,WAAL;MACA,KAAKM,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAKC,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAKC,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAK5d,MAAL,GAAc,KAAKmQ,SAAL,EAAd;MACA,KAAK1N,MAAL,GAAc,KAAKsV,SAAL,EAAd;MACA,KAAKE,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAK3c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,gBAAqD,KAAKzX,MAAL,CAAY,CAAZ,CAArD;IACH;;;WACD,0BAAiB;MACb,IAAM7H,MAAM,GAAG,EAAf;;MADa,6CAEO,KAAKoG,OAFZ;MAAA;;MAAA;QAEb,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAC9B,IAAI,CAAC3a,MAAM,CAACkd,QAAP,CAAgBvC,KAAK,CAAC5Z,KAAtB,CAAL,EAAmC;YAC/Bf,MAAM,CAAC1C,IAAP,CAAYqd,KAAK,CAAC5Z,KAAlB;UACH;QACJ;MANY;QAAA;MAAA;QAAA;MAAA;;MAOb,OAAOf,MAAP;IACH;;;WACD,0BAAiB;MACb,IAAMA,MAAM,GAAG,EAAf;;MADa,6CAEO,KAAKoG,OAFZ;MAAA;;MAAA;QAEb,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAAA,6CACdA,KAAK,CAAChU,MADQ;UAAA;;UAAA;YAC9B,0DAA8B;cAAA,IAAnB1D,CAAmB;;cAC1B,IAAI,CAACjD,MAAM,CAACkd,QAAP,CAAgBja,CAAC,CAAClC,KAAlB,CAAL,EAA+B;gBAC3Bf,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAAClC,KAAd;cACH;YACJ;UAL6B;YAAA;UAAA;YAAA;UAAA;QAMjC;MARY;QAAA;MAAA;QAAA;MAAA;;MASb,OAAOf,MAAP;IACH;;;WACD,0BAAiB;MACb,IAAMA,MAAM,GAAG,EAAf;MACA,IAAIirB,QAAQ,GAAG,CAAf;MACA,IAAIC,OAAO,GAAG,CAAd;;MAHa,6CAIO,KAAK9kB,OAJZ;MAAA;;MAAA;QAIb,0DAAkC;UAAA,IAAvBuU,KAAuB;UAC9B,IAAIwQ,WAAW,GAAG,CAAlB;UACA,IAAIC,UAAU,GAAG,CAAjB;;UAF8B,6CAGdzQ,KAAK,CAAChU,MAHQ;UAAA;;UAAA;YAG9B,0DAA8B;cAAA,IAAnB1D,CAAmB;;cAC1B,IAAIA,CAAC,CAAC9L,KAAF,GAAU,CAAd,EAAiB;gBACbg0B,WAAW,IAAIloB,CAAC,CAAC9L,KAAjB;cACH,CAFD,MAGK;gBACDi0B,UAAU,IAAInoB,CAAC,CAAC9L,KAAhB;cACH;;cACD8zB,QAAQ,GAAGhoB,CAAC,CAAC9L,KAAF,GAAU8zB,QAAV,GAAqBhoB,CAAC,CAAC9L,KAAvB,GAA+B8zB,QAA1C;cACAC,OAAO,GAAGjoB,CAAC,CAAC9L,KAAF,GAAU+zB,OAAV,GAAoBjoB,CAAC,CAAC9L,KAAtB,GAA8B+zB,OAAxC;YACH;UAZ6B;YAAA;UAAA;YAAA;UAAA;;UAa9BlrB,MAAM,CAAC1C,IAAP,CAAY6tB,WAAZ;UACAnrB,MAAM,CAAC1C,IAAP,CAAY8tB,UAAZ;QACH;MAnBY;QAAA;MAAA;QAAA;MAAA;;MAoBbprB,MAAM,CAAC1C,IAAP,CAAY2tB,QAAZ;MACAjrB,MAAM,CAAC1C,IAAP,CAAY4tB,OAAZ;MACA,IAAMz2B,GAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,GAAK,CAAL,SAAWR,MAAX,EAAhB;MACA,IAAMtL,GAAG,GAAG,KAAK6sB,SAAL,GAAiB/gB,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,GAAK,KAAK+gB,SAAV,SAAwBvhB,MAAxB,EAArB,GAAuDQ,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,EAAQR,MAAR,CAAvE;MACA,OAAO,CAACvL,GAAD,EAAMC,GAAN,CAAP;IACH;;;WACD,qBAAY;MACR,IAAMkE,OAAO,GAAG,KAAKoxB,WAAL,CAAiBxtB,MAAjB,IAA2B,KAAK8J,IAAL,CAAUzO,MAAV,GAAmB,KAAK2xB,UAAxB,GAAqC,CAAhE,CAAhB;MACA,OAAOx1B,SAAS,GAAG21B,UAAZ,CAAuB,CAAC,CAAD,EAAI,KAAKrjB,IAAL,CAAUzO,MAAd,CAAvB,EAA8Cye,YAA9C,CAA2D1d,OAA3D,EAAoEoH,MAApE,CAA2E,KAAKgqB,WAAhF,CAAP;IACH;;;WACD,qBAAY;MACR,IAAM9f,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAAC,CAAD,EAAI,KAAK8R,IAAL,CAAUlO,KAAd,CAApB,EAA0C4H,MAA1C,CAAiD,KAAKoqB,WAAtD,CAAd;MACA,OAAO,KAAKvG,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,wBAAeyQ,KAAf,EAAsB;MAClB,8BAAuB,KAAKzL,MAAL,CAAYyL,KAAK,CAAC/Y,IAAlB,CAAvB;IACH;;;WACD,iBAAQc,IAAR,EAAciY,KAAd,EAAqB;MACjB,IAAIA,KAAJ,EAAW;QACPjY,IAAI,CAACiE,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,KAAKnO,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,IAAI1C,MAAJ;;MACA,IAAI,KAAK6F,UAAL,KAAoBpG,SAAS,CAACqG,OAAlC,EAA2C;QACvC9F,MAAM,GAAG,KAAKkqB,WAAd;MACH,CAFD,MAGK;QACDlqB,MAAM,GAAG,KAAKoqB,WAAd;MACH;;MACD,KAAKrqB,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKC,UAAlC,EAA8C7F,MAA9C,EAAsD,KAAKyH,YAA3D,CAAd;IACH;;;WACD,4BAAmB;MACf,IAAMie,IAAI,GAAG;QACTrhB,SAAS,EAAE,KAAKwB,UADP;QAET9F,MAAM,EAAEhI,SAFC;QAGTiI,MAAM,EAAE,EAHC;QAITzE,KAAK,EAAExD,SAJE;QAKT6B,QAAQ,EAAE,KAAKwlB;MALN,CAAb;;MAOA,IAAIsG,IAAI,CAACrhB,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QACtC4f,IAAI,CAAC1lB,MAAL,GAAc,KAAKkqB,WAAnB;QACAxE,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAnB;QACA2lB,IAAI,CAACnqB,KAAL,GAAa,KAAK6nB,WAAlB;MACH,CAJD,MAKK;QACDsC,IAAI,CAAC1lB,MAAL,GAAc,KAAKoqB,WAAnB;QACA1E,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAL,CAAYmK,KAA1B;MACH;;MACD,OAAOwb,IAAP;IACH;;;WACD,kCAA4B;MAAA,IAATttB,KAAS,UAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,oCAA2B+P,KAA3B,EAAkCuY,UAAlC,EAA8C;MAAA;;MAC1C,IAAIvY,KAAK,CAACuX,IAAN,CAAWnC,QAAf,EAAyB;QACrB,KAAKgC,iBAAL,CAAuBhC,QAAvB,GAAkCjnB,IAAI,CAAC9L,GAAL,CAAS,KAAK+0B,iBAAL,CAAuBhC,QAAhC,EAA0CpV,KAAK,CAACuX,IAAN,CAAWxxB,KAArD,CAAlC;MACH,CAFD,MAGK;QACD,KAAKqxB,iBAAL,CAAuBpB,QAAvB,GAAkC7nB,IAAI,CAAC9L,GAAL,CAAS,KAAK+0B,iBAAL,CAAuBpB,QAAhC,EAA0ChW,KAAK,CAACuX,IAAN,CAAWxxB,KAArD,CAAlC;MACH;;MACD,IAAIwyB,UAAU,KAAK,KAAKxkB,OAAL,CAAa5J,MAAb,GAAsB,CAAzC,EAA4C;QACxClG,UAAU,CAAC;UAAA,OAAM,OAAI,CAACgM,MAAL,EAAN;QAAA,CAAD,CAAV;MACH;IACJ;;;WACD,oBAAW+P,KAAX,EAAkBsI,KAAlB,EAA6C;MAAA,IAApBkP,UAAoB,uEAAP,KAAO;MACzC,IAAM9mB,IAAI,GAAG9L,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBgL,KAAlB,CAAb;;MACA,IAAIsI,KAAJ,EAAW;QACP5X,IAAI,CAAC4D,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,IAAMa,KAAK,GAAG,KAAK2D,OAAL,CACTkI,GADS,CACL,UAAA5H,CAAC;QAAA,OAAIA,CAAC,CAACC,MAAN;MAAA,CADI,EAETkkB,IAFS,GAGT7N,MAHS,CAGF,UAAAjgB,CAAC,EAAI;QACb,IAAI8sB,UAAJ,EAAgB;UACZ,OAAO9sB,CAAC,CAACgE,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAO7E,CAAC,CAAC6E,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwB7E,CAAC,CAAC4J,MAAF,KAAa5D,IAAI,CAAC4D,MAAjD;QACH;MACJ,CAVa,CAAd;MAWA,KAAK7D,aAAL,sBAAyBL,KAAzB;MACA,KAAKlB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAauP,KAAb,EAAoBsI,KAApB,EAA+C;MAAA,IAApBkP,UAAoB,uEAAP,KAAO;MAC3C,IAAM9mB,IAAI,GAAG9L,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBgL,KAAlB,CAAb;;MACA,IAAIsI,KAAJ,EAAW;QACP5X,IAAI,CAAC4D,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,KAAKkB,aAAL,GAAqB,KAAKA,aAAL,CAAmBka,MAAnB,CAA0B,UAAAjgB,CAAC,EAAI;QAChD,IAAI8sB,UAAJ,EAAgB;UACZ,OAAO9sB,CAAC,CAACgE,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAO,EAAE7E,CAAC,CAAC6E,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwB7E,CAAC,CAAC4J,MAAF,KAAa5D,IAAI,CAAC4D,MAA5C,CAAP;QACH;MACJ,CAPoB,CAArB;MAQA,KAAKnF,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;;EAjNuC4C,kB;;AAmN5CslB,6BAA6B,CAACtwB,IAA9B;EAAA;EAAA;IAAA,oGAp7Q0G9I,EAo7Q1G,uBAA0Ho5B,6BAA1H,SAA0HA,6BAA1H;EAAA;AAAA;;AACAA,6BAA6B,CAACnwB,IAA9B,kBAr7Q0GjJ,EAq7Q1G;EAAA,MAA8Go5B,6BAA9G;EAAA;EAAA;IAAA;MAr7Q0Gp5B,EAq7Q1G;IAAA;;IAAA;MAAA;;MAr7Q0GA,EAq7Q1G,qBAr7Q0GA,EAq7Q1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WAr7Q0GA,EAq7Q1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAr7Q0GA,EAs7QtG,yCADJ;MAr7Q0GA,EA47QpG;QAAA,OAAuB,uBAAmB,SAAnB,EAA8B,IAA9B,CAAvB;MAAA;QAAA,OACyB,yBAAqB,SAArB,EAAgC,IAAhC,CADzB;MAAA;QAAA,OAEoB,mBAFpB;MAAA,EAPN;MAr7Q0GA,EAg8QpG,iBAXN;MAr7Q0GA,EAg8QpG,0BAXN;MAr7Q0GA,EAi8QlG,8EAZR;MAr7Q0GA,EAg9QlG,6EA3BR;MAr7Q0GA,EA89QlG,6EAzCR;MAr7Q0GA,EA4/QlG,6EAvER;MAr7Q0GA,EAyhRpG,iBApGN;IAAA;;IAAA;MAr7Q0GA,EAu7QpG,oBAv7QoGA,EAu7QpG,kLAFN;MAr7Q0GA,EAg8Q7F,aAXb;MAr7Q0GA,EAg8Q7F,wCAXb;MAr7Q0GA,EAm8Q/F,aAdX;MAr7Q0GA,EAm8Q/F,8BAdX;MAr7Q0GA,EAk9Q/F,aA7BX;MAr7Q0GA,EAk9Q/F,8BA7BX;MAr7Q0GA,EA89Q1F,aAzChB;MAr7Q0GA,EA89Q1F,+BAzChB;MAr7Q0GA,EA4/Q1F,aAvEhB;MAr7Q0GA,EA4/Q1F,8BAvEhB;IAAA;EAAA;EAAA,eAsG+yDyR,cAtG/yD,EAsGohEyI,cAtGphE,EAsG2yE+C,cAtG3yE,EAsGsmFmZ,gBAtGtmF,EAsG6+Fp1B,EAAE,CAACkI,IAtGh/F,EAsG8jGlI,EAAE,CAACwQ,OAtGjkG;EAAA;EAAA;EAAA;IAAA,WAsG6qG,CACrqG/P,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACFiiB,OAAO,EAAE,CADP;MAEFxN,SAAS,EAAE;IAFT,CAAD,CADY,EAKjBxU,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MAAEiiB,OAAO,EAAE,CAAX;MAAcxN,SAAS,EAAE;IAAzB,CAAD,CAAX,CALU,CAAX,CADY,CAAnB,CAD8pG;EAtG7qG;EAAA;AAAA;;AAiHA;EAAA,mDAtiR0GpW,EAsiR1G,mBAA2Fo5B,6BAA3F,EAAsI,CAAC;IAC3HtxB,IAAI,EAAE5H,SADqH;IAE3H2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,mCAAZ;MAAiDC,QAAQ,shIAAzD;MAsGdyF,eAAe,EAAErO,uBAAuB,CAACsO,MAtG3B;MAsGmCzF,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAtGpE;MAsG0EmI,UAAU,EAAE,CACjFlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;QACFiiB,OAAO,EAAE,CADP;QAEFxN,SAAS,EAAE;MAFT,CAAD,CADY,EAKjBxU,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QAAEiiB,OAAO,EAAE,CAAX;QAAcxN,SAAS,EAAE;MAAzB,CAAD,CAAX,CALU,CAAX,CADY,CAAnB,CAD0E,CAtGtF;MAgHI3M,MAAM,EAAE,CAAC,yvDAAD;IAhHZ,CAAD;EAFqH,CAAD,CAAtI,QAmH4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAFD;IAIZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAVJ;IAYZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAZJ;IAcZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAdA;IAgBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAlBL;IAoBZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CApBE;IAsBZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CAtBH;IAwBZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAxBH;IA0BZ4T,UAAU,EAAE,CAAC;MACbnM,IAAI,EAAEzH;IADO,CAAD,CA1BA;IA4BZuxB,cAAc,EAAE,CAAC;MACjB9pB,IAAI,EAAEzH;IADW,CAAD,CA5BJ;IA8BZwxB,cAAc,EAAE,CAAC;MACjB/pB,IAAI,EAAEzH;IADW,CAAD,CA9BJ;IAgCZyxB,gBAAgB,EAAE,CAAC;MACnBhqB,IAAI,EAAEzH;IADa,CAAD,CAhCN;IAkCZ0xB,kBAAkB,EAAE,CAAC;MACrBjqB,IAAI,EAAEzH;IADe,CAAD,CAlCR;IAoCZ2xB,kBAAkB,EAAE,CAAC;MACrBlqB,IAAI,EAAEzH;IADe,CAAD,CApCR;IAsCZ6zB,mBAAmB,EAAE,CAAC;MACtBpsB,IAAI,EAAEzH;IADgB,CAAD,CAtCT;IAwCZ8zB,mBAAmB,EAAE,CAAC;MACtBrsB,IAAI,EAAEzH;IADgB,CAAD,CAxCT;IA0CZ+zB,UAAU,EAAE,CAAC;MACbtsB,IAAI,EAAEzH;IADO,CAAD,CA1CA;IA4CZg0B,UAAU,EAAE,CAAC;MACbvsB,IAAI,EAAEzH;IADO,CAAD,CA5CA;IA8CZu3B,UAAU,EAAE,CAAC;MACb9vB,IAAI,EAAEzH;IADO,CAAD,CA9CA;IAgDZ4xB,YAAY,EAAE,CAAC;MACfnqB,IAAI,EAAEzH;IADS,CAAD,CAhDF;IAkDZsvB,SAAS,EAAE,CAAC;MACZ7nB,IAAI,EAAEzH;IADM,CAAD,CAlDC;IAoDZg2B,aAAa,EAAE,CAAC;MAChBvuB,IAAI,EAAEzH;IADU,CAAD,CApDH;IAsDZ82B,mBAAmB,EAAE,CAAC;MACtBrvB,IAAI,EAAEzH;IADgB,CAAD,CAtDT;IAwDZ00B,aAAa,EAAE,CAAC;MAChBjtB,IAAI,EAAEzH;IADU,CAAD,CAxDH;IA0DZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CA1DE;IA4DZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CA5DA;IA8DZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD;EA9DL,CAnH5B;AAAA;;IAsLM41B,uB;EACF,iCAAY7xB,UAAZ,EAAwB;IAAA;;IACpB,KAAKA,UAAL,GAAkBA,UAAlB;IACA,KAAKE,IAAL,GAAY0tB,YAAY,CAAC/S,QAAzB;IACA,KAAKpE,eAAL,GAAuB,KAAvB;IACA,KAAK1M,UAAL,GAAkB,IAAlB;IACA,KAAK0kB,aAAL,GAAqB,KAArB;IACA,KAAKtB,aAAL,GAAqB,IAArB;IACA,KAAKlzB,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,KAAK+4B,sBAAL,GAA8B,IAAI/4B,YAAJ,EAA9B;IACA,KAAK41B,iBAAL,GAAyB,EAAzB;IACA,KAAK5T,cAAL,GAAsBlB,cAAtB;IACA,KAAKqB,KAAL,GAAa,KAAb;EACH;;;;WACD,oBAAW;MACP,IAAI5hB,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKkb,KAAL,GAAa,IAAb;MACH;IACJ;;;WACD,qBAAY9U,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MAAA;MAAA;;MACL,KAAK8lB,qBAAL;MACA,IAAIhwB,KAAJ;;MACA,IAAI,KAAKuO,MAAL,CAAYnK,MAAhB,EAAwB;QACpBpE,KAAK,GAAG,KAAKqU,MAAL,CAAY/B,SAAZ,EAAR;MACH;;MACDtS,KAAK,GAAGoI,IAAI,CAACC,KAAL,CAAWrI,KAAX,CAAR;MACA,IAAM+sB,SAAS,GAAG3kB,IAAI,CAAC9L,GAAL,CAAS,KAAKwa,MAAL,CAAYlP,MAAZ,GAAqB,CAArB,CAAT,EAAkC,CAAlC,CAAlB;MACA,IAAM6a,EAAE,mCACHwM,OAAO,CAACgB,QADL,EACgB,CADhB,wBAEHhB,OAAO,CAACI,QAFL,EAEgB,CAFhB,OAAR;MAIA,IAAIa,MAAM,GAAGjB,OAAO,CAACgB,QAArB;MACA,IAAIlK,KAAJ;;MACA,IAAI,KAAKzkB,IAAL,KAAc0tB,YAAY,CAACmB,UAA/B,EAA2C;QACvCpK,KAAK,GAAG,KAAKxX,MAAL,CAAY2H,GAAZ,CAAgB,UAAArL,CAAC;UAAA,OAAIA,CAAC,CAAC9L,KAAN;QAAA,CAAjB,EAA8B8mB,MAA9B,CAAqC,UAACC,GAAD,EAAMjb,CAAN;UAAA,OAAYib,GAAG,GAAGjb,CAAlB;QAAA,CAArC,EAA0D,CAA1D,CAAR;MACH;;MACD,KAAKulB,IAAL,GAAY,KAAK7hB,MAAL,CAAY2H,GAAZ,CAAgB,UAACrL,CAAD,EAAIC,KAAJ,EAAc;QACtC,IAAI/L,KAAK,GAAG8L,CAAC,CAAC9L,KAAd;;QACA,IAAM4J,KAAK,GAAG,OAAI,CAAC0nB,QAAL,CAAcxlB,CAAd,CAAd;;QACA,IAAMvB,cAAc,GAAGZ,WAAW,CAACC,KAAD,CAAlC;QACA,IAAM2lB,UAAU,GAAG,OAAI,CAACA,UAAxB;QACA4B,MAAM,GAAGnxB,KAAK,GAAG,CAAR,GAAYkwB,OAAO,CAACgB,QAApB,GAA+BhB,OAAO,CAACI,QAAhD;QACA,IAAMiB,GAAG,GAAG;UACRvxB,KAAK,EAALA,KADQ;UAER4J,KAAK,EAALA,KAFQ;UAGR2lB,UAAU,EAAVA,UAHQ;UAIRhkB,IAAI,EAAEO,CAJE;UAKR7K,KAAK,EAALA,KALQ;UAMRsJ,cAAc,EAAdA,cANQ;UAOR7J,MAAM,EAAE,CAPA;UAQR2F,CAAC,EAAE,CARK;UASR0K,CAAC,EAAE;QATK,CAAZ;;QAWA,IAAI,OAAI,CAACxO,IAAL,KAAc0tB,YAAY,CAAC/S,QAA/B,EAAyC;UACrCqU,GAAG,CAAC7wB,MAAJ,GAAa2I,IAAI,CAAC+K,GAAL,CAAS,OAAI,CAAC2D,MAAL,CAAY/X,KAAZ,IAAqB,OAAI,CAAC+X,MAAL,CAAYiW,SAAZ,CAA9B,CAAb;UACAuD,GAAG,CAAClrB,CAAJ,GAAQ,OAAI,CAACiP,MAAL,CAAY1L,KAAZ,CAAR;;UACA,IAAI5J,KAAK,GAAG,CAAZ,EAAe;YACXuxB,GAAG,CAACxgB,CAAJ,GAAQ,OAAI,CAACgH,MAAL,CAAY,CAAZ,CAAR;UACH,CAFD,MAGK;YACDwZ,GAAG,CAACxgB,CAAJ,GAAQ,OAAI,CAACgH,MAAL,CAAY/X,KAAZ,CAAR;UACH;QACJ,CATD,MAUK,IAAI,OAAI,CAACuC,IAAL,KAAc0tB,YAAY,CAACuB,OAA/B,EAAwC;UACzC,IAAMC,OAAO,GAAG/N,EAAE,CAACyN,MAAD,CAAlB;UACA,IAAMO,OAAO,GAAGD,OAAO,GAAGzxB,KAA1B;UACA0jB,EAAE,CAACyN,MAAD,CAAF,IAAcnxB,KAAd;UACAuxB,GAAG,CAAC7wB,MAAJ,GAAa,OAAI,CAACqX,MAAL,CAAY0Z,OAAZ,IAAuB,OAAI,CAAC1Z,MAAL,CAAY2Z,OAAZ,CAApC;UACAH,GAAG,CAAClrB,CAAJ,GAAQ,CAAR;UACAkrB,GAAG,CAACxgB,CAAJ,GAAQ,OAAI,CAACgH,MAAL,CAAY2Z,OAAZ,CAAR;UACAH,GAAG,CAACE,OAAJ,GAAcA,OAAd;UACAF,GAAG,CAACG,OAAJ,GAAcA,OAAd;QACH,CATI,MAUA,IAAI,OAAI,CAACnvB,IAAL,KAAc0tB,YAAY,CAACmB,UAA/B,EAA2C;UAC5C,IAAIK,QAAO,GAAG/N,EAAE,CAACyN,MAAD,CAAhB;;UACA,IAAIO,QAAO,GAAGD,QAAO,GAAGzxB,KAAxB;;UACA0jB,EAAE,CAACyN,MAAD,CAAF,IAAcnxB,KAAd;;UACA,IAAIgnB,KAAK,GAAG,CAAZ,EAAe;YACXyK,QAAO,GAAIA,QAAO,GAAG,GAAX,GAAkBzK,KAA5B;YACA0K,QAAO,GAAIA,QAAO,GAAG,GAAX,GAAkB1K,KAA5B;UACH,CAHD,MAIK;YACDyK,QAAO,GAAG,CAAV;YACAC,QAAO,GAAG,CAAV;UACH;;UACDH,GAAG,CAAC7wB,MAAJ,GAAa,OAAI,CAACqX,MAAL,CAAY0Z,QAAZ,IAAuB,OAAI,CAAC1Z,MAAL,CAAY2Z,QAAZ,CAApC;UACAH,GAAG,CAAClrB,CAAJ,GAAQ,CAAR;UACAkrB,GAAG,CAACxgB,CAAJ,GAAQ,OAAI,CAACgH,MAAL,CAAY2Z,QAAZ,CAAR;UACAH,GAAG,CAACE,OAAJ,GAAcA,QAAd;UACAF,GAAG,CAACG,OAAJ,GAAcA,QAAd;UACA1xB,KAAK,GAAG,CAAC0xB,QAAO,GAAGD,QAAX,EAAoB9N,OAApB,CAA4B,CAA5B,IAAiC,GAAzC;QACH;;QACD,IAAI,OAAI,CAAC/a,MAAL,CAAYsE,SAAZ,KAA0B5E,SAAS,CAACqG,OAAxC,EAAiD;UAC7C4iB,GAAG,CAAC7mB,KAAJ,GAAY,OAAI,CAAC9B,MAAL,CAAY6C,QAAZ,CAAqB7B,KAArB,CAAZ;QACH,CAFD,MAGK;UACD,IAAI,OAAI,CAACrH,IAAL,KAAc0tB,YAAY,CAAC/S,QAA/B,EAAyC;YACrCqU,GAAG,CAAC7mB,KAAJ,GAAY,OAAI,CAAC9B,MAAL,CAAY6C,QAAZ,CAAqBzL,KAArB,CAAZ;YACAuxB,GAAG,CAACjT,aAAJ,GAAoB,OAAI,CAAC1V,MAAL,CAAYmjB,sBAAZ,CAAmC/rB,KAAnC,CAApB;UACH,CAHD,MAIK;YACDuxB,GAAG,CAAC7mB,KAAJ,GAAY,OAAI,CAAC9B,MAAL,CAAY6C,QAAZ,CAAqB8lB,GAAG,CAACG,OAAzB,CAAZ;YACAH,GAAG,CAACjT,aAAJ,GAAoB,OAAI,CAAC1V,MAAL,CAAYmjB,sBAAZ,CAAmCwF,GAAG,CAACG,OAAvC,EAAgDH,GAAG,CAACE,OAApD,CAApB;UACH;QACJ;;QACD,IAAIzT,YAAY,GAAGzT,cAAnB;QACAgnB,GAAG,CAACvB,SAAJ,GAAgBzlB,cAAc,GAAG,GAAjB,GAAuBvK,KAAK,CAAC8J,cAAN,EAAvC;;QACA,IAAI,OAAI,CAACiU,UAAL,KAAoB,IAApB,IAA4B,OAAI,CAACA,UAAL,KAAoBnd,SAApD,EAA+D;UAC3Dod,YAAY,aAAM,OAAI,CAACD,UAAX,qBAA2BxT,cAA3B,CAAZ;UACAgnB,GAAG,CAAChmB,IAAJ,CAASiE,MAAT,GAAkB,OAAI,CAACuO,UAAvB;UACAwT,GAAG,CAACvB,SAAJ,GAAgB,OAAI,CAACjS,UAAL,GAAkB,GAAlB,GAAwBwT,GAAG,CAACvB,SAA5C;QACH;;QACDuB,GAAG,CAACI,WAAJ,GAAkB,OAAI,CAAC7Y,eAAL,GACZlY,SADY,qDAGQmJ,WAAW,CAACiU,YAAD,CAHnB,0DAIM,OAAI,CAAC4T,mBAAL,GAA2B,OAAI,CAACA,mBAAL,CAAyB5xB,KAAzB,CAA3B,GAA6DA,KAAK,CAAC8J,cAAN,EAJnE,oBAAlB;QAMA,OAAOynB,GAAP;MACH,CAnFW,CAAZ;MAoFA,KAAKM,gBAAL;IACH;;;WACD,4BAAmB;MAAA;;MACf,IAAI,KAAKtvB,IAAL,KAAc0tB,YAAY,CAACuB,OAA/B,EAAwC;QACpC,KAAKR,iBAAL,GAAyB,EAAzB;QACA,IAAMc,OAAO,GAAG,EAAhB;QACAA,OAAO,CAACtiB,MAAR,GAAiB,KAAKuO,UAAtB;QACA,IAAMgU,aAAa,GAAG,KAAKviB,MAAL,CAAY2H,GAAZ,CAAgB,UAAArL,CAAC;UAAA,OAAIA,CAAC,CAAC9L,KAAN;QAAA,CAAjB,EAA8B8mB,MAA9B,CAAqC,UAACC,GAAD,EAAMjb,CAAN;UAAA,OAAaA,CAAC,GAAG,CAAJ,GAAQib,GAAG,GAAGjb,CAAd,GAAkBib,GAA/B;QAAA,CAArC,EAA0E,CAA1E,CAAtB;QACA,IAAMiL,aAAa,GAAG,KAAKxiB,MAAL,CAAY2H,GAAZ,CAAgB,UAAArL,CAAC;UAAA,OAAIA,CAAC,CAAC9L,KAAN;QAAA,CAAjB,EAA8B8mB,MAA9B,CAAqC,UAACC,GAAD,EAAMjb,CAAN;UAAA,OAAaA,CAAC,GAAG,CAAJ,GAAQib,GAAG,GAAGjb,CAAd,GAAkBib,GAA/B;QAAA,CAArC,EAA0E,CAA1E,CAAtB;QACA+K,OAAO,CAAC9K,KAAR,GAAgB+K,aAAa,GAAGC,aAAhC;QACAF,OAAO,CAACzrB,CAAR,GAAY,CAAZ;QACAyrB,OAAO,CAAC/gB,CAAR,GAAY,CAAZ;;QACA,IAAI+gB,OAAO,CAAC9K,KAAR,GAAgB,CAApB,EAAuB;UACnB8K,OAAO,CAACpxB,MAAR,GAAiB,KAAKqX,MAAL,CAAYga,aAAZ,CAAjB;QACH,CAFD,MAGK;UACDD,OAAO,CAACpxB,MAAR,GAAiB,KAAKqX,MAAL,CAAYia,aAAZ,CAAjB;QACH;;QACDF,OAAO,CAAC7wB,KAAR,GAAgB,KAAKqU,MAAL,CAAY/B,SAAZ,EAAhB;QACA,KAAKyd,iBAAL,CAAuB7qB,IAAvB,CAA4B2rB,OAA5B;MACH,CAjBD,MAkBK;QACD,KAAKd,iBAAL,GAAyB,KAAKxhB,MAAL,CAAY2H,GAAZ,CAAgB,UAAArL,CAAC,EAAI;UAAA;;UAC1C,IAAMgmB,OAAO,GAAG,EAAhB;UACAA,OAAO,CAACtiB,MAAR,yBAAiB,OAAI,CAACuO,UAAtB,mEAAoCjS,CAAC,CAAClC,KAAtC;UACAkoB,OAAO,CAAC9K,KAAR,GAAgBlb,CAAC,CAAC9L,KAAlB;UACA8xB,OAAO,CAACzrB,CAAR,GAAY,OAAI,CAACiP,MAAL,CAAYxJ,CAAC,CAAClC,KAAd,CAAZ;UACAkoB,OAAO,CAAC/gB,CAAR,GAAY,OAAI,CAACgH,MAAL,CAAY,CAAZ,CAAZ;UACA+Z,OAAO,CAACpxB,MAAR,GAAiB,OAAI,CAACqX,MAAL,CAAY+Z,OAAO,CAAC9K,KAApB,IAA6B,OAAI,CAACjP,MAAL,CAAY,CAAZ,CAA9C;UACA+Z,OAAO,CAAC7wB,KAAR,GAAgB,OAAI,CAACqU,MAAL,CAAY/B,SAAZ,EAAhB;UACA,OAAOue,OAAP;QACH,CATwB,CAAzB;MAUH;IACJ;;;WACD,iCAAwB;MACpB,KAAK9Y,gBAAL,GAAwB,KAAKF,eAAL,GAAuBlY,SAAvB,GAAmCX,cAAc,CAACM,GAA1E;MACA,KAAK2Y,WAAL,GAAmB,KAAKJ,eAAL,GAAuBlY,SAAvB,GAAmC0X,UAAU,CAACuC,OAAjE;IACH;;;WACD,kBAASnP,KAAT,EAAgB;MACZ,IAAI,CAAC,KAAKC,aAAV,EACI,OAAO,KAAP;MACJ,IAAMC,IAAI,GAAG,KAAKD,aAAL,CAAmBE,IAAnB,CAAwB,UAAAomB,MAAM,EAAI;QAC3C,OAAOvmB,KAAK,CAACjB,IAAN,KAAewnB,MAAM,CAACxnB,IAAtB,IAA8BiB,KAAK,CAAC1L,KAAN,KAAgBiyB,MAAM,CAACjyB,KAA5D;MACH,CAFY,CAAb;MAGA,OAAO4L,IAAI,KAAKhL,SAAhB;IACH;;;WACD,iBAAQ2K,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,kBAAS2mB,QAAT,EAAmB;MACf,IAAIA,QAAQ,CAACtoB,KAAb,EAAoB;QAChB,OAAOsoB,QAAQ,CAACtoB,KAAhB;MACH;;MACD,OAAOsoB,QAAQ,CAACznB,IAAhB;IACH;;;WACD,iBAAQsB,KAAR,EAAewlB,GAAf,EAAoB;MAChB,OAAOA,GAAG,CAAC3nB,KAAX;IACH;;;WACD,0BAAiBmC,KAAjB,EAAwBomB,QAAxB,EAAkC;MAC9B,OAAOpmB,KAAK,GAAG,GAAR,GAAcomB,QAAQ,CAAC3iB,MAAvB,GAAgC,GAAhC,GAAsC2iB,QAAQ,CAACnL,KAAtD;IACH;;;;;;AAELkN,uBAAuB,CAAC3wB,IAAxB;EAAA,iBAAoH2wB,uBAApH,EAv5R0Gz5B,EAu5R1G,mBAA6JC,WAA7J;AAAA;;AACAw5B,uBAAuB,CAACxwB,IAAxB,kBAx5R0GjJ,EAw5R1G;EAAA,MAAwGy5B,uBAAxG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAx5R0Gz5B,EAw5R1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAx5R0GA,EAy5RtG,uEADJ;MAx5R0GA,EAy7RtG,uEAjCJ;MAx5R0GA,EAu9RtG,uEA/DJ;IAAA;;IAAA;MAx5R0GA,EAy5R9F,+BADZ;MAx5R0GA,EAy7R9F,aAjCZ;MAx5R0GA,EAy7R9F,8BAjCZ;MAx5R0GA,EAu9R9F,aA/DZ;MAx5R0GA,EAu9R9F,sCA/DZ;IAAA;EAAA;EAAA,eA6E0C60B,YA7E1C,EA6E2Ta,iBA7E3T,EA6EygB10B,EAAE,CAACkI,IA7E5gB,EA6E0lBlI,EAAE,CAACwQ,OA7E7lB,EA6EosBuM,gBA7EpsB;EAAA;EAAA;IAAA,WA6EsoC,CAC9nCtc,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACFiiB,OAAO,EAAE;IADP,CAAD,CADY,EAIjBhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MAAEiiB,OAAO,EAAE;IAAX,CAAD,CAAX,CAJU,CAAX,CADY,CAAnB,CADunC;EA7EtoC;EAAA;AAAA;;AAuFA;EAAA,mDA/+R0G5jB,EA++R1G,mBAA2Fy5B,uBAA3F,EAAgI,CAAC;IACrH3xB,IAAI,EAAE5H,SAD+G;IAErH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,+BADX;MAECC,QAAQ,yvFAFT;MAgFCyF,eAAe,EAAErO,uBAAuB,CAACsO,MAhF1C;MAiFC2C,UAAU,EAAE,CACRlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;QACFiiB,OAAO,EAAE;MADP,CAAD,CADY,EAIjBhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QAAEiiB,OAAO,EAAE;MAAX,CAAD,CAAX,CAJU,CAAX,CADY,CAAnB,CADC;IAjFb,CAAD;EAF+G,CAAD,CAAhI,EA8F4B,YAAY;IAAE,OAAO,CAAC;MAAE9b,IAAI,EAAE3B,SAAR;MAAmBuD,UAAU,EAAE,CAAC;QAC9D5B,IAAI,EAAE1H,MADwD;QAE9DyD,IAAI,EAAE,CAAC5D,WAAD;MAFwD,CAAD;IAA/B,CAAD,CAAP;EAGlB,CAjGxB,EAiG0C;IAAEyU,IAAI,EAAE,CAAC;MACnC5M,IAAI,EAAEzH;IAD6B,CAAD,CAAR;IAE1ByH,IAAI,EAAE,CAAC;MACPA,IAAI,EAAEzH;IADC,CAAD,CAFoB;IAI1B0U,MAAM,EAAE,CAAC;MACTjN,IAAI,EAAEzH;IADG,CAAD,CAJkB;IAM1Bwa,MAAM,EAAE,CAAC;MACT/S,IAAI,EAAEzH;IADG,CAAD,CANkB;IAQ1Bid,MAAM,EAAE,CAAC;MACTxV,IAAI,EAAEzH;IADG,CAAD,CARkB;IAU1B8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CAVkB;IAY1BiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CAZgB;IAc1B6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAdW;IAgB1BijB,UAAU,EAAE,CAAC;MACbxb,IAAI,EAAEzH;IADO,CAAD,CAhBc;IAkB1Bge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAlBS;IAoB1BugB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAEzH;IADY,CAAD,CApBS;IAsB1By0B,UAAU,EAAE,CAAC;MACbhtB,IAAI,EAAEzH;IADO,CAAD,CAtBc;IAwB1BsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CAxBc;IA0B1Bg2B,aAAa,EAAE,CAAC;MAChBvuB,IAAI,EAAEzH;IADU,CAAD,CA1BW;IA4B1B82B,mBAAmB,EAAE,CAAC;MACtBrvB,IAAI,EAAEzH;IADgB,CAAD,CA5BK;IA8B1B00B,aAAa,EAAE,CAAC;MAChBjtB,IAAI,EAAEzH;IADU,CAAD,CA9BW;IAgC1BwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CAhCkB;IAkC1B+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAlCgB;IAoC1BgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CApCc;IAsC1B84B,sBAAsB,EAAE,CAAC;MACzB5xB,IAAI,EAAElH;IADmB,CAAD;EAtCE,CAjG1C;AAAA;;IA2IM+4B,oB;;;;;EACF,gCAAc;IAAA;;IAAA;;IACV,8BAASp1B,SAAT;IACA,QAAKsnB,MAAL,GAAc,KAAd;IACA,QAAK2F,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAK8X,eAAL,GAAuB,KAAvB;IACA,QAAK9G,aAAL,GAAqB,IAArB;IACA,QAAKrG,aAAL,GAAqB,EAArB;IACA,QAAK0gB,cAAL,GAAsB,IAAtB;IACA,QAAKC,cAAL,GAAsB,IAAtB;IACA,QAAKC,gBAAL,GAAwB,IAAxB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAK4F,UAAL,GAAkB,CAAlB;IACA,QAAK3F,YAAL,GAAoB,KAApB;IACA,QAAK6C,UAAL,GAAkB,IAAlB;IACA,QAAKuB,aAAL,GAAqB,KAArB;IACA,QAAKtB,aAAL,GAAqB,IAArB;IACA,QAAKplB,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAKsV,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKmX,WAAL,GAAmB,CAAnB;IACA,QAAKC,UAAL,GAAkB,CAAlB;IACA,QAAKuM,kBAAL,GAA0B;MAAE/D,QAAQ,EAAE,CAAZ;MAAeY,QAAQ,EAAE;IAAzB,CAA1B;IAvBU;EAwBb;;;;WACD,kBAAS;MACL;;MACA,IAAI,CAAC,KAAKJ,aAAV,EAAyB;QACrB,KAAKuD,kBAAL,GAA0B;UAAE/D,QAAQ,EAAE,CAAZ;UAAeY,QAAQ,EAAE;QAAzB,CAA1B;MACH;;MACD,KAAKxgB,MAAL,GAAc,CAAC,KAAK,KAAK2jB,kBAAL,CAAwBnD,QAA9B,EAAwC,EAAxC,EAA4C,KAAK,KAAKmD,kBAAL,CAAwB/D,QAAzE,EAAmF,EAAnF,CAAd;MACA,KAAKnhB,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC7Z,UAAU,EAAE,KAAKiC,UAXe;QAYhCuZ,cAAc,EAAE,KAAKA;MAZW,CAAD,CAAnC;MAcA,KAAKsK,WAAL;;MACA,IAAI,KAAKzB,aAAT,EAAwB;QACpB,KAAK3hB,IAAL,CAAUzO,MAAV,IAAoB,KAAK2zB,kBAAL,CAAwB/D,QAA5C;MACH;;MACD,KAAKhb,MAAL,GAAc,KAAKmQ,SAAL,EAAd;MACA,KAAK1N,MAAL,GAAc,KAAKsV,SAAL,EAAd;MACA,KAAKE,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAK3c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,gBAAqD,KAAKzX,MAAL,CAAY,CAAZ,IAAiB,KAAK2jB,kBAAL,CAAwB/D,QAA9F;IACH;;;WACD,qBAAY;MACR,KAAK/K,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,IAAM/jB,OAAO,GAAG,KAAK8jB,OAAL,CAAalgB,MAAb,IAAuB,KAAK8J,IAAL,CAAUlO,KAAV,GAAkB,KAAKoxB,UAAvB,GAAoC,CAA3D,CAAhB;MACA,OAAOx1B,SAAS,GAAGQ,KAAZ,CAAkB,CAAC,CAAD,EAAI,KAAK8R,IAAL,CAAUlO,KAAd,CAAlB,EAAwCke,YAAxC,CAAqD1d,OAArD,EAA8DoH,MAA9D,CAAqE,KAAK0c,OAA1E,CAAP;IACH;;;WACD,qBAAY;MACR,KAAK0H,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,IAAMna,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAAC,KAAK8R,IAAL,CAAUzO,MAAX,EAAmB,CAAnB,CAApB,EAA2CmI,MAA3C,CAAkD,KAAKokB,OAAvD,CAAd;MACA,OAAO,KAAKP,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,sBAAa;MACT,OAAO,KAAK9D,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAAClC,KAAN;MAAA,CAAlB,CAAP;IACH;;;WACD,sBAAa;MACT,IAAMkc,MAAM,GAAG,KAAK7W,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAAC9L,KAAN;MAAA,CAAlB,CAAf;MACA,IAAI1C,GAAG,GAAG,KAAK0wB,SAAL,GAAiB3kB,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,GAAK,KAAK2kB,SAAV,4BAAwBlI,MAAxB,GAArB,GAAuDzc,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,GAAK,CAAL,4BAAWyc,MAAX,GAArE;;MACA,IAAI,KAAKgJ,UAAL,IAAmB,CAAC,KAAKA,UAAL,CAAgBwF,IAAhB,CAAqBC,KAArB,CAAxB,EAAqD;QACjDj3B,GAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,GAAK/L,GAAL,4BAAa,KAAKwxB,UAAlB,GAAV;MACH;;MACD,IAAIvxB,GAAG,GAAG,KAAK0wB,SAAL,GAAiB5kB,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,GAAK,KAAK4kB,SAAV,4BAAwBnI,MAAxB,GAArB,GAAuDzc,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,GAAK,CAAL,4BAAWyc,MAAX,GAArE;;MACA,IAAI,KAAKgJ,UAAL,IAAmB,CAAC,KAAKA,UAAL,CAAgBwF,IAAhB,CAAqBC,KAArB,CAAxB,EAAqD;QACjDh3B,GAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,GAAK9L,GAAL,4BAAa,KAAKuxB,UAAlB,GAAV;MACH;;MACD,OAAO,CAACxxB,GAAD,EAAMC,GAAN,CAAP;IACH;;;WACD,iBAAQgO,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,IAAI1C,MAAJ;;MACA,IAAI,KAAK6F,UAAL,KAAoBpG,SAAS,CAACqG,OAAlC,EAA2C;QACvC9F,MAAM,GAAG,KAAK0c,OAAd;MACH,CAFD,MAGK;QACD1c,MAAM,GAAG,KAAKokB,OAAd;MACH;;MACD,KAAKrkB,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKC,UAAlC,EAA8C7F,MAA9C,EAAsD,KAAKyH,YAA3D,CAAd;IACH;;;WACD,4BAAmB;MACf,IAAMie,IAAI,GAAG;QACTrhB,SAAS,EAAE,KAAKwB,UADP;QAET9F,MAAM,EAAEhI,SAFC;QAGTiI,MAAM,EAAE,EAHC;QAITzE,KAAK,EAAExD,SAJE;QAKT6B,QAAQ,EAAE,KAAKwlB;MALN,CAAb;;MAOA,IAAIsG,IAAI,CAACrhB,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QACtC4f,IAAI,CAAC1lB,MAAL,GAAc,KAAK0c,OAAnB;QACAgJ,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAnB;QACA2lB,IAAI,CAACnqB,KAAL,GAAa,KAAK6nB,WAAlB;MACH,CAJD,MAKK;QACDsC,IAAI,CAAC1lB,MAAL,GAAc,KAAKokB,OAAnB;QACAsB,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAL,CAAYmK,KAA1B;MACH;;MACD,OAAOwb,IAAP;IACH;;;WACD,kCAA4B;MAAA,IAATttB,KAAS,UAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,qCAA4B+P,KAA5B,EAAmC;MAAA;;MAC/B,IAAIA,KAAK,CAACuX,IAAN,CAAWnC,QAAf,EAAyB;QACrB,KAAK+D,kBAAL,CAAwB/D,QAAxB,GAAmCjnB,IAAI,CAAC9L,GAAL,CAAS,KAAK82B,kBAAL,CAAwB/D,QAAjC,EAA2CpV,KAAK,CAACuX,IAAN,CAAW/xB,MAAtD,CAAnC;MACH,CAFD,MAGK;QACD,KAAK2zB,kBAAL,CAAwBnD,QAAxB,GAAmC7nB,IAAI,CAAC9L,GAAL,CAAS,KAAK82B,kBAAL,CAAwBnD,QAAjC,EAA2ChW,KAAK,CAACuX,IAAN,CAAW/xB,MAAtD,CAAnC;MACH;;MACD,IAAIwa,KAAK,CAACnP,KAAN,KAAgB,KAAKkD,OAAL,CAAa5J,MAAb,GAAsB,CAA1C,EAA6C;QACzClG,UAAU,CAAC;UAAA,OAAM,OAAI,CAACgM,MAAL,EAAN;QAAA,CAAD,CAAV;MACH;IACJ;;;WACD,oBAAWS,IAAX,EAAqC;MAAA,IAApB8mB,UAAoB,uEAAP,KAAO;MACjC9mB,IAAI,GAAG,KAAKqD,OAAL,CAAapD,IAAb,CAAkB,UAAAC,CAAC,EAAI;QAC1B,IAAI4mB,UAAJ,EAAgB;UACZ,OAAO5mB,CAAC,CAAClC,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAOqB,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAvB;QACH;MACJ,CAPM,CAAP;MAQA,IAAMnF,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAzC,IAAkD8L,CAAC,CAAC0D,MAAF,KAAa5D,IAAI,CAAC4D,MAA3E;MACH,CAFW,CAAZ;;MAGA,IAAIlK,GAAG,GAAG,CAAC,CAAX,EAAc;QACV;MACH;;MACD,KAAKqG,aAAL,IAAsBC,IAAtB,4BAA+B,KAAKD,aAApC;MACA,KAAKvB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAaC,IAAb,EAAuC;MAAA,IAApB8mB,UAAoB,uEAAP,KAAO;MACnC9mB,IAAI,GAAG,KAAKqD,OAAL,CAAapD,IAAb,CAAkB,UAAAC,CAAC,EAAI;QAC1B,IAAI4mB,UAAJ,EAAgB;UACZ,OAAO5mB,CAAC,CAAClC,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAOqB,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAvB;QACH;MACJ,CAPM,CAAP;MAQA,IAAMnF,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAzC,IAAkD8L,CAAC,CAAC0D,MAAF,KAAa5D,IAAI,CAAC4D,MAA3E;MACH,CAFW,CAAZ;MAGA,KAAK7D,aAAL,CAAmBlG,MAAnB,CAA0BH,GAA1B,EAA+B,CAA/B;MACA,KAAKqG,aAAL,sBAAyB,KAAKA,aAA9B;MACA,KAAKtB,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;;EArK8B4C,kB;;AAuKnC6lB,oBAAoB,CAAC7wB,IAArB;EAAA;EAAA;IAAA,kFAjyS0G9I,EAiyS1G,uBAAiH25B,oBAAjH,SAAiHA,oBAAjH;EAAA;AAAA;;AACAA,oBAAoB,CAAC1wB,IAArB,kBAlyS0GjJ,EAkyS1G;EAAA,MAAqG25B,oBAArG;EAAA;EAAA;IAAA;MAlyS0G35B,EAkyS1G;IAAA;;IAAA;MAAA;;MAlyS0GA,EAkyS1G,qBAlyS0GA,EAkyS1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WAlyS0GA,EAkyS1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAlyS0GA,EAmyStG,yCADJ;MAlyS0GA,EAyySpG;QAAA,OAAoB,mBAApB;MAAA;QAAA,OACuB,uBAAmB,IAAnB,CADvB;MAAA;QAAA,OAEyB,yBAAqB,IAArB,CAFzB;MAAA,EAPN;MAlyS0GA,EA6ySpG,iBAXN;MAlyS0GA,EA6ySpG,0BAXN;MAlyS0GA,EA8ySlG,qEAZR;MAlyS0GA,EA8zSlG,oEA5BR;MAlyS0GA,EA40SlG,0BA1CR;MAlyS0GA,EA41ShG;QAAA,OAAY,sBAAZ;MAAA;QAAA,OACc,wBADd;MAAA;QAAA,OAEU,mBAFV;MAAA;QAAA,OAG0B,uCAH1B;MAAA,EA1DV;MAlyS0GA,EAg2SjG,mBA9DT;IAAA;;IAAA;MAlyS0GA,EAoySpG,oBApySoGA,EAoySpG,kLAFN;MAlyS0GA,EA6yS7F,aAXb;MAlyS0GA,EA6yS7F,wCAXb;MAlyS0GA,EAgzS/F,aAdX;MAlyS0GA,EAgzS/F,8BAdX;MAlyS0GA,EAg0S/F,aA9BX;MAlyS0GA,EAg0S/F,8BA9BX;MAlyS0GA,EA80ShG,aA5CV;MAlyS0GA,EA80ShG,wbA5CV;IAAA;EAAA;EAAA,eAiE+yDyR,cAjE/yD,EAiEohEyI,cAjEphE,EAiE2yE+C,cAjE3yE,EAiEsmFwc,uBAjEtmF,EAiEm/Fz4B,EAAE,CAACkI,IAjEt/F;EAAA;EAAA;EAAA;AAAA;;AAkEA;EAAA,mDAp2S0GlJ,EAo2S1G,mBAA2F25B,oBAA3F,EAA6H,CAAC;IAClH7xB,IAAI,EAAE5H,SAD4G;IAElH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,yBAAZ;MAAuCC,QAAQ,i6EAA/C;MAiEdyF,eAAe,EAAErO,uBAAuB,CAACsO,MAjE3B;MAiEmCzF,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAjEpE;MAiE0EC,MAAM,EAAE,CAAC,yvDAAD;IAjElF,CAAD;EAF4G,CAAD,CAA7H,QAoE4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAFD;IAIZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAVJ;IAYZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAZJ;IAcZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAdA;IAgBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAlBL;IAoBZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CApBE;IAsBZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CAtBH;IAwBZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAxBH;IA0BZ4T,UAAU,EAAE,CAAC;MACbnM,IAAI,EAAEzH;IADO,CAAD,CA1BA;IA4BZuxB,cAAc,EAAE,CAAC;MACjB9pB,IAAI,EAAEzH;IADW,CAAD,CA5BJ;IA8BZwxB,cAAc,EAAE,CAAC;MACjB/pB,IAAI,EAAEzH;IADW,CAAD,CA9BJ;IAgCZyxB,gBAAgB,EAAE,CAAC;MACnBhqB,IAAI,EAAEzH;IADa,CAAD,CAhCN;IAkCZ0xB,kBAAkB,EAAE,CAAC;MACrBjqB,IAAI,EAAEzH;IADe,CAAD,CAlCR;IAoCZ2xB,kBAAkB,EAAE,CAAC;MACrBlqB,IAAI,EAAEzH;IADe,CAAD,CApCR;IAsCZ6zB,mBAAmB,EAAE,CAAC;MACtBpsB,IAAI,EAAEzH;IADgB,CAAD,CAtCT;IAwCZ8zB,mBAAmB,EAAE,CAAC;MACtBrsB,IAAI,EAAEzH;IADgB,CAAD,CAxCT;IA0CZ+zB,UAAU,EAAE,CAAC;MACbtsB,IAAI,EAAEzH;IADO,CAAD,CA1CA;IA4CZg0B,UAAU,EAAE,CAAC;MACbvsB,IAAI,EAAEzH;IADO,CAAD,CA5CA;IA8CZu3B,UAAU,EAAE,CAAC;MACb9vB,IAAI,EAAEzH;IADO,CAAD,CA9CA;IAgDZ4xB,YAAY,EAAE,CAAC;MACfnqB,IAAI,EAAEzH;IADS,CAAD,CAhDF;IAkDZy0B,UAAU,EAAE,CAAC;MACbhtB,IAAI,EAAEzH;IADO,CAAD,CAlDA;IAoDZmzB,SAAS,EAAE,CAAC;MACZ1rB,IAAI,EAAEzH;IADM,CAAD,CApDC;IAsDZkzB,SAAS,EAAE,CAAC;MACZzrB,IAAI,EAAEzH;IADM,CAAD,CAtDC;IAwDZg2B,aAAa,EAAE,CAAC;MAChBvuB,IAAI,EAAEzH;IADU,CAAD,CAxDH;IA0DZ82B,mBAAmB,EAAE,CAAC;MACtBrvB,IAAI,EAAEzH;IADgB,CAAD,CA1DT;IA4DZ00B,aAAa,EAAE,CAAC;MAChBjtB,IAAI,EAAEzH;IADU,CAAD,CA5DH;IA8DZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CA9DE;IAgEZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAhEA;IAkEZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD;EAlEL,CApE5B;AAAA;;IA2IMk2B,sB;;;;;EACF,kCAAc;IAAA;;IAAA;;IACV,+BAASx1B,SAAT;IACA,QAAKsnB,MAAL,GAAc,KAAd;IACA,QAAK2F,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAK8X,eAAL,GAAuB,KAAvB;IACA,QAAK5L,SAAL,GAAiB5E,SAAS,CAACqG,OAA3B;IACA,QAAKqD,aAAL,GAAqB,IAArB;IACA,QAAKrG,aAAL,GAAqB,EAArB;IACA,QAAK0gB,cAAL,GAAsB,IAAtB;IACA,QAAKC,cAAL,GAAsB,IAAtB;IACA,QAAKC,gBAAL,GAAwB,IAAxB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKmG,YAAL,GAAoB,EAApB;IACA,QAAKP,UAAL,GAAkB,CAAlB;IACA,QAAK3F,YAAL,GAAoB,KAApB;IACA,QAAK6C,UAAL,GAAkB,IAAlB;IACA,QAAKuB,aAAL,GAAqB,KAArB;IACA,QAAKtB,aAAL,GAAqB,IAArB;IACA,QAAKplB,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAKsV,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKmX,WAAL,GAAmB,CAAnB;IACA,QAAKC,UAAL,GAAkB,CAAlB;IACA,QAAKuM,kBAAL,GAA0B;MAAE/D,QAAQ,EAAE,CAAZ;MAAeY,QAAQ,EAAE;IAAzB,CAA1B;IACA,QAAK3T,KAAL,GAAa,KAAb;IACA,QAAKH,cAAL,GAAsBlB,cAAtB;;IACA,QAAK2Q,OAAL,GAAe,UAAC9gB,KAAD,EAAQH,IAAR,EAAiB;MAC5B,OAAOA,IAAI,CAACnB,IAAZ;IACH,CAFD;;IA5BU;EA+Bb;;;;WACD,oBAAW;MACP,IAAI9O,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKkb,KAAL,GAAa,IAAb;MACH;IACJ;;;WACD,kBAAS;MACL;;MACA,IAAI,CAAC,KAAKuT,aAAV,EAAyB;QACrB,KAAKuD,kBAAL,GAA0B;UAAE/D,QAAQ,EAAE,CAAZ;UAAeY,QAAQ,EAAE;QAAzB,CAA1B;MACH;;MACD,KAAKxgB,MAAL,GAAc,CAAC,KAAK,KAAK2jB,kBAAL,CAAwBnD,QAA9B,EAAwC,EAAxC,EAA4C,KAAK,KAAKmD,kBAAL,CAAwB/D,QAAzE,EAAmF,EAAnF,CAAd;MACA,KAAKnhB,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC7Z,UAAU,EAAE,KAAKiC,UAXe;QAYhCuZ,cAAc,EAAE,KAAKA;MAZW,CAAD,CAAnC;;MAcA,IAAI,KAAK6I,aAAT,EAAwB;QACpB,KAAK3hB,IAAL,CAAUzO,MAAV,IAAoB,KAAK2zB,kBAAL,CAAwB/D,QAA5C;MACH;;MACD,KAAKiC,WAAL;MACA,KAAKM,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAKC,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAKC,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAKC,UAAL,GAAkB,KAAKC,aAAL,EAAlB;MACA,KAAKC,UAAL,GAAkB,KAAKC,aAAL,EAAlB;MACA,KAAKxK,UAAL,GAAkB,KAAKyK,aAAL,EAAlB;MACA,KAAKhG,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAK3c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,gBAAqD,KAAKzX,MAAL,CAAY,CAAZ,IAAiB,KAAK2jB,kBAAL,CAAwB/D,QAA9F;IACH;;;WACD,qCAA4BpV,KAA5B,EAAmCuY,UAAnC,EAA+C;MAAA;;MAC3C,IAAIvY,KAAK,CAACuX,IAAN,CAAWnC,QAAf,EAAyB;QACrB,KAAK+D,kBAAL,CAAwB/D,QAAxB,GAAmCjnB,IAAI,CAAC9L,GAAL,CAAS,KAAK82B,kBAAL,CAAwB/D,QAAjC,EAA2CpV,KAAK,CAACuX,IAAN,CAAW/xB,MAAtD,CAAnC;MACH,CAFD,MAGK;QACD,KAAK2zB,kBAAL,CAAwBnD,QAAxB,GAAmC7nB,IAAI,CAAC9L,GAAL,CAAS,KAAK82B,kBAAL,CAAwBnD,QAAjC,EAA2ChW,KAAK,CAACuX,IAAN,CAAW/xB,MAAtD,CAAnC;MACH;;MACD,IAAI+yB,UAAU,KAAK,KAAKxkB,OAAL,CAAa5J,MAAb,GAAsB,CAAzC,EAA4C;QACxClG,UAAU,CAAC;UAAA,OAAM,OAAI,CAACgM,MAAL,EAAN;QAAA,CAAD,CAAV;MACH;IACJ;;;WACD,yBAAgB;MACZ,IAAM1J,OAAO,GAAG,KAAKoxB,WAAL,CAAiBxtB,MAAjB,IAA2B,KAAK8J,IAAL,CAAUzO,MAAV,GAAmB,KAAKkyB,YAAxB,GAAuC,CAAlE,CAAhB;MACA,OAAO/1B,SAAS,GACX21B,UADE,CACS,CAAC,CAAD,EAAI,KAAKrjB,IAAL,CAAUlO,KAAd,CADT,EAEFke,YAFE,CAEW1d,OAFX,EAGF+xB,YAHE,CAGW/xB,OAAO,GAAG,CAHrB,EAIFoH,MAJE,CAIK,KAAKgqB,WAJV,CAAP;IAKH;;;WACD,yBAAgB;MACZ,IAAM5xB,KAAK,GAAG,KAAKkyB,UAAL,CAAgB5f,SAAhB,EAAd;MACA,IAAM9R,OAAO,GAAG,KAAKsxB,WAAL,CAAiB1tB,MAAjB,IAA2BpE,KAAK,GAAG,KAAKoxB,UAAb,GAA0B,CAArD,CAAhB;MACA,OAAOx1B,SAAS,GAAG21B,UAAZ,CAAuB,CAAC,CAAD,EAAIvxB,KAAJ,CAAvB,EAAmCke,YAAnC,CAAgD1d,OAAhD,EAAyDoH,MAAzD,CAAgE,KAAKkqB,WAArE,CAAP;IACH;;;WACD,yBAAgB;MACZ,IAAMhgB,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAAC,KAAK8R,IAAL,CAAUzO,MAAX,EAAmB,CAAnB,CAApB,EAA2CmI,MAA3C,CAAkD,KAAKoqB,WAAvD,CAAd;MACA,OAAO,KAAKvG,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,0BAAiB;MACb,IAAMlK,MAAM,GAAG,EAAf;;MADa,6CAEO,KAAKoG,OAFZ;MAAA;;MAAA;QAEb,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAC9B,IAAI,CAAC3a,MAAM,CAACkd,QAAP,CAAgBvC,KAAK,CAAC5Z,KAAtB,CAAL,EAAmC;YAC/Bf,MAAM,CAAC1C,IAAP,CAAYqd,KAAK,CAAC5Z,KAAlB;UACH;QACJ;MANY;QAAA;MAAA;QAAA;MAAA;;MAOb,OAAOf,MAAP;IACH;;;WACD,0BAAiB;MACb,IAAMA,MAAM,GAAG,EAAf;;MADa,6CAEO,KAAKoG,OAFZ;MAAA;;MAAA;QAEb,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAAA,6CACdA,KAAK,CAAChU,MADQ;UAAA;;UAAA;YAC9B,0DAA8B;cAAA,IAAnB1D,CAAmB;;cAC1B,IAAI,CAACjD,MAAM,CAACkd,QAAP,CAAgBja,CAAC,CAAClC,KAAlB,CAAL,EAA+B;gBAC3Bf,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAAClC,KAAd;cACH;YACJ;UAL6B;YAAA;UAAA;YAAA;UAAA;QAMjC;MARY;QAAA;MAAA;QAAA;MAAA;;MASb,OAAOf,MAAP;IACH;;;WACD,0BAAiB;MACb,IAAMA,MAAM,GAAG,EAAf;;MADa,6CAEO,KAAKoG,OAFZ;MAAA;;MAAA;QAEb,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAAA,6CACdA,KAAK,CAAChU,MADQ;UAAA;;UAAA;YAC9B,0DAA8B;cAAA,IAAnB1D,CAAmB;;cAC1B,IAAI,CAACjD,MAAM,CAACkd,QAAP,CAAgBja,CAAC,CAAC9L,KAAlB,CAAL,EAA+B;gBAC3B6I,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAAC9L,KAAd;cACH;YACJ;UAL6B;YAAA;UAAA;YAAA;UAAA;QAMjC;MARY;QAAA;MAAA;QAAA;MAAA;;MASb,IAAM1C,GAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,GAAK,CAAL,SAAWR,MAAX,EAAhB;MACA,IAAMtL,GAAG,GAAG,KAAK0wB,SAAL,GAAiB5kB,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,GAAK,KAAK4kB,SAAV,SAAwBplB,MAAxB,EAArB,GAAuDQ,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,GAAK,CAAL,SAAWR,MAAX,EAAvE;MACA,OAAO,CAACvL,GAAD,EAAMC,GAAN,CAAP;IACH;;;WACD,wBAAeimB,KAAf,EAAsB;MAClB,2BAAoB,KAAK2P,UAAL,CAAgB3P,KAAK,CAAC5Z,KAAtB,CAApB;IACH;;;WACD,iBAAQ2B,IAAR,EAAciY,KAAd,EAAqB;MACjB,IAAIA,KAAJ,EAAW;QACPjY,IAAI,CAACiE,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,KAAKnO,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,IAAI1C,MAAJ;;MACA,IAAI,KAAK6F,UAAL,KAAoBpG,SAAS,CAACqG,OAAlC,EAA2C;QACvC9F,MAAM,GAAG,KAAKkqB,WAAd;MACH,CAFD,MAGK;QACDlqB,MAAM,GAAG,KAAKoqB,WAAd;MACH;;MACD,KAAKrqB,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKC,UAAlC,EAA8C7F,MAA9C,EAAsD,KAAKyH,YAA3D,CAAd;IACH;;;WACD,4BAAmB;MACf,IAAMie,IAAI,GAAG;QACTrhB,SAAS,EAAE,KAAKwB,UADP;QAET9F,MAAM,EAAEhI,SAFC;QAGTiI,MAAM,EAAE,EAHC;QAITzE,KAAK,EAAExD,SAJE;QAKT6B,QAAQ,EAAE,KAAKwlB;MALN,CAAb;;MAOA,IAAIsG,IAAI,CAACrhB,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QACtC4f,IAAI,CAAC1lB,MAAL,GAAc,KAAKkqB,WAAnB;QACAxE,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAnB;QACA2lB,IAAI,CAACnqB,KAAL,GAAa,KAAK6nB,WAAlB;MACH,CAJD,MAKK;QACDsC,IAAI,CAAC1lB,MAAL,GAAc,KAAKoqB,WAAnB;QACA1E,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAL,CAAYmK,KAA1B;MACH;;MACD,OAAOwb,IAAP;IACH;;;WACD,kCAA4B;MAAA,IAATttB,KAAS,UAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,oBAAW+P,KAAX,EAAkBsI,KAAlB,EAA6C;MAAA,IAApBkP,UAAoB,uEAAP,KAAO;MACzC,IAAM9mB,IAAI,GAAG9L,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBgL,KAAlB,CAAb;;MACA,IAAIsI,KAAJ,EAAW;QACP5X,IAAI,CAAC4D,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,IAAMa,KAAK,GAAG,KAAK2D,OAAL,CACTkI,GADS,CACL,UAAA5H,CAAC;QAAA,OAAIA,CAAC,CAACC,MAAN;MAAA,CADI,EAETkkB,IAFS,GAGT7N,MAHS,CAGF,UAAAjgB,CAAC,EAAI;QACb,IAAI8sB,UAAJ,EAAgB;UACZ,OAAO9sB,CAAC,CAACgE,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAO7E,CAAC,CAAC6E,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwB7E,CAAC,CAAC4J,MAAF,KAAa5D,IAAI,CAAC4D,MAAjD;QACH;MACJ,CAVa,CAAd;MAWA,KAAK7D,aAAL,sBAAyBL,KAAzB;MACA,KAAKlB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAauP,KAAb,EAAoBsI,KAApB,EAA+C;MAAA,IAApBkP,UAAoB,uEAAP,KAAO;MAC3C,IAAM9mB,IAAI,GAAG9L,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBgL,KAAlB,CAAb;;MACA,IAAIsI,KAAJ,EAAW;QACP5X,IAAI,CAAC4D,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,KAAKkB,aAAL,GAAqB,KAAKA,aAAL,CAAmBka,MAAnB,CAA0B,UAAAjgB,CAAC,EAAI;QAChD,IAAI8sB,UAAJ,EAAgB;UACZ,OAAO9sB,CAAC,CAACgE,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAO,EAAE7E,CAAC,CAAC6E,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwB7E,CAAC,CAAC4J,MAAF,KAAa5D,IAAI,CAAC4D,MAA5C,CAAP;QACH;MACJ,CAPoB,CAArB;MAQA,KAAKnF,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;;EApNgC4C,kB;;AAsNrCimB,sBAAsB,CAACjxB,IAAvB;EAAA;EAAA;IAAA,sFArsT0G9I,EAqsT1G,uBAAmH+5B,sBAAnH,SAAmHA,sBAAnH;EAAA;AAAA;;AACAA,sBAAsB,CAAC9wB,IAAvB,kBAtsT0GjJ,EAssT1G;EAAA,MAAuG+5B,sBAAvG;EAAA;EAAA;IAAA;MAtsT0G/5B,EAssT1G;IAAA;;IAAA;MAAA;;MAtsT0GA,EAssT1G,qBAtsT0GA,EAssT1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WAtsT0GA,EAssT1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAtsT0GA,EAusTtG,yCADJ;MAtsT0GA,EA6sTpG;QAAA,OAAuB,uBAAmB,SAAnB,EAA8B,IAA9B,CAAvB;MAAA;QAAA,OACyB,yBAAqB,SAArB,EAAgC,IAAhC,CADzB;MAAA;QAAA,OAEoB,mBAFpB;MAAA,EAPN;MAtsT0GA,EAitTpG,iBAXN;MAtsT0GA,EAitTpG,0BAXN;MAtsT0GA,EAktTlG,qBAZR;MAtsT0GA,EA0tTlG,uEApBR;MAtsT0GA,EAyuTlG,sEAnCR;MAtsT0GA,EAuvTlG,sEAjDR;MAtsT0GA,EAkxTpG,eA5EN;MAtsT0GA,EAmxTpG,sEA7EN;MAtsT0GA,EA6yTtG,eAvGJ;IAAA;;IAAA;MAtsT0GA,EAwsTpG,oBAxsToGA,EAwsTpG,kLAFN;MAtsT0GA,EAitT7F,aAXb;MAtsT0GA,EAitT7F,wCAXb;MAtsT0GA,EAotThG,aAdV;MAtsT0GA,EAotThG,6IAdV;MAtsT0GA,EA4tT/F,aAtBX;MAtsT0GA,EA4tT/F,8BAtBX;MAtsT0GA,EA2uT/F,aArCX;MAtsT0GA,EA2uT/F,8BArCX;MAtsT0GA,EAuvT1F,aAjDhB;MAtsT0GA,EAuvT1F,+BAjDhB;MAtsT0GA,EAmxT5F,aA7Ed;MAtsT0GA,EAmxT5F,8BA7Ed;IAAA;EAAA;EAAA,eAwG+yDyR,cAxG/yD,EAwGohEyS,wBAxGphE,EAwG6pEhK,cAxG7pE,EAwGo7E+C,cAxGp7E,EAwG+uFwc,uBAxG/uF,EAwG4nGz4B,EAAE,CAACkI,IAxG/nG,EAwG6sGlI,EAAE,CAACwQ,OAxGhtG;EAAA;EAAA;EAAA;IAAA,WAwG4zG,CACpzG/P,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACFiiB,OAAO,EAAE,CADP;MAEFxN,SAAS,EAAE;IAFT,CAAD,CADY,EAKjBxU,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MAAEiiB,OAAO,EAAE,CAAX;MAAcxN,SAAS,EAAE;IAAzB,CAAD,CAAX,CALU,CAAX,CADY,CAAnB,CAD6yG;EAxG5zG;EAAA;AAAA;;AAmHA;EAAA,mDAzzT0GpW,EAyzT1G,mBAA2F+5B,sBAA3F,EAA+H,CAAC;IACpHjyB,IAAI,EAAE5H,SAD8G;IAEpH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,4BAAZ;MAA0CC,QAAQ,+iIAAlD;MAwGdC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAxGnB;MAwGyBuF,eAAe,EAAErO,uBAAuB,CAACsO,MAxGlE;MAwG0E2C,UAAU,EAAE,CACjFlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;QACFiiB,OAAO,EAAE,CADP;QAEFxN,SAAS,EAAE;MAFT,CAAD,CADY,EAKjBxU,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QAAEiiB,OAAO,EAAE,CAAX;QAAcxN,SAAS,EAAE;MAAzB,CAAD,CAAX,CALU,CAAX,CADY,CAAnB,CAD0E,CAxGtF;MAkHI3M,MAAM,EAAE,CAAC,yvDAAD;IAlHZ,CAAD;EAF8G,CAAD,CAA/H,QAqH4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAFD;IAIZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAVJ;IAYZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAZJ;IAcZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAdA;IAgBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAlBL;IAoBZoS,SAAS,EAAE,CAAC;MACZ3K,IAAI,EAAEzH;IADM,CAAD,CApBC;IAsBZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CAtBE;IAwBZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CAxBH;IA0BZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CA1BH;IA4BZ4T,UAAU,EAAE,CAAC;MACbnM,IAAI,EAAEzH;IADO,CAAD,CA5BA;IA8BZuxB,cAAc,EAAE,CAAC;MACjB9pB,IAAI,EAAEzH;IADW,CAAD,CA9BJ;IAgCZwxB,cAAc,EAAE,CAAC;MACjB/pB,IAAI,EAAEzH;IADW,CAAD,CAhCJ;IAkCZyxB,gBAAgB,EAAE,CAAC;MACnBhqB,IAAI,EAAEzH;IADa,CAAD,CAlCN;IAoCZ0xB,kBAAkB,EAAE,CAAC;MACrBjqB,IAAI,EAAEzH;IADe,CAAD,CApCR;IAsCZ2xB,kBAAkB,EAAE,CAAC;MACrBlqB,IAAI,EAAEzH;IADe,CAAD,CAtCR;IAwCZ6zB,mBAAmB,EAAE,CAAC;MACtBpsB,IAAI,EAAEzH;IADgB,CAAD,CAxCT;IA0CZ8zB,mBAAmB,EAAE,CAAC;MACtBrsB,IAAI,EAAEzH;IADgB,CAAD,CA1CT;IA4CZ+zB,UAAU,EAAE,CAAC;MACbtsB,IAAI,EAAEzH;IADO,CAAD,CA5CA;IA8CZg0B,UAAU,EAAE,CAAC;MACbvsB,IAAI,EAAEzH;IADO,CAAD,CA9CA;IAgDZ83B,YAAY,EAAE,CAAC;MACfrwB,IAAI,EAAEzH;IADS,CAAD,CAhDF;IAkDZu3B,UAAU,EAAE,CAAC;MACb9vB,IAAI,EAAEzH;IADO,CAAD,CAlDA;IAoDZ4xB,YAAY,EAAE,CAAC;MACfnqB,IAAI,EAAEzH;IADS,CAAD,CApDF;IAsDZy0B,UAAU,EAAE,CAAC;MACbhtB,IAAI,EAAEzH;IADO,CAAD,CAtDA;IAwDZmzB,SAAS,EAAE,CAAC;MACZ1rB,IAAI,EAAEzH;IADM,CAAD,CAxDC;IA0DZg2B,aAAa,EAAE,CAAC;MAChBvuB,IAAI,EAAEzH;IADU,CAAD,CA1DH;IA4DZ82B,mBAAmB,EAAE,CAAC;MACtBrvB,IAAI,EAAEzH;IADgB,CAAD,CA5DT;IA8DZ00B,aAAa,EAAE,CAAC;MAChBjtB,IAAI,EAAEzH;IADU,CAAD,CA9DH;IAgEZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAhEE;IAkEZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAlEA;IAoEZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD;EApEL,CArH5B;AAAA;;IA8LMm2B,8B;;;;;EACF,0CAAc;IAAA;;IAAA;;IACV,+BAASz1B,SAAT;IACA,QAAKsnB,MAAL,GAAc,KAAd;IACA,QAAK2F,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAK8X,eAAL,GAAuB,KAAvB;IACA,QAAK9G,aAAL,GAAqB,IAArB;IACA,QAAKrG,aAAL,GAAqB,EAArB;IACA,QAAK0gB,cAAL,GAAsB,IAAtB;IACA,QAAKC,cAAL,GAAsB,IAAtB;IACA,QAAKC,gBAAL,GAAwB,IAAxB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAK4F,UAAL,GAAkB,CAAlB;IACA,QAAK3F,YAAL,GAAoB,KAApB;IACA,QAAK8C,aAAL,GAAqB,IAArB;IACA,QAAKplB,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAK63B,WAAL,GAAmB,CAAC,CAAD,EAAI,GAAJ,CAAnB;IACA,QAAKviB,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKmX,WAAL,GAAmB,CAAnB;IACA,QAAKC,UAAL,GAAkB,CAAlB;IACA,QAAKvK,KAAL,GAAa,KAAb;IACA,QAAKqW,YAAL,GAAoB3D,YAApB;;IACA,QAAKpD,OAAL,GAAe,UAAC9gB,KAAD,EAAQH,IAAR,EAAiB;MAC5B,OAAOA,IAAI,CAACnB,IAAZ;IACH,CAFD;;IAxBU;EA2Bb;;;;WACD,oBAAW;MACP,IAAI9O,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKkb,KAAL,GAAa,IAAb;MACH;IACJ;;;WACD,kBAAS;MACL;;MACA,KAAKpO,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC7Z,UAAU,EAAE,KAAKiC,UAXe;QAYhCuZ,cAAc,EAAE,KAAKA;MAZW,CAAD,CAAnC;MAcA,KAAKsK,WAAL;MACA,KAAKM,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAKC,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAK1d,MAAL,GAAc,KAAKmQ,SAAL,EAAd;MACA,KAAK1N,MAAL,GAAc,KAAKsV,SAAL,EAAd;MACA,KAAKE,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAK3c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,gBAAqD,KAAKzX,MAAL,CAAY,CAAZ,CAArD;IACH;;;WACD,0BAAiB;MACb,IAAM7H,MAAM,GAAG,EAAf;;MADa,6CAEO,KAAKoG,OAFZ;MAAA;;MAAA;QAEb,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAC9B,IAAI,CAAC3a,MAAM,CAACkd,QAAP,CAAgBvC,KAAK,CAAC5Z,KAAtB,CAAL,EAAmC;YAC/Bf,MAAM,CAAC1C,IAAP,CAAYqd,KAAK,CAAC5Z,KAAlB;UACH;QACJ;MANY;QAAA;MAAA;QAAA;MAAA;;MAOb,OAAOf,MAAP;IACH;;;WACD,0BAAiB;MACb,IAAMA,MAAM,GAAG,EAAf;;MADa,6CAEO,KAAKoG,OAFZ;MAAA;;MAAA;QAEb,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAAA,6CACdA,KAAK,CAAChU,MADQ;UAAA;;UAAA;YAC9B,0DAA8B;cAAA,IAAnB1D,CAAmB;;cAC1B,IAAI,CAACjD,MAAM,CAACkd,QAAP,CAAgBja,CAAC,CAAClC,KAAlB,CAAL,EAA+B;gBAC3Bf,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAAClC,KAAd;cACH;YACJ;UAL6B;YAAA;UAAA;YAAA;UAAA;QAMjC;MARY;QAAA;MAAA;QAAA;MAAA;;MASb,OAAOf,MAAP;IACH;;;WACD,qBAAY;MACR,IAAMpH,OAAO,GAAG,KAAKoxB,WAAL,CAAiBxtB,MAAjB,IAA2B,KAAK8J,IAAL,CAAUlO,KAAV,GAAkB,KAAKoxB,UAAvB,GAAoC,CAA/D,CAAhB;MACA,OAAOx1B,SAAS,GAAG21B,UAAZ,CAAuB,CAAC,CAAD,EAAI,KAAKrjB,IAAL,CAAUlO,KAAd,CAAvB,EAA6Cke,YAA7C,CAA0D1d,OAA1D,EAAmEoH,MAAnE,CAA0E,KAAKgqB,WAA/E,CAAP;IACH;;;WACD,qBAAY;MACR,IAAM9f,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAAC,KAAK8R,IAAL,CAAUzO,MAAX,EAAmB,CAAnB,CAApB,EAA2CmI,MAA3C,CAAkD,KAAKoqB,WAAvD,CAAd;MACA,OAAO,KAAKvG,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,wBAAeyQ,KAAf,EAAsB;MAClB,2BAAoB,KAAKlO,MAAL,CAAYkO,KAAK,CAAC/Y,IAAlB,CAApB;IACH;;;WACD,iBAAQc,IAAR,EAAciY,KAAd,EAAqB;MACjB,IAAIA,KAAJ,EAAW;QACPjY,IAAI,CAACiE,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,KAAKnO,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,IAAI1C,MAAJ;;MACA,IAAI,KAAK6F,UAAL,KAAoBpG,SAAS,CAACqG,OAAlC,EAA2C;QACvC9F,MAAM,GAAG,KAAKkqB,WAAd;MACH,CAFD,MAGK;QACDlqB,MAAM,GAAG,KAAKoqB,WAAd;MACH;;MACD,KAAKrqB,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKC,UAAlC,EAA8C7F,MAA9C,EAAsD,KAAKyH,YAA3D,CAAd;IACH;;;WACD,4BAAmB;MACf,IAAMie,IAAI,GAAG;QACTrhB,SAAS,EAAE,KAAKwB,UADP;QAET9F,MAAM,EAAEhI,SAFC;QAGTiI,MAAM,EAAE,EAHC;QAITzE,KAAK,EAAExD,SAJE;QAKT6B,QAAQ,EAAE,KAAKwlB;MALN,CAAb;;MAOA,IAAIsG,IAAI,CAACrhB,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QACtC4f,IAAI,CAAC1lB,MAAL,GAAc,KAAKkqB,WAAnB;QACAxE,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAnB;QACA2lB,IAAI,CAACnqB,KAAL,GAAa,KAAK6nB,WAAlB;MACH,CAJD,MAKK;QACDsC,IAAI,CAAC1lB,MAAL,GAAc,KAAKoqB,WAAnB;QACA1E,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAL,CAAYmK,KAA1B;MACH;;MACD,OAAOwb,IAAP;IACH;;;WACD,kCAA4B;MAAA,IAATttB,KAAS,UAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,oBAAW+P,KAAX,EAAkBsI,KAAlB,EAA6C;MAAA,IAApBkP,UAAoB,uEAAP,KAAO;MACzC,IAAM9mB,IAAI,GAAG9L,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBgL,KAAlB,CAAb;;MACA,IAAIsI,KAAJ,EAAW;QACP5X,IAAI,CAAC4D,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,IAAMa,KAAK,GAAG,KAAK2D,OAAL,CACTkI,GADS,CACL,UAAA5H,CAAC;QAAA,OAAIA,CAAC,CAACC,MAAN;MAAA,CADI,EAETkkB,IAFS,GAGT7N,MAHS,CAGF,UAAAjgB,CAAC,EAAI;QACb,IAAI8sB,UAAJ,EAAgB;UACZ,OAAO9sB,CAAC,CAACgE,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAO7E,CAAC,CAAC6E,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwB7E,CAAC,CAAC4J,MAAF,KAAa5D,IAAI,CAAC4D,MAAjD;QACH;MACJ,CAVa,CAAd;MAWA,KAAK7D,aAAL,sBAAyBL,KAAzB;MACA,KAAKlB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAauP,KAAb,EAAoBsI,KAApB,EAA+C;MAAA,IAApBkP,UAAoB,uEAAP,KAAO;MAC3C,IAAM9mB,IAAI,GAAG9L,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBgL,KAAlB,CAAb;;MACA,IAAIsI,KAAJ,EAAW;QACP5X,IAAI,CAAC4D,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,KAAKkB,aAAL,GAAqB,KAAKA,aAAL,CAAmBka,MAAnB,CAA0B,UAAAjgB,CAAC,EAAI;QAChD,IAAI8sB,UAAJ,EAAgB;UACZ,OAAO9sB,CAAC,CAACgE,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAO,EAAE7E,CAAC,CAAC6E,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwB7E,CAAC,CAAC4J,MAAF,KAAa5D,IAAI,CAAC4D,MAA5C,CAAP;QACH;MACJ,CAPoB,CAArB;MAQA,KAAKnF,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;;EAtKwC4C,kB;;AAwK7CkmB,8BAA8B,CAAClxB,IAA/B;EAAA;EAAA;IAAA,sGA/pU0G9I,EA+pU1G,uBAA2Hg6B,8BAA3H,SAA2HA,8BAA3H;EAAA;AAAA;;AACAA,8BAA8B,CAAC/wB,IAA/B,kBAhqU0GjJ,EAgqU1G;EAAA,MAA+Gg6B,8BAA/G;EAAA;EAAA;IAAA;MAhqU0Gh6B,EAgqU1G;IAAA;;IAAA;MAAA;;MAhqU0GA,EAgqU1G,qBAhqU0GA,EAgqU1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WAhqU0GA,EAgqU1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAhqU0GA,EAiqUtG,yCADJ;MAhqU0GA,EAuqUpG;QAAA,OAAuB,uBAAmB,SAAnB,EAA8B,IAA9B,CAAvB;MAAA;QAAA,OACyB,yBAAqB,SAArB,EAAgC,IAAhC,CADzB;MAAA;QAAA,OAEoB,mBAFpB;MAAA,EAPN;MAhqU0GA,EA2qUpG,iBAXN;MAhqU0GA,EA2qUpG,0BAXN;MAhqU0GA,EA4qUlG,8EAZR;MAhqU0GA,EA0rUlG,8EA1BR;MAhqU0GA,EAwsUlG,8EAxCR;MAhqU0GA,EAmuUlG,8EAnER;MAhqU0GA,EA0vUpG,iBA1FN;IAAA;;IAAA;MAhqU0GA,EAkqUpG,oBAlqUoGA,EAkqUpG,kLAFN;MAhqU0GA,EA2qU7F,aAXb;MAhqU0GA,EA2qU7F,wCAXb;MAhqU0GA,EA8qU/F,aAdX;MAhqU0GA,EA8qU/F,8BAdX;MAhqU0GA,EA4rU/F,aA5BX;MAhqU0GA,EA4rU/F,8BA5BX;MAhqU0GA,EAwsU1F,aAxChB;MAhqU0GA,EAwsU1F,+BAxChB;MAhqU0GA,EAmuU1F,aAnEhB;MAhqU0GA,EAmuU1F,8BAnEhB;IAAA;EAAA;EAAA,eA4F+yDyR,cA5F/yD,EA4FohEyI,cA5FphE,EA4F2yE+C,cA5F3yE,EA4FsmFwc,uBA5FtmF,EA4Fm/Fz4B,EAAE,CAACkI,IA5Ft/F,EA4FokGlI,EAAE,CAACwQ,OA5FvkG;EAAA;EAAA;EAAA;IAAA,WA4FmrG,CAC3qG/P,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACFiiB,OAAO,EAAE,CADP;MAEFxN,SAAS,EAAE;IAFT,CAAD,CADY,EAKjBxU,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MAAEiiB,OAAO,EAAE,CAAX;MAAcxN,SAAS,EAAE;IAAzB,CAAD,CAAX,CALU,CAAX,CADY,CAAnB,CADoqG;EA5FnrG;EAAA;AAAA;;AAuGA;EAAA,mDAvwU0GpW,EAuwU1G,mBAA2Fg6B,8BAA3F,EAAuI,CAAC;IAC5HlyB,IAAI,EAAE5H,SADsH;IAE5H2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,oCAAZ;MAAkDC,QAAQ,8gHAA1D;MA4FdC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IA5FnB;MA4FyBuF,eAAe,EAAErO,uBAAuB,CAACsO,MA5FlE;MA4F0E2C,UAAU,EAAE,CACjFlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;QACFiiB,OAAO,EAAE,CADP;QAEFxN,SAAS,EAAE;MAFT,CAAD,CADY,EAKjBxU,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QAAEiiB,OAAO,EAAE,CAAX;QAAcxN,SAAS,EAAE;MAAzB,CAAD,CAAX,CALU,CAAX,CADY,CAAnB,CAD0E,CA5FtF;MAsGI3M,MAAM,EAAE,CAAC,yvDAAD;IAtGZ,CAAD;EAFsH,CAAD,CAAvI,QAyG4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAFD;IAIZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAVJ;IAYZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAZJ;IAcZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAdA;IAgBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAlBL;IAoBZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CApBE;IAsBZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CAtBH;IAwBZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAxBH;IA0BZ4T,UAAU,EAAE,CAAC;MACbnM,IAAI,EAAEzH;IADO,CAAD,CA1BA;IA4BZuxB,cAAc,EAAE,CAAC;MACjB9pB,IAAI,EAAEzH;IADW,CAAD,CA5BJ;IA8BZwxB,cAAc,EAAE,CAAC;MACjB/pB,IAAI,EAAEzH;IADW,CAAD,CA9BJ;IAgCZyxB,gBAAgB,EAAE,CAAC;MACnBhqB,IAAI,EAAEzH;IADa,CAAD,CAhCN;IAkCZ0xB,kBAAkB,EAAE,CAAC;MACrBjqB,IAAI,EAAEzH;IADe,CAAD,CAlCR;IAoCZ2xB,kBAAkB,EAAE,CAAC;MACrBlqB,IAAI,EAAEzH;IADe,CAAD,CApCR;IAsCZ6zB,mBAAmB,EAAE,CAAC;MACtBpsB,IAAI,EAAEzH;IADgB,CAAD,CAtCT;IAwCZ8zB,mBAAmB,EAAE,CAAC;MACtBrsB,IAAI,EAAEzH;IADgB,CAAD,CAxCT;IA0CZ+zB,UAAU,EAAE,CAAC;MACbtsB,IAAI,EAAEzH;IADO,CAAD,CA1CA;IA4CZg0B,UAAU,EAAE,CAAC;MACbvsB,IAAI,EAAEzH;IADO,CAAD,CA5CA;IA8CZu3B,UAAU,EAAE,CAAC;MACb9vB,IAAI,EAAEzH;IADO,CAAD,CA9CA;IAgDZ4xB,YAAY,EAAE,CAAC;MACfnqB,IAAI,EAAEzH;IADS,CAAD,CAhDF;IAkDZ00B,aAAa,EAAE,CAAC;MAChBjtB,IAAI,EAAEzH;IADU,CAAD,CAlDH;IAoDZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CApDE;IAsDZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAtDA;IAwDZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD;EAxDL,CAzG5B;AAAA;;IAsKMo2B,2B;;;;;EACF,uCAAc;IAAA;;IAAA;;IACV,+BAAS11B,SAAT;IACA,QAAKsnB,MAAL,GAAc,KAAd;IACA,QAAK2F,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAK8X,eAAL,GAAuB,KAAvB;IACA,QAAK9G,aAAL,GAAqB,IAArB;IACA,QAAKrG,aAAL,GAAqB,EAArB;IACA,QAAK0gB,cAAL,GAAsB,IAAtB;IACA,QAAKC,cAAL,GAAsB,IAAtB;IACA,QAAKC,gBAAL,GAAwB,IAAxB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAK4F,UAAL,GAAkB,CAAlB;IACA,QAAK3F,YAAL,GAAoB,KAApB;IACA,QAAKoE,aAAL,GAAqB,KAArB;IACA,QAAKtB,aAAL,GAAqB,IAArB;IACA,QAAKplB,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAKsV,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKmX,WAAL,GAAmB,CAAnB;IACA,QAAKC,UAAL,GAAkB,CAAlB;IACA,QAAKuM,kBAAL,GAA0B;MAAE/D,QAAQ,EAAE,CAAZ;MAAeY,QAAQ,EAAE;IAAzB,CAA1B;IACA,QAAK3T,KAAL,GAAa,KAAb;IACA,QAAKqW,YAAL,GAAoB3D,YAApB;;IACA,QAAKpD,OAAL,GAAe,UAAC9gB,KAAD,EAAQH,IAAR,EAAiB;MAC5B,OAAOA,IAAI,CAACnB,IAAZ;IACH,CAFD;;IAzBU;EA4Bb;;;;WACD,oBAAW;MACP,IAAI9O,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKkb,KAAL,GAAa,IAAb;MACH;IACJ;;;WACD,kBAAS;MACL;;MACA,IAAI,CAAC,KAAKuT,aAAV,EAAyB;QACrB,KAAKuD,kBAAL,GAA0B;UAAE/D,QAAQ,EAAE,CAAZ;UAAeY,QAAQ,EAAE;QAAzB,CAA1B;MACH;;MACD,KAAKxgB,MAAL,GAAc,CAAC,KAAK,KAAK2jB,kBAAL,CAAwBnD,QAA9B,EAAwC,EAAxC,EAA4C,KAAK,KAAKmD,kBAAL,CAAwB/D,QAAzE,EAAmF,EAAnF,CAAd;MACA,KAAKnhB,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC7Z,UAAU,EAAE,KAAKiC,UAXe;QAYhCuZ,cAAc,EAAE,KAAKA;MAZW,CAAD,CAAnC;;MAcA,IAAI,KAAK6I,aAAT,EAAwB;QACpB,KAAK3hB,IAAL,CAAUzO,MAAV,IAAoB,KAAK2zB,kBAAL,CAAwB/D,QAA5C;MACH;;MACD,KAAKiC,WAAL;MACA,KAAKM,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAKC,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAKC,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAK5d,MAAL,GAAc,KAAKmQ,SAAL,EAAd;MACA,KAAK1N,MAAL,GAAc,KAAKsV,SAAL,EAAd;MACA,KAAKE,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAK3c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,gBAAqD,KAAKzX,MAAL,CAAY,CAAZ,IAAiB,KAAK2jB,kBAAL,CAAwB/D,QAA9F;IACH;;;WACD,0BAAiB;MACb,IAAMznB,MAAM,GAAG,EAAf;;MADa,6CAEO,KAAKoG,OAFZ;MAAA;;MAAA;QAEb,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAC9B,IAAI,CAAC3a,MAAM,CAACkd,QAAP,CAAgBvC,KAAK,CAAC5Z,KAAtB,CAAL,EAAmC;YAC/Bf,MAAM,CAAC1C,IAAP,CAAYqd,KAAK,CAAC5Z,KAAlB;UACH;QACJ;MANY;QAAA;MAAA;QAAA;MAAA;;MAOb,OAAOf,MAAP;IACH;;;WACD,0BAAiB;MACb,IAAMA,MAAM,GAAG,EAAf;;MADa,6CAEO,KAAKoG,OAFZ;MAAA;;MAAA;QAEb,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAAA,6CACdA,KAAK,CAAChU,MADQ;UAAA;;UAAA;YAC9B,0DAA8B;cAAA,IAAnB1D,CAAmB;;cAC1B,IAAI,CAACjD,MAAM,CAACkd,QAAP,CAAgBja,CAAC,CAAClC,KAAlB,CAAL,EAA+B;gBAC3Bf,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAAClC,KAAd;cACH;YACJ;UAL6B;YAAA;UAAA;YAAA;UAAA;QAMjC;MARY;QAAA;MAAA;QAAA;MAAA;;MASb,OAAOf,MAAP;IACH;;;WACD,0BAAiB;MACb,IAAMA,MAAM,GAAG,EAAf;MACA,IAAIirB,QAAQ,GAAG,CAAf;MACA,IAAIC,OAAO,GAAG,CAAd;;MAHa,6CAIO,KAAK9kB,OAJZ;MAAA;;MAAA;QAIb,0DAAkC;UAAA,IAAvBuU,KAAuB;UAC9B,IAAIwQ,WAAW,GAAG,CAAlB;UACA,IAAIC,UAAU,GAAG,CAAjB;;UAF8B,6CAGdzQ,KAAK,CAAChU,MAHQ;UAAA;;UAAA;YAG9B,0DAA8B;cAAA,IAAnB1D,CAAmB;;cAC1B,IAAIA,CAAC,CAAC9L,KAAF,GAAU,CAAd,EAAiB;gBACbg0B,WAAW,IAAIloB,CAAC,CAAC9L,KAAjB;cACH,CAFD,MAGK;gBACDi0B,UAAU,IAAInoB,CAAC,CAAC9L,KAAhB;cACH;;cACD8zB,QAAQ,GAAGhoB,CAAC,CAAC9L,KAAF,GAAU8zB,QAAV,GAAqBhoB,CAAC,CAAC9L,KAAvB,GAA+B8zB,QAA1C;cACAC,OAAO,GAAGjoB,CAAC,CAAC9L,KAAF,GAAU+zB,OAAV,GAAoBjoB,CAAC,CAAC9L,KAAtB,GAA8B+zB,OAAxC;YACH;UAZ6B;YAAA;UAAA;YAAA;UAAA;;UAa9BlrB,MAAM,CAAC1C,IAAP,CAAY6tB,WAAZ;UACAnrB,MAAM,CAAC1C,IAAP,CAAY8tB,UAAZ;QACH;MAnBY;QAAA;MAAA;QAAA;MAAA;;MAoBbprB,MAAM,CAAC1C,IAAP,CAAY2tB,QAAZ;MACAjrB,MAAM,CAAC1C,IAAP,CAAY4tB,OAAZ;MACA,IAAMz2B,GAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,GAAK,CAAL,SAAWR,MAAX,EAAhB;MACA,IAAMtL,GAAG,GAAG,KAAK0wB,SAAL,GAAiB5kB,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,GAAK,KAAK4kB,SAAV,SAAwBplB,MAAxB,EAArB,GAAuDQ,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,EAAQR,MAAR,CAAvE;MACA,OAAO,CAACvL,GAAD,EAAMC,GAAN,CAAP;IACH;;;WACD,qBAAY;MACR,IAAMkE,OAAO,GAAG,KAAKoxB,WAAL,CAAiBxtB,MAAjB,IAA2B,KAAK8J,IAAL,CAAUlO,KAAV,GAAkB,KAAKoxB,UAAvB,GAAoC,CAA/D,CAAhB;MACA,OAAOx1B,SAAS,GAAG21B,UAAZ,CAAuB,CAAC,CAAD,EAAI,KAAKrjB,IAAL,CAAUlO,KAAd,CAAvB,EAA6Cke,YAA7C,CAA0D1d,OAA1D,EAAmEoH,MAAnE,CAA0E,KAAKgqB,WAA/E,CAAP;IACH;;;WACD,qBAAY;MACR,IAAM9f,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAAC,KAAK8R,IAAL,CAAUzO,MAAX,EAAmB,CAAnB,CAApB,EAA2CmI,MAA3C,CAAkD,KAAKoqB,WAAvD,CAAd;MACA,OAAO,KAAKvG,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,qCAA4BmI,KAA5B,EAAmCuY,UAAnC,EAA+C;MAAA;;MAC3C,IAAIvY,KAAK,CAACuX,IAAN,CAAWnC,QAAf,EAAyB;QACrB,KAAK+D,kBAAL,CAAwB/D,QAAxB,GAAmCjnB,IAAI,CAAC9L,GAAL,CAAS,KAAK82B,kBAAL,CAAwB/D,QAAjC,EAA2CpV,KAAK,CAACuX,IAAN,CAAW/xB,MAAtD,CAAnC;MACH,CAFD,MAGK;QACD,KAAK2zB,kBAAL,CAAwBnD,QAAxB,GAAmC7nB,IAAI,CAAC9L,GAAL,CAAS,KAAK82B,kBAAL,CAAwBnD,QAAjC,EAA2ChW,KAAK,CAACuX,IAAN,CAAW/xB,MAAtD,CAAnC;MACH;;MACD,IAAI+yB,UAAU,KAAK,KAAKxkB,OAAL,CAAa5J,MAAb,GAAsB,CAAzC,EAA4C;QACxClG,UAAU,CAAC;UAAA,OAAM,OAAI,CAACgM,MAAL,EAAN;QAAA,CAAD,CAAV;MACH;IACJ;;;WACD,wBAAeqY,KAAf,EAAsB;MAClB,2BAAoB,KAAKlO,MAAL,CAAYkO,KAAK,CAAC/Y,IAAlB,KAA2B,CAA/C;IACH;;;WACD,iBAAQc,IAAR,EAAciY,KAAd,EAAqB;MACjB,IAAIA,KAAJ,EAAW;QACPjY,IAAI,CAACiE,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,KAAKnO,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,IAAI1C,MAAJ;;MACA,IAAI,KAAK6F,UAAL,KAAoBpG,SAAS,CAACqG,OAAlC,EAA2C;QACvC9F,MAAM,GAAG,KAAKkqB,WAAd;MACH,CAFD,MAGK;QACDlqB,MAAM,GAAG,KAAKoqB,WAAd;MACH;;MACD,KAAKrqB,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKC,UAAlC,EAA8C7F,MAA9C,EAAsD,KAAKyH,YAA3D,CAAd;IACH;;;WACD,4BAAmB;MACf,IAAMie,IAAI,GAAG;QACTrhB,SAAS,EAAE,KAAKwB,UADP;QAET9F,MAAM,EAAEhI,SAFC;QAGTiI,MAAM,EAAE,EAHC;QAITzE,KAAK,EAAExD,SAJE;QAKT6B,QAAQ,EAAE,KAAKwlB;MALN,CAAb;;MAOA,IAAIsG,IAAI,CAACrhB,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QACtC4f,IAAI,CAAC1lB,MAAL,GAAc,KAAKkqB,WAAnB;QACAxE,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAnB;QACA2lB,IAAI,CAACnqB,KAAL,GAAa,KAAK6nB,WAAlB;MACH,CAJD,MAKK;QACDsC,IAAI,CAAC1lB,MAAL,GAAc,KAAKoqB,WAAnB;QACA1E,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAL,CAAYmK,KAA1B;MACH;;MACD,OAAOwb,IAAP;IACH;;;WACD,kCAA4B;MAAA,IAATttB,KAAS,UAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,oBAAW+P,KAAX,EAAkBsI,KAAlB,EAA6C;MAAA,IAApBkP,UAAoB,uEAAP,KAAO;MACzC,IAAM9mB,IAAI,GAAG9L,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBgL,KAAlB,CAAb;;MACA,IAAIsI,KAAJ,EAAW;QACP5X,IAAI,CAAC4D,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,IAAMa,KAAK,GAAG,KAAK2D,OAAL,CACTkI,GADS,CACL,UAAA5H,CAAC;QAAA,OAAIA,CAAC,CAACC,MAAN;MAAA,CADI,EAETkkB,IAFS,GAGT7N,MAHS,CAGF,UAAAjgB,CAAC,EAAI;QACb,IAAI8sB,UAAJ,EAAgB;UACZ,OAAO9sB,CAAC,CAACgE,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAO7E,CAAC,CAAC6E,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwB7E,CAAC,CAAC4J,MAAF,KAAa5D,IAAI,CAAC4D,MAAjD;QACH;MACJ,CAVa,CAAd;MAWA,KAAK7D,aAAL,sBAAyBL,KAAzB;MACA,KAAKlB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAauP,KAAb,EAAoBsI,KAApB,EAA+C;MAAA,IAApBkP,UAAoB,uEAAP,KAAO;MAC3C,IAAM9mB,IAAI,GAAG9L,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBgL,KAAlB,CAAb;;MACA,IAAIsI,KAAJ,EAAW;QACP5X,IAAI,CAAC4D,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,KAAKkB,aAAL,GAAqB,KAAKA,aAAL,CAAmBka,MAAnB,CAA0B,UAAAjgB,CAAC,EAAI;QAChD,IAAI8sB,UAAJ,EAAgB;UACZ,OAAO9sB,CAAC,CAACgE,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAO,EAAE7E,CAAC,CAAC6E,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwB7E,CAAC,CAAC4J,MAAF,KAAa5D,IAAI,CAAC4D,MAA5C,CAAP;QACH;MACJ,CAPoB,CAArB;MAQA,KAAKnF,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;;EApNqC4C,kB;;AAsN1CmmB,2BAA2B,CAACnxB,IAA5B;EAAA;EAAA;IAAA,gGAnoV0G9I,EAmoV1G,uBAAwHi6B,2BAAxH,SAAwHA,2BAAxH;EAAA;AAAA;;AACAA,2BAA2B,CAAChxB,IAA5B,kBApoV0GjJ,EAooV1G;EAAA,MAA4Gi6B,2BAA5G;EAAA;EAAA;IAAA;MApoV0Gj6B,EAooV1G;IAAA;;IAAA;MAAA;;MApoV0GA,EAooV1G,qBApoV0GA,EAooV1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WApoV0GA,EAooV1G;EAAA;EAAA;EAAA;EAAA;IAAA;MApoV0GA,EAqoVtG,yCADJ;MApoV0GA,EA2oVpG;QAAA,OAAuB,uBAAmB,SAAnB,EAA8B,IAA9B,CAAvB;MAAA;QAAA,OACyB,yBAAqB,SAArB,EAAgC,IAAhC,CADzB;MAAA;QAAA,OAEoB,mBAFpB;MAAA,EAPN;MApoV0GA,EA+oVpG,iBAXN;MApoV0GA,EA+oVpG,0BAXN;MApoV0GA,EAgpVlG,4EAZR;MApoV0GA,EA+pVlG,2EA3BR;MApoV0GA,EA6qVlG,2EAzCR;MApoV0GA,EA2sVpG,eAvEN;MApoV0GA,EA4sVpG,2EAxEN;MApoV0GA,EAyuVtG,eArGJ;IAAA;;IAAA;MApoV0GA,EAsoVpG,oBAtoVoGA,EAsoVpG,kLAFN;MApoV0GA,EA+oV7F,aAXb;MApoV0GA,EA+oV7F,wCAXb;MApoV0GA,EAkpV/F,aAdX;MApoV0GA,EAkpV/F,8BAdX;MApoV0GA,EAiqV/F,aA7BX;MApoV0GA,EAiqV/F,8BA7BX;MApoV0GA,EA6qV1F,aAzChB;MApoV0GA,EA6qV1F,+BAzChB;MApoV0GA,EA4sV5F,aAxEd;MApoV0GA,EA4sV5F,8BAxEd;IAAA;EAAA;EAAA,eAsG+yDyR,cAtG/yD,EAsGohEyI,cAtGphE,EAsG2yE+C,cAtG3yE,EAsGsmFwc,uBAtGtmF,EAsGm/Fz4B,EAAE,CAACkI,IAtGt/F,EAsGokGlI,EAAE,CAACwQ,OAtGvkG;EAAA;EAAA;EAAA;IAAA,WAsGmrG,CAC3qG/P,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACFiiB,OAAO,EAAE,CADP;MAEFxN,SAAS,EAAE;IAFT,CAAD,CADY,EAKjBxU,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MAAEiiB,OAAO,EAAE,CAAX;MAAcxN,SAAS,EAAE;IAAzB,CAAD,CAAX,CALU,CAAX,CADY,CAAnB,CADoqG;EAtGnrG;EAAA;AAAA;;AAiHA;EAAA,mDArvV0GpW,EAqvV1G,mBAA2Fi6B,2BAA3F,EAAoI,CAAC;IACzHnyB,IAAI,EAAE5H,SADmH;IAEzH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,iCAAZ;MAA+CC,QAAQ,69HAAvD;MAsGdC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAtGnB;MAsGyBuF,eAAe,EAAErO,uBAAuB,CAACsO,MAtGlE;MAsG0E2C,UAAU,EAAE,CACjFlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;QACFiiB,OAAO,EAAE,CADP;QAEFxN,SAAS,EAAE;MAFT,CAAD,CADY,EAKjBxU,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QAAEiiB,OAAO,EAAE,CAAX;QAAcxN,SAAS,EAAE;MAAzB,CAAD,CAAX,CALU,CAAX,CADY,CAAnB,CAD0E,CAtGtF;MAgHI3M,MAAM,EAAE,CAAC,yvDAAD;IAhHZ,CAAD;EAFmH,CAAD,CAApI,QAmH4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAFD;IAIZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAVJ;IAYZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAZJ;IAcZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAdA;IAgBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAlBL;IAoBZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CApBE;IAsBZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CAtBH;IAwBZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAxBH;IA0BZ4T,UAAU,EAAE,CAAC;MACbnM,IAAI,EAAEzH;IADO,CAAD,CA1BA;IA4BZuxB,cAAc,EAAE,CAAC;MACjB9pB,IAAI,EAAEzH;IADW,CAAD,CA5BJ;IA8BZwxB,cAAc,EAAE,CAAC;MACjB/pB,IAAI,EAAEzH;IADW,CAAD,CA9BJ;IAgCZyxB,gBAAgB,EAAE,CAAC;MACnBhqB,IAAI,EAAEzH;IADa,CAAD,CAhCN;IAkCZ0xB,kBAAkB,EAAE,CAAC;MACrBjqB,IAAI,EAAEzH;IADe,CAAD,CAlCR;IAoCZ2xB,kBAAkB,EAAE,CAAC;MACrBlqB,IAAI,EAAEzH;IADe,CAAD,CApCR;IAsCZ6zB,mBAAmB,EAAE,CAAC;MACtBpsB,IAAI,EAAEzH;IADgB,CAAD,CAtCT;IAwCZ8zB,mBAAmB,EAAE,CAAC;MACtBrsB,IAAI,EAAEzH;IADgB,CAAD,CAxCT;IA0CZ+zB,UAAU,EAAE,CAAC;MACbtsB,IAAI,EAAEzH;IADO,CAAD,CA1CA;IA4CZg0B,UAAU,EAAE,CAAC;MACbvsB,IAAI,EAAEzH;IADO,CAAD,CA5CA;IA8CZu3B,UAAU,EAAE,CAAC;MACb9vB,IAAI,EAAEzH;IADO,CAAD,CA9CA;IAgDZ4xB,YAAY,EAAE,CAAC;MACfnqB,IAAI,EAAEzH;IADS,CAAD,CAhDF;IAkDZmzB,SAAS,EAAE,CAAC;MACZ1rB,IAAI,EAAEzH;IADM,CAAD,CAlDC;IAoDZg2B,aAAa,EAAE,CAAC;MAChBvuB,IAAI,EAAEzH;IADU,CAAD,CApDH;IAsDZ82B,mBAAmB,EAAE,CAAC;MACtBrvB,IAAI,EAAEzH;IADgB,CAAD,CAtDT;IAwDZ00B,aAAa,EAAE,CAAC;MAChBjtB,IAAI,EAAEzH;IADU,CAAD,CAxDH;IA0DZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CA1DE;IA4DZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CA5DA;IA8DZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD;EA9DL,CAnH5B;AAAA;;IAsLMq2B,c;;;;AAENA,cAAc,CAACpxB,IAAf;EAAA,iBAA2GoxB,cAA3G;AAAA;;AACAA,cAAc,CAAC1c,IAAf,kBA96V0Gxd,EA86V1G;EAAA,MAA4Gk6B;AAA5G;AAuBAA,cAAc,CAACzc,IAAf,kBAr8V0Gzd,EAq8V1G;EAAA,UAAsI,CAAC+sB,iBAAD,CAAtI;AAAA;;AACA;EAAA,mDAt8V0G/sB,EAs8V1G,mBAA2Fk6B,cAA3F,EAAuH,CAAC;IAC5GpyB,IAAI,EAAEhH,QADsG;IAE5G+C,IAAI,EAAE,CAAC;MACC6Z,OAAO,EAAE,CAACqP,iBAAD,CADV;MAECpP,YAAY,EAAE,CACVkX,YADU,EAEV8C,sBAFU,EAGVO,wBAHU,EAIVgB,gCAJU,EAKVE,6BALU,EAMVO,oBANU,EAOVI,sBAPU,EAQVC,8BARU,EASVC,2BATU,EAUVvE,iBAVU,EAWVU,gBAXU,EAYVqD,uBAZU,CAFf;MAgBC7b,OAAO,EAAE,CACLiX,YADK,EAEL8C,sBAFK,EAGLO,wBAHK,EAILgB,gCAJK,EAKLE,6BALK,EAMLO,oBANK,EAOLI,sBAPK,EAQLC,8BARK,EASLC,2BATK,EAULvE,iBAVK,EAWLU,gBAXK,EAYLqD,uBAZK;IAhBV,CAAD;EAFsG,CAAD,CAAvH;AAAA;;AAmCA,IAAMU,SAAS,GAAGj3B,IAAI,EAAtB;;IACMk3B,Y;EACF,sBAAY1yB,OAAZ,EAAqB2I,EAArB,EAAyB;IAAA;;IACrB,KAAKA,EAAL,GAAUA,EAAV;IACA,KAAKykB,UAAL,GAAkB,IAAlB;IACA,KAAKxmB,QAAL,GAAgB,KAAhB;IACA,KAAKiI,MAAL,GAAc,CAAd;IACA,KAAK7G,QAAL,GAAgB,KAAhB;IACA,KAAKiC,UAAL,GAAkB,IAAlB;IACA,KAAKojB,aAAL,GAAqB,IAArB;IACA,KAAKlzB,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,KAAK8gB,cAAL,GAAsBA,cAAtB;IACA,KAAKiJ,WAAL,GAAmB,KAAnB;IACA,KAAKvF,WAAL,GAAmB,KAAnB;IACA,KAAK6P,OAAL,GAAe,KAAf;IACA,KAAK9sB,SAAL,GAAiBR,OAAO,CAACS,aAAzB;EACH;;;;WACD,qBAAY6F,OAAZ,EAAqB;MACjB,IAAI,CAAC,KAAK0c,WAAV,EAAuB;QACnB,KAAKtF,aAAL;QACA,KAAKsF,WAAL,GAAmB,IAAnB;MACH,CAHD,MAIK;QACD,KAAKha,MAAL;MACH;IACJ;;;WACD,kBAAS;MACL,KAAK2pB,cAAL,GAAsBzrB,IAAI,CAAC9L,GAAL,CAAS,KAAKoT,WAAd,EAA2B,CAA3B,CAAtB;MACA,KAAKokB,kBAAL,GAA0B1rB,IAAI,CAAC9L,GAAL,CAAS,KAAKoT,WAAL,GAAmB,CAA5B,EAA+B,CAA/B,CAA1B;MACA,KAAKqkB,eAAL,GAAuB,MAAM,KAAKrkB,WAAlC;MACA,KAAK6M,UAAL,GAAkB,SAAS1B,EAAE,GAAG1N,QAAL,EAA3B;MACA,KAAKqP,YAAL,kBAA4B,KAAKD,UAAjC;;MACA,IAAI,KAAKzU,QAAT,EAAmB;QACf,KAAKuV,aAAL,GAAqB,KAAKwB,WAAL,EAArB;QACA,KAAKF,WAAL,GAAmB,IAAnB;MACH,CAHD,MAIK;QACD,KAAKA,WAAL,GAAmB,KAAnB;MACH;;MACD,KAAKqV,YAAL;MACA,KAAKlV,YAAL;MACA,KAAK2P,cAAL;MACA,KAAKwF,UAAL,GAAkB,SAASpZ,EAAE,GAAG1N,QAAL,EAA3B;MACA,KAAK+mB,QAAL,kBAAwB,KAAKD,UAA7B;;MACA,IAAI,KAAKpqB,EAAT,EAAa;QACT,KAAKA,EAAL,CAAQM,YAAR;MACH;IACJ;;;WACD,yBAAgB;MACZ,KAAKgqB,OAAL,GAAe,KAAKC,OAAL,GAAe,KAAK1F,eAAL,EAA9B;MACA,KAAK2F,kBAAL,GAA0B,KAAKC,0BAAL,EAA1B;MACAp2B,UAAU,CAAC,KAAKgM,MAAL,CAAYzI,IAAZ,CAAiB,IAAjB,CAAD,EAAyB,GAAzB,CAAV;IACH;;;WACD,wBAAe;MACX,IAAM8yB,OAAO,GAAGl5B,MAAM,CAAC,KAAKqG,SAAN,CAAN,CAAuB8yB,SAAvB,CAAiC,MAAjC,CAAhB;MACA,IAAMrV,IAAI,GAAG,KAAKwP,OAAL,EAAb;;MACA,IAAI,KAAKxjB,UAAT,EAAqB;QACjBopB,OAAO,CACFrV,IADL,CACU,GADV,EACe,KAAKkV,OADpB,EAEKl5B,UAFL,GAGKu5B,IAHL,CAGUh4B,YAHV,EAIK2B,QAJL,CAIc,GAJd,EAKKs2B,SALL,CAKe,GALf,EAKoB,KAAKC,SAAL,CAAexV,IAAf,EAAqB,CAArB,CALpB;MAMH,CAPD,MAQK;QACDoV,OAAO,CAACrV,IAAR,CAAa,GAAb,EAAkBC,IAAlB;MACH;;MACD,KAAKiV,OAAL,GAAejV,IAAf;IACH;;;WACD,wBAAe;MACX,IAAMyV,MAAM,GAAGv5B,MAAM,CAAC,KAAKqG,SAAN,CAAN,CAAuB8yB,SAAvB,CAAiC,WAAjC,CAAf;MACA,IAAMK,eAAe,GAAG,KAAKA,eAA7B;MACA,IAAMR,kBAAkB,GAAG,KAAKA,kBAAhC;;MACA,IAAI,KAAKlpB,UAAT,EAAqB;QACjBypB,MAAM,CACD1V,IADL,CACU,IADV,EACgB,UAAC4V,CAAD,EAAIhqB,KAAJ;UAAA,OAAcupB,kBAAkB,CAACvpB,KAAD,CAAlB,CAA0BiqB,EAA1B,CAA6B3vB,CAA3C;QAAA,CADhB,EAEK8Z,IAFL,CAEU,IAFV,EAEgB,UAAC4V,CAAD,EAAIhqB,KAAJ;UAAA,OAAcupB,kBAAkB,CAACvpB,KAAD,CAAlB,CAA0BiqB,EAA1B,CAA6BjlB,CAA3C;QAAA,CAFhB,EAGKoP,IAHL,CAGU,IAHV,EAGgB,UAAC4V,CAAD,EAAIhqB,KAAJ;UAAA,OAAcupB,kBAAkB,CAACvpB,KAAD,CAAlB,CAA0BkqB,EAA1B,CAA6B5vB,CAA3C;QAAA,CAHhB,EAIK8Z,IAJL,CAIU,IAJV,EAIgB,UAAC4V,CAAD,EAAIhqB,KAAJ;UAAA,OAAcupB,kBAAkB,CAACvpB,KAAD,CAAlB,CAA0BkqB,EAA1B,CAA6BllB,CAA3C;QAAA,CAJhB,EAKK5U,UALL,GAMKu5B,IANL,CAMUh4B,YANV,EAOK2B,QAPL,CAOc,GAPd,EAQK8gB,IARL,CAQU,IARV,EAQgB,UAAC4V,CAAD,EAAIhqB,KAAJ;UAAA,OAAc+pB,eAAe,CAAC/pB,KAAD,CAAf,CAAuBiqB,EAAvB,CAA0B3vB,CAAxC;QAAA,CARhB,EASK8Z,IATL,CASU,IATV,EASgB,UAAC4V,CAAD,EAAIhqB,KAAJ;UAAA,OAAc+pB,eAAe,CAAC/pB,KAAD,CAAf,CAAuBiqB,EAAvB,CAA0BjlB,CAAxC;QAAA,CAThB,EAUKoP,IAVL,CAUU,IAVV,EAUgB,UAAC4V,CAAD,EAAIhqB,KAAJ;UAAA,OAAc+pB,eAAe,CAAC/pB,KAAD,CAAf,CAAuBkqB,EAAvB,CAA0B5vB,CAAxC;QAAA,CAVhB,EAWK8Z,IAXL,CAWU,IAXV,EAWgB,UAAC4V,CAAD,EAAIhqB,KAAJ;UAAA,OAAc+pB,eAAe,CAAC/pB,KAAD,CAAf,CAAuBkqB,EAAvB,CAA0BllB,CAAxC;QAAA,CAXhB;MAYH,CAbD,MAcK;QACD8kB,MAAM,CACD1V,IADL,CACU,IADV,EACgB,UAAC4V,CAAD,EAAIhqB,KAAJ;UAAA,OAAc+pB,eAAe,CAAC/pB,KAAD,CAAf,CAAuBiqB,EAAvB,CAA0B3vB,CAAxC;QAAA,CADhB,EAEK8Z,IAFL,CAEU,IAFV,EAEgB,UAAC4V,CAAD,EAAIhqB,KAAJ;UAAA,OAAc+pB,eAAe,CAAC/pB,KAAD,CAAf,CAAuBiqB,EAAvB,CAA0BjlB,CAAxC;QAAA,CAFhB,EAGKoP,IAHL,CAGU,IAHV,EAGgB,UAAC4V,CAAD,EAAIhqB,KAAJ;UAAA,OAAc+pB,eAAe,CAAC/pB,KAAD,CAAf,CAAuBkqB,EAAvB,CAA0B5vB,CAAxC;QAAA,CAHhB,EAIK8Z,IAJL,CAIU,IAJV,EAIgB,UAAC4V,CAAD,EAAIhqB,KAAJ;UAAA,OAAc+pB,eAAe,CAAC/pB,KAAD,CAAf,CAAuBkqB,EAAvB,CAA0BllB,CAAxC;QAAA,CAJhB;MAKH;;MACD,KAAKukB,kBAAL,sBAA8BQ,eAA9B;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,mBAAU3V,IAAV,EAAgBrU,CAAhB,EAAmBC,KAAnB,EAA0BmU,IAA1B,EAAgC;MAC5B,IAAMgW,UAAU,GAAGhW,IAAI,CAACnU,KAAD,CAAvB;MACA,OAAOmqB,UAAU,CAAC/V,IAAD,CAAV,CAAiBgW,OAAjB,CAAyBn2B,KAAhC;IACH,C,CACD;;;;WACA,mBAAUme,EAAV,EAAciY,SAAd,EAAyB;MACrB,OAAO,YAAY;QACf;QACA,IAAMC,KAAK,GAAG,IAAd;QACA,IAAMC,KAAK,GAAG,KAAKC,SAAL,EAAd;QACAD,KAAK,CAACE,YAAN,CAAmB,GAAnB,EAAwBrY,EAAxB;QACA,IAAMsY,EAAE,GAAGJ,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEK,cAAP,EAAX;QACA,IAAMC,EAAE,GAAGL,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEI,cAAP,EAAX,CANe,CAOf;;QACA,IAAME,SAAS,GAAG,CAAC,CAAD,CAAlB;QACA,IAAIhxB,CAAC,GAAG,CAAR;QACA,IAAMixB,EAAE,GAAGT,SAAS,GAAG/sB,IAAI,CAAC9L,GAAL,CAASk5B,EAAT,EAAaE,EAAb,CAAvB;;QACA,OAAO/wB,CAAC,GAAG,CAAX,EAAc;UACVgxB,SAAS,CAACzwB,IAAV,CAAeP,CAAf;UACAA,CAAC,IAAIixB,EAAL;QACH;;QACDD,SAAS,CAACzwB,IAAV,CAAe,CAAf,EAfe,CAgBf;;QACA,IAAM0iB,MAAM,GAAG+N,SAAS,CAACzf,GAAV,CAAc,UAACM,CAAD,EAAO;UAChC,IAAMqf,EAAE,GAAGT,KAAK,CAACU,gBAAN,CAAuBtf,CAAC,GAAGgf,EAA3B,CAAX;UACA,IAAMO,EAAE,GAAGV,KAAK,CAACS,gBAAN,CAAuBtf,CAAC,GAAGkf,EAA3B,CAAX;UACA,OAAOl5B,WAAW,CAAC,CAACq5B,EAAE,CAACzwB,CAAJ,EAAOywB,EAAE,CAAC/lB,CAAV,CAAD,EAAe,CAACimB,EAAE,CAAC3wB,CAAJ,EAAO2wB,EAAE,CAACjmB,CAAV,CAAf,CAAlB;QACH,CAJc,CAAf,CAjBe,CAsBf;;QACA,OAAO,UAAC0G,CAAD,EAAO;UACV,OAAOA,CAAC,GAAG,CAAJ,GAAQ,MAAMoR,MAAM,CAAC1R,GAAP,CAAW,UAAC8f,CAAD;YAAA,OAAOA,CAAC,CAACxf,CAAD,CAAR;UAAA,CAAX,EAAwBlO,IAAxB,CAA6B,GAA7B,CAAd,GAAkD4U,EAAzD;QACH,CAFD;MAGH,CA1BD;IA2BH;;;WACD,2BAAkB;MACd,IAAI,CAAC,KAAK/R,UAAV,EAAsB;QAClB,OAAO,KAAKwjB,OAAL,EAAP;MACH;;MACD,IAAMxR,MAAM,GAAG,KAAKmR,UAAL,GAAkB,CAAlB,GAAsB,CAArC;MACA,4BAAiB,KAAKuG,eAAL,CAAqB,CAArB,EAAwBE,EAAzC;MAAA,IAAQ3vB,CAAR,yBAAQA,CAAR;MAAA,IAAW0K,CAAX,yBAAWA,CAAX;MACA,OAAO2E,WAAW,CAACrP,CAAC,GAAG,KAAKpF,KAAV,EAAiB8P,CAAC,GAAG,CAArB,EAAwB,KAAK9P,KAA7B,EAAoC,CAApC,EAAuCmd,MAAvC,EAA+C,KAAK2R,KAApD,CAAlB;IACH;;;WACD,mBAAU;MACN,IAAM3R,MAAM,GAAG,KAAK0R,SAAL,EAAf;MACA,IAAI1P,IAAI,GAAG,EAAX;MACAA,IAAI,GAAG1K,WAAW,CAAC,KAAKrP,CAAN,EAAS,KAAK0K,CAAd,EAAiB,KAAK9P,KAAtB,EAA6B,KAAKP,MAAlC,EAA0C2I,IAAI,CAAC/L,GAAL,CAAS,KAAKoD,MAAd,EAAsB0d,MAAtB,CAA1C,EAAyE,KAAK2R,KAA9E,CAAlB;MACA,OAAO3P,IAAP;IACH;;;WACD,sCAA6B;MACzB,IAAI,CAAC,KAAKhU,UAAV,EAAsB;QAClB,0BAAW,KAAK0pB,eAAhB;MACH;;MACD,IAAMA,eAAe,GAAGlB,SAAS,CAAC,KAAKkB,eAAN,CAAjC;MACAA,eAAe,CAAC,CAAD,CAAf,CAAmBE,EAAnB,CAAsBjlB,CAAtB,GAA0B+kB,eAAe,CAAC,CAAD,CAAf,CAAmBG,EAAnB,CAAsBllB,CAAtB,GAA0B+kB,eAAe,CAAC,CAAD,CAAf,CAAmBE,EAAnB,CAAsBjlB,CAAtB,GAA0B+kB,eAAe,CAAC,CAAD,CAAf,CAAmBG,EAAnB,CAAsBllB,CAAtB,GAA0B+kB,eAAe,CAAC,CAAD,CAAf,CAAmBE,EAAnB,CAAsBjlB,CAAtB,GAA0B+kB,eAAe,CAAC,CAAD,CAAf,CAAmBG,EAAnB,CAAsBllB,CAAtB,GAC9H+kB,eAAe,CAAC,CAAD,CAAf,CAAmBE,EAAnB,CAAsBjlB,CAD1B;MAEA,OAAO+kB,eAAP;IACH;;;WACD,qBAAY;MACR,IAAI1X,MAAM,GAAG,CAAb;;MACA,IAAI,KAAKmR,UAAL,IAAmB,KAAK7uB,MAAL,GAAc,CAAjC,IAAsC,KAAKO,KAAL,GAAa,CAAvD,EAA0D;QACtDmd,MAAM,GAAG/U,IAAI,CAAC0D,KAAL,CAAW1D,IAAI,CAAC/L,GAAL,CAAS,CAAT,EAAY,KAAKoD,MAAL,GAAc,CAA1B,EAA6B,KAAKO,KAAL,GAAa,CAA1C,CAAX,CAAT;MACH;;MACD,OAAOmd,MAAP;IACH;;;WACD,uBAAc;MACV,OAAO,CACH;QACIpN,MAAM,EAAE,CADZ;QAEItG,KAAK,EAAE,KAAKsK,IAFhB;QAGIqJ,OAAO,EAAE,KAAKwR,eAAL;MAHb,CADG,EAMH;QACI7e,MAAM,EAAE,GADZ;QAEItG,KAAK,EAAE,KAAKsK,IAFhB;QAGIqJ,OAAO,EAAE;MAHb,CANG,CAAP;IAYH;;;WACD,2BAAkB;MACd,IAAI,KAAKkR,UAAT,EAAqB;QACjB,OAAO,GAAP;MACH,CAFD,MAGK;QACD,OAAO,GAAP;MACH;IACJ;;;SACD,eAAY;MACR,IAAIQ,KAAK,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,CAAZ;;MACA,IAAI,KAAKR,UAAT,EAAqB;QACjBQ,KAAK,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAR;MACH;;MACD,OAAOA,KAAP;IACH;;;WACD,wBAAe;MACX,KAAK3lB,QAAL,CAAcI,IAAd,CAAmB,KAAKe,IAAxB;IACH;;;WACD,wBAAe;MACX,KAAKlB,UAAL,CAAgBG,IAAhB,CAAqB,KAAKe,IAA1B;IACH;;;WACD,0BAAiB;MACb,KAAKkkB,OAAL,GAAe,KAAKD,aAAL,IAAsB,KAAK9uB,MAAL,KAAgB,CAArD;IACH;;;;;;AAELm0B,YAAY,CAACtxB,IAAb;EAAA,iBAAyGsxB,YAAzG,EAxrW0Gp6B,EAwrW1G,mBAAuIA,EAAE,CAAC+I,UAA1I,GAxrW0G/I,EAwrW1G,mBAAiKA,EAAE,CAACuR,iBAApK;AAAA;;AACA6oB,YAAY,CAACnxB,IAAb,kBAzrW0GjJ,EAyrW1G;EAAA,MAA6Fo6B,YAA7F;EAAA;EAAA;IAAA;MAzrW0Gp6B,EAyrW1G;QAAA,OAA6F,kBAA7F;MAAA;QAAA,OAA6F,kBAA7F;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAzrW0GA,EAyrW1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAzrW0GA,EA0rWtG,iBADJ;MAzrW0GA,EA0rWtG,0BADJ;MAzrW0GA,EA2rWpG,4DAFN;MAzrW0GA,EAksWpG,kCATN;MAzrW0GA,EAosWhG,sCAXV;MAzrW0GA,EAssWlG,mBAbR;MAzrW0GA,EAysWtG,qCAhBJ;MAzrW0GA,EAqtWlG;QAAA,OAAS,yBAAT;MAAA,EA5BR;MAzrW0GA,EA0sWpG,eAjBN;MAzrW0GA,EAutWpG,kEA9BN;MAzrW0GA,EAouWtG,eA3CJ;IAAA;;IAAA;MAzrW0GA,EA4rWjG,aAHT;MAzrW0GA,EA4rWjG,oCAHT;MAzrW0GA,EAksW1F,aAThB;MAzrW0GA,EAksW1F,kCAThB;MAzrW0GA,EAqsW9E,aAZ5B;MAzrW0GA,EAqsW9E,8BAZ5B;MAzrW0GA,EA8sWlG,aArBR;MAzrW0GA,EA8sWlG,2DArBR;MAzrW0GA,EAgtWlG,iLAvBR;MAzrW0GA,EAwtWjF,aA/BzB;MAzrW0GA,EAwtWjF,2CA/BzB;IAAA;EAAA;EAAA,eA4C0C0hB,0BA5C1C,EA4CuL1gB,EAAE,CAACkI,IA5C1L,EA4CwQlI,EAAE,CAACwQ,OA5C3Q;EAAA;EAAA;AAAA;;AA6CA;EAAA,mDAtuW0GxR,EAsuW1G,mBAA2Fo6B,YAA3F,EAAqH,CAAC;IAC1GtyB,IAAI,EAAE5H,SADoG;IAE1G2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,mBADX;MAECC,QAAQ,+6CAFT;MA+CCyF,eAAe,EAAErO,uBAAuB,CAACsO;IA/C1C,CAAD;EAFoG,CAAD,CAArH,EAmD4B,YAAY;IAAE,OAAO,CAAC;MAAElH,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAD,EAA0B;MAAEjB,IAAI,EAAE9H,EAAE,CAACuR;IAAX,CAA1B,CAAP;EAAmE,CAnD7G,EAmD+H;IAAEkrB,WAAW,EAAE,CAAC;MAC/H30B,IAAI,EAAEzH;IADyH,CAAD,CAAf;IAE/G6V,WAAW,EAAE,CAAC;MACdpO,IAAI,EAAEzH;IADQ,CAAD,CAFkG;IAI/Gka,IAAI,EAAE,CAAC;MACPzS,IAAI,EAAEzH;IADC,CAAD,CAJyG;IAM/GyQ,IAAI,EAAE,CAAC;MACPhJ,IAAI,EAAEzH;IADC,CAAD,CANyG;IAQ/GmG,KAAK,EAAE,CAAC;MACRsB,IAAI,EAAEzH;IADE,CAAD,CARwG;IAU/G4F,MAAM,EAAE,CAAC;MACT6B,IAAI,EAAEzH;IADG,CAAD,CAVuG;IAY/GuL,CAAC,EAAE,CAAC;MACJ9D,IAAI,EAAEzH;IADF,CAAD,CAZ4G;IAc/GiW,CAAC,EAAE,CAAC;MACJxO,IAAI,EAAEzH;IADF,CAAD,CAd4G;IAgB/Gg7B,eAAe,EAAE,CAAC;MAClBvzB,IAAI,EAAEzH;IADY,CAAD,CAhB8F;IAkB/Gy0B,UAAU,EAAE,CAAC;MACbhtB,IAAI,EAAEzH;IADO,CAAD,CAlBmG;IAoB/GiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CApBqG;IAsB/GwjB,aAAa,EAAE,CAAC;MAChB/b,IAAI,EAAEzH;IADU,CAAD,CAtBgG;IAwB/GkW,MAAM,EAAE,CAAC;MACTzO,IAAI,EAAEzH;IADG,CAAD,CAxBuG;IA0B/GqP,QAAQ,EAAE,CAAC;MACX5H,IAAI,EAAEzH;IADK,CAAD,CA1BqG;IA4B/GsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CA5BmG;IA8B/Gk1B,SAAS,EAAE,CAAC;MACZztB,IAAI,EAAEzH;IADM,CAAD,CA9BoG;IAgC/G00B,aAAa,EAAE,CAAC;MAChBjtB,IAAI,EAAEzH;IADU,CAAD,CAhCgG;IAkC/GwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CAlCuG;IAoC/G+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CApCqG;IAsC/GgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAtCmG;IAwC/GsP,YAAY,EAAE,CAAC;MACfpI,IAAI,EAAEtH,YADS;MAEfqD,IAAI,EAAE,CAAC,YAAD;IAFS,CAAD,CAxCiG;IA2C/GsM,YAAY,EAAE,CAAC;MACfrI,IAAI,EAAEtH,YADS;MAEfqD,IAAI,EAAE,CAAC,YAAD;IAFS,CAAD;EA3CiG,CAnD/H;AAAA;;IAmGM64B,kB;EACF,8BAAc;IAAA;;IACV,KAAK/qB,UAAL,GAAkB,IAAlB;IACA,KAAK0M,eAAL,GAAuB,KAAvB;IACA,KAAK/P,QAAL,GAAgB,KAAhB;IACA,KAAKzM,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;EACH;;;;WACD,qBAAYqN,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,iBAAQI,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,kBAAS;MACL,KAAK0lB,qBAAL;MACA,IAAMhwB,KAAK,GAAG,KAAKuO,MAAL,IAAe,KAAKA,MAAL,CAAYA,MAAZ,CAAmBnK,MAAlC,GAA2CgE,IAAI,CAACC,KAAL,CAAW,KAAKgM,MAAL,CAAY/B,SAAZ,EAAX,CAA3C,GAAiF,IAA/F;MACA,IAAMwK,UAAU,GAAG,KAAKvO,MAAL,CAAY/E,IAA/B,CAHK,CAIL;;MACA,KAAK2sB,MAAL,GAAc,KAAK5nB,MAAL,CAAYA,MAA1B;MACA,IAAM6nB,YAAY,GAAG,KAAKD,MAAL,CAAYjgB,GAAZ,CAAgB,UAAAmgB,KAAK;QAAA,OAAIpZ,MAAM,CAACoZ,KAAK,CAACt3B,KAAP,CAAV;MAAA,CAArB,CAArB;MACA,KAAKu3B,QAAL,GAAgB,CAACj6B,GAAG,CAAC+5B,YAAD,CAAJ,EAAoB95B,GAAG,CAAC85B,YAAD,CAAvB,CAAhB,CAPK,CAQL;;MACA,IAAMG,WAAW,GAAG,KAAKJ,MAAL,CAAYjgB,GAAZ,CAAgB,UAAAvL,IAAI;QAAA,OAAIA,IAAI,CAAC5L,KAAT;MAAA,CAApB,EAAoCsqB,IAApC,CAAyC,UAACC,CAAD,EAAIjK,CAAJ;QAAA,OAAUpC,MAAM,CAACqM,CAAD,CAAN,GAAYrM,MAAM,CAACoC,CAAD,CAA5B;MAAA,CAAzC,CAApB;MACA,KAAKmX,SAAL,GAAiB,KAAKC,eAAL,CAAqBF,WAArB,CAAjB;MACA,KAAK1B,eAAL,GAAuB,KAAK6B,mBAAL,CAAyB5Z,UAAU,CAAC3P,QAAX,EAAzB,EAAgD,KAAKmpB,QAArD,EAA+D,KAAKE,SAApE,EAA+Ex2B,KAA/E,CAAvB;MACA,IAAMjB,KAAK,GAAG,KAAKy3B,SAAL,CAAe,CAAf,CAAd;MACA,IAAMltB,cAAc,GAAGZ,WAAW,CAACoU,UAAD,CAAlC;MACA,IAAM6Z,GAAG,GAAG;QACR53B,KAAK,EAALA,KADQ;QAERuL,IAAI,EAAE,KAAK6rB,MAFH;QAGRxtB,KAAK,EAAEmU,UAHC;QAIRxT,cAAc,EAAdA,cAJQ;QAKRtJ,KAAK,EAALA,KALQ;QAMRP,MAAM,EAAE,CANA;QAOR2F,CAAC,EAAE,CAPK;QAQR0K,CAAC,EAAE,CARK;QASRwe,UAAU,EAAE,KAAKA,UATT;QAURkI,SAAS,EAAE,KAAKA,SAVR;QAWR3B,eAAe,EAAE,KAAKA;MAXd,CAAZ;MAaA8B,GAAG,CAACl3B,MAAJ,GAAa2I,IAAI,CAAC+K,GAAL,CAAS,KAAK2D,MAAL,CAAY,KAAK0f,SAAL,CAAe,CAAf,CAAZ,IAAiC,KAAK1f,MAAL,CAAY,KAAK0f,SAAL,CAAe,CAAf,CAAZ,CAA1C,CAAb;MACAG,GAAG,CAACvxB,CAAJ,GAAQ,KAAKiP,MAAL,CAAYyI,UAAU,CAAC3P,QAAX,EAAZ,CAAR;MACAwpB,GAAG,CAAC7mB,CAAJ,GAAQ,KAAKgH,MAAL,CAAY,KAAK0f,SAAL,CAAe,CAAf,CAAZ,CAAR;MACAG,GAAG,CAAC5H,SAAJ,GAAgBzlB,cAAc,GAAG,aAAjB,GAAiCvK,KAAK,CAAC8J,cAAN,EAAjD;;MACA,IAAI,KAAKlB,MAAL,CAAYsE,SAAZ,KAA0B5E,SAAS,CAACqG,OAAxC,EAAiD;QAC7CipB,GAAG,CAACltB,KAAJ,GAAY,KAAK9B,MAAL,CAAY6C,QAAZ,CAAqBsS,UAArB,CAAZ;MACH,CAFD,MAGK;QACD6Z,GAAG,CAACltB,KAAJ,GAAY,KAAK9B,MAAL,CAAY6C,QAAZ,CAAqB,KAAKgsB,SAAL,CAAe,CAAf,CAArB,CAAZ;QACAG,GAAG,CAACtZ,aAAJ,GAAoB,KAAK1V,MAAL,CAAYmjB,sBAAZ,CAAmC,KAAK0L,SAAL,CAAe,CAAf,CAAnC,EAAsD,KAAKA,SAAL,CAAe,CAAf,CAAtD,CAApB;MACH;;MACD,IAAMzZ,YAAY,GAAGzT,cAArB;MACA,IAAMstB,qBAAqB,iDACD9tB,WAAW,CAACiU,YAAD,CADV,yEAGrB,KAAKyZ,SAAL,CAAe,CAAf,CAHqB,yBAGM,KAAKA,SAAL,CAAe,CAAf,CAHN,yBAGiC,KAAKA,SAAL,CAAe,CAAf,CAHjC,qCAIpB,KAAKF,QAAL,CAAc,CAAd,CAJoB,0BAIO,KAAKA,QAAL,CAAc,CAAd,CAJP,kBAA3B;MAMAK,GAAG,CAACjG,WAAJ,GAAkB,KAAK7Y,eAAL,GAAuBlY,SAAvB,GAAmCi3B,qBAArD;MACA,KAAKzc,YAAL,GAAoB,KAAKtC,eAAL,GAAuBlY,SAAvB,GAAmCg3B,GAAG,CAACjG,WAA3D;MACA,KAAKiG,GAAL,GAAWA,GAAX;IACH;;;WACD,yBAAgBE,SAAhB,EAA2B;MACvB,OAAO,CAACt6B,QAAQ,CAACs6B,SAAD,EAAY,IAAZ,CAAT,EAA4Bt6B,QAAQ,CAACs6B,SAAD,EAAY,GAAZ,CAApC,EAAsDt6B,QAAQ,CAACs6B,SAAD,EAAY,IAAZ,CAA9D,CAAP;IACH;;;WACD,6BAAoB/Z,UAApB,EAAgCwZ,QAAhC,EAA0CE,SAA1C,EAAqD/G,QAArD,EAA+D;MAC3D;MACA,IAAMqH,OAAO,GAAG,KAAKziB,MAAL,CAAYyI,UAAZ,CAAhB;MACA,IAAMia,OAAO,GAAGD,OAAO,GAAGrH,QAAQ,GAAG,CAArC;MACA,IAAMsE,eAAe,GAAG3rB,IAAI,CAAC9L,GAAL,CAASmzB,QAAQ,GAAG,IAAI,KAAK/f,WAA7B,EAA0C,CAA1C,CAAxB;MACA,IAAMsnB,gBAAgB,GAAG5uB,IAAI,CAAC9L,GAAL,CAASmzB,QAAQ,GAAG,CAApB,EAAuB,CAAvB,CAAzB;MACA,IAAMwH,WAAW,GAAG,KAAKngB,MAAL,CAAYwf,QAAQ,CAAC,CAAD,CAApB,CAApB;MACA,IAAMY,UAAU,GAAG,KAAKpgB,MAAL,CAAYwf,QAAQ,CAAC,CAAD,CAApB,CAAnB;MACA,IAAMa,MAAM,GAAG,KAAKrgB,MAAL,CAAY0f,SAAS,CAAC,CAAD,CAArB,CAAf;MACA,IAAMY,OAAO,GAAG;QACZrC,EAAE,EAAE;UAAE3vB,CAAC,EAAE2xB,OAAO,GAAGC,gBAAgB,GAAG,CAAlC;UAAqClnB,CAAC,EAAEmnB;QAAxC,CADQ;QAEZjC,EAAE,EAAE;UAAE5vB,CAAC,EAAE2xB,OAAO,GAAGC,gBAAgB,GAAG,CAAlC;UAAqClnB,CAAC,EAAEmnB;QAAxC;MAFQ,CAAhB;MAIA,IAAMI,UAAU,GAAG;QACftC,EAAE,EAAE;UAAE3vB,CAAC,EAAE2xB,OAAO,GAAGhD,eAAe,GAAG,CAAjC;UAAoCjkB,CAAC,EAAEqnB;QAAvC,CADW;QAEfnC,EAAE,EAAE;UAAE5vB,CAAC,EAAE2xB,OAAO,GAAGhD,eAAe,GAAG,CAAjC;UAAoCjkB,CAAC,EAAEqnB;QAAvC;MAFW,CAAnB;MAIA,IAAMG,UAAU,GAAG;QACfvC,EAAE,EAAE;UAAE3vB,CAAC,EAAE2xB,OAAO,GAAGC,gBAAgB,GAAG,CAAlC;UAAqClnB,CAAC,EAAEonB;QAAxC,CADW;QAEflC,EAAE,EAAE;UAAE5vB,CAAC,EAAE2xB,OAAO,GAAGC,gBAAgB,GAAG,CAAlC;UAAqClnB,CAAC,EAAEonB;QAAxC;MAFW,CAAnB;MAIA,IAAMK,YAAY,GAAG;QACjBxC,EAAE,EAAE;UAAE3vB,CAAC,EAAE2xB,OAAL;UAAcjnB,CAAC,EAAEmnB;QAAjB,CADa;QAEjBjC,EAAE,EAAE;UAAE5vB,CAAC,EAAE2xB,OAAL;UAAcjnB,CAAC,EAAEonB;QAAjB;MAFa,CAArB;MAIA,OAAO,CAACK,YAAD,EAAeH,OAAf,EAAwBC,UAAxB,EAAoCC,UAApC,CAAP;IACH;;;WACD,iCAAwB;MACpB,IAAI,KAAKzf,eAAT,EAA0B;QACtB,KAAKE,gBAAL,GAAwBpY,SAAxB;QACA,KAAKsY,WAAL,GAAmBtY,SAAnB;MACH,CAHD,MAIK;QACD,IAAI,CAAC,KAAKoY,gBAAV,EAA4B;UACxB,KAAKA,gBAAL,GAAwB/Y,cAAc,CAACM,GAAvC;QACH;;QACD,IAAI,CAAC,KAAK2Y,WAAV,EAAuB;UACnB,KAAKA,WAAL,GAAmBZ,UAAU,CAACuC,OAA9B;QACH;MACJ;IACJ;;;;;;AAELsc,kBAAkB,CAAC5zB,IAAnB;EAAA,iBAA+G4zB,kBAA/G;AAAA;;AACAA,kBAAkB,CAACzzB,IAAnB,kBAv7W0GjJ,EAu7W1G;EAAA,MAAmG08B,kBAAnG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAv7W0G18B,EAu7W1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAv7W0GA,EAw7WtG,iBADJ;MAv7W0GA,EAw7WtG,0BADJ;MAv7W0GA,EAy8WpG;QAAA,OAAU,mBAAV;MAAA;QAAA,OACY,yBADZ;MAAA;QAAA,OAEc,2BAFd;MAAA,EAlBN;MAv7W0GA,EAo9WrG,eA7BL;IAAA;;IAAA;MAv7W0GA,EA07WpG,grBAHN;IAAA;EAAA;EAAA,eA8B0Co6B,YA9B1C,EA8BmXrc,gBA9BnX;EAAA;EAAA;IAAA,WA8BqzB,CAC7yBtc,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACFiiB,OAAO,EAAE;IADP,CAAD,CADY,EAIjBhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MAAEiiB,OAAO,EAAE;IAAX,CAAD,CAAX,CAJU,CAAX,CADY,CAAnB,CADsyB;EA9BrzB;EAAA;AAAA;;AAwCA;EAAA,mDA/9W0G5jB,EA+9W1G,mBAA2F08B,kBAA3F,EAA2H,CAAC;IAChH50B,IAAI,EAAE5H,SAD0G;IAEhH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,0BADX;MAECC,QAAQ,m+BAFT;MAiCCyF,eAAe,EAAErO,uBAAuB,CAACsO,MAjC1C;MAkCC2C,UAAU,EAAE,CACRlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;QACFiiB,OAAO,EAAE;MADP,CAAD,CADY,EAIjBhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QAAEiiB,OAAO,EAAE;MAAX,CAAD,CAAX,CAJU,CAAX,CADY,CAAnB,CADC;IAlCb,CAAD;EAF0G,CAAD,CAA3H,QA+C4B;IAAElP,IAAI,EAAE,CAAC;MACrB5M,IAAI,EAAEzH;IADe,CAAD,CAAR;IAEZ0U,MAAM,EAAE,CAAC;MACTjN,IAAI,EAAEzH;IADG,CAAD,CAFI;IAIZwa,MAAM,EAAE,CAAC;MACT/S,IAAI,EAAEzH;IADG,CAAD,CAJI;IAMZid,MAAM,EAAE,CAAC;MACTxV,IAAI,EAAEzH;IADG,CAAD,CANI;IAQZ8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CARI;IAUZsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CAVA;IAYZo8B,WAAW,EAAE,CAAC;MACd30B,IAAI,EAAEzH;IADQ,CAAD,CAZD;IAcZ6V,WAAW,EAAE,CAAC;MACdpO,IAAI,EAAEzH;IADQ,CAAD,CAdD;IAgBZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAhBL;IAkBZugB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAEzH;IADY,CAAD,CAlBL;IAoBZke,gBAAgB,EAAE,CAAC;MACnBzW,IAAI,EAAEzH;IADa,CAAD,CApBN;IAsBZoe,WAAW,EAAE,CAAC;MACd3W,IAAI,EAAEzH;IADQ,CAAD,CAtBD;IAwBZy0B,UAAU,EAAE,CAAC;MACbhtB,IAAI,EAAEzH;IADO,CAAD,CAxBA;IA0BZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CA1BE;IA4BZwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CA5BI;IA8BZ+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CA9BE;IAgCZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD;EAhCA,CA/C5B;AAAA;;IAmFMo9B,iB;;;;;EACF,6BAAc;IAAA;;IAAA;;IACV,+BAASz5B,SAAT;IACA;;IACA,QAAKsnB,MAAL,GAAc,KAAd;IACA,QAAK2B,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAKirB,WAAL,GAAmB,QAAnB;IACA,QAAKja,aAAL,GAAqB,IAArB;IACA,QAAKka,KAAL,GAAa,IAAb;IACA,QAAKC,KAAL,GAAa,IAAb;IACA,QAAKW,cAAL,GAAsB,IAAtB;IACA,QAAKC,cAAL,GAAsB,IAAtB;IACA,QAAKL,YAAL,GAAoB,KAApB;IACA,QAAK6C,UAAL,GAAkB,IAAlB;IACA,QAAK2H,WAAL,GAAmB,SAAnB;IACA,QAAKvmB,WAAL,GAAmB,CAAnB;IACA,QAAKmI,eAAL,GAAuB,KAAvB;IACA,QAAKxc,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,QAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA;;IACA,QAAKsV,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA;;IACA,QAAKmX,WAAL,GAAmB,CAAnB;IACA;;IACA,QAAKC,UAAL,GAAkB,CAAlB;IAxBU;EAyBb;;;;WACD,iBAAQ/b,KAAR,EAAeH,IAAf,EAAqB;MACjB,OAAOA,IAAI,CAACnB,IAAZ;IACH;;;WACD,kBAAS;MACL;;MACA,KAAK0E,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC2B,cAAc,EAAE,KAAKA;MAXW,CAAD,CAAnC;MAaA,KAAK1C,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,KAAKyH,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,KAAKC,YAAL,GAAoB,KAAKC,eAAL,EAApB;MACA,KAAKsL,SAAL;MACA,KAAKnL,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAK3c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,gBAAqD,KAAKzX,MAAL,CAAY,CAAZ,CAArD;IACH;;;WACD,qBAAY;MACR,IAAI7H,MAAM,GAAG,EAAb;;MACA,IAAI,KAAK6F,UAAL,KAAoBpG,SAAS,CAACqG,OAAlC,EAA2C;QACvC9F,MAAM,GAAG,KAAKskB,YAAd;MACH,CAFD,MAGK;QACDtkB,MAAM,GAAG,KAAKokB,OAAd;MACH;;MACD,KAAKrkB,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKC,UAAlC,EAA8C7F,MAA9C,EAAsD,KAAKyH,YAA3D,CAAd;IACH;;;WACD,qBAAY;MACR,KAAKgF,MAAL,GAAc,KAAKmQ,SAAL,CAAe,KAAKF,OAApB,EAA6B,KAAKpW,IAAL,CAAUlO,KAAvC,CAAd;MACA,KAAK8W,MAAL,GAAc,KAAKsV,SAAL,CAAe,KAAKJ,OAApB,EAA6B,KAAK9d,IAAL,CAAUzO,MAAvC,CAAd;IACH;;;WACD,mBAAUmI,MAAV,EAAkB5H,KAAlB,EAAyB;MACrB,IAAM8R,KAAK,GAAGlW,SAAS,GAClBgM,MADS,CACFA,MAAM,CAACsO,GAAP,CAAW,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAACsC,QAAF,EAAJ;MAAA,CAAZ,CADE,EAETokB,UAFS,CAEE,CAAC,CAAD,EAAIvxB,KAAJ,CAFF,EAGTiU,OAHS,CAGD,GAHC,CAAd;MAIA,OAAOnC,KAAP;IACH;;;WACD,mBAAUlK,MAAV,EAAkBnI,MAAlB,EAA0B;MACtB,IAAMqS,KAAK,GAAGtW,WAAW,GAAGoM,MAAd,CAAqBA,MAArB,EAA6BxL,KAA7B,CAAmC,CAACqD,MAAD,EAAS,CAAT,CAAnC,CAAd;MACA,OAAO,KAAKgsB,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,wCAA+B9D,OAA/B,EAAwC;MACpC,IAAMwa,QAAQ,GAAG,IAAIC,GAAJ,EAAjB;;MADoC,6CAEfza,OAFe;MAAA;;MAAA;QAEpC,0DAA8B;UAAA,IAAnB1Q,MAAmB;UAC1BkrB,QAAQ,CAACE,GAAT,CAAaprB,MAAM,CAACkM,IAApB;QACH;MAJmC;QAAA;MAAA;QAAA;MAAA;;MAKpC,OAAOgS,KAAK,CAACmN,IAAN,CAAWH,QAAX,CAAP;IACH;;;WACD,sBAAa;MACT,IAAI5gB,MAAM,GAAG,EAAb;MACA,IAAMid,MAAM,GAAG,KAAK6S,8BAAL,CAAoC,KAAK1pB,OAAzC,CAAf;MACA,IAAI3R,GAAJ;MACA,IAAIC,GAAJ;;MACA,IAAI,OAAOuoB,MAAM,CAAC,CAAD,CAAb,KAAqB,QAAzB,EAAmC;QAC/Bjd,MAAM,GAAGid,MAAM,CAAC3O,GAAP,CAAW,UAAAsK,GAAG;UAAA,OAAIA,GAAG,CAACrT,QAAJ,EAAJ;QAAA,CAAd,CAAT;MACH,CAFD,MAGK,IAAI,OAAO0X,MAAM,CAAC,CAAD,CAAb,KAAqB,QAAzB,EAAmC;QACpC,IAAMuE,YAAY,GAAGvE,MAAM,CAAC3O,GAAP,CAAW,UAAAyM,CAAC;UAAA,OAAI1F,MAAM,CAAC0F,CAAD,CAAV;QAAA,CAAZ,CAArB;QACAtmB,GAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQghB,YAAR,EAAV;QACA9sB,GAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQghB,YAAR,EAAV;QACAxhB,MAAM,GAAG,CAACvL,GAAD,EAAMC,GAAN,CAAT;MACH,CALI,MAMA;QACD,IAAM8sB,aAAY,GAAGvE,MAAM,CAAC3O,GAAP,CAAW,UAAAyM,CAAC;UAAA,OAAI1F,MAAM,CAAC,IAAItf,IAAJ,CAASglB,CAAT,CAAD,CAAV;QAAA,CAAZ,CAArB;;QACAtmB,GAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQghB,aAAR,EAAV;QACA9sB,GAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQghB,aAAR,EAAV;QACAxhB,MAAM,GAAG,CAAC,IAAIjK,IAAJ,CAAStB,GAAT,CAAD,EAAgB,IAAIsB,IAAJ,CAASrB,GAAT,CAAhB,CAAT;MACH;;MACD,OAAOsL,MAAP;IACH;;;WACD,sBAAa;MACT,IAAMA,MAAM,GAAG,EAAf;;MADS,6CAEa,KAAKoG,OAFlB;MAAA;;MAAA;QAET,0DAAoC;UAAA,IAAzBA,OAAyB;;UAAA,6CAChBA,OAAO,CAACO,MADQ;UAAA;;UAAA;YAChC,0DAAgC;cAAA,IAArB1D,CAAqB;;cAC5B,IAAIjD,MAAM,CAACtD,OAAP,CAAeuG,CAAC,CAAC9L,KAAjB,IAA0B,CAA9B,EAAiC;gBAC7B6I,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAAC9L,KAAd;cACH;YACJ;UAL+B;YAAA;UAAA;YAAA;UAAA;QAMnC;MARQ;QAAA;MAAA;QAAA;MAAA;;MAST,IAAM8lB,MAAM,aAAOjd,MAAP,CAAZ;MACA,IAAMwhB,YAAY,GAAGvE,MAAM,CAAC3O,GAAP,CAAW,UAAAyM,CAAC;QAAA,OAAI1F,MAAM,CAAC0F,CAAD,CAAV;MAAA,CAAZ,CAArB;MACA,IAAMtmB,GAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQghB,YAAR,EAAhB;MACA,IAAM9sB,GAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQghB,YAAR,EAAhB;MACA,OAAO,CAAC/sB,GAAD,EAAMC,GAAN,CAAP;IACH;;;WACD,2BAAkB;MACd,OAAO,KAAK0R,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,iBAAOA,CAAC,CAACrB,IAAT;MAAA,CAAlB,CAAP;IACH;;;WACD,kCAA4B;MAAA,IAATxJ,KAAS,UAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,iBAAQI,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,oBAAWA,IAAX,EAAiB;MACb,KAAKnB,QAAL,CAAcI,IAAd,CAAmBe,IAAnB;IACH;;;WACD,sBAAaA,IAAb,EAAmB;MACf,KAAKlB,UAAL,CAAgBG,IAAhB,CAAqBe,IAArB;IACH;;;WACD,4BAAmB;MACf,IAAMqtB,UAAU,GAAG;QACf1rB,SAAS,EAAE,KAAKwB,UADD;QAEf9F,MAAM,EAAE,KAAKA,MAFE;QAGfC,MAAM,EAAE,EAHO;QAIfpG,QAAQ,EAAE,KAAKwlB,cAJA;QAKf7jB,KAAK,EAAE,KAAK6nB;MALG,CAAnB;;MAOA,IAAI,KAAKvd,UAAL,KAAoBpG,SAAS,CAACqG,OAAlC,EAA2C;QACvCiqB,UAAU,CAAC/vB,MAAX,GAAoB,KAAK0c,OAAzB;QACAqT,UAAU,CAAChwB,MAAX,GAAoB,KAAKA,MAAzB;MACH,CAHD,MAIK;QACDgwB,UAAU,CAAC/vB,MAAX,GAAoB,KAAKokB,OAAzB;QACA2L,UAAU,CAAChwB,MAAX,GAAoB,KAAKA,MAAL,CAAYmK,KAAhC;MACH;;MACD,OAAO6lB,UAAP;IACH;;;;EA/J2BrqB,kB;;AAiKhCkqB,iBAAiB,CAACl1B,IAAlB;EAAA;EAAA;IAAA,4EAntX0G9I,EAmtX1G,uBAA8Gg+B,iBAA9G,SAA8GA,iBAA9G;EAAA;AAAA;;AACAA,iBAAiB,CAAC/0B,IAAlB,kBAptX0GjJ,EAotX1G;EAAA,MAAkGg+B,iBAAlG;EAAA;EAAA;IAAA;MAptX0Gh+B,EAotX1G;IAAA;;IAAA;MAAA;;MAptX0GA,EAotX1G,qBAptX0GA,EAotX1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAptX0GA,EAotX1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAptX0GA,EAqtXtG,yCADJ;MAptX0GA,EA0tXpG;QAAA,OAAoB,mBAApB;MAAA;QAAA,OACuB,sBADvB;MAAA;QAAA,OAEyB,wBAFzB;MAAA,EANN;MAptX0GA,EA8tXpG,iBAVN;MAptX0GA,EA8tXpG,qCAVN;MAptX0GA,EAsuXhG;QAAA,OAAqB,6BAArB;MAAA,EAlBV;MAptX0GA,EA+tXlG,eAXR;MAptX0GA,EAwuXlG,0BApBR;MAptX0GA,EA+uXhG;QAAA,OAAqB,4BAArB;MAAA,EA3BV;MAptX0GA,EAwuXlG,iBApBR;MAptX0GA,EAkvXpG,uBA9BN;MAptX0GA,EAmvXlG,kEA/BR;MAptX0GA,EAuwXpG,iBAnDN;IAAA;;IAAA;MAptX0GA,EAstXpG,oBAttXoGA,EAstXpG,8IAFN;MAptX0GA,EA8tX7F,aAVb;MAptX0GA,EA8tX7F,wCAVb;MAptX0GA,EAiuXhG,aAbV;MAptX0GA,EAiuXhG,qJAbV;MAptX0GA,EA0uXhG,aAtBV;MAptX0GA,EA0uXhG,qJAtBV;MAptX0GA,EAkvX7F,aA9Bb;MAptX0GA,EAkvX7F,wCA9Bb;MAptX0GA,EAmvXxE,aA/BlC;MAptX0GA,EAmvXxE,gEA/BlC;IAAA;EAAA;EAAA,eAqD+yDyR,cArD/yD,EAqDohEyI,cArDphE,EAqD2yE+C,cArD3yE,EAqDsmFyf,kBArDtmF,EAqDg7F17B,EAAE,CAACwQ,OArDn7F;EAAA;EAAA;EAAA;AAAA;;AAsDA;EAAA,mDA1wX0GxR,EA0wX1G,mBAA2Fg+B,iBAA3F,EAA0H,CAAC;IAC/Gl2B,IAAI,EAAE5H,SADyG;IAE/G2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,sBAAZ;MAAoCC,QAAQ,80DAA5C;MAqDdyF,eAAe,EAAErO,uBAAuB,CAACsO,MArD3B;MAqDmCzF,aAAa,EAAEpJ,iBAAiB,CAACqJ,IArDpE;MAqD0EC,MAAM,EAAE,CAAC,yvDAAD;IArDlF,CAAD;EAFyG,CAAD,CAA1H,QAwD4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAFJ;IAIZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAJD;IAMZ+9B,mBAAmB,EAAE,CAAC;MACtBt2B,IAAI,EAAEzH;IADgB,CAAD,CANT;IAQZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CARH;IAUZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CAVK;IAYZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CAZK;IAcZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAdJ;IAgBZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAhBJ;IAkBZ4xB,YAAY,EAAE,CAAC;MACfnqB,IAAI,EAAEzH;IADS,CAAD,CAlBF;IAoBZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CApBA;IAsBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CAtBA;IAwBZy0B,UAAU,EAAE,CAAC;MACbhtB,IAAI,EAAEzH;IADO,CAAD,CAxBA;IA0BZo8B,WAAW,EAAE,CAAC;MACd30B,IAAI,EAAEzH;IADQ,CAAD,CA1BD;IA4BZ6V,WAAW,EAAE,CAAC;MACdpO,IAAI,EAAEzH;IADQ,CAAD,CA5BD;IA8BZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CA9BL;IAgCZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CAhCE;IAkCZwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CAlCI;IAoCZ+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CApCE;IAsCZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAtCA;IAwCZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD,EAAoB;QAAE0mB,MAAM,EAAE;MAAV,CAApB;IAFY,CAAD;EAxCL,CAxD5B;AAAA;;IAqGM8T,c;;;;AAENA,cAAc,CAACv1B,IAAf;EAAA,iBAA2Gu1B,cAA3G;AAAA;;AACAA,cAAc,CAAC7gB,IAAf,kBAl3X0Gxd,EAk3X1G;EAAA,MAA4Gq+B;AAA5G;AACAA,cAAc,CAAC5gB,IAAf,kBAn3X0Gzd,EAm3X1G;EAAA,UAAsI,CAAC+sB,iBAAD,CAAtI;AAAA;;AACA;EAAA,mDAp3X0G/sB,EAo3X1G,mBAA2Fq+B,cAA3F,EAAuH,CAAC;IAC5Gv2B,IAAI,EAAEhH,QADsG;IAE5G+C,IAAI,EAAE,CAAC;MACC6Z,OAAO,EAAE,CAACqP,iBAAD,CADV;MAECpP,YAAY,EAAE,CAACqgB,iBAAD,EAAoBtB,kBAApB,EAAwCtC,YAAxC,CAFf;MAGCxc,OAAO,EAAE,CAACogB,iBAAD,EAAoBtB,kBAApB,EAAwCtC,YAAxC;IAHV,CAAD;EAFsG,CAAD,CAAvH;AAAA;;AASA,SAASkE,SAAT,CAAmBjT,MAAnB,EAA2B5Y,SAA3B,EAAsCqZ,SAAtC,EAAiDyS,MAAjD,EAAyDC,MAAzD,EAAiE;EAC7D,IAAIpwB,MAAM,GAAG,EAAb;;EACA,IAAIqE,SAAS,KAAK5E,SAAS,CAAC6E,MAA5B,EAAoC;IAChC2Y,MAAM,GAAGA,MAAM,CAAC3O,GAAP,CAAW,UAAAyM,CAAC;MAAA,OAAI1F,MAAM,CAAC0F,CAAD,CAAV;IAAA,CAAZ,CAAT;;IACA,IAAI,CAAC2C,SAAL,EAAgB;MACZT,MAAM,CAAC3f,IAAP,CAAY,CAAZ;IACH;EACJ;;EACD,IAAI+G,SAAS,KAAK5E,SAAS,CAAC2V,IAAxB,IAAgC/Q,SAAS,KAAK5E,SAAS,CAAC6E,MAA5D,EAAoE;IAChE,IAAM7P,KAAG,GAAG07B,MAAM,IAAIA,MAAM,KAAK,CAArB,GAAyBA,MAAzB,GAAkC3vB,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAAlD;;IACA,IAAMvoB,KAAG,GAAG07B,MAAM,GAAGA,MAAH,GAAY5vB,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAAlC;;IACAjd,MAAM,GAAG,CAACvL,KAAD,EAAMC,KAAN,CAAT;EACH,CAJD,MAKK;IACDsL,MAAM,GAAGid,MAAT;EACH;;EACD,OAAOjd,MAAP;AACH;;AACD,SAASqwB,QAAT,CAAkBrwB,MAAlB,EAA0BxL,KAA1B,EAAiC6P,SAAjC,EAA4Cwf,YAA5C,EAA0D;EACtD,QAAQxf,SAAR;IACI,KAAK5E,SAAS,CAAC2V,IAAf;MACI,OAAOzhB,SAAS,GAAGa,KAAZ,CAAkBA,KAAlB,EAAyBwL,MAAzB,CAAgCA,MAAhC,CAAP;;IACJ,KAAKP,SAAS,CAAC6E,MAAf;MAAuB;QACnB,IAAM4F,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoBA,KAApB,EAA2BwL,MAA3B,CAAkCA,MAAlC,CAAd;;QACA,IAAI6jB,YAAJ,EAAkB;UACd,OAAO3Z,KAAK,CAACmb,IAAN,EAAP;QACH;;QACD,OAAOnb,KAAP;MACH;;IACD,KAAKzK,SAAS,CAACqG,OAAf;MACI,OAAOjS,UAAU,GACZW,KADE,CACI,CAACA,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CADJ,EAEFwL,MAFE,CAEKA,MAAM,CAACsO,GAAP,CAAW,UAAAtB,CAAC;QAAA,OAAIA,CAAC,CAACzH,QAAF,EAAJ;MAAA,CAAZ,CAFL,CAAP;;IAGJ;MACI,OAAOxN,SAAP;EAfR;AAiBH;;IAEKu4B,qB;EACF,+BAAY92B,UAAZ,EAAwB;IAAA;;IACpB,KAAKA,UAAL,GAAkBA,UAAlB;IACA,KAAKyW,eAAL,GAAuB,KAAvB;IACA,KAAKxc,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,KAAKiiB,cAAL,GAAsBpd,cAAtB;IACA,KAAKqd,UAAL,GAAkBhF,UAAlB;IACA,KAAKiF,KAAL,GAAa,KAAb;EACH;;;;WACD,oBAAW;MACP,IAAI5hB,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKkb,KAAL,GAAa,IAAb;MACH;IACJ;;;WACD,qBAAY9U,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MACL,KAAKiuB,OAAL,GAAe,KAAKC,UAAL,EAAf;IACH;;;WACD,sBAAa;MAAA;;MACT,IAAMtb,UAAU,GAAG,KAAKxS,IAAL,CAAUd,IAA7B;MACA,OAAO,KAAKc,IAAL,CAAUiE,MAAV,CACF2H,GADE,CACE,UAACrL,CAAD,EAAIlG,CAAJ,EAAU;QACf,IAAI,OAAOkG,CAAC,CAACiF,CAAT,KAAe,WAAf,IAA8B,OAAOjF,CAAC,CAACzF,CAAT,KAAe,WAAjD,EAA8D;UAC1D,IAAM0K,CAAC,GAAGjF,CAAC,CAACiF,CAAZ;UACA,IAAM1K,CAAC,GAAGyF,CAAC,CAACzF,CAAZ;UACA,IAAMwP,CAAC,GAAG/J,CAAC,CAAC+J,CAAZ;;UACA,IAAMuI,MAAM,GAAG,OAAI,CAACkb,MAAL,CAAYzjB,CAAC,IAAI,CAAjB,CAAf;;UACA,IAAMmI,YAAY,GAAGrU,WAAW,CAACmC,CAAC,CAACrB,IAAH,CAAhC;UACA,IAAMkS,EAAE,GAAG,OAAI,CAAC4c,UAAL,KAAoBjxB,SAAS,CAAC6E,MAA9B,GAAuC,OAAI,CAACmI,MAAL,CAAY4I,MAAM,CAAC7X,CAAD,CAAlB,CAAvC,GAAgE,OAAI,CAACiP,MAAL,CAAYjP,CAAZ,CAA3E;UACA,IAAMuW,EAAE,GAAG,OAAI,CAAC4c,UAAL,KAAoBlxB,SAAS,CAAC6E,MAA9B,GAAuC,OAAI,CAAC4K,MAAL,CAAYmG,MAAM,CAACnN,CAAD,CAAlB,CAAvC,GAAgE,OAAI,CAACgH,MAAL,CAAYhH,CAAZ,CAA3E;UACA,IAAMrG,KAAK,GAAG,OAAI,CAAC9B,MAAL,CAAYsE,SAAZ,KAA0B5E,SAAS,CAAC6E,MAApC,GAA6C,OAAI,CAACvE,MAAL,CAAY6C,QAAZ,CAAqBoK,CAArB,CAA7C,GAAuE,OAAI,CAACjN,MAAL,CAAY6C,QAAZ,CAAqBsS,UAArB,CAArF;UACA,IAAM5T,QAAQ,GAAG,CAAC,OAAI,CAACwB,aAAL,CAAmBtG,MAApB,GAA6B,IAA7B,GAAoC,OAAI,CAAC8E,QAAL,CAAc;YAAEM,IAAI,EAAEsT;UAAR,CAAd,CAArD;UACA,IAAMM,OAAO,GAAGlU,QAAQ,GAAG,CAAH,GAAO,GAA/B;UACA,IAAMoB,IAAI,GAAGzL,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBpE,CAAlB,EAAqB;YAC9B0D,MAAM,EAAEuO,UADsB;YAE9BtT,IAAI,EAAEqB,CAAC,CAACrB,IAFsB;YAG9BzK,KAAK,EAAE8L,CAAC,CAACiF,CAHqB;YAI9B1K,CAAC,EAAEyF,CAAC,CAACzF,CAJyB;YAK9B+X,MAAM,EAAEtS,CAAC,CAAC+J;UALoB,CAArB,CAAb;UAOA,OAAO;YACHtK,IAAI,EAAJA,IADG;YAEHlF,CAAC,EAADA,CAFG;YAGH0K,CAAC,EAADA,CAHG;YAIH8E,CAAC,EAADA,CAJG;YAKH2G,UAAU,EAAE,uBAAgB5W,CAAhB,EALT;YAMH5F,KAAK,EAAE+Q,CANJ;YAOHnH,KAAK,EAAEvD,CAPJ;YAQHsW,EAAE,EAAFA,EARG;YASHC,EAAE,EAAFA,EATG;YAUHwB,MAAM,EAANA,MAVG;YAWHJ,YAAY,EAAZA,YAXG;YAYHtT,KAAK,EAALA,KAZG;YAaH2T,OAAO,EAAPA,OAbG;YAcHN,UAAU,EAAVA,UAdG;YAeH5T,QAAQ,EAARA,QAfG;YAgBH0G,SAAS,sBAAe8L,EAAf,cAAqBC,EAArB;UAhBN,CAAP;QAkBH;MACJ,CAvCM,EAwCFiJ,MAxCE,CAwCK,UAAAnI,MAAM;QAAA,OAAIA,MAAM,KAAK9c,SAAf;MAAA,CAxCX,CAAP;IAyCH;;;WACD,wBAAe8c,MAAf,EAAuB;MACnB,IAAM+b,SAAS,GAAG,OAAO/b,MAAM,CAAC7H,CAAd,KAAoB,WAAtC;MACA,IAAM6jB,eAAe,GAAGhc,MAAM,CAACM,YAAP,IAAuBN,MAAM,CAACM,YAAP,CAAoB3Y,MAAnE;MACA,IAAMs0B,aAAa,GAAGjc,MAAM,CAACK,UAAP,IAAqBL,MAAM,CAACK,UAAP,CAAkB1Y,MAA7D;MACA,IAAMu0B,WAAW,GAAGH,SAAS,GAAG9vB,WAAW,CAAC+T,MAAM,CAAC7H,CAAR,CAAd,GAA2B,EAAxD;MACA,IAAM4Y,UAAU,GAAG,KAAKA,UAAL,IAAmB,KAAKA,UAAL,KAAoB,EAAvC,aAA+C,KAAKA,UAApD,SAAoE,EAAvF;MACA,IAAMC,UAAU,GAAG,KAAKA,UAAL,IAAmB,KAAKA,UAAL,KAAoB,EAAvC,aAA+C,KAAKA,UAApD,SAAoE,EAAvF;MACA,IAAMroB,CAAC,GAAGsD,WAAW,CAAC+T,MAAM,CAACrX,CAAR,CAArB;MACA,IAAM0K,CAAC,GAAGpH,WAAW,CAAC+T,MAAM,CAAC3M,CAAR,CAArB;MACA,IAAMtG,IAAI,GAAGkvB,aAAa,IAAID,eAAjB,aACJhc,MAAM,CAACK,UADH,qBACmBL,MAAM,CAACM,YAD1B,IAEPN,MAAM,CAACK,UAAP,GAAoBL,MAAM,CAACM,YAFjC;MAGA,IAAM5C,YAAY,GAAGue,aAAa,IAAID,eAAjB,2CAAkE3vB,WAAW,CAACU,IAAD,CAA7E,eAA+F,EAApH;MACA,yBACA2Q,YADA,oEAGSrR,WAAW,CAAC0kB,UAAD,CAHpB,sBAG4C1kB,WAAW,CAAC1D,CAAD,CAHvD,oCAIS0D,WAAW,CAAC2kB,UAAD,CAJpB,sBAI4C3kB,WAAW,CAACgH,CAAD,CAJvD,0EAOEhH,WAAW,CAAC6vB,WAAD,CAPb;IAUH;;;WACD,iBAAQruB,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,kBAASG,KAAT,EAAgB;MACZ,IAAI,CAAC,KAAKC,aAAV,EACI,OAAO,KAAP;MACJ,IAAMC,IAAI,GAAG,KAAKD,aAAL,CAAmBE,IAAnB,CAAwB,UAAAC,CAAC,EAAI;QACtC,OAAOJ,KAAK,CAACjB,IAAN,KAAeqB,CAAC,CAACrB,IAAxB;MACH,CAFY,CAAb;MAGA,OAAOmB,IAAI,KAAKhL,SAAhB;IACH;;;WACD,mBAAU8c,MAAV,EAAkB;MACd,IAAI,KAAK/R,aAAL,CAAmBtG,MAAnB,GAA4B,CAAhC,EAAmC;QAC/B,OAAO,KAAK8E,QAAL,CAAc;UAAEM,IAAI,EAAEiT,MAAM,CAACK;QAAf,CAAd,CAAP;MACH;;MACD,OAAOL,MAAM,CAACW,OAAP,KAAmB,CAA1B;IACH;;;WACD,wBAAeX,MAAf,EAAuB;MACnBA,MAAM,CAACP,UAAP,GAAoB,IAApB;MACA,KAAK/S,QAAL,CAAcI,IAAd,CAAmB;QAAEC,IAAI,EAAE,KAAKc,IAAL,CAAUd;MAAlB,CAAnB;IACH;;;WACD,0BAAiBiT,MAAjB,EAAyB;MACrBA,MAAM,CAACP,UAAP,GAAoB,KAApB;MACA,KAAK9S,UAAL,CAAgBG,IAAhB,CAAqB;QAAEC,IAAI,EAAE,KAAKc,IAAL,CAAUd;MAAlB,CAArB;IACH;;;WACD,iBAAQsB,KAAR,EAAe2R,MAAf,EAAuB;MACnB,iBAAUA,MAAM,CAACnS,IAAP,CAAYiE,MAAtB,cAAgCkO,MAAM,CAACnS,IAAP,CAAYd,IAA5C;IACH;;;;;;AAEL0uB,qBAAqB,CAAC51B,IAAtB;EAAA,iBAAkH41B,qBAAlH,EA1hY0G1+B,EA0hY1G,mBAAyJC,WAAzJ;AAAA;;AACAy+B,qBAAqB,CAACz1B,IAAtB,kBA3hY0GjJ,EA2hY1G;EAAA,MAAsG0+B,qBAAtG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WA3hY0G1+B,EA2hY1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA3hY0GA,EA4hYtG,qEADJ;IAAA;;IAAA;MA3hY0GA,EA4hY5E,gEAD9B;IAAA;EAAA;EAAA,eAsD0C8hB,eAtD1C,EAsDyQ9gB,EAAE,CAACwQ,OAtD5Q,EAsDmXxQ,EAAE,CAACkI,IAtDtX,EAsDoc6U,gBAtDpc;EAAA;EAAA;IAAA,WAsDs4B,CAC93Btc,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACFiiB,OAAO,EAAE,CADP;MAEFxN,SAAS,EAAE;IAFT,CAAD,CADY,EAKjBxU,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MAAEiiB,OAAO,EAAE,CAAX;MAAcxN,SAAS,EAAE;IAAzB,CAAD,CAAX,CALU,CAAX,CADY,CAAnB,CADu3B;EAtDt4B;EAAA;AAAA;;AAiEA;EAAA,mDA5lY0GpW,EA4lY1G,mBAA2F0+B,qBAA3F,EAA8H,CAAC;IACnH52B,IAAI,EAAE5H,SAD6G;IAEnH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,6BADX;MAECC,QAAQ,0gEAFT;MAyDCyF,eAAe,EAAErO,uBAAuB,CAACsO,MAzD1C;MA0DC2C,UAAU,EAAE,CACRlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;QACFiiB,OAAO,EAAE,CADP;QAEFxN,SAAS,EAAE;MAFT,CAAD,CADY,EAKjBxU,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QAAEiiB,OAAO,EAAE,CAAX;QAAcxN,SAAS,EAAE;MAAzB,CAAD,CAAX,CALU,CAAX,CADY,CAAnB,CADC;IA1Db,CAAD;EAF6G,CAAD,CAA9H,EAwE4B,YAAY;IAAE,OAAO,CAAC;MAAEtO,IAAI,EAAE3B,SAAR;MAAmBuD,UAAU,EAAE,CAAC;QAC9D5B,IAAI,EAAE1H,MADwD;QAE9DyD,IAAI,EAAE,CAAC5D,WAAD;MAFwD,CAAD;IAA/B,CAAD,CAAP;EAGlB,CA3ExB,EA2E0C;IAAE6Q,IAAI,EAAE,CAAC;MACnChJ,IAAI,EAAEzH;IAD6B,CAAD,CAAR;IAE1Bwa,MAAM,EAAE,CAAC;MACT/S,IAAI,EAAEzH;IADG,CAAD,CAFkB;IAI1Bid,MAAM,EAAE,CAAC;MACTxV,IAAI,EAAEzH;IADG,CAAD,CAJkB;IAM1Bw+B,MAAM,EAAE,CAAC;MACT/2B,IAAI,EAAEzH;IADG,CAAD,CANkB;IAQ1By+B,UAAU,EAAE,CAAC;MACbh3B,IAAI,EAAEzH;IADO,CAAD,CARc;IAU1B0+B,UAAU,EAAE,CAAC;MACbj3B,IAAI,EAAEzH;IADO,CAAD,CAVc;IAY1B8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CAZkB;IAc1B+iB,YAAY,EAAE,CAAC;MACftb,IAAI,EAAEzH;IADS,CAAD,CAdY;IAgB1B6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAhBW;IAkB1B2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAlBc;IAoB1B4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CApBc;IAsB1Bge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAtBS;IAwB1BugB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAEzH;IADY,CAAD,CAxBS;IA0B1BwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CA1BkB;IA4B1B+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CA5BgB;IA8B1BgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD;EA9Bc,CA3E1C;AAAA;;IA6GMw+B,oB;;;;;EACF,gCAAc;IAAA;;IAAA;;IACV,+BAAS76B,SAAT;IACA,QAAKgT,aAAL,GAAqB,IAArB;IACA,QAAKsU,MAAL,GAAc,KAAd;IACA,QAAK2F,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAKkrB,KAAL,GAAa,IAAb;IACA,QAAKC,KAAL,GAAa,IAAb;IACA,QAAKE,cAAL,GAAsB,IAAtB;IACA,QAAKC,cAAL,GAAsB,IAAtB;IACA,QAAKC,gBAAL,GAAwB,IAAxB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,YAAL,GAAoB,KAApB;IACA,QAAKoN,SAAL,GAAiB,EAAjB;IACA,QAAKC,SAAL,GAAiB,CAAjB;IACA,QAAKrrB,UAAL,GAAkBpG,SAAS,CAACqG,OAA5B;IACA,QAAKmK,eAAL,GAAuB,KAAvB;IACA,QAAK1O,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAK8R,SAAL,GAAiB5E,SAAS,CAAC6E,MAA3B;IACA,QAAKuD,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKspB,aAAL,GAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAArB;IACA,QAAKnS,WAAL,GAAmB,CAAnB;IACA,QAAKC,UAAL,GAAkB,CAAlB;IACA,QAAKnc,aAAL,GAAqB,EAArB;IACA,QAAK4R,KAAL,GAAa,KAAb;IA1BU;EA2Bb;;;;WACD,oBAAW;MACP,IAAI5hB,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKkb,KAAL,GAAa,IAAb;MACH;IACJ;;;WACD,kBAAS;MACL;;MACA,KAAKpO,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC7Z,UAAU,EAAE,KAAKiC,UAXe;QAYhCuZ,cAAc,EAAE,KAAKA;MAZW,CAAD,CAAnC;MAcA,KAAKkF,YAAL,GAAoB,KAAKle,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAACrB,IAAN;MAAA,CAAlB,CAApB;MACA,KAAKwvB,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,KAAK3U,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,KAAKyH,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,KAAKrc,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,cAAmD,KAAKzX,MAAL,CAAY,CAAZ,CAAnD;MACA,IAAM+X,WAAW,GAAG,KAAK/Z,UAAL,KAAoBpG,SAAS,CAACqG,OAA9B,GAAwC,KAAKwe,YAA7C,GAA4D,KAAK8M,OAArF;MACA,KAAKrxB,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKC,UAAlC,EAA8C+Z,WAA9C,EAA2D,KAAKnY,YAAhE,CAAd;MACA,KAAK/E,IAAL,GAAY,KAAK0D,OAAjB;MACA,KAAK8qB,SAAL,GAAiB1wB,IAAI,CAAC9L,GAAL,CAAS,KAAKw8B,SAAd,EAAyB,CAAzB,CAAjB;MACA,KAAKD,SAAL,GAAiBzwB,IAAI,CAAC9L,GAAL,CAAS,KAAKu8B,SAAd,EAAyB,CAAzB,CAAjB;MACA,KAAKR,MAAL,GAAc,KAAKa,SAAL,CAAe,KAAKF,OAApB,EAA6B,CAAC,KAAKF,SAAN,EAAiB,KAAKD,SAAtB,CAA7B,CAAd;MACA,KAAKE,aAAL,GAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAArB;MACA,KAAKtB,SAAL;MACA,KAAKsB,aAAL,GAAqB,KAAKI,gBAAL,EAArB;MACA,KAAK1B,SAAL;MACA,KAAK/rB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAKC,UAAL,GAAkB,SAAS3R,EAAE,GAAG1N,QAAL,EAA3B;MACA,KAAKsf,QAAL,kBAAwB,KAAKD,UAA7B;IACH;;;WACD,uBAAc;MACV,KAAKa,aAAL;IACH;;;WACD,iBAAQ/iB,IAAR,EAAciE,MAAd,EAAsB;MAClB,IAAIA,MAAJ,EAAY;QACRjE,IAAI,CAACiE,MAAL,GAAcA,MAAM,CAAC/E,IAArB;MACH;;MACD,KAAKnO,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,4BAAmB;MACf,IAAI8uB,IAAI,GAAG,CAAX;MACA,IAAIC,IAAI,GAAG,CAAX;MACA,IAAIC,IAAI,GAAG,KAAKprB,IAAL,CAAUzO,MAArB;MACA,IAAI85B,IAAI,GAAG,KAAKrrB,IAAL,CAAUlO,KAArB;;MAJe,6CAKC,KAAKsK,IALN;MAAA;;MAAA;QAKf,0DAA2B;UAAA,IAAhB2F,CAAgB;;UAAA,6CACPA,CAAC,CAAC1B,MADK;UAAA;;UAAA;YACvB,0DAA0B;cAAA,IAAf1D,CAAe;cACtB,IAAM+J,CAAC,GAAG,KAAKyjB,MAAL,CAAYxtB,CAAC,CAAC+J,CAAd,CAAV;cACA,IAAM8G,EAAE,GAAG,KAAK4c,UAAL,KAAoBjxB,SAAS,CAAC6E,MAA9B,GAAuC,KAAKmI,MAAL,CAAY4I,MAAM,CAACpS,CAAC,CAACzF,CAAH,CAAlB,CAAvC,GAAkE,KAAKiP,MAAL,CAAYxJ,CAAC,CAACzF,CAAd,CAA7E;cACA,IAAMuW,EAAE,GAAG,KAAK4c,UAAL,KAAoBlxB,SAAS,CAAC6E,MAA9B,GAAuC,KAAK4K,MAAL,CAAYmG,MAAM,CAACpS,CAAC,CAACiF,CAAH,CAAlB,CAAvC,GAAkE,KAAKgH,MAAL,CAAYjM,CAAC,CAACiF,CAAd,CAA7E;cACAupB,IAAI,GAAGjxB,IAAI,CAAC9L,GAAL,CAASsY,CAAC,GAAG8G,EAAb,EAAiB2d,IAAjB,CAAP;cACAD,IAAI,GAAGhxB,IAAI,CAAC9L,GAAL,CAASsY,CAAC,GAAG+G,EAAb,EAAiByd,IAAjB,CAAP;cACAE,IAAI,GAAGlxB,IAAI,CAAC9L,GAAL,CAASqf,EAAE,GAAG/G,CAAd,EAAiB0kB,IAAjB,CAAP;cACAC,IAAI,GAAGnxB,IAAI,CAAC9L,GAAL,CAASof,EAAE,GAAG9G,CAAd,EAAiB2kB,IAAjB,CAAP;YACH;UATsB;YAAA;UAAA;YAAA;UAAA;QAU1B;MAfc;QAAA;MAAA;QAAA;MAAA;;MAgBfA,IAAI,GAAGnxB,IAAI,CAAC9L,GAAL,CAASi9B,IAAI,GAAG,KAAKrrB,IAAL,CAAUlO,KAA1B,EAAiC,CAAjC,CAAP;MACAs5B,IAAI,GAAGlxB,IAAI,CAAC9L,GAAL,CAASg9B,IAAI,GAAG,KAAKprB,IAAL,CAAUzO,MAA1B,EAAkC,CAAlC,CAAP;MACA,OAAO,CAAC25B,IAAD,EAAOG,IAAP,EAAaD,IAAb,EAAmBD,IAAnB,CAAP;IACH;;;WACD,qBAAY;MACR,IAAIr5B,KAAK,GAAG,KAAKkO,IAAL,CAAUlO,KAAtB;;MACA,IAAI,KAAKkpB,SAAL,KAAmBvpB,SAAnB,IAAgC,KAAKwpB,SAAL,KAAmBxpB,SAAvD,EAAkE;QAC9DK,KAAK,GAAGA,KAAK,GAAG,KAAK+4B,aAAL,CAAmB,CAAnB,CAAhB;MACH;;MACD,IAAIt5B,MAAM,GAAG,KAAKyO,IAAL,CAAUzO,MAAvB;;MACA,IAAI,KAAKstB,SAAL,KAAmBptB,SAAnB,IAAgC,KAAKqtB,SAAL,KAAmBrtB,SAAvD,EAAkE;QAC9DF,MAAM,GAAGA,MAAM,GAAG,KAAKs5B,aAAL,CAAmB,CAAnB,CAAlB;MACH;;MACD,KAAK1kB,MAAL,GAAc,KAAKmQ,SAAL,CAAe,KAAKF,OAApB,EAA6BtkB,KAA7B,CAAd;MACA,KAAK8W,MAAL,GAAc,KAAKsV,SAAL,CAAe,KAAKJ,OAApB,EAA6BvsB,MAA7B,CAAd;IACH;;;WACD,mBAAUmI,MAAV,EAAkBnI,MAAlB,EAA0B;MACtB,OAAOw4B,QAAQ,CAACrwB,MAAD,EAAS,CAACnI,MAAD,EAAS,KAAKs5B,aAAL,CAAmB,CAAnB,CAAT,CAAT,EAA0C,KAAKR,UAA/C,EAA2D,KAAK9M,YAAhE,CAAf;IACH;;;WACD,mBAAU7jB,MAAV,EAAkB5H,KAAlB,EAAyB;MACrB,OAAOi4B,QAAQ,CAACrwB,MAAD,EAAS,CAAC,KAAKmxB,aAAL,CAAmB,CAAnB,CAAD,EAAwB/4B,KAAxB,CAAT,EAAyC,KAAKs4B,UAA9C,EAA0D,KAAK7M,YAA/D,CAAf;IACH;;;WACD,mBAAU7jB,MAAV,EAAkBxL,KAAlB,EAAyB;MACrB,IAAM0V,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoBA,KAApB,EAA2BwL,MAA3B,CAAkCA,MAAlC,CAAd;MACA,OAAO,KAAK6jB,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,4BAAmB;MACf,IAAMwb,IAAI,GAAG;QACTrhB,SAAS,EAAE,KAAKwB,UADP;QAET9F,MAAM,EAAEhI,SAFC;QAGTiI,MAAM,EAAE,EAHC;QAITpG,QAAQ,EAAE,KAAKwlB,cAJN;QAKT7jB,KAAK,EAAExD;MALE,CAAb;;MAOA,IAAI2tB,IAAI,CAACrhB,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QACtC4f,IAAI,CAAC1lB,MAAL,GAAc,KAAKskB,YAAnB;QACAoB,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAnB;QACA2lB,IAAI,CAACnqB,KAAL,GAAa,KAAK6nB,WAAlB;MACH,CAJD,MAKK;QACDsC,IAAI,CAAC1lB,MAAL,GAAc,KAAKoxB,OAAnB;QACA1L,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAL,CAAYmK,KAA1B;MACH;;MACD,OAAOwb,IAAP;IACH;;;WACD,sBAAa;MACT,IAAMzI,MAAM,GAAG,EAAf;;MADS,6CAEa,KAAK7W,OAFlB;MAAA;;MAAA;QAET,0DAAoC;UAAA,IAAzBA,OAAyB;;UAAA,6CAChBA,OAAO,CAACO,MADQ;UAAA;;UAAA;YAChC,0DAAgC;cAAA,IAArB1D,CAAqB;;cAC5B,IAAI,CAACga,MAAM,CAACC,QAAP,CAAgBja,CAAC,CAACzF,CAAlB,CAAL,EAA2B;gBACvByf,MAAM,CAAC3f,IAAP,CAAY2F,CAAC,CAACzF,CAAd;cACH;YACJ;UAL+B;YAAA;UAAA;YAAA;UAAA;QAMnC;MARQ;QAAA;MAAA;QAAA;MAAA;;MAST,KAAKkzB,UAAL,GAAkB1P,YAAY,CAAC/D,MAAD,CAA9B;MACA,OAAOiT,SAAS,CAACjT,MAAD,EAAS,KAAKyT,UAAd,EAA0B,KAAKhT,SAA/B,EAA0C,KAAK4D,SAA/C,EAA0D,KAAKC,SAA/D,CAAhB;IACH;;;WACD,sBAAa;MACT,IAAMtE,MAAM,GAAG,EAAf;;MADS,6CAEa,KAAK7W,OAFlB;MAAA;;MAAA;QAET,0DAAoC;UAAA,IAAzBA,OAAyB;;UAAA,6CAChBA,OAAO,CAACO,MADQ;UAAA;;UAAA;YAChC,0DAAgC;cAAA,IAArB1D,CAAqB;;cAC5B,IAAI,CAACga,MAAM,CAACC,QAAP,CAAgBja,CAAC,CAACiF,CAAlB,CAAL,EAA2B;gBACvB+U,MAAM,CAAC3f,IAAP,CAAY2F,CAAC,CAACiF,CAAd;cACH;YACJ;UAL+B;YAAA;UAAA;YAAA;UAAA;QAMnC;MARQ;QAAA;MAAA;QAAA;MAAA;;MAST,KAAKyoB,UAAL,GAAkB3P,YAAY,CAAC/D,MAAD,CAA9B;MACA,OAAOiT,SAAS,CAACjT,MAAD,EAAS,KAAK0T,UAAd,EAA0B,KAAKjT,SAA/B,EAA0C,KAAKyH,SAA/C,EAA0D,KAAKC,SAA/D,CAAhB;IACH;;;WACD,sBAAa;MACT,IAAI3wB,GAAG,GAAGm9B,QAAV;MACA,IAAIl9B,GAAG,GAAG,CAACk9B,QAAX;;MAFS,6CAGa,KAAKxrB,OAHlB;MAAA;;MAAA;QAGT,0DAAoC;UAAA,IAAzBA,OAAyB;;UAAA,6CAChBA,OAAO,CAACO,MADQ;UAAA;;UAAA;YAChC,0DAAgC;cAAA,IAArB1D,CAAqB;cAC5B,IAAM9L,KAAK,GAAGke,MAAM,CAACpS,CAAC,CAAC+J,CAAH,CAAN,IAAe,CAA7B;cACAvY,GAAG,GAAG+L,IAAI,CAAC/L,GAAL,CAASA,GAAT,EAAc0C,KAAd,CAAN;cACAzC,GAAG,GAAG8L,IAAI,CAAC9L,GAAL,CAASA,GAAT,EAAcyC,KAAd,CAAN;YACH;UAL+B;YAAA;UAAA;YAAA;UAAA;QAMnC;MATQ;QAAA;MAAA;QAAA;MAAA;;MAUT,OAAO,CAAC1C,GAAD,EAAMC,GAAN,CAAP;IACH;;;WACD,kCAA4B;MAAA,IAAT0D,KAAS,UAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,oBAAWS,IAAX,EAAiB;MACb,IAAMtG,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAvB;MACH,CAFW,CAAZ;;MAGA,IAAInF,GAAG,GAAG,CAAC,CAAX,EAAc;QACV;MACH;;MACD,KAAKqG,aAAL,IAAsBC,IAAtB,4BAA+B,KAAKD,aAApC;MACA,KAAKvB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAaC,IAAb,EAAmB;MACf,IAAMtG,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAvB;MACH,CAFW,CAAZ;MAGA,KAAKkB,aAAL,CAAmBlG,MAAnB,CAA0BH,GAA1B,EAA+B,CAA/B;MACA,KAAKqG,aAAL,sBAAyB,KAAKA,aAA9B;MACA,KAAKtB,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;WACD,yBAAgB;MACZ,KAAKA,aAAL,sBAAyB,KAAKA,aAA9B;;MADY,6CAEQ,KAAKA,aAFb;MAAA;;MAAA;QAEZ,0DAAwC;UAAA,IAA7BD,KAA6B;UACpC,KAAKrB,UAAL,CAAgBG,IAAhB,CAAqB;YAAExK,KAAK,EAAE0L,KAAT;YAAgB8iB,OAAO,EAAE;UAAzB,CAArB;QACH;MAJW;QAAA;MAAA;QAAA;MAAA;;MAKZ,KAAK7iB,aAAL,GAAqB,EAArB;IACH;;;WACD,iBAAQI,KAAR,EAAeH,IAAf,EAAqB;MACjB,iBAAUA,IAAI,CAACnB,IAAf;IACH;;;;EAlN8B8D,kB;;AAoNnCsrB,oBAAoB,CAACt2B,IAArB;EAAA;EAAA;IAAA,kFA75Y0G9I,EA65Y1G,uBAAiHo/B,oBAAjH,SAAiHA,oBAAjH;EAAA;AAAA;;AACAA,oBAAoB,CAACn2B,IAArB,kBA95Y0GjJ,EA85Y1G;EAAA,MAAqGo/B,oBAArG;EAAA;EAAA;IAAA;MA95Y0Gp/B,EA85Y1G;IAAA;;IAAA;MAAA;;MA95Y0GA,EA85Y1G,qBA95Y0GA,EA85Y1G;IAAA;EAAA;EAAA;IAAA;MA95Y0GA,EA85Y1G;QAAA,OAAqG,iBAArG;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WA95Y0GA,EA85Y1G;EAAA;EAAA;EAAA;EAAA;IAAA;MA95Y0GA,EA+5YtG,yCADJ;MA95Y0GA,EAq6YpG;QAAA,OAAoB,mBAApB;MAAA;QAAA,OACuB,sBADvB;MAAA;QAAA,OAEyB,wBAFzB;MAAA,EAPN;MA95Y0GA,EAy6YpG,iBAXN;MA95Y0GA,EAy6YpG,yCAXN;MA95Y0GA,EA26YhG,qBAbV;MA95Y0GA,EAg7YlG,iBAlBR;MA95Y0GA,EAk7YpG,0BApBN;MA95Y0GA,EAm7YlG,qEArBR;MA95Y0GA,EAk8YlG,oEApCR;MA95Y0GA,EAg9YlG,6BAlDR;MA95Y0GA,EAu9YhG;QAAA,OAAc,mBAAd;MAAA,EAzDV;MA95Y0GA,EAg9YlG,eAlDR;MA95Y0GA,EAy9YlG,oEA3DR;MA95Y0GA,EA++YlG,oEAjFR;MA95Y0GA,EAqgZpG,iBAvGN;IAAA;;IAAA;MA95Y0GA,EAg6YpG,oBAh6YoGA,EAg6YpG,kLAFN;MA95Y0GA,EA06YpF,aAZtB;MA95Y0GA,EA06YpF,kCAZtB;MA95Y0GA,EA46Y9F,aAdZ;MA95Y0GA,EA46Y9F,4GAdZ;MA95Y0GA,EAk7Y7F,aApBb;MA95Y0GA,EAk7Y7F,wCApBb;MA95Y0GA,EAq7Y/F,aAvBX;MA95Y0GA,EAq7Y/F,8BAvBX;MA95Y0GA,EAo8Y/F,aAtCX;MA95Y0GA,EAo8Y/F,8BAtCX;MA95Y0GA,EAo9YhG,aAtDV;MA95Y0GA,EAo9YhG,gEAtDV;MA95Y0GA,EAy9Y1F,aA3DhB;MA95Y0GA,EAy9Y1F,+BA3DhB;MA95Y0GA,EA++Y1F,aAjFhB;MA95Y0GA,EA++Y1F,8BAjFhB;IAAA;EAAA;EAAA,eAyG+yDyR,cAzG/yD,EAyGohEyI,cAzGphE,EAyG2yE+C,cAzG3yE,EAyGsmFyhB,qBAzGtmF,EAyGs6F19B,EAAE,CAACkI,IAzGz6F,EAyGu/FlI,EAAE,CAACwQ,OAzG1/F;EAAA;EAAA;EAAA;IAAA,WAyGsmG,CAC9lG/P,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACFiiB,OAAO,EAAE;IADP,CAAD,CADY,EAIjBhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MACfiiB,OAAO,EAAE;IADM,CAAD,CAAX,CAJU,CAAX,CADY,CAAnB,CADulG;EAzGtmG;EAAA;AAAA;;AAqHA;EAAA,mDAnhZ0G5jB,EAmhZ1G,mBAA2Fo/B,oBAA3F,EAA6H,CAAC;IAClHt3B,IAAI,EAAE5H,SAD4G;IAElH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,yBAAZ;MAAuCC,QAAQ,o4HAA/C;MAyGdyF,eAAe,EAAErO,uBAAuB,CAACsO,MAzG3B;MAyGmCzF,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAzGpE;MAyG0EmI,UAAU,EAAE,CACjFlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;QACFiiB,OAAO,EAAE;MADP,CAAD,CADY,EAIjBhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QACfiiB,OAAO,EAAE;MADM,CAAD,CAAX,CAJU,CAAX,CADY,CAAnB,CAD0E,CAzGtF;MAoHIna,MAAM,EAAE,CAAC,yvDAAD;IApHZ,CAAD;EAF4G,CAAD,CAA7H,QAuH4B;IAAE8N,aAAa,EAAE,CAAC;MAC9BzP,IAAI,EAAEzH;IADwB,CAAD,CAAjB;IAEZwrB,MAAM,EAAE,CAAC;MACT/jB,IAAI,EAAEzH;IADG,CAAD,CAFI;IAIZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAJD;IAMZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CANJ;IAQZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CAVK;IAYZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAZJ;IAcZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAdJ;IAgBZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CAlBA;IAoBZuxB,cAAc,EAAE,CAAC;MACjB9pB,IAAI,EAAEzH;IADW,CAAD,CApBJ;IAsBZwxB,cAAc,EAAE,CAAC;MACjB/pB,IAAI,EAAEzH;IADW,CAAD,CAtBJ;IAwBZyxB,gBAAgB,EAAE,CAAC;MACnBhqB,IAAI,EAAEzH;IADa,CAAD,CAxBN;IA0BZ0xB,kBAAkB,EAAE,CAAC;MACrBjqB,IAAI,EAAEzH;IADe,CAAD,CA1BR;IA4BZ2xB,kBAAkB,EAAE,CAAC;MACrBlqB,IAAI,EAAEzH;IADe,CAAD,CA5BR;IA8BZ6zB,mBAAmB,EAAE,CAAC;MACtBpsB,IAAI,EAAEzH;IADgB,CAAD,CA9BT;IAgCZ8zB,mBAAmB,EAAE,CAAC;MACtBrsB,IAAI,EAAEzH;IADgB,CAAD,CAhCT;IAkCZ+zB,UAAU,EAAE,CAAC;MACbtsB,IAAI,EAAEzH;IADO,CAAD,CAlCA;IAoCZg0B,UAAU,EAAE,CAAC;MACbvsB,IAAI,EAAEzH;IADO,CAAD,CApCA;IAsCZ4xB,YAAY,EAAE,CAAC;MACfnqB,IAAI,EAAEzH;IADS,CAAD,CAtCF;IAwCZg/B,SAAS,EAAE,CAAC;MACZv3B,IAAI,EAAEzH;IADM,CAAD,CAxCC;IA0CZi/B,SAAS,EAAE,CAAC;MACZx3B,IAAI,EAAEzH;IADM,CAAD,CA1CC;IA4CZyrB,SAAS,EAAE,CAAC;MACZhkB,IAAI,EAAEzH;IADM,CAAD,CA5CC;IA8CZ4T,UAAU,EAAE,CAAC;MACbnM,IAAI,EAAEzH;IADO,CAAD,CA9CA;IAgDZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAhDL;IAkDZqvB,SAAS,EAAE,CAAC;MACZ5nB,IAAI,EAAEzH;IADM,CAAD,CAlDC;IAoDZsvB,SAAS,EAAE,CAAC;MACZ7nB,IAAI,EAAEzH;IADM,CAAD,CApDC;IAsDZkzB,SAAS,EAAE,CAAC;MACZzrB,IAAI,EAAEzH;IADM,CAAD,CAtDC;IAwDZmzB,SAAS,EAAE,CAAC;MACZ1rB,IAAI,EAAEzH;IADM,CAAD,CAxDC;IA0DZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CA1DE;IA4DZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CA5DA;IA8DZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD,CA9DL;IAiEZ0wB,WAAW,EAAE,CAAC;MACdzsB,IAAI,EAAEtH,YADQ;MAEdqD,IAAI,EAAE,CAAC,YAAD;IAFQ,CAAD;EAjED,CAvH5B;AAAA;;IA6LMo8B,iB;;;;AAENA,iBAAiB,CAACn3B,IAAlB;EAAA,iBAA8Gm3B,iBAA9G;AAAA;;AACAA,iBAAiB,CAACziB,IAAlB,kBAntZ0Gxd,EAmtZ1G;EAAA,MAA+GigC;AAA/G;AACAA,iBAAiB,CAACxiB,IAAlB,kBAptZ0Gzd,EAotZ1G;EAAA,UAA4I,CAAC+sB,iBAAD,CAA5I;AAAA;;AACA;EAAA,mDArtZ0G/sB,EAqtZ1G,mBAA2FigC,iBAA3F,EAA0H,CAAC;IAC/Gn4B,IAAI,EAAEhH,QADyG;IAE/G+C,IAAI,EAAE,CAAC;MACC6Z,OAAO,EAAE,CAACqP,iBAAD,CADV;MAECpP,YAAY,EAAE,CAACyhB,oBAAD,EAAuBV,qBAAvB,CAFf;MAGC9gB,OAAO,EAAE,CAACwhB,oBAAD,EAAuBV,qBAAvB;IAHV,CAAD;EAFyG,CAAD,CAA1H;AAAA;;IASMwB,oB;EACF,8BAAYx4B,OAAZ,EAAqB;IAAA;;IACjB,KAAK4G,QAAL,GAAgB,KAAhB;IACA,KAAKqD,UAAL,GAAkB,IAAlB;IACA,KAAK9P,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,KAAKgiB,cAAL,GAAsBlB,cAAtB;IACA,KAAK/Z,OAAL,GAAeA,OAAO,CAACS,aAAvB;EACH;;;;WACD,qBAAY6F,OAAZ,EAAqB;MACjB,KAAKoI,SAAL,uBAA8B,KAAKxK,CAAnC,gBAA0C,KAAK0K,CAA/C;MACA,KAAK0O,YAAL,GAAoB,GAApB;MACA,KAAKjC,UAAL,GAAkB,SAAS1B,EAAE,GAAG1N,QAAL,EAA3B;MACA,KAAKwsB,WAAL,kBAA2B,KAAKpd,UAAhC;MACA,KAAKc,aAAL,GAAqB,KAAKC,gBAAL,EAArB;;MACA,IAAI,KAAKnS,UAAT,EAAqB;QACjB,KAAKyT,aAAL;MACH;IACJ;;;WACD,4BAAmB;MACf,OAAO,CACH;QACI7O,MAAM,EAAE,CADZ;QAEItG,KAAK,EAAE,KAAKsK,IAFhB;QAGIqJ,OAAO,EAAE,KAAKoB;MAHlB,CADG,EAMH;QACIzO,MAAM,EAAE,GADZ;QAEItG,KAAK,EAAE,KAAKsK,IAFhB;QAGIqJ,OAAO,EAAE;MAHb,CANG,CAAP;IAYH;;;WACD,yBAAgB;MACZ,IAAM6B,IAAI,GAAG5jB,MAAM,CAAC,KAAK6F,OAAN,CAAN,CAAqB7F,MAArB,CAA4B,OAA5B,CAAb;MACA4jB,IAAI,CAACC,IAAL,CAAU,SAAV,EAAqB,CAArB;MACA,KAAK0a,oBAAL;IACH;;;WACD,gCAAuB;MACnB,IAAM3a,IAAI,GAAG5jB,MAAM,CAAC,KAAK6F,OAAN,CAAN,CAAqB7F,MAArB,CAA4B,OAA5B,CAAb;MACA4jB,IAAI,CAAC/jB,UAAL,GAAkBkD,QAAlB,CAA2B,GAA3B,EAAgC8gB,IAAhC,CAAqC,SAArC,EAAgD,CAAhD;IACH;;;WACD,mBAAU;MACN,KAAK7jB,MAAL,CAAYkO,IAAZ,CAAiB,KAAKe,IAAtB;IACH;;;WACD,wBAAe;MACX,KAAKnB,QAAL,CAAcI,IAAd,CAAmB,KAAKe,IAAxB;IACH;;;WACD,wBAAe;MACX,KAAKlB,UAAL,CAAgBG,IAAhB,CAAqB,KAAKe,IAA1B;IACH;;;;;;AAELovB,oBAAoB,CAACp3B,IAArB;EAAA,iBAAiHo3B,oBAAjH,EAnxZ0GlgC,EAmxZ1G,mBAAuJA,EAAE,CAAC+I,UAA1J;AAAA;;AACAm3B,oBAAoB,CAACj3B,IAArB,kBApxZ0GjJ,EAoxZ1G;EAAA,MAAqGkgC,oBAArG;EAAA;EAAA;IAAA;MApxZ0GlgC,EAoxZ1G;QAAA,OAAqG,kBAArG;MAAA;QAAA,OAAqG,kBAArG;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WApxZ0GA,EAoxZ1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MApxZ0GA,EAqxZtG,iBADJ;MApxZ0GA,EAqxZtG,0BADJ;MApxZ0GA,EAsxZpG,0EAFN;MApxZ0GA,EA8xZpG,6BAVN;MApxZ0GA,EAoyZlG;QAAA,OAAS,aAAT;MAAA,EAhBR;MApxZ0GA,EA8xZpG,iBAVN;IAAA;;IAAA;MApxZ0GA,EAqxZ/F,wCADX;MApxZ0GA,EAsxZ7F,aAFb;MApxZ0GA,EAsxZ7F,iCAFb;MApxZ0GA,EA+xZlG,aAXR;MApxZ0GA,EA+xZlG,yGAXR;IAAA;EAAA;EAAA,eAmB0C0hB,0BAnB1C,EAmBuL1gB,EAAE,CAACkI,IAnB1L;EAAA;EAAA;AAAA;;AAoBA;EAAA,mDAxyZ0GlJ,EAwyZ1G,mBAA2FkgC,oBAA3F,EAA6H,CAAC;IAClHp4B,IAAI,EAAE5H,SAD4G;IAElH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,6BADX;MAECC,QAAQ,+hBAFT;MAsBCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAtB1C,CAAD;EAF4G,CAAD,CAA7H,EA0B4B,YAAY;IAAE,OAAO,CAAC;MAAElH,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAD,CAAP;EAAmC,CA1B7E,EA0B+F;IAAEwR,IAAI,EAAE,CAAC;MACxFzS,IAAI,EAAEzH;IADkF,CAAD,CAAR;IAE/EuL,CAAC,EAAE,CAAC;MACJ9D,IAAI,EAAEzH;IADF,CAAD,CAF4E;IAI/EiW,CAAC,EAAE,CAAC;MACJxO,IAAI,EAAEzH;IADF,CAAD,CAJ4E;IAM/EmG,KAAK,EAAE,CAAC;MACRsB,IAAI,EAAEzH;IADE,CAAD,CANwE;IAQ/E4F,MAAM,EAAE,CAAC;MACT6B,IAAI,EAAEzH;IADG,CAAD,CARuE;IAU/EyQ,IAAI,EAAE,CAAC;MACPhJ,IAAI,EAAEzH;IADC,CAAD,CAVyE;IAY/EiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CAZqE;IAc/EsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CAdmE;IAgB/EwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CAhBuE;IAkB/E+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAlBqE;IAoB/EgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CApBmE;IAsB/EsP,YAAY,EAAE,CAAC;MACfpI,IAAI,EAAEtH,YADS;MAEfqD,IAAI,EAAE,CAAC,YAAD;IAFS,CAAD,CAtBiE;IAyB/EsM,YAAY,EAAE,CAAC;MACfrI,IAAI,EAAEtH,YADS;MAEfqD,IAAI,EAAE,CAAC,YAAD;IAFS,CAAD;EAzBiE,CA1B/F;AAAA;;IAwDMw8B,uB;EACF,mCAAc;IAAA;;IACV,KAAKhiB,eAAL,GAAuB,KAAvB;IACA,KAAK1M,UAAL,GAAkB,IAAlB;IACA,KAAK9P,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,KAAKiiB,cAAL,GAAsBpd,cAAtB;IACA,KAAKqd,UAAL,GAAkBhF,UAAlB;EACH;;;;WACD,oBAAW;MACP,IAAI,CAAC,KAAKqZ,WAAV,EAAuB;QACnB,KAAKA,WAAL,GAAmB,KAAKoJ,cAAxB;MACH;IACJ;;;WACD,qBAAYtyB,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MACL,KAAK6vB,KAAL,GAAa,KAAKC,QAAL,EAAb;IACH;;;WACD,oBAAW;MAAA;;MACP,IAAMD,KAAK,GAAG,EAAd;MACA,KAAKzvB,IAAL,CAAU4L,GAAV,CAAc,UAAA+jB,GAAG,EAAI;QACjBA,GAAG,CAAC1rB,MAAJ,CAAW2H,GAAX,CAAe,UAAAgkB,IAAI,EAAI;UACnB,IAAMn7B,KAAK,GAAGm7B,IAAI,CAACn7B,KAAnB;UACAm7B,IAAI,CAAC3rB,MAAL,GAAc0rB,GAAG,CAACzwB,IAAlB;UACAuwB,KAAK,CAAC70B,IAAN,CAAW;YACP+0B,GAAG,EAAHA,GADO;YAEPC,IAAI,EAAJA,IAFO;YAGP90B,CAAC,EAAE,OAAI,CAACiP,MAAL,CAAY4lB,GAAG,CAACzwB,IAAhB,CAHI;YAIPsG,CAAC,EAAE,OAAI,CAACgH,MAAL,CAAYojB,IAAI,CAAC1wB,IAAjB,CAJI;YAKPxJ,KAAK,EAAE,OAAI,CAACqU,MAAL,CAAY/B,SAAZ,EALA;YAMP7S,MAAM,EAAE,OAAI,CAACqX,MAAL,CAAYxE,SAAZ,EAND;YAOPyB,IAAI,EAAE,OAAI,CAACpM,MAAL,CAAY6C,QAAZ,CAAqBzL,KAArB,CAPC;YAQPuL,IAAI,EAAEvL,KARC;YASP4J,KAAK,EAAED,WAAW,CAACwxB,IAAI,CAAC1wB,IAAN,CATX;YAUP+E,MAAM,EAAE0rB,GAAG,CAACzwB;UAVL,CAAX;QAYH,CAfD;MAgBH,CAjBD;MAkBA,OAAOuwB,KAAP;IACH;;;WACD,gCAAwC;MAAA,IAAvBpxB,KAAuB,UAAvBA,KAAuB;MAAA,IAAhB2B,IAAgB,UAAhBA,IAAgB;MAAA,IAAViE,MAAU,UAAVA,MAAU;MACpC,uDAC4BzF,WAAW,CAACyF,MAAD,CADvC,qBACqDzF,WAAW,CAACH,KAAD,CADhE,wDAE0B2B,IAAI,CAACzB,cAAL,EAF1B;IAIH;;;WACD,iBAAQiC,KAAR,EAAeH,IAAf,EAAqB;MACjB,OAAOA,IAAI,CAAChC,KAAZ;IACH;;;WACD,iBAAQ2B,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;;;;AAELuvB,uBAAuB,CAACv3B,IAAxB;EAAA,iBAAoHu3B,uBAApH;AAAA;;AACAA,uBAAuB,CAACp3B,IAAxB,kBAz5Z0GjJ,EAy5Z1G;EAAA,MAAwGqgC,uBAAxG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAz5Z0GrgC,EAy5Z1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAz5Z0GA,EA05ZtG,wEADJ;IAAA;;IAAA;MAz5Z0GA,EA45ZtF,8DAHpB;IAAA;EAAA;EAAA,eAuB0CkgC,oBAvB1C,EAuBiQl/B,EAAE,CAACwQ,OAvBpQ,EAuB2WuM,gBAvB3W;EAAA;EAAA;AAAA;;AAwBA;EAAA,mDAj7Z0G/d,EAi7Z1G,mBAA2FqgC,uBAA3F,EAAgI,CAAC;IACrHv4B,IAAI,EAAE5H,SAD+G;IAErH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,oCADX;MAECC,QAAQ,wyBAFT;MA0BCyF,eAAe,EAAErO,uBAAuB,CAACsO;IA1B1C,CAAD;EAF+G,CAAD,CAAhI,QA8B4B;IAAE8B,IAAI,EAAE,CAAC;MACrBhJ,IAAI,EAAEzH;IADe,CAAD,CAAR;IAEZ8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CAFI;IAIZwa,MAAM,EAAE,CAAC;MACT/S,IAAI,EAAEzH;IADG,CAAD,CAJI;IAMZid,MAAM,EAAE,CAAC;MACTxV,IAAI,EAAEzH;IADG,CAAD,CANI;IAQZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CARE;IAUZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAVL;IAYZ62B,WAAW,EAAE,CAAC;MACdpvB,IAAI,EAAEzH;IADQ,CAAD,CAZD;IAcZugB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAEzH;IADY,CAAD,CAdL;IAgBZsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CAlBI;IAoBZ+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CApBE;IAsBZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD;EAtBA,CA9B5B;AAAA;;IAwDM+/B,gB;;;;;EACF,4BAAc;IAAA;;IAAA;;IACV,+BAASp8B,SAAT;IACA,QAAKitB,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAKq6B,YAAL,GAAoB,CAApB;IACA,QAAKhP,cAAL,GAAsB,IAAtB;IACA,QAAKC,cAAL,GAAsB,IAAtB;IACA,QAAKC,gBAAL,GAAwB,IAAxB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAK3T,eAAL,GAAuB,KAAvB;IACA,QAAKnN,aAAL,GAAqB,EAArB;IACA,QAAKvB,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAKsV,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKmX,WAAL,GAAmB,CAAnB;IACA,QAAKC,UAAL,GAAkB,CAAlB;IACA,QAAK5a,SAAL,GAAiB5E,SAAS,CAAC6E,MAA3B;IAjBU;EAkBb;;;;WACD,kBAAS;MACL;;MACA,KAAKolB,WAAL;MACA,KAAKhN,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,KAAKyH,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,KAAK+F,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAKhmB,SAAL,GAAiB2c,YAAY,CAAC,KAAKoJ,WAAN,EAAmB,KAAnB,CAA7B;MACA,KAAK9jB,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC7Z,UAAU,EAAE,KAAKS,SAXe;QAYhC+a,cAAc,EAAE,KAAKA;MAZW,CAAD,CAAnC;;MAcA,IAAI,KAAK/a,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QACrC,IAAI7P,KAAG,GAAG,KAAKA,GAAf;QACA,IAAIC,KAAG,GAAG,KAAKA,GAAf;;QACA,IAAI,CAAC,KAAKD,GAAV,EAAe;UACXA,KAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,GAAK,CAAL,4BAAW,KAAK4pB,WAAhB,GAAV;QACH;;QACD,IAAI,CAAC,KAAK11B,GAAV,EAAe;UACXA,KAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQ,KAAK4pB,WAAb,EAAV;QACH;;QACD,KAAKA,WAAL,GAAmB,CAAC31B,KAAD,EAAMC,KAAN,CAAnB;MACH;;MACD,KAAK+X,MAAL,GAAc,KAAKmQ,SAAL,EAAd;MACA,KAAK1N,MAAL,GAAc,KAAKsV,SAAL,EAAd;MACA,KAAKE,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAK3c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,gBAAqD,KAAKzX,MAAL,CAAY,CAAZ,CAArD;MACA,KAAK4qB,KAAL,GAAa,KAAKC,QAAL,EAAb;IACH;;;WACD,sBAAa;MACT,IAAM1yB,MAAM,GAAG,EAAf;;MADS,6CAEW,KAAKoG,OAFhB;MAAA;;MAAA;QAET,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAC9B,IAAI,CAAC3a,MAAM,CAACkd,QAAP,CAAgBvC,KAAK,CAAC/Y,IAAtB,CAAL,EAAkC;YAC9B5B,MAAM,CAAC1C,IAAP,CAAYqd,KAAK,CAAC/Y,IAAlB;UACH;QACJ;MANQ;QAAA;MAAA;QAAA;MAAA;;MAOT,OAAO5B,MAAP;IACH;;;WACD,sBAAa;MACT,IAAMA,MAAM,GAAG,EAAf;;MADS,6CAEW,KAAKoG,OAFhB;MAAA;;MAAA;QAET,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAAA,6CACdA,KAAK,CAAChU,MADQ;UAAA;;UAAA;YAC9B,0DAA8B;cAAA,IAAnB1D,CAAmB;;cAC1B,IAAI,CAACjD,MAAM,CAACkd,QAAP,CAAgBja,CAAC,CAACrB,IAAlB,CAAL,EAA8B;gBAC1B5B,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAACrB,IAAd;cACH;YACJ;UAL6B;YAAA;UAAA;YAAA;UAAA;QAMjC;MARQ;QAAA;MAAA;QAAA;MAAA;;MAST,OAAO5B,MAAP;IACH;;;WACD,0BAAiB;MACb,IAAMA,MAAM,GAAG,EAAf;;MADa,6CAEO,KAAKoG,OAFZ;MAAA;;MAAA;QAEb,0DAAkC;UAAA,IAAvBuU,KAAuB;;UAAA,6CACdA,KAAK,CAAChU,MADQ;UAAA;;UAAA;YAC9B,0DAA8B;cAAA,IAAnB1D,CAAmB;;cAC1B,IAAI,CAACjD,MAAM,CAACkd,QAAP,CAAgBja,CAAC,CAAC9L,KAAlB,CAAL,EAA+B;gBAC3B6I,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAAC9L,KAAd;cACH;YACJ;UAL6B;YAAA;UAAA;YAAA;UAAA;QAMjC;MARY;QAAA;MAAA;QAAA;MAAA;;MASb,OAAO6I,MAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,sBAAa7I,KAAb,EAAqC;MAAA,IAAjB+L,KAAiB,uEAAT,CAAS;MAAA,IAANyvB,CAAM;MAAA,IAAHC,CAAG;;MACjC,IAAI,OAAOz7B,KAAP,KAAiB,QAArB,EAA+B;QAC3BA,KAAK,GAAGA,KAAK,CACRgK,OADG,CACK,GADL,EACU,EADV,EAEHA,OAFG,CAEK,GAFL,EAEU,EAFV,EAGHA,OAHG,CAGK,IAHL,EAGW,EAHX,EAIJ;QAJI,CAKHA,OALG,CAKK,GALL,EAKU,EALV,CAAR;;QAMA,IAAIhK,KAAK,CAAC+lB,QAAN,CAAe,GAAf,CAAJ,EAAyB;UACrB/lB,KAAK,GAAGA,KAAK,CAAC07B,KAAN,CAAY,GAAZ,CAAR;QACH;MACJ;;MACD,IAAIjf,KAAK,CAACC,OAAN,CAAc1c,KAAd,KAAwB,OAAO+L,KAAP,KAAiB,QAA7C,EAAuD;QACnD,OAAO,KAAK4vB,YAAL,CAAkB37B,KAAK,CAAC+L,KAAD,CAAvB,EAAgC,IAAhC,EAAsCyvB,CAAtC,EAAyCC,CAAzC,CAAP;MACH;;MACD,IAAI,OAAOz7B,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAAC+lB,QAAN,CAAe,GAAf,CAAjC,EAAsD;QAClD,OAAO,CAAC/lB,KAAK,CAACgK,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAD,GAA0B,GAAjC;MACH;;MACD,OAAOwxB,CAAC,IAAIC,CAAC,GAAG,CAACz7B,KAAL,GAAa,CAAjB,CAAR;IACH;;;WACD,qBAAY;MACR,IAAM47B,CAAC,GAAG,KAAKD,YAAL,CAAkB,KAAKN,YAAvB,EAAqC,CAArC,EAAwC,KAAK9V,OAAL,CAAalgB,MAArD,EAA6D,KAAK8J,IAAL,CAAUlO,KAAvE,CAAV;MACA,OAAOpE,SAAS,GAAG21B,UAAZ,CAAuB,CAAC,CAAD,EAAI,KAAKrjB,IAAL,CAAUlO,KAAd,CAAvB,EAA6C4H,MAA7C,CAAoD,KAAK0c,OAAzD,EAAkEpG,YAAlE,CAA+Eyc,CAA/E,CAAP;IACH;;;WACD,qBAAY;MACR,IAAMA,CAAC,GAAG,KAAKD,YAAL,CAAkB,KAAKN,YAAvB,EAAqC,CAArC,EAAwC,KAAKpO,OAAL,CAAa5nB,MAArD,EAA6D,KAAK8J,IAAL,CAAUzO,MAAvE,CAAV;MACA,OAAO7D,SAAS,GAAG21B,UAAZ,CAAuB,CAAC,KAAKrjB,IAAL,CAAUzO,MAAX,EAAmB,CAAnB,CAAvB,EAA8CmI,MAA9C,CAAqD,KAAKokB,OAA1D,EAAmE9N,YAAnE,CAAgFyc,CAAhF,CAAP;IACH;;;WACD,oBAAW;MAAA;;MACP,IAAMN,KAAK,GAAG,EAAd;MACA,KAAK/V,OAAL,CAAapO,GAAb,CAAiB,UAAAoM,IAAI,EAAI;QACrB,OAAI,CAAC0J,OAAL,CAAa9V,GAAb,CAAiB,UAAA0kB,IAAI,EAAI;UACrBP,KAAK,CAACn1B,IAAN,CAAW;YACPE,CAAC,EAAE,OAAI,CAACiP,MAAL,CAAYiO,IAAZ,CADI;YAEPxS,CAAC,EAAE,OAAI,CAACgH,MAAL,CAAY8jB,IAAZ,CAFI;YAGPC,EAAE,EAAE,CAHG;YAIP76B,KAAK,EAAE,OAAI,CAACqU,MAAL,CAAY/B,SAAZ,EAJA;YAKP7S,MAAM,EAAE,OAAI,CAACqX,MAAL,CAAYxE,SAAZ,EALD;YAMPyB,IAAI,EAAE;UANC,CAAX;QAQH,CATD;MAUH,CAXD;MAYA,OAAOsmB,KAAP;IACH;;;WACD,iBAAQ/vB,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,KAAK3C,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKvB,SAAlC,EAA6C,KAAK+lB,WAAlD,CAAd;IACH;;;WACD,4BAAmB;MACf,OAAO;QACH/lB,SAAS,EAAE,KAAKA,SADb;QAEHrE,MAAM,EAAE,KAAKoqB,WAFV;QAGHrqB,MAAM,EAAE,KAAKsE,SAAL,KAAmB5E,SAAS,CAACqG,OAA7B,GAAuC,KAAK/F,MAA5C,GAAqD,KAAKA,MAAL,CAAYmK,KAHtE;QAIH3O,KAAK,EAAE,KAAK8I,SAAL,KAAmB5E,SAAS,CAACqG,OAA7B,GAAuC,KAAKsd,WAA5C,GAA0DrrB,SAJ9D;QAKH6B,QAAQ,EAAE,KAAKwlB;MALZ,CAAP;IAOH;;;WACD,kCAA4B;MAAA,IAAThnB,KAAS,UAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,oBAAW+P,KAAX,EAAkBsI,KAAlB,EAA6C;MAAA,IAApBkP,UAAoB,uEAAP,KAAO;MACzC,IAAM9mB,IAAI,GAAG9L,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBgL,KAAlB,CAAb;;MACA,IAAIsI,KAAJ,EAAW;QACP5X,IAAI,CAAC4D,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,IAAMa,KAAK,GAAG,KAAK2D,OAAL,CACTkI,GADS,CACL,UAAA5H,CAAC;QAAA,OAAIA,CAAC,CAACC,MAAN;MAAA,CADI,EAETkkB,IAFS,GAGT7N,MAHS,CAGF,UAAAjgB,CAAC,EAAI;QACb,IAAI8sB,UAAJ,EAAgB;UACZ,OAAO9sB,CAAC,CAACgE,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAO7E,CAAC,CAAC6E,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwB7E,CAAC,CAAC4J,MAAF,KAAa5D,IAAI,CAAC4D,MAAjD;QACH;MACJ,CAVa,CAAd;MAWA,KAAK7D,aAAL,sBAAyBL,KAAzB;MACA,KAAKlB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAauP,KAAb,EAAoBsI,KAApB,EAA+C;MAAA,IAApBkP,UAAoB,uEAAP,KAAO;MAC3C,IAAM9mB,IAAI,GAAG9L,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBgL,KAAlB,CAAb;;MACA,IAAIsI,KAAJ,EAAW;QACP5X,IAAI,CAAC4D,MAAL,GAAcgU,KAAK,CAAC/Y,IAApB;MACH;;MACD,KAAKkB,aAAL,GAAqB,KAAKA,aAAL,CAAmBka,MAAnB,CAA0B,UAAAjgB,CAAC,EAAI;QAChD,IAAI8sB,UAAJ,EAAgB;UACZ,OAAO9sB,CAAC,CAACgE,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAO,EAAE7E,CAAC,CAAC6E,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwB7E,CAAC,CAAC4J,MAAF,KAAa5D,IAAI,CAAC4D,MAA5C,CAAP;QACH;MACJ,CAPoB,CAArB;MAQA,KAAKnF,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;;EAxM0B4C,kB;;AA0M/B6sB,gBAAgB,CAAC73B,IAAjB;EAAA;EAAA;IAAA,0EAnra0G9I,EAmra1G,uBAA6G2gC,gBAA7G,SAA6GA,gBAA7G;EAAA;AAAA;;AACAA,gBAAgB,CAAC13B,IAAjB,kBApra0GjJ,EAora1G;EAAA,MAAiG2gC,gBAAjG;EAAA;EAAA;IAAA;MApra0G3gC,EAora1G;IAAA;;IAAA;MAAA;;MApra0GA,EAora1G,qBApra0GA,EAora1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WApra0GA,EAora1G;EAAA;EAAA;EAAA;EAAA;IAAA;MApra0GA,EAqratG,yCADJ;MApra0GA,EA0rapG;QAAA,OAAoB,mBAApB;MAAA,EANN;MApra0GA,EA4rapG,iBARN;MApra0GA,EA4rapG,0BARN;MApra0GA,EA6ralG,gEATR;MApra0GA,EA2salG,gEAvBR;MApra0GA,EAwtalG,sEApCR;MApra0GA,EAiualG,0BA7CR;MApra0GA,EA4uahG;QAAA,OAAU,mBAAV;MAAA;QAAA,OACY,uBAAmB,SAAnB,CADZ;MAAA;QAAA,OAEc,yBAAqB,SAArB,CAFd;MAAA,EAxDV;MApra0GA,EAiualG,mBA7CR;IAAA;;IAAA;MApra0GA,EAsrapG,oBAtraoGA,EAsrapG,8IAFN;MApra0GA,EA4ra7F,aARb;MApra0GA,EA4ra7F,wCARb;MApra0GA,EA+ra/F,aAXX;MApra0GA,EA+ra/F,8BAXX;MApra0GA,EA6sa/F,aAzBX;MApra0GA,EA6sa/F,8BAzBX;MApra0GA,EAyta/E,aArC3B;MApra0GA,EAyta/E,iCArC3B;MApra0GA,EAmuahG,aA/CV;MApra0GA,EAmuahG,0QA/CV;IAAA;EAAA;EAAA,eA8D+yDyR,cA9D/yD,EA8DohEyI,cA9DphE,EA8D2yE+C,cA9D3yE,EA8DsmFojB,uBA9DtmF,EA8Dq3Fr/B,EAAE,CAACkI,IA9Dx3F,EA8Ds8FlI,EAAE,CAACwQ,OA9Dz8F;EAAA;EAAA;EAAA;AAAA;;AA+DA;EAAA,mDAnva0GxR,EAmva1G,mBAA2F2gC,gBAA3F,EAAyH,CAAC;IAC9G74B,IAAI,EAAE5H,SADwG;IAE9G2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,qBAAZ;MAAmCC,QAAQ,onEAA3C;MA8DdyF,eAAe,EAAErO,uBAAuB,CAACsO,MA9D3B;MA8DmCzF,aAAa,EAAEpJ,iBAAiB,CAACqJ,IA9DpE;MA8D0EC,MAAM,EAAE,CAAC,yvDAAD;IA9DlF,CAAD;EAFwG,CAAD,CAAzH,QAiE4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAFD;IAIZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAVJ;IAYZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAZJ;IAcZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAdA;IAgBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CAlBE;IAoBZugC,YAAY,EAAE,CAAC;MACf94B,IAAI,EAAEzH;IADS,CAAD,CApBF;IAsBZuxB,cAAc,EAAE,CAAC;MACjB9pB,IAAI,EAAEzH;IADW,CAAD,CAtBJ;IAwBZwxB,cAAc,EAAE,CAAC;MACjB/pB,IAAI,EAAEzH;IADW,CAAD,CAxBJ;IA0BZyxB,gBAAgB,EAAE,CAAC;MACnBhqB,IAAI,EAAEzH;IADa,CAAD,CA1BN;IA4BZ0xB,kBAAkB,EAAE,CAAC;MACrBjqB,IAAI,EAAEzH;IADe,CAAD,CA5BR;IA8BZ2xB,kBAAkB,EAAE,CAAC;MACrBlqB,IAAI,EAAEzH;IADe,CAAD,CA9BR;IAgCZ6zB,mBAAmB,EAAE,CAAC;MACtBpsB,IAAI,EAAEzH;IADgB,CAAD,CAhCT;IAkCZ8zB,mBAAmB,EAAE,CAAC;MACtBrsB,IAAI,EAAEzH;IADgB,CAAD,CAlCT;IAoCZ+zB,UAAU,EAAE,CAAC;MACbtsB,IAAI,EAAEzH;IADO,CAAD,CApCA;IAsCZg0B,UAAU,EAAE,CAAC;MACbvsB,IAAI,EAAEzH;IADO,CAAD,CAtCA;IAwCZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAxCL;IA0CZ62B,WAAW,EAAE,CAAC;MACdpvB,IAAI,EAAEzH;IADQ,CAAD,CA1CD;IA4CZwC,GAAG,EAAE,CAAC;MACNiF,IAAI,EAAEzH;IADA,CAAD,CA5CO;IA8CZyC,GAAG,EAAE,CAAC;MACNgF,IAAI,EAAEzH;IADA,CAAD,CA9CO;IAgDZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAhDH;IAkDZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAlDE;IAoDZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CApDA;IAsDZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD;EAtDL,CAjE5B;AAAA;;IA4HMy9B,a;;;;AAENA,aAAa,CAACx4B,IAAd;EAAA,iBAA0Gw4B,aAA1G;AAAA;;AACAA,aAAa,CAAC9jB,IAAd,kBAl3a0Gxd,EAk3a1G;EAAA,MAA2GshC;AAA3G;AACAA,aAAa,CAAC7jB,IAAd,kBAn3a0Gzd,EAm3a1G;EAAA,UAAoI,CAAC+sB,iBAAD,CAApI;AAAA;;AACA;EAAA,mDAp3a0G/sB,EAo3a1G,mBAA2FshC,aAA3F,EAAsH,CAAC;IAC3Gx5B,IAAI,EAAEhH,QADqG;IAE3G+C,IAAI,EAAE,CAAC;MACC6Z,OAAO,EAAE,CAACqP,iBAAD,CADV;MAECpP,YAAY,EAAE,CAACuiB,oBAAD,EAAuBG,uBAAvB,EAAgDM,gBAAhD,CAFf;MAGC/iB,OAAO,EAAE,CAACsiB,oBAAD,EAAuBG,uBAAvB,EAAgDM,gBAAhD;IAHV,CAAD;EAFqG,CAAD,CAAtH;AAAA;;IASMY,a;EACF,uBAAY75B,OAAZ,EAAqBE,UAArB,EAAiC;IAAA;;IAC7B,KAAKF,OAAL,GAAeA,OAAf;IACA,KAAKE,UAAL,GAAkBA,UAAlB;IACA,KAAK2S,IAAL,GAAY,MAAZ;IACA,KAAK5I,UAAL,GAAkB,IAAlB,CAJ6B,CAK7B;;IACA,KAAK+Y,WAAL,GAAmB,KAAnB;IACA,KAAK5H,KAAL,GAAa,KAAb;EACH;;;;WACD,oBAAW;MACP,IAAI5hB,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKkb,KAAL,GAAa,IAAb;MACH;IACJ;;;WACD,qBAAY9U,OAAZ,EAAqB;MACjB,IAAI,CAAC,KAAK0c,WAAV,EAAuB;QACnB,KAAKA,WAAL,GAAmB,IAAnB;QACA,KAAK8W,WAAL,GAAmB,KAAK7b,IAAxB;MACH,CAHD,MAIK;QACD,KAAKL,YAAL;MACH;IACJ;;;WACD,wBAAe;MACX,IAAMG,IAAI,GAAG5jB,MAAM,CAAC,KAAK6F,OAAL,CAAaS,aAAd,CAAN,CAAmCtG,MAAnC,CAA0C,OAA1C,CAAb;;MACA,IAAI,KAAK8P,UAAT,EAAqB;QACjB8T,IAAI,CAAC/jB,UAAL,GAAkBkD,QAAlB,CAA2B,GAA3B,EAAgC8gB,IAAhC,CAAqC,GAArC,EAA0C,KAAKC,IAA/C;MACH,CAFD,MAGK;QACDF,IAAI,CAACC,IAAL,CAAU,GAAV,EAAe,KAAKC,IAApB;MACH;IACJ;;;;;;AAEL4b,aAAa,CAACz4B,IAAd;EAAA,iBAA0Gy4B,aAA1G,EA/5a0GvhC,EA+5a1G,mBAAyIA,EAAE,CAAC+I,UAA5I,GA/5a0G/I,EA+5a1G,mBAAmKC,WAAnK;AAAA;;AACAshC,aAAa,CAACt4B,IAAd,kBAh6a0GjJ,EAg6a1G;EAAA,MAA8FuhC,aAA9F;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAh6a0GvhC,EAg6a1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAh6a0GA,EAi6atG,6DADJ;MAh6a0GA,EA26atG,6DAXJ;IAAA;;IAAA;MAh6a0GA,EAi6a9F,+BADZ;MAh6a0GA,EA26a9F,aAXZ;MAh6a0GA,EA26a9F,8BAXZ;IAAA;EAAA;EAAA,eAc0CgB,EAAE,CAACkI,IAd7C;EAAA;EAAA;IAAA,WAcgI,CACxHzH,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACF8/B,eAAe,EAAE,IADf;MAEFC,gBAAgB,EAAE;IAFhB,CAAD,CADY,EAKjB9/B,OAAO,CAAC,IAAD,EAAOD,KAAK,CAAC;MAChB+/B,gBAAgB,EAAE;IADF,CAAD,CAAZ,CALU,CAAX,CADY,CAAnB,CADiH;EAdhI;EAAA;AAAA;;AA2BA;EAAA,mDA37a0G1hC,EA27a1G,mBAA2FuhC,aAA3F,EAAsH,CAAC;IAC3Gz5B,IAAI,EAAE5H,SADqG;IAE3G2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,oBADX;MAECC,QAAQ,6bAFT;MAiBCyF,eAAe,EAAErO,uBAAuB,CAACsO,MAjB1C;MAkBC2C,UAAU,EAAE,CACRlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;QACF8/B,eAAe,EAAE,IADf;QAEFC,gBAAgB,EAAE;MAFhB,CAAD,CADY,EAKjB9/B,OAAO,CAAC,IAAD,EAAOD,KAAK,CAAC;QAChB+/B,gBAAgB,EAAE;MADF,CAAD,CAAZ,CALU,CAAX,CADY,CAAnB,CADC;IAlBb,CAAD;EAFqG,CAAD,CAAtH,EAkC4B,YAAY;IAAE,OAAO,CAAC;MAAE55B,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAD,EAA0B;MAAEjB,IAAI,EAAE3B,SAAR;MAAmBuD,UAAU,EAAE,CAAC;QACvF5B,IAAI,EAAE1H,MADiF;QAEvFyD,IAAI,EAAE,CAAC5D,WAAD;MAFiF,CAAD;IAA/B,CAA1B,CAAP;EAGlB,CArCxB,EAqC0C;IAAE0lB,IAAI,EAAE,CAAC;MACnC7d,IAAI,EAAEzH;IAD6B,CAAD,CAAR;IAE1Bma,MAAM,EAAE,CAAC;MACT1S,IAAI,EAAEzH;IADG,CAAD,CAFkB;IAI1ByQ,IAAI,EAAE,CAAC;MACPhJ,IAAI,EAAEzH;IADC,CAAD,CAJoB;IAM1Bka,IAAI,EAAE,CAAC;MACPzS,IAAI,EAAEzH;IADC,CAAD,CANoB;IAQ1BsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD;EARc,CArC1C;AAAA;;IAiDMshC,mB;EACF,+BAAc;IAAA;;IACV,KAAKhwB,UAAL,GAAkB,IAAlB;IACA,KAAKgR,cAAL,GAAsBlB,cAAtB;EACH;;;;WACD,qBAAYzT,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MACL,KAAKkxB,eAAL;MACA,IAAM9wB,IAAI,GAAG,KAAK+wB,QAAL,CAAc,KAAK/wB,IAAL,CAAUiE,MAAxB,CAAb;MACA,IAAM+sB,OAAO,GAAG,KAAKC,gBAAL,EAAhB;MACA,KAAKpc,IAAL,GAAYmc,OAAO,CAAChxB,IAAD,CAAP,IAAiB,EAA7B;MACA,IAAMkxB,OAAO,GAAG,KAAKC,gBAAL,EAAhB;MACA,KAAK1c,QAAL,GAAgByc,OAAO,CAAClxB,IAAD,CAAP,IAAiB,EAAjC;;MACA,IAAI,KAAKoxB,QAAT,EAAmB;QACf,IAAMt/B,MAAK,GAAG,KAAKu/B,iBAAL,EAAd;;QACA,KAAKC,SAAL,GAAiBx/B,MAAK,CAACkO,IAAD,CAAL,IAAe,EAAhC;MACH;;MACD,IAAI,KAAKqU,WAAT,EAAsB;QAClB,KAAK3K,MAAL,GAAc,KAAK2lB,WAAnB;QACA,IAAM9U,MAAM,GAAG,KAAKva,IAAL,CAAUiE,MAAV,CAAiB2H,GAAjB,CAAqB,UAAArL,CAAC;UAAA,OAAIA,CAAC,CAAC9L,KAAN;QAAA,CAAtB,CAAf;;QACA,IAAMzC,KAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAAhB;;QACA,IAAMxoB,KAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAAhB;;QACA,IAAIvoB,KAAG,KAAKD,KAAZ,EAAiB;UACb,KAAK2X,MAAL,GAAc,KAAKrM,MAAL,CAAY6C,QAAZ,CAAqBlO,KAArB,CAAd;QACH;MACJ,CARD,MASK;QACD,KAAK0X,MAAL,GAAc,KAAKrM,MAAL,CAAY6C,QAAZ,CAAqB,KAAKF,IAAL,CAAUd,IAA/B,CAAd;MACH;IACJ;;;WACD,4BAAmB;MAAA;;MACf,OAAOzN,IAAI,GACNqJ,CADE,CACA,UAAAyF,CAAC,EAAI;QACR,IAAMlC,KAAK,GAAGkC,CAAC,CAACrB,IAAhB;QACA,IAAIzK,KAAJ;;QACA,IAAI,OAAI,CAACkN,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;UACnCje,KAAK,GAAG,OAAI,CAACsV,MAAL,CAAY1L,KAAZ,CAAR;QACH,CAFD,MAGK,IAAI,OAAI,CAACsD,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;UAC1CnN,KAAK,GAAG,OAAI,CAACsV,MAAL,CAAY4I,MAAM,CAACtU,KAAD,CAAlB,CAAR;QACH,CAFI,MAGA;UACD5J,KAAK,GAAG,OAAI,CAACsV,MAAL,CAAY1L,KAAZ,CAAR;QACH;;QACD,OAAO5J,KAAP;MACH,CAdM,EAeF+Q,CAfE,CAeA,UAAAjF,CAAC;QAAA,OAAI,OAAI,CAACiM,MAAL,CAAYjM,CAAC,CAAC9L,KAAd,CAAJ;MAAA,CAfD,EAgBF4rB,KAhBE,CAgBI,KAAKA,KAhBT,CAAP;IAiBH;;;WACD,6BAAoB;MAAA;;MAChB,OAAO9uB,IAAI,GACNuJ,CADE,CACA,UAAAyF,CAAC,EAAI;QACR,IAAMlC,KAAK,GAAGkC,CAAC,CAACrB,IAAhB;QACA,IAAIzK,KAAJ;;QACA,IAAI,OAAI,CAACkN,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;UACnCje,KAAK,GAAG,OAAI,CAACsV,MAAL,CAAY1L,KAAZ,CAAR;QACH,CAFD,MAGK,IAAI,OAAI,CAACsD,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;UAC1CnN,KAAK,GAAG,OAAI,CAACsV,MAAL,CAAY4I,MAAM,CAACtU,KAAD,CAAlB,CAAR;QACH,CAFI,MAGA;UACD5J,KAAK,GAAG,OAAI,CAACsV,MAAL,CAAY1L,KAAZ,CAAR;QACH;;QACD,OAAO5J,KAAP;MACH,CAdM,EAeF2rB,EAfE,CAeC,UAAA7f,CAAC;QAAA,OAAI,OAAI,CAACiM,MAAL,CAAY,OAAOjM,CAAC,CAACxO,GAAT,KAAiB,QAAjB,GAA4BwO,CAAC,CAACxO,GAA9B,GAAoCwO,CAAC,CAAC9L,KAAlD,CAAJ;MAAA,CAfF,EAgBF6W,EAhBE,CAgBC,UAAA/K,CAAC;QAAA,OAAI,OAAI,CAACiM,MAAL,CAAY,OAAOjM,CAAC,CAACvO,GAAT,KAAiB,QAAjB,GAA4BuO,CAAC,CAACvO,GAA9B,GAAoCuO,CAAC,CAAC9L,KAAlD,CAAJ;MAAA,CAhBF,EAiBF4rB,KAjBE,CAiBI,KAAKA,KAjBT,CAAP;IAkBH;;;WACD,4BAAmB;MAAA;;MACf,IAAMF,SAAS,GAAG,SAAZA,SAAY,CAAA5f,CAAC,EAAI;QACnB,IAAMlC,KAAK,GAAGkC,CAAC,CAACrB,IAAhB;QACA,OAAO,OAAI,CAAC6K,MAAL,CAAY1L,KAAZ,CAAP;MACH,CAHD;;MAIA,OAAO9M,IAAI,GACNuJ,CADE,CACAqlB,SADA,EAEFC,EAFE,CAEC;QAAA,OAAM,OAAI,CAAC5T,MAAL,CAAY1a,KAAZ,GAAoB,CAApB,CAAN;MAAA,CAFD,EAGFwZ,EAHE,CAGC,UAAA/K,CAAC;QAAA,OAAI,OAAI,CAACiM,MAAL,CAAYjM,CAAC,CAAC9L,KAAd,CAAJ;MAAA,CAHF,EAIF4rB,KAJE,CAII,KAAKA,KAJT,CAAP;IAKH;;;WACD,kBAASrgB,IAAT,EAAe;MACX,IAAI,KAAK2B,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QACrC5B,IAAI,GAAGof,UAAU,CAACpf,IAAD,EAAO,MAAP,CAAjB;MACH,CAFD,MAGK,IAAI,KAAK2B,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACxC1S,IAAI,GAAG2f,UAAU,CAAC3f,IAAD,EAAO,MAAP,CAAjB;MACH,CAFI,MAGA;QACDA,IAAI,GAAGsf,YAAY,CAACtf,IAAD,EAAO,MAAP,EAAe,KAAf,EAAsB,KAAK+J,MAAL,CAAYzM,MAAZ,EAAtB,CAAnB;MACH;;MACD,OAAO0C,IAAP;IACH;;;WACD,2BAAkB;MACd,IAAI,KAAK3C,MAAL,CAAYsE,SAAZ,KAA0B5E,SAAS,CAAC6E,MAAxC,EAAgD;QAC5C,KAAKyS,WAAL,GAAmB,IAAnB;QACA,KAAKpC,UAAL,GAAkB,SAAS1B,EAAE,GAAG1N,QAAL,EAA3B;QACA,KAAKwsB,WAAL,kBAA2B,KAAKpd,UAAhC;QACA,IAAMsI,MAAM,GAAG,KAAKva,IAAL,CAAUiE,MAAV,CAAiB2H,GAAjB,CAAqB,UAAArL,CAAC;UAAA,OAAIA,CAAC,CAAC9L,KAAN;QAAA,CAAtB,CAAf;;QACA,IAAMzC,MAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAAhB;;QACA,IAAMxoB,KAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAAhB;;QACA,KAAKxH,aAAL,GAAqB,KAAK1V,MAAL,CAAYmjB,sBAAZ,CAAmCxuB,MAAnC,EAAwCD,KAAxC,CAArB;QACA,KAAKw/B,iBAAL,GAAyB,KAAKl0B,MAAL,CAAYmjB,sBAAZ,CAAmCxuB,MAAnC,CAAzB;MACH,CATD,MAUK;QACD,KAAKqiB,WAAL,GAAmB,KAAnB;QACA,KAAKtB,aAAL,GAAqB1d,SAArB;QACA,KAAKk8B,iBAAL,GAAyBl8B,SAAzB;MACH;IACJ;;;WACD,kBAAS8K,KAAT,EAAgB;MACZ,IAAI,CAAC,KAAKC,aAAV,EACI,OAAO,KAAP;MACJ,IAAMC,IAAI,GAAG,KAAKD,aAAL,CAAmBE,IAAnB,CAAwB,UAAAC,CAAC,EAAI;QACtC,OAAOJ,KAAK,CAACjB,IAAN,KAAeqB,CAAC,CAACrB,IAAxB;MACH,CAFY,CAAb;MAGA,OAAOmB,IAAI,KAAKhL,SAAhB;IACH;;;WACD,oBAAW8K,KAAX,EAAkB;MACd,IAAI,CAAC,KAAKC,aAAN,IAAuB,KAAKA,aAAL,CAAmBtG,MAAnB,KAA8B,CAAzD,EACI,OAAO,KAAP;MACJ,IAAMuG,IAAI,GAAG,KAAKD,aAAL,CAAmBE,IAAnB,CAAwB,UAAAC,CAAC,EAAI;QACtC,OAAOJ,KAAK,CAACjB,IAAN,KAAeqB,CAAC,CAACrB,IAAxB;MACH,CAFY,CAAb;MAGA,OAAOmB,IAAI,KAAKhL,SAAhB;IACH;;;;;;AAELw7B,mBAAmB,CAAC74B,IAApB;EAAA,iBAAgH64B,mBAAhH;AAAA;;AACAA,mBAAmB,CAAC14B,IAApB,kBA7mb0GjJ,EA6mb1G;EAAA,MAAoG2hC,mBAApG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WA7mb0G3hC,EA6mb1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA7mb0GA,EA8mbtG,iBADJ;MA7mb0GA,EA8mbtG,kCADJ;MA7mb0GA,EAgnblG,mEAHR;MA7mb0GA,EAunbpG,eAVN;MA7mb0GA,EAwnbpG,gCAXN;MA7mb0GA,EAgpbpG,mEAnCN;MA7mb0GA,EA4pbtG,eA/CJ;IAAA;;IAAA;MA7mb0GA,EAknb/F,aALX;MA7mb0GA,EAknb/F,oCALX;MA7mb0GA,EAkoblG,aArBR;MA7mb0GA,EAkoblG,oFArBR;MA7mb0GA,EA2nblG,uPAdR;MA7mb0GA,EA6oblG,aAhCR;MA7mb0GA,EA6oblG,oFAhCR;MA7mb0GA,EAyoblG,mGA5BR;MA7mb0GA,EAkpbjG,aArCT;MA7mb0GA,EAkpbjG,iCArCT;IAAA;EAAA;EAAA,eAgD0C0hB,0BAhD1C,EAgDyKuD,aAhDzK,EAgDqXsc,aAhDrX,EAgDsfvgC,EAAE,CAACkI,IAhDzf;EAAA;EAAA;AAAA;;AAiDA;EAAA,mDA9pb0GlJ,EA8pb1G,mBAA2F2hC,mBAA3F,EAA4H,CAAC;IACjH75B,IAAI,EAAE5H,SAD2G;IAEjH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,2BADX;MAECC,QAAQ,46CAFT;MAmDCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAnD1C,CAAD;EAF2G,CAAD,CAA5H,QAuD4B;IAAE8B,IAAI,EAAE,CAAC;MACrBhJ,IAAI,EAAEzH;IADe,CAAD,CAAR;IAEZwa,MAAM,EAAE,CAAC;MACT/S,IAAI,EAAEzH;IADG,CAAD,CAFI;IAIZid,MAAM,EAAE,CAAC;MACTxV,IAAI,EAAEzH;IADG,CAAD,CAJI;IAMZ8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CANI;IAQZoS,SAAS,EAAE,CAAC;MACZ3K,IAAI,EAAEzH;IADM,CAAD,CARC;IAUZ8wB,KAAK,EAAE,CAAC;MACRrpB,IAAI,EAAEzH;IADE,CAAD,CAVK;IAYZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAZH;IAcZiiC,gBAAgB,EAAE,CAAC;MACnBx6B,IAAI,EAAEzH;IADa,CAAD,CAdN;IAgBZ6hC,QAAQ,EAAE,CAAC;MACXp6B,IAAI,EAAEzH;IADK,CAAD,CAhBE;IAkBZsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD;EAlBA,CAvD5B;AAAA;;IA6EMkiC,kB;;;;;EACF,8BAAc;IAAA;;IAAA;;IACV,+BAASh+B,SAAT;IACA,QAAKitB,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAKgR,aAAL,GAAqB,IAArB;IACA,QAAK4Z,KAAL,GAAa7uB,WAAb;IACA,QAAK4O,aAAL,GAAqB,EAArB;IACA,QAAK0gB,cAAL,GAAsB,IAAtB;IACA,QAAKC,cAAL,GAAsB,IAAtB;IACA,QAAKC,gBAAL,GAAwB,IAAxB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,YAAL,GAAoB,KAApB;IACA,QAAK5T,eAAL,GAAuB,KAAvB;IACA,QAAKzC,YAAL,GAAoB,KAApB;IACA,QAAKD,aAAL,GAAqB,IAArB;IACA,QAAKhM,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAKsV,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKmX,WAAL,GAAmB,CAAnB;IACA,QAAKC,UAAL,GAAkB,CAAlB;IACA,QAAK6E,cAAL,GAAsB,EAAtB;IACA,QAAKC,eAAL,GAAuB,EAAvB;IACA,QAAKrP,KAAL,GAAa,KAAb;IAvBU;EAwBb;;;;WACD,oBAAW;MACP,IAAI5hB,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKkb,KAAL,GAAa,IAAb;MACH;IACJ;;;WACD,kBAAS;MACL;;MACA,KAAKpO,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC7Z,UAAU,EAAE,KAAKiC,UAXe;QAYhCuZ,cAAc,EAAE,KAAKA;MAZW,CAAD,CAAnC;;MAcA,IAAI,KAAKmE,QAAT,EAAmB;QACf,KAAKjd,IAAL,CAAUzO,MAAV,IAAoB,KAAKisB,cAAL,GAAsB,KAAKjc,MAAL,CAAY,CAAZ,CAAtB,GAAuC,KAAKkc,eAAhE;MACH;;MACD,KAAKrH,OAAL,GAAe,KAAKC,UAAL,EAAf;;MACA,IAAI,KAAKwH,cAAT,EAAyB;QACrB,KAAKzH,OAAL,GAAe,KAAKyH,cAApB;MACH;;MACD,KAAKC,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,KAAKC,YAAL,GAAoB,KAAKC,eAAL,EAApB;MACA,KAAK9X,MAAL,GAAc,KAAKmQ,SAAL,CAAe,KAAKF,OAApB,EAA6B,KAAKpW,IAAL,CAAUlO,KAAvC,CAAd;MACA,KAAK8W,MAAL,GAAc,KAAKsV,SAAL,CAAe,KAAKJ,OAApB,EAA6B,KAAK9d,IAAL,CAAUzO,MAAvC,CAAd;MACA,KAAK4sB,cAAL;MACA,KAAKC,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAK3c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,gBAAqD,KAAKzX,MAAL,CAAY,CAAZ,CAArD;MACA,KAAK+c,UAAL,GAAkB,SAAS3R,EAAE,GAAG1N,QAAL,EAA3B;MACA,KAAKsf,QAAL,kBAAwB,KAAKD,UAA7B;IACH;;;WACD,0BAAiB;MACb,IAAI,KAAKrB,QAAT,EAAmB;QACf,KAAKuB,aAAL,GAAqB,KAAKxe,IAAL,CAAUlO,KAA/B;QACA,KAAK2sB,eAAL,GAAuB,KAAKpI,UAAL,EAAvB;QACA,KAAKqI,cAAL,GAAsB,KAAKpI,SAAL,CAAe,KAAKmI,eAApB,EAAqC,KAAKD,aAA1C,CAAtB;QACA,KAAKG,cAAL,GAAsB,KAAKT,SAAL,CAAe,KAAKJ,OAApB,EAA6B,KAAKN,cAAlC,CAAtB;QACA,KAAKoB,iBAAL,uBAAsC,KAAK5e,IAAL,CAAUgZ,OAAhD,eAA4D,CAAC,KAAKzX,MAAL,CAAY,CAAZ,CAA7D;MACH;IACJ;;;WACD,sBAAa;MACT,IAAIoV,MAAM,GAAG0D,sBAAsB,CAAC,KAAKva,OAAN,CAAnC;MACA,KAAK/B,SAAL,GAAiB2c,YAAY,CAAC/D,MAAD,CAA7B;MACA,IAAIjd,MAAM,GAAG,EAAb;;MACA,IAAI,KAAKqE,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QACrC2Y,MAAM,GAAGA,MAAM,CAAC3O,GAAP,CAAW,UAAAyM,CAAC;UAAA,OAAI1F,MAAM,CAAC0F,CAAD,CAAV;QAAA,CAAZ,CAAT;MACH;;MACD,IAAItmB,GAAJ;MACA,IAAIC,GAAJ;;MACA,IAAI,KAAK2P,SAAL,KAAmB5E,SAAS,CAAC2V,IAA7B,IAAqC,KAAK/Q,SAAL,KAAmB5E,SAAS,CAAC6E,MAAtE,EAA8E;QAC1E7P,GAAG,GAAG,KAAK6sB,SAAL,GAAiB,KAAKA,SAAtB,GAAkC9gB,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAA5C;QACAvoB,GAAG,GAAG,KAAK6sB,SAAL,GAAiB,KAAKA,SAAtB,GAAkC/gB,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAA5C;MACH;;MACD,IAAI,KAAK5Y,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACnCpV,MAAM,GAAG,CAAC,IAAIjK,IAAJ,CAAStB,GAAT,CAAD,EAAgB,IAAIsB,IAAJ,CAASrB,GAAT,CAAhB,CAAT;QACA,KAAK2mB,IAAL,GAAY,mBAAI4B,MAAJ,EAAYwE,IAAZ,CAAiB,UAACC,CAAD,EAAIjK,CAAJ,EAAU;UACnC,IAAMkK,KAAK,GAAGD,CAAC,CAACE,OAAF,EAAd;UACA,IAAMC,KAAK,GAAGpK,CAAC,CAACmK,OAAF,EAAd;UACA,IAAID,KAAK,GAAGE,KAAZ,EACI,OAAO,CAAP;UACJ,IAAIA,KAAK,GAAGF,KAAZ,EACI,OAAO,CAAC,CAAR;UACJ,OAAO,CAAP;QACH,CARW,CAAZ;MASH,CAXD,MAYK,IAAI,KAAKtd,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QAC1CtE,MAAM,GAAG,CAACvL,GAAD,EAAMC,GAAN,CAAT,CAD0C,CAE1C;;QACA,KAAK2mB,IAAL,GAAY,mBAAI4B,MAAJ,EAAYwE,IAAZ,CAAiB,UAACC,CAAD,EAAIjK,CAAJ;UAAA,OAAUiK,CAAC,GAAGjK,CAAd;QAAA,CAAjB,CAAZ;MACH,CAJI,MAKA;QACDzX,MAAM,GAAGid,MAAT;QACA,KAAK5B,IAAL,GAAY4B,MAAZ;MACH;;MACD,OAAOjd,MAAP;IACH;;;WACD,sBAAa;MACT,IAAMA,MAAM,GAAG,EAAf;;MADS,6CAEa,KAAKoG,OAFlB;MAAA;;MAAA;QAET,0DAAoC;UAAA,IAAzBA,OAAyB;;UAAA,6CAChBA,OAAO,CAACO,MADQ;UAAA;;UAAA;YAChC,0DAAgC;cAAA,IAArB1D,CAAqB;;cAC5B,IAAIjD,MAAM,CAACtD,OAAP,CAAeuG,CAAC,CAAC9L,KAAjB,IAA0B,CAA9B,EAAiC;gBAC7B6I,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAAC9L,KAAd;cACH;;cACD,IAAI8L,CAAC,CAACxO,GAAF,KAAUsD,SAAd,EAAyB;gBACrB,KAAK+7B,QAAL,GAAgB,IAAhB;;gBACA,IAAI9zB,MAAM,CAACtD,OAAP,CAAeuG,CAAC,CAACxO,GAAjB,IAAwB,CAA5B,EAA+B;kBAC3BuL,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAACxO,GAAd;gBACH;cACJ;;cACD,IAAIwO,CAAC,CAACvO,GAAF,KAAUqD,SAAd,EAAyB;gBACrB,KAAK+7B,QAAL,GAAgB,IAAhB;;gBACA,IAAI9zB,MAAM,CAACtD,OAAP,CAAeuG,CAAC,CAACvO,GAAjB,IAAwB,CAA5B,EAA+B;kBAC3BsL,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAACvO,GAAd;gBACH;cACJ;YACJ;UAjB+B;YAAA;UAAA;YAAA;UAAA;QAkBnC;MApBQ;QAAA;MAAA;QAAA;MAAA;;MAqBT,IAAMuoB,MAAM,aAAOjd,MAAP,CAAZ;;MACA,IAAI,CAAC,KAAK0d,SAAV,EAAqB;QACjBT,MAAM,CAAC3f,IAAP,CAAY,CAAZ;MACH;;MACD,IAAM7I,GAAG,GAAG,KAAK0wB,SAAL,GAAiB,KAAKA,SAAtB,GAAkC3kB,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAAlD;MACA,IAAMvoB,GAAG,GAAG,KAAK0wB,SAAL,GAAiB,KAAKA,SAAtB,GAAkC5kB,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAAlD;MACA,OAAO,CAACxoB,GAAD,EAAMC,GAAN,CAAP;IACH;;;WACD,2BAAkB;MACd,OAAO,KAAK0R,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAACrB,IAAN;MAAA,CAAlB,CAAP;IACH;;;WACD,mBAAU5B,MAAV,EAAkB5H,KAAlB,EAAyB;MACrB,IAAI8R,KAAJ;;MACA,IAAI,KAAK7F,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACnClL,KAAK,GAAGvW,SAAS,GAAGa,KAAZ,CAAkB,CAAC,CAAD,EAAI4D,KAAJ,CAAlB,EAA8B4H,MAA9B,CAAqCA,MAArC,CAAR;MACH,CAFD,MAGK,IAAI,KAAKqE,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QAC1C4F,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAAC,CAAD,EAAI4D,KAAJ,CAApB,EAAgC4H,MAAhC,CAAuCA,MAAvC,CAAR;;QACA,IAAI,KAAK6jB,YAAT,EAAuB;UACnB3Z,KAAK,GAAGA,KAAK,CAACmb,IAAN,EAAR;QACH;MACJ,CALI,MAMA,IAAI,KAAKhhB,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QAC3CoE,KAAK,GAAGrW,UAAU,GAAGW,KAAb,CAAmB,CAAC,CAAD,EAAI4D,KAAJ,CAAnB,EAA+BiU,OAA/B,CAAuC,GAAvC,EAA4CrM,MAA5C,CAAmDA,MAAnD,CAAR;MACH;;MACD,OAAOkK,KAAP;IACH;;;WACD,mBAAUlK,MAAV,EAAkBnI,MAAlB,EAA0B;MACtB,IAAMqS,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAACqD,MAAD,EAAS,CAAT,CAApB,EAAiCmI,MAAjC,CAAwCA,MAAxC,CAAd;MACA,OAAO,KAAK6jB,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,sBAAalK,MAAb,EAAqB;MACjB,KAAKmkB,cAAL,GAAsBnkB,MAAtB;MACA,KAAK0c,OAAL,GAAe,KAAKyH,cAApB;MACA,KAAK1X,MAAL,GAAc,KAAKmQ,SAAL,CAAe,KAAKF,OAApB,EAA6B,KAAKpW,IAAL,CAAUlO,KAAvC,CAAd;IACH;;;WACD,+BAAsB2K,IAAtB,EAA4B;MACxB,KAAKyiB,eAAL,GAAuBziB,IAAI,CAAC5L,KAA5B;MACA,KAAKsuB,aAAL;IACH;;;WACD,uBAAc;MACV,KAAKD,eAAL,GAAuB,IAAvB;MACA,KAAKC,aAAL;IACH;;;WACD,iBAAQ/iB,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,iBAAQQ,KAAR,EAAeH,IAAf,EAAqB;MACjB,iBAAUA,IAAI,CAACnB,IAAf;IACH;;;WACD,qBAAY;MACR,IAAI5B,MAAJ;;MACA,IAAI,KAAK6F,UAAL,KAAoBpG,SAAS,CAACqG,OAAlC,EAA2C;QACvC9F,MAAM,GAAG,KAAKskB,YAAd;MACH,CAFD,MAGK;QACDtkB,MAAM,GAAG,KAAKokB,OAAd;MACH;;MACD,KAAKrkB,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKC,UAAlC,EAA8C7F,MAA9C,EAAsD,KAAKyH,YAA3D,CAAd;IACH;;;WACD,4BAAmB;MACf,IAAMie,IAAI,GAAG;QACTrhB,SAAS,EAAE,KAAKwB,UADP;QAET9F,MAAM,EAAEhI,SAFC;QAGTiI,MAAM,EAAE,EAHC;QAITzE,KAAK,EAAExD,SAJE;QAKT6B,QAAQ,EAAE,KAAKwlB;MALN,CAAb;;MAOA,IAAIsG,IAAI,CAACrhB,SAAL,KAAmB5E,SAAS,CAACqG,OAAjC,EAA0C;QACtC4f,IAAI,CAAC1lB,MAAL,GAAc,KAAKskB,YAAnB;QACAoB,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAnB;QACA2lB,IAAI,CAACnqB,KAAL,GAAa,KAAK6nB,WAAlB;MACH,CAJD,MAKK;QACDsC,IAAI,CAAC1lB,MAAL,GAAc,KAAKokB,OAAnB;QACAsB,IAAI,CAAC3lB,MAAL,GAAc,KAAKA,MAAL,CAAYmK,KAA1B;MACH;;MACD,OAAOwb,IAAP;IACH;;;WACD,kCAA4B;MAAA,IAATttB,KAAS,UAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,oBAAWS,IAAX,EAAiB;MACb,KAAK0iB,aAAL;MACA,IAAMhpB,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAhD;MACH,CAFW,CAAZ;;MAGA,IAAIsF,GAAG,GAAG,CAAC,CAAX,EAAc;QACV;MACH;;MACD,KAAKqG,aAAL,GAAqB,CAACC,IAAD,CAArB;MACA,KAAKxB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAaC,IAAb,EAAmB;MACf,IAAMtG,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAhD;MACH,CAFW,CAAZ;MAGA,KAAK2L,aAAL,CAAmBlG,MAAnB,CAA0BH,GAA1B,EAA+B,CAA/B;MACA,KAAKqG,aAAL,sBAAyB,KAAKA,aAA9B;MACA,KAAKtB,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;WACD,yBAAgB;MACZ,KAAKA,aAAL,sBAAyB,KAAKA,aAA9B;;MADY,6CAEQ,KAAKA,aAFb;MAAA;;MAAA;QAEZ,0DAAwC;UAAA,IAA7BD,KAA6B;UACpC,KAAKrB,UAAL,CAAgBG,IAAhB,CAAqB;YAAExK,KAAK,EAAE0L,KAAT;YAAgB8iB,OAAO,EAAE;UAAzB,CAArB;QACH;MAJW;QAAA;MAAA;QAAA;MAAA;;MAKZ,KAAK7iB,aAAL,GAAqB,EAArB;IACH;;;;EAnP4B4C,kB;;AAqPjCyuB,kBAAkB,CAACz5B,IAAnB;EAAA;EAAA;IAAA,8EAh+b0G9I,EAg+b1G,uBAA+GuiC,kBAA/G,SAA+GA,kBAA/G;EAAA;AAAA;;AACAA,kBAAkB,CAACt5B,IAAnB,kBAj+b0GjJ,EAi+b1G;EAAA,MAAmGuiC,kBAAnG;EAAA;EAAA;IAAA;MAj+b0GviC,EAi+b1G;MAj+b0GA,EAi+b1G;IAAA;;IAAA;MAAA;;MAj+b0GA,EAi+b1G,qBAj+b0GA,EAi+b1G;MAj+b0GA,EAi+b1G,qBAj+b0GA,EAi+b1G;IAAA;EAAA;EAAA;IAAA;MAj+b0GA,EAi+b1G;QAAA,OAAmG,iBAAnG;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WAj+b0GA,EAi+b1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAj+b0GA,EAk+btG,yCADJ;MAj+b0GA,EAw+bpG;QAAA,OAAoB,mBAApB;MAAA;QAAA,OACuB,sBADvB;MAAA;QAAA,OAEyB,wBAFzB;MAAA,EAPN;MAj+b0GA,EA4+bpG,iBAXN;MAj+b0GA,EA4+bpG,yCAXN;MAj+b0GA,EA8+bhG,qBAbV;MAj+b0GA,EAm/blG,iBAlBR;MAj+b0GA,EAq/bpG,0BApBN;MAj+b0GA,EAs/blG,mEArBR;MAj+b0GA,EAqgclG,mEApCR;MAj+b0GA,EAshclG,uBArDR;MAj+b0GA,EAuhchG,kEAtDV;MAj+b0GA,EAwichG,kEAvEV;MAj+b0GA,EA0jchG,oEAzFV;MAj+b0GA,EA0lclG,iBAzHR;MAj+b0GA,EA4lcpG,qEA3HN;MAj+b0GA,EAunctG,eAtJJ;IAAA;;IAAA;MAj+b0GA,EAm+bpG,oBAn+boGA,EAm+bpG,kLAFN;MAj+b0GA,EA6+bpF,aAZtB;MAj+b0GA,EA6+bpF,kCAZtB;MAj+b0GA,EA++b9F,aAdZ;MAj+b0GA,EA++b9F,4GAdZ;MAj+b0GA,EAq/b7F,aApBb;MAj+b0GA,EAq/b7F,wCApBb;MAj+b0GA,EAw/b/F,aAvBX;MAj+b0GA,EAw/b/F,8BAvBX;MAj+b0GA,EAugc/F,aAtCX;MAj+b0GA,EAugc/F,8BAtCX;MAj+b0GA,EAshc3F,aArDf;MAj+b0GA,EAshc3F,uCArDf;MAj+b0GA,EAuhcxF,aAtDlB;MAj+b0GA,EAuhcxF,+BAtDlB;MAj+b0GA,EAwicxF,aAvElB;MAj+b0GA,EAwicxF,8BAvElB;MAj+b0GA,EA0jcxF,aAzFlB;MAj+b0GA,EA0jcxF,yCAzFlB;MAj+b0GA,EA8lcjG,aA7HT;MAj+b0GA,EA8lcjG,+DA7HT;IAAA;EAAA;EAAA,eAuJ+yDyR,cAvJ/yD,EAuJohEyI,cAvJphE,EAuJ2yE+C,cAvJ3yE,EAuJsmF0kB,mBAvJtmF,EAuJizFnZ,WAvJjzF,EAuJ+/FhG,qBAvJ//F,EAuJowGgI,QAvJpwG,EAuJs9GxpB,EAAE,CAACkI,IAvJz9G,EAuJuiHlI,EAAE,CAACwQ,OAvJ1iH;EAAA;EAAA;EAAA;IAAA,WAuJspH,CAC9oH/P,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACFiiB,OAAO,EAAE;IADP,CAAD,CADY,EAIjBhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MACfiiB,OAAO,EAAE;IADM,CAAD,CAAX,CAJU,CAAX,CADY,CAAnB,CADuoH;EAvJtpH;EAAA;AAAA;;AAmKA;EAAA,mDApoc0G5jB,EAooc1G,mBAA2FuiC,kBAA3F,EAA2H,CAAC;IAChHz6B,IAAI,EAAE5H,SAD0G;IAEhH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,uBAAZ;MAAqCC,QAAQ,m7KAA7C;MAuJdC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAvJnB;MAuJyBuF,eAAe,EAAErO,uBAAuB,CAACsO,MAvJlE;MAuJ0E2C,UAAU,EAAE,CACjFlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;QACFiiB,OAAO,EAAE;MADP,CAAD,CADY,EAIjBhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QACfiiB,OAAO,EAAE;MADM,CAAD,CAAX,CAJU,CAAX,CADY,CAAnB,CAD0E,CAvJtF;MAkKIna,MAAM,EAAE,CAAC,yvDAAD;IAlKZ,CAAD;EAF0G,CAAD,CAA3H,QAqK4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAFD;IAIZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAVJ;IAYZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAZJ;IAcZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAdA;IAgBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZyrB,SAAS,EAAE,CAAC;MACZhkB,IAAI,EAAEzH;IADM,CAAD,CAlBC;IAoBZsxB,QAAQ,EAAE,CAAC;MACX7pB,IAAI,EAAEzH;IADK,CAAD,CApBE;IAsBZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CAtBE;IAwBZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CAxBH;IA0BZ8wB,KAAK,EAAE,CAAC;MACRrpB,IAAI,EAAEzH;IADE,CAAD,CA1BK;IA4BZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CA5BH;IA8BZ4T,UAAU,EAAE,CAAC;MACbnM,IAAI,EAAEzH;IADO,CAAD,CA9BA;IAgCZiiC,gBAAgB,EAAE,CAAC;MACnBx6B,IAAI,EAAEzH;IADa,CAAD,CAhCN;IAkCZuxB,cAAc,EAAE,CAAC;MACjB9pB,IAAI,EAAEzH;IADW,CAAD,CAlCJ;IAoCZwxB,cAAc,EAAE,CAAC;MACjB/pB,IAAI,EAAEzH;IADW,CAAD,CApCJ;IAsCZyxB,gBAAgB,EAAE,CAAC;MACnBhqB,IAAI,EAAEzH;IADa,CAAD,CAtCN;IAwCZ0xB,kBAAkB,EAAE,CAAC;MACrBjqB,IAAI,EAAEzH;IADe,CAAD,CAxCR;IA0CZ2xB,kBAAkB,EAAE,CAAC;MACrBlqB,IAAI,EAAEzH;IADe,CAAD,CA1CR;IA4CZ6zB,mBAAmB,EAAE,CAAC;MACtBpsB,IAAI,EAAEzH;IADgB,CAAD,CA5CT;IA8CZ8zB,mBAAmB,EAAE,CAAC;MACtBrsB,IAAI,EAAEzH;IADgB,CAAD,CA9CT;IAgDZ+zB,UAAU,EAAE,CAAC;MACbtsB,IAAI,EAAEzH;IADO,CAAD,CAhDA;IAkDZg0B,UAAU,EAAE,CAAC;MACbvsB,IAAI,EAAEzH;IADO,CAAD,CAlDA;IAoDZ4xB,YAAY,EAAE,CAAC;MACfnqB,IAAI,EAAEzH;IADS,CAAD,CApDF;IAsDZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAtDL;IAwDZub,YAAY,EAAE,CAAC;MACf9T,IAAI,EAAEzH;IADS,CAAD,CAxDF;IA0DZ4b,cAAc,EAAE,CAAC;MACjBnU,IAAI,EAAEzH;IADW,CAAD,CA1DJ;IA4DZsb,aAAa,EAAE,CAAC;MAChB7T,IAAI,EAAEzH;IADU,CAAD,CA5DH;IA8DZqvB,SAAS,EAAE,CAAC;MACZ5nB,IAAI,EAAEzH;IADM,CAAD,CA9DC;IAgEZsvB,SAAS,EAAE,CAAC;MACZ7nB,IAAI,EAAEzH;IADM,CAAD,CAhEC;IAkEZkzB,SAAS,EAAE,CAAC;MACZzrB,IAAI,EAAEzH;IADM,CAAD,CAlEC;IAoEZmzB,SAAS,EAAE,CAAC;MACZ1rB,IAAI,EAAEzH;IADM,CAAD,CApEC;IAsEZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAtEE;IAwEZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAxEA;IA0EZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD,CA1EL;IA6EZywB,qBAAqB,EAAE,CAAC;MACxBxsB,IAAI,EAAE/G,YADkB;MAExB8C,IAAI,EAAE,CAAC,uBAAD;IAFkB,CAAD,CA7EX;IAgFZ0wB,WAAW,EAAE,CAAC;MACdzsB,IAAI,EAAEtH,YADQ;MAEdqD,IAAI,EAAE,CAAC,YAAD;IAFQ,CAAD;EAhFD,CArK5B;AAAA;;IA0PM2+B,e;;;;AAENA,eAAe,CAAC15B,IAAhB;EAAA,iBAA4G05B,eAA5G;AAAA;;AACAA,eAAe,CAAChlB,IAAhB,kBAj4c0Gxd,EAi4c1G;EAAA,MAA6GwiC;AAA7G;AACAA,eAAe,CAAC/kB,IAAhB,kBAl4c0Gzd,EAk4c1G;EAAA,UAAwI,CAAC+sB,iBAAD,CAAxI;AAAA;;AACA;EAAA,mDAn4c0G/sB,EAm4c1G,mBAA2FwiC,eAA3F,EAAwH,CAAC;IAC7G16B,IAAI,EAAEhH,QADuG;IAE7G+C,IAAI,EAAE,CAAC;MACC6Z,OAAO,EAAE,CAACqP,iBAAD,CADV;MAECpP,YAAY,EAAE,CAAC4jB,aAAD,EAAgBgB,kBAAhB,EAAoCZ,mBAApC,CAFf;MAGC/jB,OAAO,EAAE,CAAC2jB,aAAD,EAAgBgB,kBAAhB,EAAoCZ,mBAApC;IAHV,CAAD;EAFuG,CAAD,CAAxH;AAAA;;IASMc,iB;EACF,2BAAY76B,UAAZ,EAAwB;IAAA;;IACpB,KAAKA,UAAL,GAAkBA,UAAlB;IACA,KAAK+J,UAAL,GAAkB,IAAlB;IACA,KAAK+wB,SAAL,GAAiB,IAAjB;IACA,KAAKC,aAAL,GAAqB,EAArB;IACA,KAAKnsB,SAAL,GAAiBA,SAAjB;EACH;;;;WACD,qBAAYxI,OAAZ,EAAqB;MACjB,KAAK40B,aAAL;MACA,KAAKlyB,MAAL;IACH;;;WACD,yBAAgB;MACZ,IAAIxP,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKi7B,cAAL,yBAAqC,KAAKC,KAA1C,gBAAqD,KAAKC,KAA1D;QACA,KAAKC,aAAL,uBAAkC,KAAKF,KAAvC,cAAgD,KAAKC,KAArD;QACA,KAAKE,cAAL,GAAsB,CAAC,KAAKtxB,UAAN,GAAmB,IAAnB,GAA0B,iBAAhD;MACH,CAJD,MAKK;QACD,IAAMuxB,IAAI,GAAG,uBAAuBC,IAAvB,CAA4BrjB,SAAS,CAACC,SAAtC,CAAb;QACA,KAAK8iB,cAAL,GAAsBK,IAAI,GAAG,IAAH,yBAAyB,KAAKJ,KAA9B,gBAAyC,KAAKC,KAA9C,WAA1B;QACA,KAAKC,aAAL,GAAqB,CAACE,IAAD,GAAQ,IAAR,uBAA4B,KAAKJ,KAAjC,cAA0C,KAAKC,KAA/C,MAArB;QACA,KAAKE,cAAL,GAAsBC,IAAI,IAAI,CAAC,KAAKvxB,UAAd,GAA2B,IAA3B,GAAkC,iBAAxD;MACH;IACJ;;;WACD,kBAAS;MACL,IAAIyxB,WAAW,GAAG,KAAKzf,MAAvB;;MACA,IAAI,KAAK0f,aAAT,EAAwB;QACpBD,WAAW,GAAI,KAAKzf,MAAL,GAAc,KAAKpe,KAApB,GAA6B,KAAKzC,GAAhD;MACH;;MACD,IAAMwgC,QAAQ,GAAG9gC,GAAG,GAAG+gC,WAAN,CAAkBH,WAAlB,EAA+BI,WAA/B,CAA2CJ,WAA3C,CAAjB,CALK,CAML;;MACA,IAAMK,QAAQ,GAAGH,QAAQ,CAACI,QAAT,CAAkB,KAAK5yB,IAAvB,CAAjB;MACA,IAAIwH,KAAK,GAAG,KAAKxH,IAAL,CAAU6yB,GAAV,CAAc,CAAd,IAAmBF,QAAQ,CAAC,CAAD,CAAvC;;MACA,IAAI,KAAK3yB,IAAL,CAAU6yB,GAAV,CAAc,CAAd,MAAqB,CAArB,IAA0BF,QAAQ,CAAC,CAAD,CAAR,KAAgB,CAA9C,EAAiD;QAC7CnrB,KAAK,GAAG,CAAR;MACH;;MACD,IAAMsrB,QAAQ,GAAG,CAACtrB,KAAK,GAAGmrB,QAAQ,CAAC,CAAD,CAAjB,EAAsBnrB,KAAK,GAAGmrB,QAAQ,CAAC,CAAD,CAAtC,CAAjB;MACA,KAAKlhC,IAAL,cAAgBkhC,QAAhB,cAA4BG,QAA5B,cAAwC,KAAK9yB,IAAL,CAAU6yB,GAAlD;IACH;;;SACD,eAAY;MACR,OAAO,KAAK7yB,IAAL,CAAU6yB,GAAV,CAAc,CAAd,CAAP;IACH;;;SACD,eAAY;MACR,OAAO,KAAK7yB,IAAL,CAAU6yB,GAAV,CAAc,CAAd,CAAP;IACH;;;WACD,sBAAa;MACT,OAAO,KAAKE,QAAL,CAAc,KAAK/yB,IAAnB,IAA2BlC,IAAI,CAAC8K,EAAhC,GAAqCzC,UAAU,CAACuF,KAAhD,GAAwDvF,UAAU,CAAC+B,GAA1E;IACH;;;WACD,kBAAS3H,CAAT,EAAY;MACR,OAAOA,CAAC,CAACyyB,UAAF,GAAe,CAACzyB,CAAC,CAAC0yB,QAAF,GAAa1yB,CAAC,CAACyyB,UAAhB,IAA8B,CAApD;IACH;;;;;;AAELrB,iBAAiB,CAAC35B,IAAlB;EAAA,iBAA8G25B,iBAA9G,EAj8c0GziC,EAi8c1G,mBAAiJC,WAAjJ;AAAA;;AACAwiC,iBAAiB,CAACx5B,IAAlB,kBAl8c0GjJ,EAk8c1G;EAAA,MAAkGyiC,iBAAlG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAl8c0GziC,EAk8c1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAl8c0GA,EAm8ctG,2BADJ;MAl8c0GA,EAm8c/F,UADX;MAl8c0GA,EAm8cpF,eADtB;MAl8c0GA,EAo8ctG,iBAFJ;MAl8c0GA,EAo8ctG,qCAFJ;MAl8c0GA,EA48clG,UAVR;MAl8c0GA,EA68cpG,iBAXN;MAl8c0GA,EA+8ctG,wBAbJ;IAAA;;IAAA;MAl8c0GA,EAm8c/F,aADX;MAl8c0GA,EAm8c/F,6BADX;MAl8c0GA,EAo8c9D,aAF5C;MAl8c0GA,EAo8c9D,+EAF5C;MAl8c0GA,EAo8c/F,4CAFX;MAl8c0GA,EAy8clG,aAPR;MAl8c0GA,EAy8clG,8EAPR;MAl8c0GA,EAu8clG,yCALR;MAl8c0GA,EA48clG,aAVR;MAl8c0GA,EA48clG,sGAVR;MAl8c0GA,EAo9cpG,aAlBN;MAl8c0GA,EAo9cpG,yCAlBN;MAl8c0GA,EAg9cpG,gDAdN;IAAA;EAAA;EAAA;EAAA;AAAA;;AAqBA;EAAA,mDAv9c0GA,EAu9c1G,mBAA2FyiC,iBAA3F,EAA0H,CAAC;IAC/G36B,IAAI,EAAE5H,SADyG;IAE/G2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,yBADX;MAECC,QAAQ,upBAFT;MAuBCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAvB1C,CAAD;EAFyG,CAAD,CAA1H,EA2B4B,YAAY;IAAE,OAAO,CAAC;MAAElH,IAAI,EAAE3B,SAAR;MAAmBuD,UAAU,EAAE,CAAC;QAC9D5B,IAAI,EAAE1H,MADwD;QAE9DyD,IAAI,EAAE,CAAC5D,WAAD;MAFwD,CAAD;IAA/B,CAAD,CAAP;EAGlB,CA9BxB,EA8B0C;IAAE6Q,IAAI,EAAE,CAAC;MACnChJ,IAAI,EAAEzH;IAD6B,CAAD,CAAR;IAE1BsjB,MAAM,EAAE,CAAC;MACT7b,IAAI,EAAEzH;IADG,CAAD,CAFkB;IAI1B8O,KAAK,EAAE,CAAC;MACRrH,IAAI,EAAEzH;IADE,CAAD,CAJmB;IAM1B4P,KAAK,EAAE,CAAC;MACRnI,IAAI,EAAEzH;IADE,CAAD,CANmB;IAQ1ByC,GAAG,EAAE,CAAC;MACNgF,IAAI,EAAEzH;IADA,CAAD,CARqB;IAU1BkF,KAAK,EAAE,CAAC;MACRuC,IAAI,EAAEzH;IADE,CAAD,CAVmB;IAY1BgjC,aAAa,EAAE,CAAC;MAChBv7B,IAAI,EAAEzH;IADU,CAAD,CAZW;IAc1BsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CAdc;IAgB1BqiC,SAAS,EAAE,CAAC;MACZ56B,IAAI,EAAEzH;IADM,CAAD,CAhBe;IAkB1BsiC,aAAa,EAAE,CAAC;MAChB76B,IAAI,EAAEzH;IADU,CAAD;EAlBW,CA9B1C;AAAA;;IAoDM2jC,oB;EACF,gCAAc;IAAA;;IACV,KAAK3lB,eAAL,GAAuB,KAAvB;IACA,KAAK/P,QAAL,GAAgB,KAAhB;IACA,KAAKqD,UAAL,GAAkB,IAAlB;IACA,KAAK9P,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,KAAKsjC,YAAL,GAAoB,CAApB;IACA,KAAKthB,cAAL,GAAsBlB,cAAtB;IACA,KAAKmB,cAAL,GAAsBpd,cAAtB;IACA,KAAKqd,UAAL,GAAkBhF,UAAlB;EACH;;;;WACD,qBAAY7P,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MAAA;;MACL,KAAKkxB,eAAL;MACA,IAAMr/B,IAAI,GAAG,KAAKw/B,gBAAL,EAAb;MACA,IAAMjxB,IAAI,GAAG,KAAK+wB,QAAL,CAAc,KAAK/wB,IAAL,CAAUiE,MAAxB,CAAb;MACA,IAAMuO,UAAU,GAAG,KAAKxS,IAAL,CAAUd,IAA7B;MACA,IAAMk0B,eAAe,GAAG,KAAK/1B,MAAL,CAAYsE,SAAZ,KAA0B5E,SAAS,CAAC6E,MAA5D;MACA,IAAM7P,GAAG,GAAG,KAAKya,MAAL,CAAYlP,MAAZ,GAAqB,CAArB,CAAZ;MACA,KAAK+1B,WAAL,GAAmB,KAAKh2B,MAAL,CAAY6C,QAAZ,CAAqBkzB,eAAe,GAAGrhC,GAAH,GAASygB,UAA7C,CAAnB;MACA,KAAKqC,IAAL,GAAYpjB,IAAI,CAACuO,IAAD,CAAJ,IAAc,EAA1B;MACA,KAAK6tB,OAAL,GAAe7tB,IAAI,CAAC4L,GAAL,CAAS,UAAArL,CAAC,EAAI;QACzB,IAAMye,CAAC,GAAG,OAAI,CAACsU,QAAL,CAAc/yB,CAAd,CAAV;;QACA,IAAM+J,CAAC,GAAG,OAAI,CAACia,SAAL,CAAehkB,CAAf,CAAV;;QACA,IAAM9L,KAAK,GAAG8L,CAAC,CAAC9L,KAAhB;;QACA,IAAM0K,KAAK,GAAG,OAAI,CAAC9B,MAAL,CAAY6C,QAAZ,CAAqBkzB,eAAe,GAAGt1B,IAAI,CAAC+K,GAAL,CAASpU,KAAT,CAAH,GAAqB+d,UAAzD,CAAd;;QACA,IAAM+gB,KAAK,GAAGh/B,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBpE,CAAlB,EAAqB;UAC/B0D,MAAM,EAAEuO,UADuB;UAE/B/d,KAAK,EAALA,KAF+B;UAG/ByK,IAAI,EAAEqB,CAAC,CAACrB;QAHuB,CAArB,CAAd;QAKA,OAAO;UACHc,IAAI,EAAEuzB,KADH;UAEHniB,EAAE,EAAE9G,CAAC,GAAGxM,IAAI,CAACgL,GAAL,CAASkW,CAAT,CAFL;UAGH3N,EAAE,EAAE,CAAC/G,CAAD,GAAKxM,IAAI,CAAC6K,GAAL,CAASqW,CAAT,CAHN;UAIHvqB,KAAK,EAALA,KAJG;UAKH0K,KAAK,EAALA,KALG;UAMHd,KAAK,EAAEkC,CAAC,CAACrB;QANN,CAAP;MAQH,CAlBc,CAAf;MAmBA,KAAKwnB,MAAL,GAAc,KAAK9nB,QAAL,CAAc,KAAKoB,IAAnB,CAAd;MACA,KAAKwzB,QAAL,GAAgB,KAAKC,UAAL,CAAgB,KAAKzzB,IAArB,CAAhB;;MACA,KAAKomB,WAAL,GAAmB,KAAKA,WAAL,IAAqB,UAAAvoB,CAAC;QAAA,OAAI,OAAI,CAAC61B,kBAAL,CAAwB71B,CAAxB,CAAJ;MAAA,CAAzC;IACH;;;WACD,kBAAS0C,CAAT,EAAY;MACR,IAAMlC,KAAK,GAAGkC,CAAC,CAACrB,IAAhB;;MACA,IAAI,KAAKyC,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACnC,OAAO,KAAK3I,MAAL,CAAY1L,KAAZ,CAAP;MACH,CAFD,MAGK,IAAI,KAAKsD,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QAC1C,OAAO,KAAKmI,MAAL,CAAY4I,MAAM,CAACtU,KAAD,CAAlB,CAAP;MACH;;MACD,OAAO,KAAK0L,MAAL,CAAY1L,KAAZ,CAAP;IACH;;;WACD,mBAAUkC,CAAV,EAAa;MACT,OAAO,KAAKiM,MAAL,CAAYjM,CAAC,CAAC9L,KAAd,CAAP;IACH;;;WACD,4BAAmB;MAAA;;MACf,OAAO9C,UAAU,GACZkW,KADE,CACI,UAAAtH,CAAC;QAAA,OAAI,OAAI,CAAC+yB,QAAL,CAAc/yB,CAAd,CAAJ;MAAA,CADL,EAEFsS,MAFE,CAEK,UAAAtS,CAAC;QAAA,OAAI,OAAI,CAACgkB,SAAL,CAAehkB,CAAf,CAAJ;MAAA,CAFN,EAGF8f,KAHE,CAGI,KAAKA,KAHT,CAAP;IAIH;;;WACD,kBAASrgB,IAAT,EAAe;MACX,IAAI,KAAK2B,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QACrC,OAAOwd,UAAU,CAACpf,IAAD,EAAO,MAAP,CAAjB;MACH,CAFD,MAGK,IAAI,KAAK2B,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACxC,OAAOiN,UAAU,CAAC3f,IAAD,EAAO,MAAP,CAAjB;MACH;;MACD,OAAOsf,YAAY,CAACtf,IAAD,EAAO,MAAP,EAAe,KAAf,EAAsB,KAAK+J,MAAL,CAAYzM,MAAZ,EAAtB,CAAnB;IACH;;;WACD,kBAAS6C,KAAT,EAAgB;MACZ,IAAI,CAAC,KAAKC,aAAV,EACI,OAAO,KAAP;MACJ,IAAMC,IAAI,GAAG,KAAKD,aAAL,CAAmBE,IAAnB,CAAwB,UAAAC,CAAC,EAAI;QACtC,OAAOJ,KAAK,CAACjB,IAAN,KAAeqB,CAAC,CAACrB,IAAxB;MACH,CAFY,CAAb;MAGA,OAAOmB,IAAI,KAAKhL,SAAhB;IACH;;;WACD,oBAAW8K,KAAX,EAAkB;MACd,IAAI,CAAC,KAAKC,aAAN,IAAuB,KAAKA,aAAL,CAAmBtG,MAAnB,KAA8B,CAAzD,EACI,OAAO,KAAP;MACJ,IAAMuG,IAAI,GAAG,KAAKD,aAAL,CAAmBE,IAAnB,CAAwB,UAAAC,CAAC,EAAI;QACtC,OAAOJ,KAAK,CAACjB,IAAN,KAAeqB,CAAC,CAACrB,IAAxB;MACH,CAFY,CAAb;MAGA,OAAOmB,IAAI,KAAKhL,SAAhB;IACH;;;WACD,oCAAqC;MAAA,IAAhBgJ,KAAgB,UAAhBA,KAAgB;MAAA,IAAT5J,KAAS,UAATA,KAAS;MACjC,uDAC4B+J,WAAW,CAAC,KAAKwB,IAAL,CAAUd,IAAX,CADvC,qBAC6DV,WAAW,CAACH,KAAD,CADxE,wDAE0B5J,KAAK,CAAC8J,cAAN,EAF1B;IAIH;;;WACD,2BAAkB;MACd,KAAK8V,WAAL,GAAmB,KAAK7W,QAAL,IAAiB,KAAKH,MAAL,CAAYsE,SAAZ,KAA0B5E,SAAS,CAAC6E,MAAxE;;MACA,IAAI,CAAC,KAAKyS,WAAV,EAAuB;QACnB;MACH;;MACD,KAAKpC,UAAL,GAAkB,SAAS1B,EAAE,GAAG1N,QAAL,EAA3B;MACA,KAAKwsB,WAAL,kBAA2B,KAAKpd,UAAhC;;MACA,IAAI,KAAK5U,MAAL,CAAYsE,SAAZ,KAA0B5E,SAAS,CAAC6E,MAAxC,EAAgD;QAC5C,IAAM2Y,MAAM,GAAG,KAAKva,IAAL,CAAUiE,MAAV,CAAiB2H,GAAjB,CAAqB,UAAArL,CAAC;UAAA,OAAIA,CAAC,CAAC9L,KAAN;QAAA,CAAtB,CAAf;;QACA,IAAMzC,MAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAAhB;;QACA,IAAMxoB,MAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAAhB;;QACA,KAAKxH,aAAL,GAAqB,KAAK1V,MAAL,CAAYmjB,sBAAZ,CAAmCxuB,MAAnC,EAAwCD,MAAxC,CAArB;MACH,CALD,MAMK;QACD,KAAKghB,aAAL,GAAqB1d,SAArB;MACH;IACJ;;;;;;AAEL69B,oBAAoB,CAACl7B,IAArB;EAAA,iBAAiHk7B,oBAAjH;AAAA;;AACAA,oBAAoB,CAAC/6B,IAArB,kBAhod0GjJ,EAgod1G;EAAA,MAAqGgkC,oBAArG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAhod0GhkC,EAgod1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAhod0GA,EAiodtG,iBADJ;MAhod0GA,EAiodtG,qCADJ;MAhod0GA,EAmodlG,oEAHR;MAhod0GA,EA4odpG,eAZN;MAhod0GA,EA6odpG,qBAbN;MAhod0GA,EAwpdpG,qEAxBN;MAhod0GA,EA4qdtG,eA5CJ;IAAA;;IAAA;MAhod0GA,EAqod/F,aALX;MAhod0GA,EAqod/F,oCALX;MAhod0GA,EAkpdlG,aAlBR;MAhod0GA,EAkpdlG,4DAlBR;MAhod0GA,EAgpdlG,uLAhBR;MAhod0GA,EAopdlG,kDApBR;MAhod0GA,EA0pd/E,aA1B3B;MAhod0GA,EA0pd/E,mCA1B3B;IAAA;EAAA;EAAA,eA6C0C4kB,0BA7C1C,EA6C6M2c,aA7C7M,EA6CgUzf,eA7ChU,EA6C+hB9gB,EAAE,CAACkI,IA7CliB,EA6CgnBlI,EAAE,CAACwQ,OA7CnnB,EA6C0tBuM,gBA7C1tB;EAAA;EAAA;AAAA;;AA8CA;EAAA,mDA9qd0G/d,EA8qd1G,mBAA2FgkC,oBAA3F,EAA6H,CAAC;IAClHl8B,IAAI,EAAE5H,SAD4G;IAElH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,4BADX;MAECC,QAAQ,qiDAFT;MAgDCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAhD1C,CAAD;EAF4G,CAAD,CAA7H,QAoD4B;IAAEgB,IAAI,EAAE,CAAC;MACrBlI,IAAI,EAAEzH;IADe,CAAD,CAAR;IAEZyQ,IAAI,EAAE,CAAC;MACPhJ,IAAI,EAAEzH;IADC,CAAD,CAFM;IAIZwa,MAAM,EAAE,CAAC;MACT/S,IAAI,EAAEzH;IADG,CAAD,CAJI;IAMZid,MAAM,EAAE,CAAC;MACTxV,IAAI,EAAEzH;IADG,CAAD,CANI;IAQZ8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CARI;IAUZoS,SAAS,EAAE,CAAC;MACZ3K,IAAI,EAAEzH;IADM,CAAD,CAVC;IAYZ8wB,KAAK,EAAE,CAAC;MACRrpB,IAAI,EAAEzH;IADE,CAAD,CAZK;IAcZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAdH;IAgBZiiC,gBAAgB,EAAE,CAAC;MACnBx6B,IAAI,EAAEzH;IADa,CAAD,CAhBN;IAkBZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAlBL;IAoBZ62B,WAAW,EAAE,CAAC;MACdpvB,IAAI,EAAEzH;IADQ,CAAD,CApBD;IAsBZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CAtBE;IAwBZugB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAEzH;IADY,CAAD,CAxBL;IA0BZsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CA1BA;IA4BZwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CA5BI;IA8BZ+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CA9BE;IAgCZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD;EAhCA,CApD5B;AAAA;;AAwFA,IAAM6jC,KAAK,GAAG,IAAI71B,IAAI,CAAC8K,EAAvB;;IACMgrB,mB;;;;;EACF,+BAAc;IAAA;;IAAA;;IACV,+BAASngC,SAAT;IACA,QAAKitB,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAKgR,aAAL,GAAqB,IAArB;IACA,QAAK4Z,KAAL,GAAazuB,mBAAb;IACA,QAAKwO,aAAL,GAAqB,EAArB;IACA,QAAKoxB,gBAAL,GAAwB,IAAxB;IACA,QAAKzQ,cAAL,GAAsB,IAAtB;IACA,QAAKG,kBAAL,GAA0B,EAA1B;IACA,QAAKC,YAAL,GAAoB,KAApB;IACA,QAAK5T,eAAL,GAAuB,KAAvB;IACA,QAAKsmB,iBAAL,GAAyB,IAAzB;IACA,QAAKr2B,QAAL,GAAgB,KAAhB;IACA,QAAKs2B,aAAL,GAAqB,CAArB;IACA,QAAKlC,SAAL,GAAiB,IAAjB;IACA,QAAKC,aAAL,GAAqB,EAArB;IACA,QAAKhzB,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB,CAlBU,CAmBV;;IACA,QAAKsV,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKmX,WAAL,GAAmB,CAAnB;IACA,QAAKC,UAAL,GAAkB,CAAlB;IACA,QAAK3S,WAAL,GAAmB5E,WAAnB;IACA,QAAKgN,KAAL,GAAa,KAAb;IAxBU;EAyBb;;;;WACD,oBAAW;MACP,IAAI5hB,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKkb,KAAL,GAAa,IAAb;MACH;IACJ;;;WACD,kBAAS;MACL;;MACA,KAAK+hB,OAAL;MACA,KAAK5G,SAAL;MACA,KAAKnL,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,KAAK+R,QAAL;IACH;;;WACD,mBAAU;MACN,KAAKpwB,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCiX,SAAS,EAAE,KAAKuE,KAJgB;QAKhCtE,SAAS,EAAE,KAAKuE,KALgB;QAMhCtE,WAAW,EAAE,KAAKA,WANc;QAOhCC,UAAU,EAAE,KAAKA,UAPe;QAQhCC,UAAU,EAAE,KAAK+E,cARe;QAShC9E,UAAU,EAAE,KAAK+E,cATe;QAUhC5gB,UAAU,EAAE,KAAKma,MAVe;QAWhC7Z,UAAU,EAAE,KAAKiC,UAXe;QAYhCuZ,cAAc,EAAE,KAAKA;MAZW,CAAD,CAAnC;MAcA,IAAMuX,SAAS,GAAGn2B,IAAI,CAAC0D,KAAL,CAAW,KAAKoC,IAAL,CAAUlO,KAAV,GAAkB,CAA7B,CAAlB;MACA,IAAMw+B,UAAU,GAAGp2B,IAAI,CAAC0D,KAAL,CAAW,KAAKoC,IAAL,CAAUzO,MAAV,GAAmB,CAA9B,CAAnB;MACA,IAAMu9B,WAAW,GAAI,KAAKA,WAAL,GAAmB50B,IAAI,CAAC/L,GAAL,CAASmiC,UAAU,GAAG,GAAtB,EAA2BD,SAAS,GAAG,GAAvC,CAAxC;MACA,IAAME,OAAO,GAAGr2B,IAAI,CAAC9L,GAAL,CAAS,CAAT,EAAYkiC,UAAU,GAAGxB,WAAzB,CAAhB;MACA,KAAK0B,SAAL,mCACO,KAAKxwB,IADZ;QAEIlO,KAAK,EAAEu+B;MAFX;MAIA,KAAK3uB,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,eAAoD,KAAKzX,MAAL,CAAY,CAAZ,CAApD;MACA,KAAKkvB,cAAL,0BAAsCF,OAAtC;MACA,KAAK3qB,WAAL,GAAmB,KAAK5F,IAAL,CAAUzO,MAAV,GAAmB,EAAtC;MACA,KAAKm/B,aAAL,uBAAkCL,SAAlC,eAAgDC,UAAhD;IACH;;;WACD,qBAAY;MACR,IAAMK,OAAO,GAAG,KAAKC,UAAL,EAAhB;MACA,KAAK7yB,SAAL,GAAiB2c,YAAY,CAACiW,OAAD,CAA7B;MACA,KAAKva,OAAL,GAAe,KAAKyH,cAAL,IAAuB,KAAKxH,UAAL,CAAgBsa,OAAhB,CAAtC;MACA,KAAK7S,OAAL,GAAe,KAAKC,UAAL,EAAf;MACA,KAAKC,YAAL,GAAoB,KAAKC,eAAL,EAApB;MACA,KAAK9X,MAAL,GAAc,KAAKmQ,SAAL,CAAe,KAAKF,OAApB,EAA6B2Z,KAA7B,CAAd;MACA,KAAKnnB,MAAL,GAAc,KAAKsV,SAAL,CAAe,KAAKJ,OAApB,EAA6B,KAAKgR,WAAlC,CAAd;MACA,KAAK+B,UAAL,GAAkB,KAAK3S,SAAL,CAAe,KAAKJ,OAAL,CAAa/jB,OAAb,EAAf,EAAuC,KAAK+0B,WAA5C,CAAlB;IACH;;;WACD,oBAAW;MAAA;;MACP,IAAI/qB,UAAJ;;MACA,IAAI,KAAKyb,mBAAT,EAA8B;QAC1Bzb,UAAU,GAAG,KAAKyb,mBAAlB;MACH,CAFD,MAGK,IAAI,KAAKrZ,MAAL,CAAYpC,UAAhB,EAA4B;QAC7BA,UAAU,GAAG,KAAKoC,MAAL,CAAYpC,UAAZ,CAAuBrU,KAAvB,CAA6B,KAAKyW,MAAlC,EAA0C,CAAC,CAAD,CAA1C,CAAb;MACH,CAFI,MAGA;QACDpC,UAAU,GAAG,oBAAApH,CAAC,EAAI;UACd,IAAIqC,MAAM,CAACrC,CAAD,CAAV,EAAe;YACX,OAAOA,CAAC,CAACjC,kBAAF,EAAP;UACH;;UACD,OAAOiC,CAAC,CAAChC,cAAF,EAAP;QACH,CALD;MAMH;;MACD,IAAMm0B,WAAW,GAAG,KAAKA,WAAzB;MACA,IAAM/sB,CAAC,GAAG,GAAV;MACA,KAAK+uB,UAAL,GAAkB,KAAK1a,OAAL,CAAapO,GAAb,CAAiB,UAAArL,CAAC,EAAI;QACpC,IAAMyyB,UAAU,GAAG,OAAI,CAACjpB,MAAL,CAAYxJ,CAAZ,CAAnB;;QACA,IAAMo0B,EAAE,GAAGhvB,CAAC,GAAG+sB,WAAJ,IAAmBM,UAAU,GAAGl1B,IAAI,CAAC8K,EAAlB,GAAuB,CAAC,CAAxB,GAA4B,CAA/C,CAAX;QACA,IAAMvK,KAAK,GAAGsJ,UAAU,CAACpH,CAAD,CAAxB;QACA,IAAMq0B,QAAQ,GAAG,CAAClC,WAAW,GAAG50B,IAAI,CAACgL,GAAL,CAASkqB,UAAT,CAAf,EAAqC,CAACN,WAAD,GAAe50B,IAAI,CAAC6K,GAAL,CAASqqB,UAAT,CAApD,CAAjB;QACA,IAAMH,GAAG,GAAG,CAAC8B,EAAD,EAAKhvB,CAAC,GAAGivB,QAAQ,CAAC,CAAD,CAAjB,CAAZ;QACA,OAAO;UACHnC,WAAW,EAAE,CADV;UAEHC,WAAW,EAAXA,WAFG;UAGHM,UAAU,EAAVA,UAHG;UAIHC,QAAQ,EAAED,UAJP;UAKHv+B,KAAK,EAAEi+B,WALJ;UAMHr0B,KAAK,EAALA,KANG;UAOHu2B,QAAQ,EAARA,QAPG;UAQH/B,GAAG,EAAHA;QARG,CAAP;MAUH,CAhBiB,CAAlB;MAiBA,IAAMgC,WAAW,GAAG,EAApB;MACA;;MACA,KAAK,IAAIx6B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKq6B,UAAL,CAAgB56B,MAAhB,GAAyB,CAA7C,EAAgDO,CAAC,EAAjD,EAAqD;QACjD,IAAM2kB,CAAC,GAAG,KAAK0V,UAAL,CAAgBr6B,CAAhB,CAAV;;QACA,KAAK,IAAI6J,CAAC,GAAG7J,CAAC,GAAG,CAAjB,EAAoB6J,CAAC,GAAG,KAAKwwB,UAAL,CAAgB56B,MAAxC,EAAgDoK,CAAC,EAAjD,EAAqD;UACjD,IAAM6Q,CAAC,GAAG,KAAK2f,UAAL,CAAgBxwB,CAAhB,CAAV,CADiD,CAEjD;;UACA,IAAI6Q,CAAC,CAAC8d,GAAF,CAAM,CAAN,IAAW7T,CAAC,CAAC6T,GAAF,CAAM,CAAN,CAAX,GAAsB,CAA1B,EAA6B;YACzB;YACA,IAAMiC,CAAC,GAAGD,WAAW,GAAG/2B,IAAI,CAAC+K,GAAL,CAASkM,CAAC,CAAC8d,GAAF,CAAM,CAAN,IAAW7T,CAAC,CAAC6T,GAAF,CAAM,CAAN,CAApB,CAAxB;;YACA,IAAIiC,CAAC,GAAG,CAAR,EAAW;cACP;cACA/f,CAAC,CAAC8d,GAAF,CAAM,CAAN,KAAY/0B,IAAI,CAACmN,IAAL,CAAU8J,CAAC,CAAC8d,GAAF,CAAM,CAAN,CAAV,IAAsBiC,CAAlC;YACH;UACJ;QACJ;MACJ;;MACD,KAAKC,WAAL,GAAmB,KAAKN,UAAL,CAAgB1uB,KAAhB,CAAsBjI,IAAI,CAAC0D,KAAL,CAAW,KAAKoC,IAAL,CAAUzO,MAAV,GAAmB,EAA9B,CAAtB,EAAyDyW,GAAzD,CAA6D,UAAArL,CAAC;QAAA,OAAI,OAAI,CAACiM,MAAL,CAAYjM,CAAZ,CAAJ;MAAA,CAA9D,CAAnB;IACH;;;WACD,sBAAa;MACT,IAAMga,MAAM,GAAG,EAAf;;MADS,6CAEa,KAAK7W,OAFlB;MAAA;;MAAA;QAET,0DAAoC;UAAA,IAAzBA,OAAyB;;UAAA,6CAChBA,OAAO,CAACO,MADQ;UAAA;;UAAA;YAChC,0DAAgC;cAAA,IAArB1D,CAAqB;;cAC5B,IAAI,CAACga,MAAM,CAACC,QAAP,CAAgBja,CAAC,CAACrB,IAAlB,CAAL,EAA8B;gBAC1Bqb,MAAM,CAAC3f,IAAP,CAAY2F,CAAC,CAACrB,IAAd;cACH;YACJ;UAL+B;YAAA;UAAA;YAAA;UAAA;QAMnC;MARQ;QAAA;MAAA;QAAA;MAAA;;MAST,OAAOqb,MAAP;IACH;;;WACD,sBAAuC;MAAA,IAA5BA,MAA4B,uEAAnB,KAAKia,UAAL,EAAmB;;MACnC,IAAI,KAAK7yB,SAAL,KAAmB5E,SAAS,CAAC2V,IAAjC,EAAuC;QACnC,IAAM3gB,MAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAAhB;;QACA,IAAMvoB,MAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAAhB;;QACA,OAAO,CAACxoB,MAAD,EAAMC,MAAN,CAAP;MACH,CAJD,MAKK,IAAI,KAAK2P,SAAL,KAAmB5E,SAAS,CAAC6E,MAAjC,EAAyC;QAC1C2Y,MAAM,GAAGA,MAAM,CAAC3O,GAAP,CAAW,UAAAyM,CAAC;UAAA,OAAI1F,MAAM,CAAC0F,CAAD,CAAV;QAAA,CAAZ,CAAT;;QACA,IAAMtmB,MAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAAhB;;QACA,IAAMvoB,MAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAAhB;;QACA,OAAO,CAACxoB,MAAD,EAAMC,MAAN,CAAP;MACH;;MACD,OAAOuoB,MAAP;IACH;;;WACD,sBAAa;MACT,IAAMjd,MAAM,GAAG,EAAf;;MADS,6CAEa,KAAKoG,OAFlB;MAAA;;MAAA;QAET,0DAAoC;UAAA,IAAzBA,OAAyB;;UAAA,6CAChBA,OAAO,CAACO,MADQ;UAAA;;UAAA;YAChC,0DAAgC;cAAA,IAArB1D,CAAqB;;cAC5B,IAAIjD,MAAM,CAACtD,OAAP,CAAeuG,CAAC,CAAC9L,KAAjB,IAA0B,CAA9B,EAAiC;gBAC7B6I,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAAC9L,KAAd;cACH;;cACD,IAAI8L,CAAC,CAACxO,GAAF,KAAUsD,SAAd,EAAyB;gBACrB,IAAIiI,MAAM,CAACtD,OAAP,CAAeuG,CAAC,CAACxO,GAAjB,IAAwB,CAA5B,EAA+B;kBAC3BuL,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAACxO,GAAd;gBACH;cACJ;;cACD,IAAIwO,CAAC,CAACvO,GAAF,KAAUqD,SAAd,EAAyB;gBACrB,IAAIiI,MAAM,CAACtD,OAAP,CAAeuG,CAAC,CAACvO,GAAjB,IAAwB,CAA5B,EAA+B;kBAC3BsL,MAAM,CAAC1C,IAAP,CAAY2F,CAAC,CAACvO,GAAd;gBACH;cACJ;YACJ;UAf+B;YAAA;UAAA;YAAA;UAAA;QAgBnC;MAlBQ;QAAA;MAAA;QAAA;MAAA;;MAmBT,OAAOsL,MAAP;IACH;;;WACD,sBAAuC;MAAA,IAA5BA,MAA4B,uEAAnB,KAAK03B,UAAL,EAAmB;MACnC,IAAIjjC,GAAG,GAAG+L,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQR,MAAR,EAAd;MACA,IAAMtL,GAAG,GAAG8L,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,GAAK,KAAKg2B,aAAV,4BAA4Bx2B,MAA5B,GAAhB;MACAvL,GAAG,GAAG+L,IAAI,CAAC9L,GAAL,CAAS,CAAT,EAAYD,GAAZ,CAAN;;MACA,IAAI,CAAC,KAAKipB,SAAV,EAAqB;QACjBjpB,GAAG,GAAG+L,IAAI,CAAC/L,GAAL,CAAS,CAAT,EAAYA,GAAZ,CAAN;MACH;;MACD,OAAO,CAACA,GAAD,EAAMC,GAAN,CAAP;IACH;;;WACD,2BAAkB;MACd,OAAO,KAAK0R,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAACrB,IAAN;MAAA,CAAlB,CAAP;IACH;;;WACD,mBAAU5B,MAAV,EAAkB5H,KAAlB,EAAyB;MACrB,QAAQ,KAAKiM,SAAb;QACI,KAAK5E,SAAS,CAAC2V,IAAf;UACI,OAAOzhB,SAAS,GAAGa,KAAZ,CAAkB,CAAC,CAAD,EAAI4D,KAAJ,CAAlB,EAA8B4H,MAA9B,CAAqCA,MAArC,CAAP;;QACJ,KAAKP,SAAS,CAAC6E,MAAf;UAAuB;YACnB,IAAM4F,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAAC,CAAD,EAAI4D,KAAJ,CAApB,EAAgC4H,MAAhC,CAAuCA,MAAvC,CAAd;YACA,OAAO,KAAK6jB,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;UACH;;QACD;UACI,OAAOrW,UAAU,GACZW,KADE,CACI,CAAC,CAAD,EAAI4D,KAAK,GAAGi+B,KAAK,GAAGr2B,MAAM,CAACxD,MAA3B,CADJ,EAEF6P,OAFE,CAEM,CAFN,EAGFrM,MAHE,CAGKA,MAHL,CAAP;MARR;IAaH;;;WACD,mBAAUA,MAAV,EAAkBnI,MAAlB,EAA0B;MACtB,IAAMqS,KAAK,GAAGtW,WAAW,GAAGY,KAAd,CAAoB,CAAC,CAAD,EAAIqD,MAAJ,CAApB,EAAiCmI,MAAjC,CAAwCA,MAAxC,CAAd;MACA,OAAO,KAAK6jB,YAAL,GAAoB3Z,KAAK,CAACmb,IAAN,EAApB,GAAmCnb,KAA1C;IACH;;;WACD,iBAAQxH,IAAR,EAAciE,MAAd,EAAsB;MAClB,IAAIA,MAAJ,EAAY;QACRjE,IAAI,CAACiE,MAAL,GAAcA,MAAM,CAAC/E,IAArB;MACH;;MACD,KAAKnO,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,IAAM1C,MAAM,GAAG,KAAK6F,UAAL,KAAoBpG,SAAS,CAACqG,OAA9B,GAAwC,KAAKwe,YAA7C,GAA4D,KAAKF,OAAL,CAAa/jB,OAAb,EAA3E;MACA,KAAKN,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6B,KAAKC,UAAlC,EAA8C7F,MAA9C,EAAsD,KAAKyH,YAA3D,CAAd;IACH;;;WACD,4BAAmB;MACf,IAAI,KAAK5B,UAAL,KAAoBpG,SAAS,CAACqG,OAAlC,EAA2C;QACvC,OAAO;UACHzB,SAAS,EAAE,KAAKwB,UADb;UAEH9F,MAAM,EAAE,KAAKA,MAFV;UAGHC,MAAM,EAAE,KAAKskB,YAHV;UAIH/oB,KAAK,EAAE,KAAK6nB,WAJT;UAKHxpB,QAAQ,EAAE,KAAKwlB;QALZ,CAAP;MAOH;;MACD,OAAO;QACH/a,SAAS,EAAE,KAAKwB,UADb;QAEH9F,MAAM,EAAE,KAAKA,MAAL,CAAYmK,KAFjB;QAGHlK,MAAM,EAAE,KAAKokB,OAHV;QAIH7oB,KAAK,EAAExD,SAJJ;QAKH6B,QAAQ,EAAE,KAAKwlB;MALZ,CAAP;IAOH;;;WACD,kCAA4B;MAAA,IAAThnB,KAAS,UAATA,KAAS;MACxB,KAAK6mB,UAAL,GAAkB7mB,KAAlB;MACA,KAAKkK,MAAL;IACH;;;WACD,mCAA8B;MAAA,IAAVzK,MAAU,UAAVA,MAAU;MAC1B,KAAKmnB,WAAL,GAAmBnnB,MAAnB;MACA,KAAKyK,MAAL;IACH;;;WACD,oBAAWS,IAAX,EAAiB;MACb,IAAMtG,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAhD;MACH,CAFW,CAAZ;;MAGA,IAAIsF,GAAG,GAAG,CAAC,CAAX,EAAc;QACV;MACH;;MACD,KAAKqG,aAAL,GAAqB,KAAKyzB,iBAAL,IAA0BxzB,IAA1B,4BAAmC,KAAKD,aAAxC,KAAyD,KAAKA,aAAnF;MACA,KAAKvB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAaC,IAAb,EAAmB;MACf,IAAMtG,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAhD;MACH,CAFW,CAAZ;MAGA,KAAK2L,aAAL,CAAmBlG,MAAnB,CAA0BH,GAA1B,EAA+B,CAA/B;MACA,KAAKqG,aAAL,sBAAyB,KAAKA,aAA9B;MACA,KAAKtB,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;WACD,yBAAgB;MACZ,KAAKA,aAAL,sBAAyB,KAAKA,aAA9B;;MADY,6CAEQ,KAAKA,aAFb;MAAA;;MAAA;QAEZ,0DAAwC;UAAA,IAA7BD,KAA6B;UACpC,KAAKrB,UAAL,CAAgBG,IAAhB,CAAqB;YAAExK,KAAK,EAAE0L,KAAT;YAAgB8iB,OAAO,EAAE;UAAzB,CAArB;QACH;MAJW;QAAA;MAAA;QAAA;MAAA;;MAKZ,KAAK7iB,aAAL,GAAqB,EAArB;IACH;;;WACD,iBAAQI,KAAR,EAAeH,IAAf,EAAqB;MACjB,iBAAUA,IAAI,CAACnB,IAAf;IACH;;;;EAhR6B8D,kB;;AAkRlC4wB,mBAAmB,CAAC57B,IAApB;EAAA;EAAA;IAAA,gFAzhe0G9I,EAyhe1G,uBAAgH0kC,mBAAhH,SAAgHA,mBAAhH;EAAA;AAAA;;AACAA,mBAAmB,CAACz7B,IAApB,kBA1he0GjJ,EA0he1G;EAAA,MAAoG0kC,mBAApG;EAAA;EAAA;IAAA;MA1he0G1kC,EA0he1G;IAAA;;IAAA;MAAA;;MA1he0GA,EA0he1G,qBA1he0GA,EA0he1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WA1he0GA,EA0he1G;EAAA;EAAA;EAAA;EAAA;IAAA;MA1he0GA,EA2hetG,yCADJ;MA1he0GA,EAiiepG;QAAA,OAAoB,mBAApB;MAAA;QAAA,OACuB,sBADvB;MAAA;QAAA,OAEyB,wBAFzB;MAAA,EAPN;MA1he0GA,EAqiepG,iBAXN;MA1he0GA,EAqiepG,kCAXN;MA1he0GA,EAuiehG,0BAbV;MA1he0GA,EAwiehG,mEAdV;MA1he0GA,EAijehG,mEAvBV;MA1he0GA,EAgkelG,eAtCR;MA1he0GA,EAikelG,mEAvCR;MA1he0GA,EA+kelG,mEArDR;MA1he0GA,EAwlelG,mEA9DR;MA1he0GA,EA8melG,mEApFR;MA1he0GA,EAooepG,iBA1GN;IAAA;;IAAA;MA1he0GA,EA4hepG,oBA5heoGA,EA4hepG,kLAFN;MA1he0GA,EAqienE,aAXvC;MA1he0GA,EAqienE,wCAXvC;MA1he0GA,EAsie3F,aAZf;MA1he0GA,EAsie3F,4CAZf;MA1he0GA,EAuievC,aAbnE;MA1he0GA,EAuievC,kCAbnE;MA1he0GA,EAwiexF,aAdlB;MA1he0GA,EAwiexF,sCAdlB;MA1he0GA,EAijexF,aAvBlB;MA1he0GA,EAijexF,8BAvBlB;MA1he0GA,EAoke/F,aA1CX;MA1he0GA,EAoke/F,8BA1CX;MA1he0GA,EAile/F,aAvDX;MA1he0GA,EAile/F,oDAvDX;MA1he0GA,EAwle1F,aA9DhB;MA1he0GA,EAwle1F,+BA9DhB;MA1he0GA,EA8me1F,aApFhB;MA1he0GA,EA8me1F,8BApFhB;IAAA;EAAA;EAAA,eA4GkiFyR,cA5GliF,EA4GuwFgxB,iBA5GvwF,EA4Go8FxlB,cA5Gp8F,EA4G+vGlH,kBA5G/vG,EA4G63GiuB,oBA5G73G,EA4GosHhjC,EAAE,CAACkI,IA5GvsH,EA4GqxHlI,EAAE,CAACwQ,OA5GxxH;EAAA;EAAA;EAAA;IAAA,WA4Go4H,CAC53H/P,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACFiiB,OAAO,EAAE;IADP,CAAD,CADY,EAIjBhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MACfiiB,OAAO,EAAE;IADM,CAAD,CAAX,CAJU,CAAX,CADY,CAAnB,CADq3H;EA5Gp4H;EAAA;AAAA;;AAwHA;EAAA,mDAlpe0G5jB,EAkpe1G,mBAA2F0kC,mBAA3F,EAA4H,CAAC;IACjH58B,IAAI,EAAE5H,SAD2G;IAEjH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,wBAAZ;MAAsCC,QAAQ,olIAA9C;MA4GdC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IA5GnB;MA4GyBuF,eAAe,EAAErO,uBAAuB,CAACsO,MA5GlE;MA4G0E2C,UAAU,EAAE,CACjFlQ,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;QACFiiB,OAAO,EAAE;MADP,CAAD,CADY,EAIjBhiB,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;QACfiiB,OAAO,EAAE;MADM,CAAD,CAAX,CAJU,CAAX,CADY,CAAnB,CAD0E,CA5GtF;MAuHIna,MAAM,EAAE,CAAC,yvDAAD,EAA4vD,6fAA5vD,EAA2vE,kPAA3vE;IAvHZ,CAAD;EAF2G,CAAD,CAA5H,QA0H4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAFD;IAIZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZoxB,KAAK,EAAE,CAAC;MACR3pB,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZqxB,KAAK,EAAE,CAAC;MACR5pB,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZgyB,cAAc,EAAE,CAAC;MACjBvqB,IAAI,EAAEzH;IADW,CAAD,CAVJ;IAYZiyB,cAAc,EAAE,CAAC;MACjBxqB,IAAI,EAAEzH;IADW,CAAD,CAZJ;IAcZ2zB,UAAU,EAAE,CAAC;MACblsB,IAAI,EAAEzH;IADO,CAAD,CAdA;IAgBZ4zB,UAAU,EAAE,CAAC;MACbnsB,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZyrB,SAAS,EAAE,CAAC;MACZhkB,IAAI,EAAEzH;IADM,CAAD,CAlBC;IAoBZkX,aAAa,EAAE,CAAC;MAChBzP,IAAI,EAAEzH;IADU,CAAD,CApBH;IAsBZ8wB,KAAK,EAAE,CAAC;MACRrpB,IAAI,EAAEzH;IADE,CAAD,CAtBK;IAwBZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAxBH;IA0BZ4T,UAAU,EAAE,CAAC;MACbnM,IAAI,EAAEzH;IADO,CAAD,CA1BA;IA4BZiiC,gBAAgB,EAAE,CAAC;MACnBx6B,IAAI,EAAEzH;IADa,CAAD,CA5BN;IA8BZwxB,cAAc,EAAE,CAAC;MACjB/pB,IAAI,EAAEzH;IADW,CAAD,CA9BJ;IAgCZ2xB,kBAAkB,EAAE,CAAC;MACrBlqB,IAAI,EAAEzH;IADe,CAAD,CAhCR;IAkCZ6zB,mBAAmB,EAAE,CAAC;MACtBpsB,IAAI,EAAEzH;IADgB,CAAD,CAlCT;IAoCZ8zB,mBAAmB,EAAE,CAAC;MACtBrsB,IAAI,EAAEzH;IADgB,CAAD,CApCT;IAsCZ4xB,YAAY,EAAE,CAAC;MACfnqB,IAAI,EAAEzH;IADS,CAAD,CAtCF;IAwCZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAxCL;IA0CZskC,iBAAiB,EAAE,CAAC;MACpB78B,IAAI,EAAEzH;IADc,CAAD,CA1CP;IA4CZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CA5CE;IA8CZukC,aAAa,EAAE,CAAC;MAChB98B,IAAI,EAAEzH;IADU,CAAD,CA9CH;IAgDZqiC,SAAS,EAAE,CAAC;MACZ56B,IAAI,EAAEzH;IADM,CAAD,CAhDC;IAkDZsiC,aAAa,EAAE,CAAC;MAChB76B,IAAI,EAAEzH;IADU,CAAD,CAlDH;IAoDZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CApDE;IAsDZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAtDA;IAwDZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD;EAxDL,CA1H5B;AAAA;;IAuLMkiC,e;EACF,yBAAYr+B,OAAZ,EAAqB;IAAA;;IACjB,KAAKo8B,UAAL,GAAkB,CAAlB;IACA,KAAKC,QAAL,GAAgBn1B,IAAI,CAAC8K,EAAL,GAAU,CAA1B;IACA,KAAKssB,YAAL,GAAoB,CAApB;IACA,KAAK3C,aAAL,GAAqB,KAArB;IACA,KAAK/0B,QAAL,GAAgB,KAAhB;IACA,KAAK1M,OAAL,GAAe,IAAf;IACA,KAAKygB,aAAL,GAAqB,IAArB;IACA,KAAK3S,QAAL,GAAgB,KAAhB;IACA,KAAK7N,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,KAAKslC,QAAL,GAAgB,IAAItlC,YAAJ,EAAhB;IACA,KAAKgiB,cAAL,GAAsBlB,cAAtB;IACA,KAAKiJ,WAAL,GAAmB,KAAnB;IACA,KAAKhjB,OAAL,GAAeA,OAAO,CAACS,aAAvB;EACH;;;;WACD,qBAAY6F,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,uBAAc;MACV,OAAO,KAAKpC,QAAL,GAAgB,KAAK0U,YAArB,GAAoC,KAAKzI,IAAhD;IACH;;;WACD,4BAAmB;MACf,OAAO,KAAK8H,aAAL,GAAqB,MAArB,GAA8B,MAArC;IACH;;;WACD,kBAAS;MACL,IAAM6jB,IAAI,GAAG,KAAKC,YAAL,EAAb;MACA,KAAKnhB,YAAL,GAAoB,GAApB;MACA,KAAKohB,gBAAL,GAAwB,eAAe/kB,EAAE,GAAG1N,QAAL,EAAvC;MACA,KAAKqP,YAAL,kBAA4B,KAAKojB,gBAAjC;;MACA,IAAI,KAAKxkC,OAAT,EAAkB;QACd,IAAI,KAAK8oB,WAAT,EAAsB;UAClB,KAAK2b,eAAL;QACH,CAFD,MAGK;UACD,KAAKjhB,aAAL;UACA,KAAKsF,WAAL,GAAmB,IAAnB;QACH;MACJ,CARD,MASK;QACD,KAAK/E,IAAL,GAAYugB,IAAI,CAACpC,UAAL,CAAgB,KAAKA,UAArB,EAAiCC,QAAjC,CAA0C,KAAKA,QAA/C,GAAZ;MACH;IACJ;;;WACD,wBAAe;MACX,IAAIP,WAAW,GAAG,KAAKA,WAAvB;;MACA,IAAI,KAAKH,aAAL,IAAsB,KAAKE,WAAL,KAAqB,CAA/C,EAAkD;QAC9CC,WAAW,GAAI,KAAKA,WAAL,GAAmB,KAAKj+B,KAAzB,GAAkC,KAAKzC,GAArD;MACH;;MACD,OAAON,GAAG,GAAG+gC,WAAN,CAAkB,KAAKA,WAAvB,EAAoCC,WAApC,CAAgDA,WAAhD,EAA6DwC,YAA7D,CAA0E,KAAKA,YAA/E,CAAP;IACH;;;WACD,yBAAgB;MACZ,IAAMvgB,IAAI,GAAG5jB,MAAM,CAAC,KAAK6F,OAAN,CAAN,CACRszB,SADQ,CACE,MADF,EAERlqB,IAFQ,CAEH,CAAC;QAAEgzB,UAAU,EAAE,KAAKA,UAAnB;QAA+BC,QAAQ,EAAE,KAAKA;MAA9C,CAAD,CAFG,CAAb;MAGA,IAAMmC,IAAI,GAAG,KAAKC,YAAL,EAAb;MACA1gB,IAAI,CACC/jB,UADL,GAEKw5B,SAFL,CAEe,GAFf,EAEoB,UAAU7pB,CAAV,EAAa;QAC7B,KAAKi1B,QAAL,GAAgB,KAAKA,QAAL,IAAiBj1B,CAAjC;QACA,IAAMk1B,OAAO,GAAGlhC,MAAM,CAACoQ,MAAP,CAAc,EAAd,EAAkBpE,CAAlB,CAAhB;QACAk1B,OAAO,CAACxC,QAAR,GAAmBwC,OAAO,CAACzC,UAA3B;QACA,IAAM0C,YAAY,GAAGxjC,WAAW,CAACujC,OAAD,EAAUA,OAAV,CAAhC;QACA,KAAKD,QAAL,GAAgBE,YAAY,CAAC,CAAD,CAA5B;QACA,OAAO,UAAUxpB,CAAV,EAAa;UAChB,OAAOkpB,IAAI,CAACM,YAAY,CAACxpB,CAAD,CAAb,CAAX;QACH,CAFD;MAGH,CAXD,EAYKtb,UAZL,GAaKkD,QAbL,CAac,GAbd,EAcKs2B,SAdL,CAce,GAdf,EAcoB,UAAU7pB,CAAV,EAAa;QAC7B,KAAKi1B,QAAL,GAAgB,KAAKA,QAAL,IAAiBj1B,CAAjC;QACA,IAAMm1B,YAAY,GAAGxjC,WAAW,CAAC,KAAKsjC,QAAN,EAAgBj1B,CAAhB,CAAhC;QACA,KAAKi1B,QAAL,GAAgBE,YAAY,CAAC,CAAD,CAA5B;QACA,OAAO,UAAUxpB,CAAV,EAAa;UAChB,OAAOkpB,IAAI,CAACM,YAAY,CAACxpB,CAAD,CAAb,CAAX;QACH,CAFD;MAGH,CArBD;IAsBH;;;WACD,2BAAkB;MACd,IAAMyI,IAAI,GAAG5jB,MAAM,CAAC,KAAK6F,OAAN,CAAN,CACRszB,SADQ,CACE,MADF,EAERlqB,IAFQ,CAEH,CAAC;QAAEgzB,UAAU,EAAE,KAAKA,UAAnB;QAA+BC,QAAQ,EAAE,KAAKA;MAA9C,CAAD,CAFG,CAAb;MAGA,IAAMmC,IAAI,GAAG,KAAKC,YAAL,EAAb;MACA1gB,IAAI,CACC/jB,UADL,GAEKkD,QAFL,CAEc,GAFd,EAGKs2B,SAHL,CAGe,GAHf,EAGoB,UAAU7pB,CAAV,EAAa;QAC7B,KAAKi1B,QAAL,GAAgB,KAAKA,QAAL,IAAiBj1B,CAAjC;QACA,IAAMm1B,YAAY,GAAGxjC,WAAW,CAAC,KAAKsjC,QAAN,EAAgBj1B,CAAhB,CAAhC;QACA,KAAKi1B,QAAL,GAAgBE,YAAY,CAAC,CAAD,CAA5B;QACA,OAAO,UAAUxpB,CAAV,EAAa;UAChB,OAAOkpB,IAAI,CAACM,YAAY,CAACxpB,CAAD,CAAb,CAAX;QACH,CAFD;MAGH,CAVD;IAWH;;;WACD,mBAAU;MAAA;;MACNxY,YAAY,CAAC,KAAKiiC,QAAN,CAAZ;MACA,KAAKA,QAAL,GAAgB/hC,UAAU,CAAC;QAAA,OAAM,OAAI,CAAC7C,MAAL,CAAYkO,IAAZ,CAAiB,OAAI,CAACe,IAAtB,CAAN;MAAA,CAAD,EAAoC,GAApC,CAA1B;IACH;;;WACD,oBAAW2P,KAAX,EAAkB;MACdA,KAAK,CAACimB,cAAN;MACAjmB,KAAK,CAACkmB,eAAN;MACAniC,YAAY,CAAC,KAAKiiC,QAAN,CAAZ;MACA,KAAKR,QAAL,CAAcl2B,IAAd,CAAmB;QACfe,IAAI,EAAE,KAAKA,IADI;QAEf81B,WAAW,EAAEnmB;MAFE,CAAnB;IAIH;;;;;;AAELslB,eAAe,CAACj9B,IAAhB;EAAA,iBAA4Gi9B,eAA5G,EAx7e0G/lC,EAw7e1G,mBAA6IA,EAAE,CAAC+I,UAAhJ;AAAA;;AACAg9B,eAAe,CAAC98B,IAAhB,kBAz7e0GjJ,EAy7e1G;EAAA,MAAgG+lC,eAAhG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAz7e0G/lC,EAy7e1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAz7e0GA,EA07etG,iBADJ;MAz7e0GA,EA07etG,0BADJ;MAz7e0GA,EA27epG,qEAFN;MAz7e0GA,EA87epG,6BALN;MAz7e0GA,EAm8elG;QAAA,OAAS,aAAT;MAAA;QAAA,OACY,sBADZ;MAAA;QAAA,OAEc,2BAFd;MAAA;QAAA,OAGc,6BAHd;MAAA,EAVR;MAz7e0GA,EA87epG,iBALN;IAAA;;IAAA;MAz7e0GA,EA27ezF,aAFjB;MAz7e0GA,EA27ezF,iCAFjB;MAz7e0GA,EAu8elG,aAdR;MAz7e0GA,EAu8elG,sDAdR;MAz7e0GA,EAi8elG,oCARR;MAz7e0GA,EA+7elG,sDANR;IAAA;EAAA;EAAA,eAiB0C4kB,0BAjB1C,EAiB2N5jB,EAAE,CAACkI,IAjB9N;EAAA;EAAA;AAAA;;AAkBA;EAAA,mDA38e0GlJ,EA28e1G,mBAA2F+lC,eAA3F,EAAwH,CAAC;IAC7Gj+B,IAAI,EAAE5H,SADuG;IAE7G2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,uBADX;MAECC,QAAQ,smBAFT;MAoBCyF,eAAe,EAAErO,uBAAuB,CAACsO;IApB1C,CAAD;EAFuG,CAAD,CAAxH,EAwB4B,YAAY;IAAE,OAAO,CAAC;MAAElH,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAD,CAAP;EAAmC,CAxB7E,EAwB+F;IAAEwR,IAAI,EAAE,CAAC;MACxFzS,IAAI,EAAEzH;IADkF,CAAD,CAAR;IAE/EyjC,UAAU,EAAE,CAAC;MACbh8B,IAAI,EAAEzH;IADO,CAAD,CAFmE;IAI/E0jC,QAAQ,EAAE,CAAC;MACXj8B,IAAI,EAAEzH;IADK,CAAD,CAJqE;IAM/EkjC,WAAW,EAAE,CAAC;MACdz7B,IAAI,EAAEzH;IADQ,CAAD,CANkE;IAQ/EmjC,WAAW,EAAE,CAAC;MACd17B,IAAI,EAAEzH;IADQ,CAAD,CARkE;IAU/E2lC,YAAY,EAAE,CAAC;MACfl+B,IAAI,EAAEzH;IADS,CAAD,CAViE;IAY/EkF,KAAK,EAAE,CAAC;MACRuC,IAAI,EAAEzH;IADE,CAAD,CAZwE;IAc/EyC,GAAG,EAAE,CAAC;MACNgF,IAAI,EAAEzH;IADA,CAAD,CAd0E;IAgB/EyQ,IAAI,EAAE,CAAC;MACPhJ,IAAI,EAAEzH;IADC,CAAD,CAhByE;IAkB/EgjC,aAAa,EAAE,CAAC;MAChBv7B,IAAI,EAAEzH;IADU,CAAD,CAlBgE;IAoB/EiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CApBqE;IAsB/EuB,OAAO,EAAE,CAAC;MACVkG,IAAI,EAAEzH;IADI,CAAD,CAtBsE;IAwB/EgiB,aAAa,EAAE,CAAC;MAChBva,IAAI,EAAEzH;IADU,CAAD,CAxBgE;IA0B/EqP,QAAQ,EAAE,CAAC;MACX5H,IAAI,EAAEzH;IADK,CAAD,CA1BqE;IA4B/EwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CA5BuE;IA8B/E+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CA9BqE;IAgC/EgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAhCmE;IAkC/EqlC,QAAQ,EAAE,CAAC;MACXn+B,IAAI,EAAElH;IADK,CAAD;EAlCqE,CAxB/F;AAAA;;IA8DMimC,kB;EACF,8BAAc;IAAA;;IACV,KAAK9xB,MAAL,GAAc,EAAd;IACA,KAAKwuB,WAAL,GAAmB,EAAnB;IACA,KAAKC,WAAL,GAAmB,EAAnB;IACA,KAAKsD,UAAL,GAAkB,IAAlB;IACA,KAAKC,cAAL,GAAsB,EAAtB;IACA,KAAK1oB,eAAL,GAAuB,KAAvB;IACA,KAAK1M,UAAL,GAAkB,IAAlB;IACA,KAAK9P,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,KAAKslC,QAAL,GAAgB,IAAItlC,YAAJ,EAAhB;IACA,KAAKiiB,cAAL,GAAsBpd,cAAtB;IACA,KAAKqd,UAAL,GAAkBhF,UAAlB;EACH;;;;WACD,qBAAY7P,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MACL,IAAMs2B,YAAY,GAAGrkC,GAAG,GACnB4C,KADgB,CACV,UAAA8L,CAAC;QAAA,OAAIA,CAAC,CAAC9L,KAAN;MAAA,CADS,EAEhBsqB,IAFgB,CAEX,IAFW,CAArB;MAGA,IAAMoX,OAAO,GAAGD,YAAY,CAAC,KAAKjyB,MAAN,CAA5B;MACA,KAAKjS,GAAL,GAAWA,GAAG,CAACmkC,OAAD,EAAU,UAAA51B,CAAC,EAAI;QACzB,OAAOA,CAAC,CAAC9L,KAAT;MACH,CAFa,CAAd;MAGA,KAAKuL,IAAL,GAAY,KAAKo2B,uBAAL,CAA6BD,OAA7B,CAAZ;MACA,KAAK/P,WAAL,GAAmB,KAAKA,WAAL,IAAoB,KAAKsN,kBAA5C;IACH;;;WACD,kBAASnzB,CAAT,EAAY;MACR,OAAOA,CAAC,CAACyyB,UAAF,GAAe,CAACzyB,CAAC,CAAC0yB,QAAF,GAAa1yB,CAAC,CAACyyB,UAAhB,IAA8B,CAApD;IACH;;;WACD,oBAAW;MACP,IAAMqD,MAAM,GAAG,GAAf;MACA,OAAO3kC,GAAG,GACL+gC,WADE,CACU,KAAKC,WAAL,GAAmB2D,MAD7B,EAEF3D,WAFE,CAEU,KAAKA,WAAL,GAAmB2D,MAF7B,CAAP;IAGH;;;WACD,iCAAwBC,OAAxB,EAAiC;MAAA;;MAC7B,IAAMD,MAAM,GAAG,GAAf;MACA,IAAMxB,WAAW,GAAG,EAApB;MACA,IAAM0B,cAAc,GAAGD,OAAvB;MACAC,cAAc,CAAC34B,OAAf,CAAuB,UAAA2C,CAAC,EAAI;QACxBA,CAAC,CAACsyB,GAAF,GAAQ,OAAI,CAAC2D,QAAL,GAAgB5D,QAAhB,CAAyBryB,CAAzB,CAAR;QACAA,CAAC,CAACsyB,GAAF,CAAM,CAAN,IAAWwD,MAAM,GAAG,OAAI,CAAC3D,WAAd,IAA6B,OAAI,CAACK,QAAL,CAAcxyB,CAAd,IAAmBzC,IAAI,CAAC8K,EAAxB,GAA6B,CAA7B,GAAiC,CAAC,CAA/D,CAAX;MACH,CAHD;;MAIA,KAAK,IAAIvO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGk8B,cAAc,CAACz8B,MAAf,GAAwB,CAA5C,EAA+CO,CAAC,EAAhD,EAAoD;QAChD,IAAM2kB,CAAC,GAAGuX,cAAc,CAACl8B,CAAD,CAAxB;;QACA,IAAI,CAAC,KAAKo8B,YAAL,CAAkBzX,CAAlB,CAAL,EAA2B;UACvB;QACH;;QACD,KAAK,IAAI9a,CAAC,GAAG7J,CAAC,GAAG,CAAjB,EAAoB6J,CAAC,GAAGqyB,cAAc,CAACz8B,MAAvC,EAA+CoK,CAAC,EAAhD,EAAoD;UAChD,IAAM6Q,CAAC,GAAGwhB,cAAc,CAACryB,CAAD,CAAxB;;UACA,IAAI,CAAC,KAAKuyB,YAAL,CAAkB1hB,CAAlB,CAAL,EAA2B;YACvB;UACH,CAJ+C,CAKhD;;;UACA,IAAIA,CAAC,CAAC8d,GAAF,CAAM,CAAN,IAAW7T,CAAC,CAAC6T,GAAF,CAAM,CAAN,CAAX,GAAsB,CAA1B,EAA6B;YACzB;YACA,IAAMiC,CAAC,GAAGD,WAAW,GAAG/2B,IAAI,CAAC+K,GAAL,CAASkM,CAAC,CAAC8d,GAAF,CAAM,CAAN,IAAW7T,CAAC,CAAC6T,GAAF,CAAM,CAAN,CAApB,CAAxB;;YACA,IAAIiC,CAAC,GAAG,CAAR,EAAW;cACP;cACA/f,CAAC,CAAC8d,GAAF,CAAM,CAAN,KAAY/0B,IAAI,CAACmN,IAAL,CAAU8J,CAAC,CAAC8d,GAAF,CAAM,CAAN,CAAV,IAAsBiC,CAAlC;YACH;UACJ;QACJ;MACJ;;MACD,OAAOyB,cAAP;IACH;;;WACD,sBAAaG,KAAb,EAAoB;MAChB,OAAO,KAAKC,UAAL,IAAmBD,KAAK,CAACzD,QAAN,GAAiByD,KAAK,CAAC1D,UAAvB,GAAoCl1B,IAAI,CAAC8K,EAAL,GAAU,EAAxE;IACH;;;WACD,yBAAgBoW,CAAhB,EAAmB;MACf,OAAO,KAAKlP,eAAL,GAAuBza,SAAvB,GAAmC,KAAK+wB,WAAL,CAAiBpH,CAAjB,CAA1C;IACH;;;WACD,mBAAU0X,KAAV,EAAiB;MACb,IAAI,KAAKvb,eAAT,EAA0B;QACtB,OAAO,KAAKA,eAAL,CAAqBub,KAAK,CAAC12B,IAAN,CAAWd,IAAhC,CAAP;MACH;;MACD,OAAO,KAAKb,KAAL,CAAWq4B,KAAX,CAAP;IACH;;;WACD,eAAMA,KAAN,EAAa;MACT,OAAOt4B,WAAW,CAACs4B,KAAK,CAAC12B,IAAN,CAAWd,IAAZ,CAAlB;IACH;;;WACD,4BAAmBw3B,KAAnB,EAA0B;MACtB,IAAMr4B,KAAK,GAAG,KAAKA,KAAL,CAAWq4B,KAAX,CAAd;MACA,IAAMxgB,GAAG,GAAG9X,WAAW,CAACs4B,KAAK,CAAC12B,IAAN,CAAWvL,KAAZ,CAAvB;MACA,uDAC4B+J,WAAW,CAACH,KAAD,CADvC,wDAE0B6X,GAF1B;IAIH;;;WACD,eAAMwgB,KAAN,EAAa;MACT,OAAO,KAAKr5B,MAAL,CAAY6C,QAAZ,CAAqB,KAAK7B,KAAL,CAAWq4B,KAAX,CAArB,CAAP;IACH;;;WACD,iBAAQl2B,KAAR,EAAeH,IAAf,EAAqB;MACjB,OAAOA,IAAI,CAACL,IAAL,CAAUd,IAAjB;IACH;;;WACD,iBAAQc,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,kBAASG,KAAT,EAAgB;MACZ,IAAI,CAAC,KAAKC,aAAV,EACI,OAAO,KAAP;MACJ,IAAMC,IAAI,GAAG,KAAKD,aAAL,CAAmBE,IAAnB,CAAwB,UAAAC,CAAC,EAAI;QACtC,OAAOJ,KAAK,CAACjB,IAAN,KAAeqB,CAAC,CAACrB,IAAjB,IAAyBiB,KAAK,CAAC8D,MAAN,KAAiB1D,CAAC,CAAC0D,MAAnD;MACH,CAFY,CAAb;MAGA,OAAO5D,IAAI,KAAKhL,SAAhB;IACH;;;;;;AAEL0gC,kBAAkB,CAAC/9B,IAAnB;EAAA,iBAA+G+9B,kBAA/G;AAAA;;AACAA,kBAAkB,CAAC59B,IAAnB,kBAznf0GjJ,EAynf1G;EAAA,MAAmG6mC,kBAAnG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAznf0G7mC,EAynf1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAznf0GA,EA0nftG,mEADJ;IAAA;;IAAA;MAznf0GA,EA0nf/E,6DAD3B;IAAA;EAAA;EAAA,eA2C0CyiC,iBA3C1C,EA2CuOsD,eA3CvO,EA2CqiB/kC,EAAE,CAACwQ,OA3CxiB,EA2C+oBxQ,EAAE,CAACkI,IA3ClpB,EA2CguB6U,gBA3ChuB;EAAA;EAAA;AAAA;;AA4CA;EAAA,mDArqf0G/d,EAqqf1G,mBAA2F6mC,kBAA3F,EAA2H,CAAC;IAChH/+B,IAAI,EAAE5H,SAD0G;IAEhH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,0BADX;MAECC,QAAQ,68CAFT;MA8CCyF,eAAe,EAAErO,uBAAuB,CAACsO;IA9C1C,CAAD;EAF0G,CAAD,CAA3H,QAkD4B;IAAEb,MAAM,EAAE,CAAC;MACvBrG,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZ0U,MAAM,EAAE,CAAC;MACTjN,IAAI,EAAEzH;IADG,CAAD,CAFI;IAIZqU,IAAI,EAAE,CAAC;MACP5M,IAAI,EAAEzH;IADC,CAAD,CAJM;IAMZkjC,WAAW,EAAE,CAAC;MACdz7B,IAAI,EAAEzH;IADQ,CAAD,CAND;IAQZmjC,WAAW,EAAE,CAAC;MACd17B,IAAI,EAAEzH;IADQ,CAAD,CARD;IAUZgjC,aAAa,EAAE,CAAC;MAChBv7B,IAAI,EAAEzH;IADU,CAAD,CAVH;IAYZonC,UAAU,EAAE,CAAC;MACb3/B,IAAI,EAAEzH;IADO,CAAD,CAZA;IAcZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CAdE;IAgBZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAhBH;IAkBZ4rB,eAAe,EAAE,CAAC;MAClBnkB,IAAI,EAAEzH;IADY,CAAD,CAlBL;IAoBZymC,UAAU,EAAE,CAAC;MACbh/B,IAAI,EAAEzH;IADO,CAAD,CApBA;IAsBZ0mC,cAAc,EAAE,CAAC;MACjBj/B,IAAI,EAAEzH;IADW,CAAD,CAtBJ;IAwBZ62B,WAAW,EAAE,CAAC;MACdpvB,IAAI,EAAEzH;IADQ,CAAD,CAxBD;IA0BZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CA1BL;IA4BZugB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAEzH;IADY,CAAD,CA5BL;IA8BZsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CA9BA;IAgCZwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CAhCI;IAkCZ+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAlCE;IAoCZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CApCA;IAsCZqlC,QAAQ,EAAE,CAAC;MACXn+B,IAAI,EAAElH;IADK,CAAD;EAtCE,CAlD5B;AAAA;;IA4FM8mC,yB;;;;;EACF,qCAAc;IAAA;;IAAA;;IACV,+BAASnjC,SAAT;IACA,QAAK2M,aAAL,GAAqB,EAArB;IACA,QAAKmN,eAAL,GAAuB,KAAvB;IACA,QAAKlP,KAAL,GAAa,OAAb;IACA,QAAKQ,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAKsV,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IAPU;EAQb;;;;WACD,kBAAS;MACL;;MACA,KAAKvB,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAG,KAAKA,KAAL,GAAa,CAAd,GAAmB,IADM;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX;MAHkB,CAAD,CAAnC;MAKA,KAAK6hB,WAAL;MACA,KAAK1pB,MAAL,GAAc,KAAKkwB,SAAL,EAAd;MACA,KAAKxL,SAAL;MACA,IAAMpF,OAAO,GAAG,KAAKhZ,IAAL,CAAUlO,KAAV,GAAkB,CAAlC;MACA,IAAMy+B,OAAO,GAAG,KAAKhvB,MAAL,CAAY,CAAZ,IAAiB,KAAKvB,IAAL,CAAUzO,MAAV,GAAmB,CAApD;MACA,KAAKuM,WAAL,GAAmB,KAAKhM,KAAL,GAAa,KAAKkO,IAAL,CAAUlO,KAAvB,GAA+B,KAAKyP,MAAL,CAAY,CAAZ,CAAlD;MACA,KAAKutB,WAAL,GAAmB50B,IAAI,CAAC/L,GAAL,CAAS,KAAK6R,IAAL,CAAUlO,KAAnB,EAA0B,KAAKkO,IAAL,CAAUzO,MAApC,IAA8C,GAAjE;MACA,KAAKs9B,WAAL,GAAmB,KAAKC,WAAL,GAAmB,IAAtC;MACA,KAAKptB,SAAL,uBAA8BsX,OAA9B,gBAA2CuX,OAA3C;IACH;;;WACD,qBAAY;MACR,OAAO,KAAKzwB,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAAClC,KAAN;MAAA,CAAlB,CAAP;IACH;;;WACD,iBAAQ2B,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,KAAK3C,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6BnG,SAAS,CAACqG,OAAvC,EAAgD,KAAK9F,MAArD,EAA6D,KAAKyH,YAAlE,CAAd;IACH;;;WACD,oBAAW1E,IAAX,EAAqC;MAAA,IAApB8mB,UAAoB,uEAAP,KAAO;MACjC9mB,IAAI,GAAG,KAAKqD,OAAL,CAAapD,IAAb,CAAkB,UAAAC,CAAC,EAAI;QAC1B,IAAI4mB,UAAJ,EAAgB;UACZ,OAAO5mB,CAAC,CAAClC,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAOqB,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAvB;QACH;MACJ,CAPM,CAAP;MAQA,IAAMnF,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAzC,IAAkD8L,CAAC,CAAC0D,MAAF,KAAa5D,IAAI,CAAC4D,MAA3E;MACH,CAFW,CAAZ;;MAGA,IAAIlK,GAAG,GAAG,CAAC,CAAX,EAAc;QACV;MACH;;MACD,KAAKqG,aAAL,IAAsBC,IAAtB,4BAA+B,KAAKD,aAApC;MACA,KAAKvB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAaC,IAAb,EAAuC;MAAA,IAApB8mB,UAAoB,uEAAP,KAAO;MACnC9mB,IAAI,GAAG,KAAKqD,OAAL,CAAapD,IAAb,CAAkB,UAAAC,CAAC,EAAI;QAC1B,IAAI4mB,UAAJ,EAAgB;UACZ,OAAO5mB,CAAC,CAAClC,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAOqB,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAvB;QACH;MACJ,CAPM,CAAP;MAQA,IAAMnF,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAzC,IAAkD8L,CAAC,CAAC0D,MAAF,KAAa5D,IAAI,CAAC4D,MAA3E;MACH,CAFW,CAAZ;MAGA,KAAK7D,aAAL,CAAmBlG,MAAnB,CAA0BH,GAA1B,EAA+B,CAA/B;MACA,KAAKqG,aAAL,sBAAyB,KAAKA,aAA9B;MACA,KAAKtB,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;;EArEmC4C,kB;;AAuExC4zB,yBAAyB,CAAC5+B,IAA1B;EAAA;EAAA;IAAA,4FAx0f0G9I,EAw0f1G,uBAAsH0nC,yBAAtH,SAAsHA,yBAAtH;EAAA;AAAA;;AACAA,yBAAyB,CAACz+B,IAA1B,kBAz0f0GjJ,EAy0f1G;EAAA,MAA0G0nC,yBAA1G;EAAA;EAAA;IAAA;MAz0f0G1nC,EAy0f1G;IAAA;;IAAA;MAAA;;MAz0f0GA,EAy0f1G,qBAz0f0GA,EAy0f1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WAz0f0GA,EAy0f1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAz0f0GA,EA00ftG,gEADJ;MAz0f0GA,EA60fhG,iBAJV;MAz0f0GA,EA60fhG,qCAJV;MAz0f0GA,EAy1f5F;QAAA,OAAU,mBAAV;MAAA;QAAA,OACY,sBADZ;MAAA;QAAA,OAEc,wBAFd;MAAA,EAhBd;MAz0f0GA,EA61f7F,qBApBb;MAz0f0GA,EAi2fpG,kBAxBN;MAz0f0GA,EAi2fpG,gEAxBN;MAz0f0GA,EA22fhG;QAAA,OAAU,mBAAV;MAAA;QAAA,OACY,uBAAmB,IAAnB,CADZ;MAAA;QAAA,OAEc,yBAAqB,IAArB,CAFd;MAAA,EAlCV;MAz0f0GA,EA+2flG,mBAtCR;IAAA;;IAAA;MAz0f0GA,EA00fjG,kEADT;MAz0f0GA,EA20fpE,aAFtC;MAz0f0GA,EA20fpE,4EAFtC;MAz0f0GA,EA40fhF,aAH1B;MAz0f0GA,EA40fhF,oBA50fgFA,EA40fhF,qGAH1B;MAz0f0GA,EA60fzF,aAJjB;MAz0f0GA,EA60fzF,wCAJjB;MAz0f0GA,EAg1f5F,aAPd;MAz0f0GA,EAg1f5F,oUAPd;MAz0f0GA,EAi2f3D,aAxB/C;MAz0f0GA,EAi2f3D,mFAxB/C;MAz0f0GA,EAm2fhG,aA1BV;MAz0f0GA,EAm2fhG,8RA1BV;IAAA;EAAA;EAAA,eAyCq5DyR,cAzCr5D,EAyC0nEo1B,kBAzC1nE,EAyC++E9a,uBAzC/+E;EAAA;EAAA;EAAA;AAAA;;AA0CA;EAAA,mDAn3f0G/rB,EAm3f1G,mBAA2F0nC,yBAA3F,EAAkI,CAAC;IACvH5/B,IAAI,EAAE5H,SADiH;IAEvH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,+BAAZ;MAA6CC,QAAQ,ixDAArD;MAyCdC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAzCnB;MAyCyBuF,eAAe,EAAErO,uBAAuB,CAACsO,MAzClE;MAyC0EvF,MAAM,EAAE,CAAC,yvDAAD,EAA4vD,oGAA5vD;IAzClF,CAAD;EAFiH,CAAD,CAAlI,QA4C4B;IAAE6E,QAAQ,EAAE,CAAC;MACzBxG,IAAI,EAAEzH;IADmB,CAAD,CAAZ;IAEZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAFH;IAIZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAJL;IAMZ62B,WAAW,EAAE,CAAC;MACdpvB,IAAI,EAAEzH;IADQ,CAAD,CAND;IAQZ8O,KAAK,EAAE,CAAC;MACRrH,IAAI,EAAEzH;IADE,CAAD,CARK;IAUZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAVE;IAYZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAZA;IAcZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD,CAdL;IAiBZikB,eAAe,EAAE,CAAC;MAClBhgB,IAAI,EAAEzH;IADY,CAAD,CAjBL;IAmBZsnC,cAAc,EAAE,CAAC;MACjB7/B,IAAI,EAAEzH;IADW,CAAD,CAnBJ;IAqBZ6rB,oBAAoB,EAAE,CAAC;MACvBpkB,IAAI,EAAEzH;IADiB,CAAD;EArBV,CA5C5B;AAAA;;IAqEMunC,iB;;;;;EACF,6BAAc;IAAA;;IAAA;;IACV,+BAASrjC,SAAT;IACA,QAAKsjC,MAAL,GAAc,KAAd;IACA,QAAKhc,MAAL,GAAc,KAAd;IACA,QAAK2F,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAK88B,aAAL,GAAqB,KAArB;IACA,QAAKyE,QAAL,GAAgB,KAAhB;IACA,QAAKC,QAAL,GAAgB,IAAhB;IACA,QAAK72B,aAAL,GAAqB,EAArB;IACA,QAAKmN,eAAL,GAAuB,KAAvB;IACA,QAAKyoB,UAAL,GAAkB,IAAlB;IACA,QAAKC,cAAL,GAAsB,EAAtB;IACA,QAAKd,QAAL,GAAgB,IAAItlC,YAAJ,EAAhB;IACA,QAAKkB,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,QAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IAhBU;EAiBb;;;;WACD,kBAAS;MAAA;;MACL;;MACA,IAAI,KAAKknC,MAAL,IAAe,KAAKG,uBAAL,EAAnB,EAAmD;QAC/C,KAAK/a,OAAL,GAAe,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAf;MACH,CAFD,MAGK,IAAI,CAAC,KAAK4a,MAAN,IAAgB,KAAKG,uBAAL,EAApB,EAAoD;QACrD;QACA,KAAK/a,OAAL,GAAe,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAf;MACH;;MACD,KAAKvY,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKA,OAHkB;QAIhCvb,UAAU,EAAE,KAAKma,MAJe;QAKhC2B,cAAc,EAAE,KAAKA;MALW,CAAD,CAAnC;MAOA,KAAKsK,WAAL;MACA,IAAMpK,OAAO,GAAG,KAAKT,OAAL,CAAa,CAAb,IAAkB,KAAKvY,IAAL,CAAUlO,KAAV,GAAkB,CAApD;MACA,IAAMy+B,OAAO,GAAG,KAAKhY,OAAL,CAAa,CAAb,IAAkB,KAAKvY,IAAL,CAAUzO,MAAV,GAAmB,CAArD;MACA,KAAKgiC,WAAL,uBAAgCva,OAAhC,eAA4CuX,OAA5C;MACA,KAAKzB,WAAL,GAAmB50B,IAAI,CAAC/L,GAAL,CAAS,KAAK6R,IAAL,CAAUlO,KAAnB,EAA0B,KAAKkO,IAAL,CAAUzO,MAApC,CAAnB;;MACA,IAAI,KAAK4hC,MAAT,EAAiB;QACb;QACA,KAAKrE,WAAL,IAAoB,CAApB;MACH,CAHD,MAIK;QACD,KAAKA,WAAL,IAAoB,CAApB;MACH;;MACD,KAAKD,WAAL,GAAmB,CAAnB;;MACA,IAAI,KAAKuE,QAAT,EAAmB;QACf,KAAKvE,WAAL,GAAmB,KAAKC,WAAL,IAAoB,IAAI,KAAKuE,QAA7B,CAAnB;MACH;;MACD,KAAK35B,MAAL,GAAc,KAAKkwB,SAAL,EAAd,CAhCK,CAiCL;;MACA,KAAKxtB,IAAL,GAAY,KAAK0D,OAAL,CAAaqb,IAAb,CAAkB,UAACC,CAAD,EAAIjK,CAAJ,EAAU;QACpC,OAAO,OAAI,CAACzX,MAAL,CAAYtD,OAAZ,CAAoBglB,CAAC,CAAC9f,IAAtB,IAA8B,OAAI,CAAC5B,MAAL,CAAYtD,OAAZ,CAAoB+a,CAAC,CAAC7V,IAAtB,CAArC;MACH,CAFW,CAAZ;MAGA,KAAK8iB,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;IACH;;;WACD,qBAAY;MACR,OAAO,KAAKve,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAAClC,KAAN;MAAA,CAAlB,CAAP;IACH;;;WACD,iBAAQ2B,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,KAAK3C,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6BnG,SAAS,CAACqG,OAAvC,EAAgD,KAAK9F,MAArD,EAA6D,KAAKyH,YAAlE,CAAd;IACH;;;WACD,4BAAmB;MACf,OAAO;QACHpD,SAAS,EAAE5E,SAAS,CAACqG,OADlB;QAEH9F,MAAM,EAAE,KAAKA,MAFV;QAGHD,MAAM,EAAE,KAAKA,MAHV;QAIHxE,KAAK,EAAE,KAAK6nB,WAJT;QAKHxpB,QAAQ,EAAE,KAAKwlB;MALZ,CAAP;IAOH;;;WACD,oBAAWrc,IAAX,EAAqC;MAAA,IAApB8mB,UAAoB,uEAAP,KAAO;MACjC9mB,IAAI,GAAG,KAAKqD,OAAL,CAAapD,IAAb,CAAkB,UAAAC,CAAC,EAAI;QAC1B,IAAI4mB,UAAJ,EAAgB;UACZ,OAAO5mB,CAAC,CAAClC,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAOqB,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAvB;QACH;MACJ,CAPM,CAAP;MAQA,IAAMnF,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAzC,IAAkD8L,CAAC,CAAC0D,MAAF,KAAa5D,IAAI,CAAC4D,MAA3E;MACH,CAFW,CAAZ;;MAGA,IAAIlK,GAAG,GAAG,CAAC,CAAX,EAAc;QACV;MACH;;MACD,KAAKqG,aAAL,IAAsBC,IAAtB,4BAA+B,KAAKD,aAApC;MACA,KAAKvB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAaC,IAAb,EAAuC;MAAA,IAApB8mB,UAAoB,uEAAP,KAAO;MACnC9mB,IAAI,GAAG,KAAKqD,OAAL,CAAapD,IAAb,CAAkB,UAAAC,CAAC,EAAI;QAC1B,IAAI4mB,UAAJ,EAAgB;UACZ,OAAO5mB,CAAC,CAAClC,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAOqB,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAvB;QACH;MACJ,CAPM,CAAP;MAQA,IAAMnF,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAzC,IAAkD8L,CAAC,CAAC0D,MAAF,KAAa5D,IAAI,CAAC4D,MAA3E;MACH,CAFW,CAAZ;MAGA,KAAK7D,aAAL,CAAmBlG,MAAnB,CAA0BH,GAA1B,EAA+B,CAA/B;MACA,KAAKqG,aAAL,sBAAyB,KAAKA,aAA9B;MACA,KAAKtB,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;WACD,mCAA0B;MACtB,OAAO,CAAC,KAAK+b,OAAN,IAAiB,KAAKA,OAAL,CAAariB,MAAb,IAAuB,CAA/C;IACH;;;;EAjH2BkJ,kB;;AAmHhC8zB,iBAAiB,CAAC9+B,IAAlB;EAAA;EAAA;IAAA,4EA3igB0G9I,EA2igB1G,uBAA8G4nC,iBAA9G,SAA8GA,iBAA9G;EAAA;AAAA;;AACAA,iBAAiB,CAAC3+B,IAAlB,kBA5igB0GjJ,EA4igB1G;EAAA,MAAkG4nC,iBAAlG;EAAA;EAAA;IAAA;MA5igB0G5nC,EA4igB1G;IAAA;;IAAA;MAAA;;MA5igB0GA,EA4igB1G,qBA5igB0GA,EA4igB1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WA5igB0GA,EA4igB1G;EAAA;EAAA;EAAA;EAAA;IAAA;MA5igB0GA,EA6igBtG,yCADJ;MA5igB0GA,EAmjgBpG;QAAA,OAAuB,uBAAmB,IAAnB,CAAvB;MAAA;QAAA,OACyB,yBAAqB,IAArB,CADzB;MAAA;QAAA,OAEoB,mBAFpB;MAAA,EAPN;MA5igB0GA,EAujgBpG,iBAXN;MA5igB0GA,EAujgBpG,qCAXN;MA5igB0GA,EAykgBhG;QAAA,OAAY,yBAAZ;MAAA;QAAA,OACU,mBADV;MAAA;QAAA,OAEY,sBAFZ;MAAA;QAAA,OAGc,wBAHd;MAAA,EA7BV;MA5igB0GA,EAwjgBlG,mBAZR;IAAA;;IAAA;MA5igB0GA,EA8igBpG,oBA9igBoGA,EA8igBpG,kLAFN;MA5igB0GA,EAujgB7F,aAXb;MA5igB0GA,EAujgB7F,0CAXb;MA5igB0GA,EA0jgBhG,aAdV;MA5igB0GA,EA0jgBhG,2eAdV;IAAA;EAAA;EAAA,eAoC8yEyR,cApC9yE,EAoCmhFo1B,kBApCnhF;EAAA;EAAA;EAAA;AAAA;;AAqCA;EAAA,mDAjlgB0G7mC,EAilgB1G,mBAA2F4nC,iBAA3F,EAA0H,CAAC;IAC/G9/B,IAAI,EAAE5H,SADyG;IAE/G2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,sBAAZ;MAAoCC,QAAQ,+0CAA5C;MAoCdC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IApCnB;MAoCyBuF,eAAe,EAAErO,uBAAuB,CAACsO,MApClE;MAoC0EvF,MAAM,EAAE,CAAC,yvDAAD,EAA4vD,6fAA5vD;IApClF,CAAD;EAFyG,CAAD,CAA1H,QAuC4B;IAAEo+B,MAAM,EAAE,CAAC;MACvB//B,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZwrB,MAAM,EAAE,CAAC;MACT/jB,IAAI,EAAEzH;IADG,CAAD,CAFI;IAIZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAJD;IAMZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CANJ;IAQZgjC,aAAa,EAAE,CAAC;MAChBv7B,IAAI,EAAEzH;IADU,CAAD,CARH;IAUZynC,QAAQ,EAAE,CAAC;MACXhgC,IAAI,EAAEzH;IADK,CAAD,CAVE;IAYZ0nC,QAAQ,EAAE,CAAC;MACXjgC,IAAI,EAAEzH;IADK,CAAD,CAZE;IAcZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CAdE;IAgBZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAhBH;IAkBZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAlBL;IAoBZ4rB,eAAe,EAAE,CAAC;MAClBnkB,IAAI,EAAEzH;IADY,CAAD,CApBL;IAsBZymC,UAAU,EAAE,CAAC;MACbh/B,IAAI,EAAEzH;IADO,CAAD,CAtBA;IAwBZ0mC,cAAc,EAAE,CAAC;MACjBj/B,IAAI,EAAEzH;IADW,CAAD,CAxBJ;IA0BZ62B,WAAW,EAAE,CAAC;MACdpvB,IAAI,EAAEzH;IADQ,CAAD,CA1BD;IA4BZ4lC,QAAQ,EAAE,CAAC;MACXn+B,IAAI,EAAElH;IADK,CAAD,CA5BE;IA8BZqsB,OAAO,EAAE,CAAC;MACVnlB,IAAI,EAAEzH;IADI,CAAD,CA9BG;IAgCZwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CAhCI;IAkCZ+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAlCE;IAoCZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CApCA;IAsCZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD;EAtCL,CAvC5B;AAAA;;AAkFA,SAASqkC,QAAT,CAAkBxzB,IAAlB,EAAwB0E,GAAxB,EAA6B+uB,QAA7B,EAAuC;EACnC,IAAIC,IAAI,GAAG,CAAX;EACA,IAAIC,IAAI,GAAGjvB,GAAX;EACA,IAAM5S,KAAK,GAAGkO,IAAI,CAAClO,KAAnB;;EACA,IAAIA,KAAK,GAAG2hC,QAAZ,EAAsB;IAClB,OAAO3hC,KAAK,GAAG6hC,IAAR,GAAeF,QAAtB,EAAgC;MAC5BC,IAAI,IAAI,CAAR;MACAC,IAAI,GAAGz5B,IAAI,CAAC05B,IAAL,CAAUlvB,GAAG,GAAGgvB,IAAhB,CAAP;IACH;EACJ;;EACD,OAAO,CAACC,IAAD,EAAOD,IAAP,CAAP;AACH;;AACD,SAASG,UAAT,CAAoB7zB,IAApB,EAA0B5D,IAA1B,EAAgCq3B,QAAhC,EAA0CK,eAA1C,EAA2D;EACvD,IAAM3tB,MAAM,GAAGzY,SAAS,EAAxB;EACA,IAAMkb,MAAM,GAAGlb,SAAS,EAAxB;EACA,IAAMoE,KAAK,GAAGkO,IAAI,CAAClO,KAAnB;EACA,IAAMP,MAAM,GAAGyO,IAAI,CAACzO,MAApB;;EACA,gBAAwBiiC,QAAQ,CAACxzB,IAAD,EAAO5D,IAAI,CAAClG,MAAZ,EAAoBu9B,QAApB,CAAhC;EAAA;EAAA,IAAO1a,OAAP;EAAA,IAAgB2a,IAAhB;;EACA,IAAMtd,OAAO,GAAG,EAAhB;EACA,IAAM0H,OAAO,GAAG,EAAhB;;EACA,KAAK,IAAIrnB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGi9B,IAApB,EAA0Bj9B,CAAC,EAA3B,EAA+B;IAC3BqnB,OAAO,CAAC9mB,IAAR,CAAaP,CAAb;EACH;;EACD,KAAK,IAAIA,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGsiB,OAApB,EAA6BtiB,EAAC,EAA9B,EAAkC;IAC9B2f,OAAO,CAACpf,IAAR,CAAaP,EAAb;EACH;;EACD0P,MAAM,CAACzM,MAAP,CAAc0c,OAAd;EACAxN,MAAM,CAAClP,MAAP,CAAcokB,OAAd;EACA3X,MAAM,CAACkd,UAAP,CAAkB,CAAC,CAAD,EAAIvxB,KAAJ,CAAlB,EAA8B,GAA9B;EACA8W,MAAM,CAACya,UAAP,CAAkB,CAAC,CAAD,EAAI9xB,MAAJ,CAAlB,EAA+B,GAA/B;EACA,IAAMwiC,GAAG,GAAG,EAAZ;EACA,IAAMlc,KAAK,GAAGic,eAAe,GAAGA,eAAH,GAAqBhc,QAAQ,CAAC1b,IAAD,CAA1D;EACA,IAAM43B,SAAS,GAAG7tB,MAAM,CAAC/B,SAAP,EAAlB;EACA,IAAM6vB,UAAU,GAAGrrB,MAAM,CAACxE,SAAP,EAAnB;;EACA,KAAK,IAAI3N,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG2F,IAAI,CAAClG,MAAzB,EAAiCO,GAAC,EAAlC,EAAsC;IAClCs9B,GAAG,CAACt9B,GAAD,CAAH,GAAS,EAAT;IACAs9B,GAAG,CAACt9B,GAAD,CAAH,CAAO2F,IAAP,GAAc;MACVd,IAAI,EAAEc,IAAI,CAAC3F,GAAD,CAAJ,GAAU2F,IAAI,CAAC3F,GAAD,CAAJ,CAAQ6E,IAAlB,GAAyB,EADrB;MAEVzK,KAAK,EAAEuL,IAAI,CAAC3F,GAAD,CAAJ,GAAU2F,IAAI,CAAC3F,GAAD,CAAJ,CAAQ5F,KAAlB,GAA0BY,SAFvB;MAGVyiC,KAAK,EAAE93B,IAAI,CAAC3F,GAAD,CAAJ,GAAU2F,IAAI,CAAC3F,GAAD,CAAJ,CAAQy9B,KAAlB,GAA0BziC,SAHvB;MAIVgJ,KAAK,EAAE2B,IAAI,CAAC3F,GAAD,CAAJ,GAAU2F,IAAI,CAAC3F,GAAD,CAAJ,CAAQgE,KAAlB,GAA0B;IAJvB,CAAd;IAMAs5B,GAAG,CAACt9B,GAAD,CAAH,CAAOS,CAAP,GAAWiP,MAAM,CAAC1P,GAAC,GAAGsiB,OAAL,CAAjB;IACAgb,GAAG,CAACt9B,GAAD,CAAH,CAAOmL,CAAP,GAAWgH,MAAM,CAAC1O,IAAI,CAAC0D,KAAL,CAAWnH,GAAC,GAAGsiB,OAAf,CAAD,CAAjB;IACAgb,GAAG,CAACt9B,GAAD,CAAH,CAAO3E,KAAP,GAAekiC,SAAf;IACAD,GAAG,CAACt9B,GAAD,CAAH,CAAOlF,MAAP,GAAgB0iC,UAAhB;IACAF,GAAG,CAACt9B,GAAD,CAAH,CAAO2F,IAAP,CAAY+3B,OAAZ,GAAsBtc,KAAK,GAAG,CAAR,GAAYkc,GAAG,CAACt9B,GAAD,CAAH,CAAO2F,IAAP,CAAYvL,KAAZ,GAAoBgnB,KAAhC,GAAwC,CAA9D;IACAkc,GAAG,CAACt9B,GAAD,CAAH,CAAO2F,IAAP,CAAYyb,KAAZ,GAAoBA,KAApB;EACH;;EACD,OAAOkc,GAAP;AACH;;AACD,SAASjc,QAAT,CAAkBhY,OAAlB,EAA2B;EACvB,OAAOA,OAAO,CAACkI,GAAR,CAAY,UAAArL,CAAC;IAAA,OAAKA,CAAC,GAAGA,CAAC,CAAC9L,KAAL,GAAa,CAAnB;EAAA,CAAb,EAAoC8mB,MAApC,CAA2C,UAACC,GAAD,EAAMtF,GAAN;IAAA,OAAcsF,GAAG,GAAGtF,GAApB;EAAA,CAA3C,EAAoE,CAApE,CAAP;AACH;;IAEK8hB,sB;EACF,gCAAYphC,OAAZ,EAAqB;IAAA;;IACjB,KAAK67B,WAAL,GAAmB,EAAnB;IACA,KAAKC,WAAL,GAAmB,EAAnB;IACA,KAAK7xB,UAAL,GAAkB,IAAlB;IACA,KAAK9P,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,KAAK+G,OAAL,GAAeA,OAAO,CAACS,aAAvB;EACH;;;;WACD,qBAAY6F,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MACL,KAAKq4B,MAAL,GAAcpmC,GAAG,GACZ4C,KADS,CACH,UAAA8L,CAAC;QAAA,OAAIA,CAAC,CAACP,IAAF,CAAOvL,KAAX;MAAA,CADE,EAETsqB,IAFS,CAEJ,IAFI,CAAd;MAGA,KAAKmZ,IAAL,GAAY,KAAKC,OAAL,EAAZ;IACH;;;WACD,mBAAU;MAAA;;MACN,OAAO,KAAKF,MAAL,CAAY,KAAKj4B,IAAjB,EAAuB4L,GAAvB,CAA2B,UAACla,GAAD,EAAM8O,KAAN,EAAgB;QAC9C,IAAMnC,KAAK,GAAG3M,GAAG,CAACsO,IAAJ,CAASA,IAAT,CAAcd,IAA5B;QACA,IAAMk5B,KAAK,GAAG1mC,GAAG,CAACsO,IAAJ,CAASA,IAAT,CAAco4B,KAA5B;;QACA,IAAI53B,KAAK,KAAK,CAAd,EAAiB;UACb9O,GAAG,CAACshC,UAAJ,GAAiB,CAAjB;QACH;;QACD,IAAM7zB,KAAK,GAAG,OAAI,CAAC9B,MAAL,CAAYgB,KAAZ,CAAd;;QACA,OAAO;UACH2B,IAAI,EAAEtO,GAAG,CAACsO,IAAJ,CAASA,IADZ;UAEH6T,KAAK,EAAE,SAAS,KAAT,GAAiBrT,KAFrB;UAGHiJ,IAAI,EAAEtK,KAHH;UAIH6zB,UAAU,EAAEoF,KAAK,GAAG,CAAH,GAAO1mC,GAAG,CAACshC,UAJzB;UAKHC,QAAQ,EAAEvhC,GAAG,CAACuhC,QALX;UAMHniC,OAAO,EAAE,OAAI,CAAC+P,UAAL,IAAmB,CAACu3B,KAN1B;UAOH7mB,aAAa,EAAE,CAAC6mB;QAPb,CAAP;MASH,CAhBM,CAAP;IAiBH;;;WACD,iBAAQp4B,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiB,KAAKe,IAAL,CAAU,CAAV,EAAaA,IAA9B;IACH;;;WACD,iBAAQQ,KAAR,EAAeH,IAAf,EAAqB;MACjB,OAAOA,IAAI,CAACL,IAAL,CAAUd,IAAjB;IACH;;;WACD,eAAMxN,GAAN,EAAW;MACP,OAAOA,GAAG,CAACsO,IAAJ,CAASd,IAAhB;IACH;;;WACD,eAAMxN,GAAN,EAAW;MACP,OAAO,KAAK2L,MAAL,CAAY,KAAKgB,KAAL,CAAW3M,GAAX,CAAZ,CAAP;IACH;;;;;;AAELsmC,sBAAsB,CAAChgC,IAAvB;EAAA,iBAAmHggC,sBAAnH,EA7wgB0G9oC,EA6wgB1G,mBAA2JA,EAAE,CAAC+I,UAA9J;AAAA;;AACA+/B,sBAAsB,CAAC7/B,IAAvB,kBA9wgB0GjJ,EA8wgB1G;EAAA,MAAuG8oC,sBAAvG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WA9wgB0G9oC,EA8wgB1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA9wgB0GA,EA+wgBtG,iBADJ;MA9wgB0GA,EA+wgBtG,0BADJ;MA9wgB0GA,EAgxgBpG,uEAFN;MA9wgB0GA,EAkygBtG,eApBJ;IAAA;;IAAA;MA9wgB0GA,EAkxgBlF,aAJxB;MA9wgB0GA,EAkxgBlF,6DAJxB;IAAA;EAAA;EAAA,eAqB0C+lC,eArB1C,EAqBwW/kC,EAAE,CAACwQ,OArB3W;EAAA;EAAA;AAAA;;AAsBA;EAAA,mDApygB0GxR,EAoygB1G,mBAA2F8oC,sBAA3F,EAA+H,CAAC;IACpHhhC,IAAI,EAAE5H,SAD8G;IAEpH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,+BADX;MAECC,QAAQ,ksBAFT;MAwBCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAxB1C,CAAD;EAF8G,CAAD,CAA/H,EA4B4B,YAAY;IAAE,OAAO,CAAC;MAAElH,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAD,CAAP;EAAmC,CA5B7E,EA4B+F;IAAEoF,MAAM,EAAE,CAAC;MAC1FrG,IAAI,EAAEzH;IADoF,CAAD,CAAV;IAE/EyQ,IAAI,EAAE,CAAC;MACPhJ,IAAI,EAAEzH;IADC,CAAD,CAFyE;IAI/EkjC,WAAW,EAAE,CAAC;MACdz7B,IAAI,EAAEzH;IADQ,CAAD,CAJkE;IAM/EmjC,WAAW,EAAE,CAAC;MACd17B,IAAI,EAAEzH;IADQ,CAAD,CANkE;IAQ/EsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CARmE;IAU/EwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CAVuE;IAY/E+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAZqE;IAc/EgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD;EAdmE,CA5B/F;AAAA;;IA8CMuoC,gB;;;;;EACF,4BAAc;IAAA;;IAAA;;IACV,+BAAS5kC,SAAT;IACA,QAAK8Z,eAAL,GAAuB,KAAvB;IACA,QAAKlP,KAAL,GAAa,OAAb;IACA,QAAKg5B,QAAL,GAAgB,GAAhB;IACA,QAAKj3B,aAAL,GAAqB,EAArB;IACA,QAAKvB,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAKsV,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAK2M,cAAL,GAAsBpd,cAAtB;IACA,QAAKqd,UAAL,GAAkBhF,UAAlB;IAVU;EAWb;;;;WACD,kBAAS;MACL;;MACA,KAAKnJ,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX;MAHkB,CAAD,CAAnC;MAKA,KAAK6hB,WAAL;MACA,KAAK1pB,MAAL,GAAc,KAAKkwB,SAAL,EAAd;MACA,KAAKxtB,IAAL,GAAYy3B,UAAU,CAAC,KAAK7zB,IAAN,EAAY,KAAKF,OAAjB,EAA0B,KAAK2zB,QAA/B,EAAyC,KAAKK,eAA9C,CAAtB;MACA,KAAKpyB,SAAL,uBAA8B,KAAKH,MAAL,CAAY,CAAZ,CAA9B,gBAAkD,KAAKA,MAAL,CAAY,CAAZ,CAAlD;MACA,KAAKlB,MAAL,GAAc,KAAKq0B,SAAL,EAAd;MACA,KAAKtW,SAAL;MACA,KAAKoE,WAAL,GAAmB,KAAKA,WAAL,IAAoB,KAAKsN,kBAA5C;IACH;;;WACD,oCAA6B;MAAA,IAAR1zB,IAAQ,UAARA,IAAQ;MACzB,IAAM3B,KAAK,GAAGqH,SAAS,CAACtH,WAAW,CAAC4B,IAAI,CAACd,IAAN,CAAZ,CAAvB;MACA,IAAMgX,GAAG,GAAGlW,IAAI,CAACvL,KAAL,CAAW8J,cAAX,EAAZ;MACA,uDAC4BF,KAD5B,wDAE0B6X,GAF1B;IAIH;;;WACD,qBAAY;MACR,OAAO,KAAKxS,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAAClC,KAAN;MAAA,CAAlB,CAAP;IACH;;;WACD,qBAAY;MAAA;;MACR,IAAMod,KAAK,GAAG,KAAKic,eAAL,GAAuB,KAAKA,eAA5B,GAA8C,KAAKhc,QAAL,EAA5D;MACA,OAAO,KAAK1b,IAAL,CAAU4L,GAAV,CAAc,UAAArL,CAAC,EAAI;QACtB,IAAMg4B,mBAAmB,GAAG,EAA5B;QACA,IAAM5uB,OAAO,GAAG,EAAhB;QACA,IAAMzK,IAAI,GAAGqB,CAAC,CAACP,IAAF,CAAOd,IAApB;QACA,IAAMb,KAAK,GAAGD,WAAW,CAACc,IAAD,CAAzB;QACA,IAAMzK,KAAK,GAAG8L,CAAC,CAACP,IAAF,CAAOvL,KAArB;QACA,IAAMoe,MAAM,GAAG9gB,GAAG,CAAC,CAACwO,CAAC,CAAC7K,KAAF,GAAUiU,OAAX,EAAoBpJ,CAAC,CAACpL,MAAF,GAAWojC,mBAA/B,CAAD,CAAH,GAA2D,CAA3D,GAA+D,CAA9E;QACA,IAAM9F,WAAW,GAAG5f,MAAM,GAAG,GAA7B;QACA,IAAImC,KAAK,GAAG,CAAZ;;QACA,IAAM3X,MAAM,GAAG,SAATA,MAAS,GAAM;UACjB2X,KAAK,IAAI,CAAT;;UACA,IAAIA,KAAK,KAAK,CAAd,EAAiB;YACb,OAAO,uBAAP;UACH,CAFD,MAGK;YACD,OAAO,OAAI,CAACoI,UAAL,CAAgBld,QAAhB,CAAyB7B,KAAzB,CAAP;UACH;QACJ,CARD;;QASA,IAAMia,IAAI,GAAG/X,CAAC,CAACzF,CAAF,GAAM,CAACyF,CAAC,CAAC7K,KAAF,GAAUiU,OAAX,IAAsB,CAAzC;QACA,IAAM6uB,IAAI,GAAGj4B,CAAC,CAACiF,CAAF,GAAM,CAACjF,CAAC,CAACpL,MAAF,GAAWojC,mBAAZ,IAAmC,CAAtD;QACA,OAAO;UACHjzB,SAAS,sBAAegT,IAAf,eAAwBkgB,IAAxB,MADN;UAEHn7B,MAAM,EAANA,MAFG;UAGHo1B,WAAW,EAAXA,WAHG;UAIHC,WAAW,EAAE7f,MAJV;UAKH3T,IAAI,EAAJA,IALG;UAMHb,KAAK,EAAEqH,SAAS,CAACrH,KAAD,CANb;UAOHod,KAAK,EAAEhnB,KAPJ;UAQHA,KAAK,EAALA,KARG;UASHsjC,OAAO,EAAE1lC,MAAM,CAAC,KAAD,CAAN,CAAckO,CAAC,CAACP,IAAF,CAAO+3B,OAArB,CATN;UAUH/3B,IAAI,EAAE,CACFO,CADE,EAEF;YACIP,IAAI,EAAE;cACFo4B,KAAK,EAAE,IADL;cAEF3jC,KAAK,EAAEgnB,KAAK,GAAGhnB,KAFb;cAGFyK,IAAI,EAAEqB,CAAC,CAACP,IAAF,CAAOd;YAHX;UADV,CAFE;QAVH,CAAP;MAqBH,CAzCM,CAAP;IA0CH;;;WACD,oBAAW;MACP,OAAO,KAAKwE,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAAC9L,KAAN;MAAA,CAAlB,EAA+B8mB,MAA/B,CAAsC,UAACC,GAAD,EAAMjb,CAAN;QAAA,OAAYib,GAAG,GAAGjb,CAAlB;MAAA,CAAtC,EAA2D,CAA3D,CAAP;IACH;;;WACD,iBAAQP,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,KAAKod,UAAL,GAAkB,IAAIJ,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6BnG,SAAS,CAACqG,OAAvC,EAAgD,KAAK9F,MAArD,EAA6D,KAAKyH,YAAlE,CAAlB;IACH;;;WACD,oBAAW1E,IAAX,EAAqC;MAAA,IAApB8mB,UAAoB,uEAAP,KAAO;MACjC9mB,IAAI,GAAG,KAAKqD,OAAL,CAAapD,IAAb,CAAkB,UAAAC,CAAC,EAAI;QAC1B,IAAI4mB,UAAJ,EAAgB;UACZ,OAAO5mB,CAAC,CAAClC,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAOqB,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAvB;QACH;MACJ,CAPM,CAAP;MAQA,IAAMnF,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAzC,IAAkD8L,CAAC,CAAC0D,MAAF,KAAa5D,IAAI,CAAC4D,MAA3E;MACH,CAFW,CAAZ;;MAGA,IAAIlK,GAAG,GAAG,CAAC,CAAX,EAAc;QACV;MACH;;MACD,KAAKqG,aAAL,IAAsBC,IAAtB,4BAA+B,KAAKD,aAApC;MACA,KAAKvB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAaC,IAAb,EAAuC;MAAA,IAApB8mB,UAAoB,uEAAP,KAAO;MACnC9mB,IAAI,GAAG,KAAKqD,OAAL,CAAapD,IAAb,CAAkB,UAAAC,CAAC,EAAI;QAC1B,IAAI4mB,UAAJ,EAAgB;UACZ,OAAO5mB,CAAC,CAAClC,KAAF,KAAYgC,IAAI,CAACnB,IAAxB;QACH,CAFD,MAGK;UACD,OAAOqB,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAvB;QACH;MACJ,CAPM,CAAP;MAQA,IAAMnF,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAzC,IAAkD8L,CAAC,CAAC0D,MAAF,KAAa5D,IAAI,CAAC4D,MAA3E;MACH,CAFW,CAAZ;MAGA,KAAK7D,aAAL,CAAmBlG,MAAnB,CAA0BH,GAA1B,EAA+B,CAA/B;MACA,KAAKqG,aAAL,sBAAyB,KAAKA,aAA9B;MACA,KAAKtB,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;;EA9H0B4C,kB;;AAgI/Bq1B,gBAAgB,CAACrgC,IAAjB;EAAA;EAAA;IAAA,0EAl9gB0G9I,EAk9gB1G,uBAA6GmpC,gBAA7G,SAA6GA,gBAA7G;EAAA;AAAA;;AACAA,gBAAgB,CAAClgC,IAAjB,kBAn9gB0GjJ,EAm9gB1G;EAAA,MAAiGmpC,gBAAjG;EAAA;EAAA;IAAA;MAn9gB0GnpC,EAm9gB1G;IAAA;;IAAA;MAAA;;MAn9gB0GA,EAm9gB1G,qBAn9gB0GA,EAm9gB1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WAn9gB0GA,EAm9gB1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAn9gB0GA,EAo9gBtG,yCADJ;MAn9gB0GA,EAq9gBpG,iBAFN;MAn9gB0GA,EAq9gBpG,0BAFN;MAn9gB0GA,EAs9gBlG,iEAHR;MAn9gB0GA,EAghhBpG,iBA7DN;IAAA;;IAAA;MAn9gB0GA,EAo9gBpF,oBAp9gBoFA,EAo9gBpF,oGADtB;MAn9gB0GA,EAq9gB7F,aAFb;MAn9gB0GA,EAq9gB7F,wCAFb;MAn9gB0GA,EAs9gBxE,aAHlC;MAn9gB0GA,EAs9gBxE,kCAHlC;IAAA;EAAA;EAAA,eA+Dw4DyR,cA/Dx4D,EA+D6mEq3B,sBA/D7mE,EA+DizE5hB,gBA/DjzE,EA+D4hFlmB,EAAE,CAACwQ,OA/D/hF,EA+DsoFuM,gBA/DtoF,EA+DmkG/c,EAAE,CAACkI,IA/DtkG;EAAA;EAAA;EAAA;AAAA;;AAgEA;EAAA,mDAnhhB0GlJ,EAmhhB1G,mBAA2FmpC,gBAA3F,EAAyH,CAAC;IAC9GrhC,IAAI,EAAE5H,SADwG;IAE9G2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,qBAAZ;MAAmCC,QAAQ,28EAA3C;MA+DdC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IA/DnB;MA+DyBuF,eAAe,EAAErO,uBAAuB,CAACsO,MA/DlE;MA+D0EvF,MAAM,EAAE,CAAC,yvDAAD,EAA4vD,uFAA5vD;IA/DlF,CAAD;EAFwG,CAAD,CAAzH,QAkE4B;IAAE++B,eAAe,EAAE,CAAC;MAChC1gC,IAAI,EAAEzH;IAD0B,CAAD,CAAnB;IAEZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAFL;IAIZ62B,WAAW,EAAE,CAAC;MACdpvB,IAAI,EAAEzH;IADQ,CAAD,CAJD;IAMZ8O,KAAK,EAAE,CAAC;MACRrH,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZ8nC,QAAQ,EAAE,CAAC;MACXrgC,IAAI,EAAEzH;IADK,CAAD,CARE;IAUZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CAVH;IAYZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAZE;IAcZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAdA;IAgBZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD;EAhBL,CAlE5B;AAAA;;IAuFM0lC,c;;;;AAENA,cAAc,CAACzgC,IAAf;EAAA,iBAA2GygC,cAA3G;AAAA;;AACAA,cAAc,CAAC/rB,IAAf,kBA7mhB0Gxd,EA6mhB1G;EAAA,MAA4GupC;AAA5G;AAaAA,cAAc,CAAC9rB,IAAf,kBA1nhB0Gzd,EA0nhB1G;EAAA,UAAsI,CAAC+sB,iBAAD,CAAtI;AAAA;;AACA;EAAA,mDA3nhB0G/sB,EA2nhB1G,mBAA2FupC,cAA3F,EAAuH,CAAC;IAC5GzhC,IAAI,EAAEhH,QADsG;IAE5G+C,IAAI,EAAE,CAAC;MACC6Z,OAAO,EAAE,CAACqP,iBAAD,CADV;MAECpP,YAAY,EAAE,CACV+pB,yBADU,EAEVjF,iBAFU,EAGVsD,eAHU,EAIV6B,iBAJU,EAKVuB,gBALU,EAMVL,sBANU,EAOVjC,kBAPU,CAFf;MAWCjpB,OAAO,EAAE,CACL8pB,yBADK,EAELjF,iBAFK,EAGLsD,eAHK,EAIL6B,iBAJK,EAKLuB,gBALK,EAMLL,sBANK,EAOLjC,kBAPK;IAXV,CAAD;EAFsG,CAAD,CAAvH;AAAA;;IAyBM2C,gB;;;;AAENA,gBAAgB,CAAC1gC,IAAjB;EAAA,iBAA6G0gC,gBAA7G;AAAA;;AACAA,gBAAgB,CAAChsB,IAAjB,kBAvphB0Gxd,EAuphB1G;EAAA,MAA8GwpC;AAA9G;AACAA,gBAAgB,CAAC/rB,IAAjB,kBAxphB0Gzd,EAwphB1G;EAAA,UAA0I,CAAC+sB,iBAAD,EAAoBwc,cAApB,EAAoC/G,eAApC,CAA1I;AAAA;;AACA;EAAA,mDAzphB0GxiC,EAyphB1G,mBAA2FwpC,gBAA3F,EAAyH,CAAC;IAC9G1hC,IAAI,EAAEhH,QADwG;IAE9G+C,IAAI,EAAE,CAAC;MACC6Z,OAAO,EAAE,CAACqP,iBAAD,EAAoBwc,cAApB,EAAoC/G,eAApC,CADV;MAEC7kB,YAAY,EAAE,CAAC+mB,mBAAD,EAAsBV,oBAAtB,CAFf;MAGCpmB,OAAO,EAAE,CAAC8mB,mBAAD,EAAsBV,oBAAtB;IAHV,CAAD;EAFwG,CAAD,CAAzH;AAAA;;AASA,SAASyF,kBAAT,CAA4BC,aAA5B,EAA2CC,IAA3C,EAAmE;EAAA,IAAlBC,YAAkB,uEAAH,CAAG;EAC/D,OAAOD,IAAI,CAAC1I,KAAL,CAAW,EAAX,EAAe5U,MAAf,CAAsB,UAACwd,GAAD,EAAMC,IAAN,EAAe;IACxC,IAAMtjC,KAAK,GAAGkjC,aAAa,CAACI,IAAD,CAAb,IAAuBF,YAArC;IACA,OAAOC,GAAG,GAAGrjC,KAAb;EACH,CAHM,EAGJ,CAHI,CAAP;AAIH;;AAED,IAAMujC,yBAAyB,GAAG;EAC9B,KAAK,EADyB;EAE9B,KAAK,EAFyB;EAG9B,KAAK,EAHyB;EAI9B,KAAK,EAJyB;EAK9B,KAAK,EALyB;EAM9B,KAAK,EANyB;EAO9B,KAAK,EAPyB;EAQ9B,KAAK,EARyB;EAS9B,KAAK,EATyB;EAU9B,KAAK,EAVyB;EAW9BC,CAAC,EAAE,EAX2B;EAY9BC,CAAC,EAAE,EAZ2B;EAa9BC,CAAC,EAAE,EAb2B;EAc9BC,CAAC,EAAE,EAd2B;EAe9BC,CAAC,EAAE,EAf2B;EAgB9BC,CAAC,EAAE,CAhB2B;EAiB9BC,CAAC,EAAE,EAjB2B;EAkB9BC,CAAC,EAAE,EAlB2B;EAmB9BC,CAAC,EAAE,CAnB2B;EAoB9BC,CAAC,EAAE,CApB2B;EAqB9BC,CAAC,EAAE,EArB2B;EAsB9B1J,CAAC,EAAE,CAtB2B;EAuB9B2J,CAAC,EAAE,EAvB2B;EAwB9B5J,CAAC,EAAE,EAxB2B;EAyB9B6J,CAAC,EAAE,EAzB2B;EA0B9BC,CAAC,EAAE,EA1B2B;EA2B9BC,CAAC,EAAE,EA3B2B;EA4B9BC,CAAC,EAAE,EA5B2B;EA6B9BC,CAAC,EAAE,EA7B2B;EA8B9BC,CAAC,EAAE,EA9B2B;EA+B9BC,CAAC,EAAE,EA/B2B;EAgC9BC,CAAC,EAAE,EAhC2B;EAiC9BC,CAAC,EAAE,EAjC2B;EAkC9BC,CAAC,EAAE,EAlC2B;EAmC9BC,CAAC,EAAE,EAnC2B;EAoC9BC,CAAC,EAAE,EApC2B;EAqC9Bzb,CAAC,EAAE,EArC2B;EAsC9BjK,CAAC,EAAE,EAtC2B;EAuC9BlX,CAAC,EAAE,CAvC2B;EAwC9B0C,CAAC,EAAE,EAxC2B;EAyC9BgE,CAAC,EAAE,EAzC2B;EA0C9B8rB,CAAC,EAAE,CA1C2B;EA2C9BrsB,CAAC,EAAE,EA3C2B;EA4C9BqG,CAAC,EAAE,EA5C2B;EA6C9BhQ,CAAC,EAAE,CA7C2B;EA8C9B6J,CAAC,EAAE,CA9C2B;EA+C9Bw2B,CAAC,EAAE,CA/C2B;EAgD9BC,CAAC,EAAE,CAhD2B;EAiD9BC,CAAC,EAAE,EAjD2B;EAkD9BC,CAAC,EAAE,EAlD2B;EAmD9B/F,CAAC,EAAE,EAnD2B;EAoD9BpJ,CAAC,EAAE,EApD2B;EAqD9BoP,CAAC,EAAE,EArD2B;EAsD9BxwB,CAAC,EAAE,CAtD2B;EAuD9B3E,CAAC,EAAE,CAvD2B;EAwD9BuG,CAAC,EAAE,CAxD2B;EAyD9B6uB,CAAC,EAAE,EAzD2B;EA0D9B1iB,CAAC,EAAE,CA1D2B;EA2D9BjO,CAAC,EAAE,EA3D2B;EA4D9BtP,CAAC,EAAE,CA5D2B;EA6D9B0K,CAAC,EAAE,CA7D2B;EA8D9Bw1B,CAAC,EAAE,CA9D2B;EA+D9B,KAAK,CA/DyB;EAgE9B,KAAK,EAhEyB;EAiE9B,KAAK,EAjEyB;EAkE9BC,CAAC,EAAE,EAlE2B;EAmE9B,KAAK,EAnEyB;EAoE9B,KAAK,EApEyB;EAqE9B,KAAK,EArEyB;EAsE9B,KAAK,EAtEyB;EAuE9B,KAAK,CAvEyB;EAwE9B,KAAK,CAxEyB;EAyE9BzQ,CAAC,EAAE,EAzE2B;EA0E9B,KAAK,CA1EyB;EA2E9B,KAAK,EA3EyB;EA4E9B,KAAK,EA5EyB;EA6E9B,KAAK,CA7EyB;EA8E9B,KAAK,CA9EyB;EA+E9B,KAAK,CA/EyB;EAgF9B,KAAK,CAhFyB;EAiF9B,KAAK,CAjFyB;EAkF9B,KAAK,CAlFyB;EAmF9B,KAAK,CAnFyB;EAoF9B,KAAK,CApFyB;EAqF9B,KAAK,EArFyB;EAsF9B,KAAK;AAtFyB,CAAlC;;IAyFM0Q,a;EACF,uBAAYtkC,OAAZ,EAAqB2I,EAArB,EAAyByC,IAAzB,EAA+BlL,UAA/B,EAA2C;IAAA;;IACvC,KAAKyI,EAAL,GAAUA,EAAV;IACA,KAAKyC,IAAL,GAAYA,IAAZ;IACA,KAAKlL,UAAL,GAAkBA,UAAlB;IACA,KAAK+J,UAAL,GAAkB,IAAlB;IACA,KAAK9P,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAK4E,KAAL,GAAa,EAAb;IACA,KAAK0mC,YAAL,GAAoB,EAApB;IACA,KAAKlzB,aAAL,GAAqB,EAArB;IACA,KAAK2R,WAAL,GAAmB,KAAnB;IACA,KAAKwhB,UAAL,GAAkB,EAAlB;IACA,KAAKC,WAAL,GAAmB,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,EAAZ,CAAnB;IACA,KAAKC,aAAL,GAAqB,EAArB;IACA,KAAK1kC,OAAL,GAAeA,OAAO,CAACS,aAAvB;EACH;;;;WACD,qBAAY6F,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,oBAAW;MACP,IAAIxP,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKykC,YAAL;MACH;IACJ;;;WACD,uBAAc;MACV,IAAIprC,iBAAiB,CAAC,KAAK2G,UAAN,CAArB,EAAwC;QACpCggB,oBAAoB,CAAC,KAAKC,YAAN,CAApB;MACH;IACJ;;;WACD,kBAAS;MAAA;;MACL,KAAK/U,IAAL,CAAUI,GAAV,CAAc,YAAM;QAChB,IAAMo5B,QAAQ,GAAG,OAAI,CAACx7B,IAAL,IAAa,OAAO,OAAI,CAACA,IAAL,CAAUvL,KAAjB,KAA2B,WAAzD;;QACA,IAAMuiB,eAAe,GAAG,OAAI,CAACA,eAAL,IAAyB,UAAAykB,IAAI;UAAA,OAAIA,IAAI,CAAChnC,KAAL,CAAW8J,cAAX,EAAJ;QAAA,CAArD;;QACA,IAAM4c,eAAe,GAAG,OAAI,CAACA,eAAL,IAAyB,UAAAsgB,IAAI;UAAA,OAAIj9B,WAAW,CAACkH,SAAS,CAAC+1B,IAAI,CAACp9B,KAAN,EAAa,EAAb,CAAV,CAAf;QAAA,CAArD;;QACA,OAAI,CAACiH,SAAL,uBAA8B,OAAI,CAACxK,CAAnC,gBAA0C,OAAI,CAAC0K,CAA/C;QACA,OAAI,CAACk2B,SAAL,GAAiB59B,IAAI,CAAC9L,GAAL,CAAS,CAAT,EAAY,OAAI,CAAC0D,KAAjB,IAA0B,OAAI,CAAC2lC,WAAL,CAAiB,CAAjB,CAA1B,GAAgD,OAAI,CAACA,WAAL,CAAiB,CAAjB,CAAjE;QACA,OAAI,CAACzD,SAAL,GAAiB95B,IAAI,CAAC9L,GAAL,CAAS,CAAT,EAAY,OAAI,CAAC0D,KAAjB,CAAjB;QACA,OAAI,CAACmiC,UAAL,GAAkB/5B,IAAI,CAAC9L,GAAL,CAAS,CAAT,EAAY,OAAI,CAACmD,MAAjB,CAAlB;QACA,OAAI,CAACkJ,KAAL,GAAa,OAAI,CAACA,KAAL,GAAa,OAAI,CAACA,KAAlB,GAA0B,OAAI,CAAC2B,IAAL,CAAUd,IAAjD;QACA,IAAMy8B,QAAQ,GAAG;UACbt9B,KAAK,EAAE,OAAI,CAACA,KADC;UAEb2B,IAAI,EAAE,OAAI,CAACA,IAFE;UAGbvL,KAAK,EAAE,OAAI,CAACuL,IAAL,CAAUvL;QAHJ,CAAjB;QAKA,OAAI,CAACuK,cAAL,GAAsBmc,eAAe,CAACwgB,QAAD,CAArC;QACA,OAAI,CAACC,aAAL,2BAAsC,OAAI,CAAC/D,UAAL,GAAkB,OAAI,CAACuD,UAA7D;QACA,IAAM3mC,KAAK,GAAG+mC,QAAQ,GAAGxkB,eAAe,CAAC2kB,QAAD,CAAlB,GAA+B,EAArD;QACA,OAAI,CAAClnC,KAAL,GAAa,OAAI,CAAConC,WAAL,CAAiBpnC,KAAjB,CAAb;;QACA,OAAI,CAACqnC,UAAL;;QACA,OAAI,CAACC,QAAL,GAAgB5xB,WAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,OAAI,CAACytB,SAAZ,EAAuB,OAAI,CAACwD,UAA5B,EAAwC,CAAxC,EAA2C,CAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,EAAqB,IAArB,CAA3C,CAA3B;QACAxnC,UAAU,CAAC,YAAM;UACb,IAAIzD,iBAAiB,CAAC,OAAI,CAAC2G,UAAN,CAArB,EAAwC;YACpC,OAAI,CAACklC,SAAL;UACH;;UACD,OAAI,CAACvnC,KAAL,GAAaA,KAAb;;UACA,IAAI+mC,QAAQ,IAAI,CAAC,OAAI,CAAC5hB,WAAtB,EAAmC;YAC/BhmB,UAAU,CAAC;cAAA,OAAM,OAAI,CAACqoC,UAAL,EAAN;YAAA,CAAD,EAA0B,EAA1B,CAAV;UACH;QACJ,CARS,EAQP,CARO,CAAV;MASH,CA7BD;IA8BH;;;WACD,qBAAYxnC,KAAZ,EAAmB;MACf,IAAI,KAAKynC,UAAL,IAAmB,KAAKA,UAAL,GAAkBznC,KAAK,CAACqF,MAA/C,EAAuD;QACnDrF,KAAK,IAAI,SAAS0nC,MAAT,CAAgB,KAAKD,UAAL,GAAkBznC,KAAK,CAACqF,MAAxC,CAAT;MACH;;MACD,OAAOrF,KAAP;IACH;;;WACD,sBAAa;MAAA;;MACT,IAAI,CAAC,KAAKmlB,WAAN,IAAqB,KAAK/Y,UAA9B,EAA0C;QACtCiW,oBAAoB,CAAC,KAAKC,YAAN,CAApB;QACA,IAAMb,GAAG,GAAG,KAAKlW,IAAL,CAAUvL,KAAtB;QACA,IAAM2nC,IAAI,GAAGjmB,cAAc,CAACD,GAAD,CAA3B;;QACA,IAAMc,eAAe,GAAG,KAAKA,eAAL,IAAyB,UAAAykB,IAAI;UAAA,OAAIA,IAAI,CAAChnC,KAAL,CAAW8J,cAAX,EAAJ;QAAA,CAArD;;QACA,IAAM8W,QAAQ,GAAG,SAAXA,QAAW,SAAyB;UAAA,IAAtB5gB,KAAsB,UAAtBA,KAAsB;UAAA,IAAfuhB,QAAe,UAAfA,QAAe;;UACtC,OAAI,CAAChU,IAAL,CAAUI,GAAV,CAAc,YAAM;YAChB3N,KAAK,GAAGuhB,QAAQ,GAAGE,GAAH,GAASzhB,KAAzB;YACA,OAAI,CAACA,KAAL,GAAauiB,eAAe,CAAC;cAAE3Y,KAAK,EAAE,OAAI,CAACA,KAAd;cAAqB2B,IAAI,EAAE,OAAI,CAACA,IAAhC;cAAsCvL,KAAK,EAALA;YAAtC,CAAD,CAA5B;;YACA,IAAI,CAACuhB,QAAL,EAAe;cACX,OAAI,CAACvhB,KAAL,GAAa,OAAI,CAAConC,WAAL,CAAiB,OAAI,CAACpnC,KAAtB,CAAb;YACH;;YACD,OAAI,CAAC8K,EAAL,CAAQM,YAAR;UACH,CAPD;QAQH,CATD;;QAUA,KAAKkX,YAAL,GAAoB/B,KAAK,CAAC,CAAD,EAAIkB,GAAJ,EAASkmB,IAAT,EAAe,CAAf,EAAkB/mB,QAAlB,CAAzB;QACA,KAAKuE,WAAL,GAAmB,IAAnB;MACH;IACJ;;;WACD,qBAAY;MAAA;;MACR,KAAK5X,IAAL,CAAUI,GAAV,CAAc,YAAM;QAChB,4BAA0B,OAAI,CAACi6B,MAAL,CAAYhlC,aAAZ,CAA0BE,qBAA1B,EAA1B;QAAA,IAAQ7B,KAAR,yBAAQA,KAAR;QAAA,IAAeP,MAAf,yBAAeA,MAAf;;QACA,IAAIO,KAAK,KAAK,CAAV,IAAeP,MAAM,KAAK,CAA9B,EAAiC;UAC7B;QACH;;QACD,IAAMkmC,WAAW,GAAI,OAAI,CAACA,WAAL,CAAiB,CAAjB,IAAsB,OAAI,CAACA,WAAL,CAAiB,CAAjB,IAAsB,OAAI,CAACzD,SAAL,GAAiB,CAAlF;QACA,IAAM0E,cAAc,GAAG,OAAI,CAAC1E,SAAL,GAAiB,IAAIyD,WAA5C;QACA,IAAMkB,eAAe,GAAG,OAAI,CAAC1E,UAAL,GAAkB,CAA1C;QACA,IAAM2E,WAAW,GAAG1+B,IAAI,CAAC/L,GAAL,CAASuqC,cAAc,GAAG5mC,KAA1B,EAAiC6mC,eAAe,GAAGpnC,MAAnD,CAApB;QACA,OAAI,CAACgmC,YAAL,GAAoBr9B,IAAI,CAAC0D,KAAL,CAAW,OAAI,CAAC25B,YAAL,GAAoBqB,WAA/B,CAApB;QACA,OAAI,CAAClB,aAAL,GAAqBx9B,IAAI,CAAC/L,GAAL,CAAS,OAAI,CAACopC,YAAd,EAA4B,EAA5B,CAArB;;QACA,OAAI,CAACW,UAAL;;QACA,OAAI,CAACv8B,EAAL,CAAQM,YAAR;MACH,CAbD;IAcH;;;WACD,wBAAe;MACX,IAAMnK,KAAK,GAAGijC,kBAAkB,CAACM,yBAAD,EAA4B,KAAKxkC,KAAjC,EAAwC,EAAxC,CAAhC;MACA,IAAMU,MAAM,GAAG,EAAf;MACA,IAAMkmC,WAAW,GAAI,KAAKA,WAAL,CAAiB,CAAjB,IAAsB,KAAKA,WAAL,CAAiB,CAAjB,IAAsB,KAAKzD,SAAL,GAAiB,CAAlF;MACA,IAAM0E,cAAc,GAAG,KAAK1E,SAAL,GAAiB,IAAIyD,WAA5C;MACA,IAAMkB,eAAe,GAAG,KAAK1E,UAAL,GAAkB,CAA1C;MACA,IAAM2E,WAAW,GAAG1+B,IAAI,CAAC/L,GAAL,CAASuqC,cAAc,GAAG5mC,KAA1B,EAAiC6mC,eAAe,GAAGpnC,MAAnD,CAApB;MACA,KAAKgmC,YAAL,GAAoBr9B,IAAI,CAAC0D,KAAL,CAAW,KAAK25B,YAAL,GAAoBqB,WAA/B,CAApB;MACA,KAAKlB,aAAL,GAAqBx9B,IAAI,CAAC/L,GAAL,CAAS,KAAKopC,YAAd,EAA4B,EAA5B,CAArB;MACA,KAAKW,UAAL;IACH;;;WACD,sBAAa;MACT,KAAKT,WAAL,CAAiB,CAAjB,IAAsB,KAAKA,WAAL,CAAiB,CAAjB,IAAsB,KAAKzD,SAAL,GAAiB,CAA7D;MACA,IAAMjuB,OAAO,GAAG,KAAKkuB,UAAL,GAAkB,CAAlC;MACA,KAAKwD,WAAL,CAAiB,CAAjB,IAAsB1xB,OAAO,GAAG,KAAKwxB,YAAf,GAA8B,KAAKG,aAAL,GAAqB,CAAzE;MACA,KAAKD,WAAL,CAAiB,CAAjB,IAAsB1xB,OAAO,GAAG,KAAK2xB,aAArC;IACH;;;WACD,mBAAU;MACN,KAAKvqC,MAAL,CAAYkO,IAAZ,CAAiB,KAAKe,IAAtB;IACH;;;;;;AAELk7B,aAAa,CAACljC,IAAd;EAAA,iBAA0GkjC,aAA1G,EA93hB0GhsC,EA83hB1G,mBAAyIA,EAAE,CAAC+I,UAA5I,GA93hB0G/I,EA83hB1G,mBAAmKA,EAAE,CAACuR,iBAAtK,GA93hB0GvR,EA83hB1G,mBAAoMA,EAAE,CAACwT,MAAvM,GA93hB0GxT,EA83hB1G,mBAA0NC,WAA1N;AAAA;;AACA+rC,aAAa,CAAC/iC,IAAd,kBA/3hB0GjJ,EA+3hB1G;EAAA,MAA8FgsC,aAA9F;EAAA;EAAA;IAAA;MA/3hB0GhsC,EA+3hB1G;IAAA;;IAAA;MAAA;;MA/3hB0GA,EA+3hB1G,qBA/3hB0GA,EA+3hB1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WA/3hB0GA,EA+3hB1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA/3hB0GA,EAg4hBtG,iBADJ;MA/3hB0GA,EAg4hBtG,0BADJ;MA/3hB0GA,EAg4hBrD;QAAA,OAAS,aAAT;MAAA,EADrD;MA/3hB0GA,EAi4hBpG,wBAFN;MA/3hB0GA,EAk4hBpG,mEAHN;MA/3hB0GA,EA04hBpG,2BAXN;MA/3hB0GA,EA04hB7F,UAXb;MA/3hB0GA,EA04hBlF,eAXxB;MA/3hB0GA,EA24hBpG,sCAZN;MA/3hB0GA,EAo5hBlG,kBArBR;MA/3hB0GA,EAo5hBlG,qBArBR;MA/3hB0GA,EA25hBpG,eA5BN;MA/3hB0GA,EA45hBpG,iBA7BN;MA/3hB0GA,EA45hBpG,gCA7BN;MA/3hB0GA,EAs6hBlG,UAvCR;MA/3hB0GA,EAu6hBpG,iBAxCN;IAAA;;IAAA;MA/3hB0GA,EAg4hB/F,wCADX;MA/3hB0GA,EAi4hB7E,aAF7B;MA/3hB0GA,EAi4hB7E,+BAF7B;MA/3hB0GA,EAi4hBxD,8DAFlD;MA/3hB0GA,EAm4hBjG,aAJT;MA/3hB0GA,EAm4hBjG,iEAJT;MA/3hB0GA,EA04hB7F,aAXb;MA/3hB0GA,EA04hB7F,6BAXb;MA/3hB0GA,EA84hBlG,aAfR;MA/3hB0GA,EA84hBlG,yJAfR;MA/3hB0GA,EAq5hBhG,aAtBV;MA/3hB0GA,EAq5hBhG,kHAtBV;MA/3hB0GA,EAw5hBhG,6CAx5hBgGA,EAw5hBhG,gBAzBV;MA/3hB0GA,EAi6hBlG,aAlCR;MA/3hB0GA,EAi6hBlG,wEAlCR;MA/3hB0GA,EA+5hBlG,8DAhCR;MA/3hB0GA,EAs6hBlG,aAvCR;MA/3hB0GA,EAs6hBlG,wCAvCR;IAAA;EAAA;EAAA,eA0C0CgB,EAAE,CAACkI,IA1C7C;EAAA;EAAA;AAAA;;AA2CA;EAAA,mDA16hB0GlJ,EA06hB1G,mBAA2FgsC,aAA3F,EAAsH,CAAC;IAC3GlkC,IAAI,EAAE5H,SADqG;IAE3G2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,oBADX;MAECC,QAAQ,y4CAFT;MA6CCyF,eAAe,EAAErO,uBAAuB,CAACsO;IA7C1C,CAAD;EAFqG,CAAD,CAAtH,EAiD4B,YAAY;IAAE,OAAO,CAAC;MAAElH,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAD,EAA0B;MAAEjB,IAAI,EAAE9H,EAAE,CAACuR;IAAX,CAA1B,EAA0D;MAAEzJ,IAAI,EAAE9H,EAAE,CAACwT;IAAX,CAA1D,EAA+E;MAAE1L,IAAI,EAAE3B,SAAR;MAAmBuD,UAAU,EAAE,CAAC;QAC5I5B,IAAI,EAAE1H,MADsI;QAE5IyD,IAAI,EAAE,CAAC5D,WAAD;MAFsI,CAAD;IAA/B,CAA/E,CAAP;EAGlB,CApDxB,EAoD0C;IAAEgQ,KAAK,EAAE,CAAC;MACpCnI,IAAI,EAAEzH;IAD8B,CAAD,CAAT;IAE1BktC,SAAS,EAAE,CAAC;MACZzlC,IAAI,EAAEzH;IADM,CAAD,CAFe;IAI1BmtC,SAAS,EAAE,CAAC;MACZ1lC,IAAI,EAAEzH;IADM,CAAD,CAJe;IAM1BuL,CAAC,EAAE,CAAC;MACJ9D,IAAI,EAAEzH;IADF,CAAD,CANuB;IAQ1BiW,CAAC,EAAE,CAAC;MACJxO,IAAI,EAAEzH;IADF,CAAD,CARuB;IAU1BmG,KAAK,EAAE,CAAC;MACRsB,IAAI,EAAEzH;IADE,CAAD,CAVmB;IAY1B4F,MAAM,EAAE,CAAC;MACT6B,IAAI,EAAEzH;IADG,CAAD,CAZkB;IAc1B8O,KAAK,EAAE,CAAC;MACRrH,IAAI,EAAEzH;IADE,CAAD,CAdmB;IAgB1ByQ,IAAI,EAAE,CAAC;MACPhJ,IAAI,EAAEzH;IADC,CAAD,CAhBoB;IAkB1B2sC,UAAU,EAAE,CAAC;MACbllC,IAAI,EAAEzH;IADO,CAAD,CAlBc;IAoB1BynB,eAAe,EAAE,CAAC;MAClBhgB,IAAI,EAAEzH;IADY,CAAD,CApBS;IAsB1B4rB,eAAe,EAAE,CAAC;MAClBnkB,IAAI,EAAEzH;IADY,CAAD,CAtBS;IAwB1BsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CAxBc;IA0B1BwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CA1BkB;IA4B1BusC,MAAM,EAAE,CAAC;MACTrlC,IAAI,EAAExH,SADG;MAETuD,IAAI,EAAE,CAAC,QAAD,EAAW;QAAE0mB,MAAM,EAAE;MAAV,CAAX;IAFG,CAAD;EA5BkB,CApD1C;AAAA;AAqFA;AACA;AACA;AACA;AACA;;;AACA,SAASkjB,QAAT,CAAkBloC,KAAlB,EAAyB;EACrB;EACA,OAAOnC,QAAQ,CAACsqC,GAAT,CAAanoC,KAAb,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASooC,WAAT,CAAqBpoC,KAArB,EAA4B;EACxB,IAAM0K,KAAK,GAAG7M,QAAQ,CAACsqC,GAAT,CAAanoC,KAAb,CAAd;EACA,IAAQ6V,CAAR,GAA6BnL,KAA7B,CAAQmL,CAAR;EAAA,IAAWtG,CAAX,GAA6B7E,KAA7B,CAAW6E,CAAX;EAAA,IAAc+Q,CAAd,GAA6B5V,KAA7B,CAAc4V,CAAd;EAAA,IAAiBjC,OAAjB,GAA6B3T,KAA7B,CAAiB2T,OAAjB;;EACA,IAAIA,OAAO,KAAK,CAAhB,EAAmB;IACf,OAAO3T,KAAK,CAAC0D,QAAN,EAAP;EACH;;EACD,IAAMi6B,GAAG,GAAG,CAACxyB,CAAC,GAAG,GAAJ,GAAUtG,CAAC,GAAG,GAAd,GAAoB+Q,CAAC,GAAG,GAAzB,IAAgC,IAA5C;EACA,IAAMgoB,KAAK,GAAGD,GAAG,IAAI,GAAP,GAAa,CAAC,GAAd,GAAoB,GAAlC;EACA,OAAOE,aAAa,CAAC79B,KAAD,EAAQ49B,KAAR,CAApB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,aAAT,SAAoCjF,OAApC,EAA6C;EAAA,IAApBztB,CAAoB,UAApBA,CAAoB;EAAA,IAAjBtG,CAAiB,UAAjBA,CAAiB;EAAA,IAAd+Q,CAAc,UAAdA,CAAc;EACzC,IAAM7I,CAAC,GAAG6rB,OAAO,GAAG,CAAV,GAAc,CAAd,GAAkB,GAA5B;EACA,IAAMrM,CAAC,GAAGqM,OAAO,GAAG,CAAV,GAAcA,OAAO,GAAG,CAAC,CAAzB,GAA6BA,OAAvC;EACAztB,CAAC,GAAGxM,IAAI,CAACC,KAAL,CAAW,CAACmO,CAAC,GAAG5B,CAAL,IAAUohB,CAArB,IAA0BphB,CAA9B;EACAtG,CAAC,GAAGlG,IAAI,CAACC,KAAL,CAAW,CAACmO,CAAC,GAAGlI,CAAL,IAAU0nB,CAArB,IAA0B1nB,CAA9B;EACA+Q,CAAC,GAAGjX,IAAI,CAACC,KAAL,CAAW,CAACmO,CAAC,GAAG6I,CAAL,IAAU2W,CAArB,IAA0B3W,CAA9B;EACA,qBAAczK,CAAd,eAAoBtG,CAApB,eAA0B+Q,CAA1B;AACH;;IAEKkoB,mB;EACF,+BAAc;IAAA;;IACV,KAAKnN,YAAL,GAAoB,EAApB;IACA,KAAKoN,UAAL,GAAkB,kBAAlB;IACA,KAAKr8B,UAAL,GAAkB,IAAlB;IACA,KAAK9P,MAAL,GAAc,IAAIlB,YAAJ,EAAd;EACH;;;;WACD,qBAAYqN,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MACL,IAAI,KAAKI,IAAL,CAAUlG,MAAV,GAAmB,CAAvB,EAA0B;QACtB,IAAMkd,eAAe,GAAG,KAAKA,eAAL,IAAyB,UAAAykB,IAAI;UAAA,OAAIA,IAAI,CAAChnC,KAAL,CAAW8J,cAAX,EAAJ;QAAA,CAArD;;QACA,IAAM4+B,aAAa,GAAG,KAAKn9B,IAAL,CACjB4L,GADiB,CACb,UAAArL,CAAC,EAAI;UACV,IAAMi7B,QAAQ,GAAGj7B,CAAC,IAAIA,CAAC,CAACP,IAAP,IAAe,OAAOO,CAAC,CAACP,IAAF,CAAOvL,KAAd,KAAwB,WAAvC,IAAsD8L,CAAC,CAACP,IAAF,CAAOvL,KAAP,KAAiB,IAAxF;UACA,OAAO+mC,QAAQ,GACTxkB,eAAe,CAAC;YACdhX,IAAI,EAAEO,CAAC,CAACP,IADM;YAEd3B,KAAK,EAAEkC,CAAC,GAAGA,CAAC,CAACP,IAAF,CAAOd,IAAV,GAAiB,EAFX;YAGdzK,KAAK,EAAE8L,CAAC,IAAIA,CAAC,CAACP,IAAP,GAAcO,CAAC,CAACP,IAAF,CAAOvL,KAArB,GAA6B;UAHtB,CAAD,CAAf,CAICqF,MALQ,GAMT,CANN;QAOH,CAVqB,EAWjBilB,IAXiB,CAWZ,UAACC,CAAD,EAAIjK,CAAJ;UAAA,OAAUA,CAAC,GAAGiK,CAAd;QAAA,CAXY,CAAtB;QAYA,IAAMjlB,GAAG,GAAG+D,IAAI,CAAC05B,IAAL,CAAU,KAAKx3B,IAAL,CAAUlG,MAAV,GAAmB,CAA7B,CAAZ;QACA,KAAKoiC,UAAL,GAAkBiB,aAAa,CAACpjC,GAAD,CAA/B;MACH;;MACD,IAAMqjC,KAAK,GAAG,KAAKC,QAAL,EAAd;MACA,KAAKD,KAAL,GAAaA,KAAK,CAAC9iB,MAAN,CAAa,UAAA/Z,CAAC;QAAA,OAAIA,CAAC,CAACP,IAAF,CAAOvL,KAAP,KAAiB,IAArB;MAAA,CAAd,CAAb;MACA,KAAK6oC,UAAL,GAAkBF,KAAK,CAAC9iB,MAAN,CAAa,UAAA/Z,CAAC;QAAA,OAAIA,CAAC,CAACP,IAAF,CAAOvL,KAAP,KAAiB,IAArB;MAAA,CAAd,CAAlB;IACH;;;WACD,oBAAW;MAAA;;MACP,IAAM8oC,QAAQ,GAAG,OAAO,KAAKzN,YAAZ,KAA6B,QAA7B,GAAwC,KAAKA,YAA7C,GAA4D,KAAKA,YAAL,CAAkB,CAAlB,IAAuB,KAAKA,YAAL,CAAkB,CAAlB,CAApG;MACA,IAAM0N,QAAQ,GAAG,OAAO,KAAK1N,YAAZ,KAA6B,QAA7B,GAAwC,KAAKA,YAA7C,GAA4D,KAAKA,YAAL,CAAkB,CAAlB,IAAuB,KAAKA,YAAL,CAAkB,CAAlB,CAApG;MACA,OAAO,KAAK9vB,IAAL,CAAU4L,GAAV,CAAc,UAACrL,CAAD,EAAIC,KAAJ,EAAc;QAC/B,IAAInC,KAAK,GAAGkC,CAAC,CAACP,IAAF,CAAOd,IAAnB;;QACA,IAAIb,KAAK,IAAIA,KAAK,CAACuJ,WAAN,CAAkB1I,IAAlB,KAA2B,MAAxC,EAAgD;UAC5Cb,KAAK,GAAGA,KAAK,CAACC,kBAAN,EAAR;QACH,CAFD,MAGK;UACDD,KAAK,GAAGA,KAAK,GAAGA,KAAK,CAACE,cAAN,EAAH,GAA4BF,KAAzC;QACH;;QACD,IAAM5J,KAAK,GAAG8L,CAAC,CAACP,IAAF,CAAOvL,KAArB;QACA,IAAMgpC,UAAU,GAAGp/B,KAAK,GAAG,OAAI,CAAChB,MAAL,CAAY6C,QAAZ,CAAqB7B,KAArB,CAAH,GAAiC,OAAI,CAAC6+B,UAA9D;QACA,IAAM/9B,KAAK,GAAG,OAAI,CAACu+B,SAAL,IAAkBD,UAAlB,IAAgC,MAA9C;QACA,OAAO;UACH3iC,CAAC,EAAEyF,CAAC,CAACzF,CADF;UAEH0K,CAAC,EAAEjF,CAAC,CAACiF,CAFF;UAGH9P,KAAK,EAAE6K,CAAC,CAAC7K,KAAF,GAAU8nC,QAHd;UAIHroC,MAAM,EAAEoL,CAAC,CAACpL,MAAF,GAAWooC,QAJhB;UAKHp+B,KAAK,EAALA,KALG;UAMHs9B,SAAS,EAAE,OAAI,CAACA,SAAL,IAAkBgB,UAN1B;UAOHf,SAAS,EAAE,OAAI,CAACA,SAAL,IAAkBG,WAAW,CAAC19B,KAAD,CAPrC;UAQHd,KAAK,EAALA,KARG;UASH2B,IAAI,EAAEO,CAAC,CAACP,IATL;UAUHomB,WAAW,YAAK/nB,KAAL,eAAe5J,KAAf;QAVR,CAAP;MAYH,CAvBM,CAAP;IAwBH;;;WACD,iBAAQ+L,KAAR,EAAei7B,IAAf,EAAqB;MACjB,OAAOA,IAAI,CAACp9B,KAAZ;IACH;;;WACD,iBAAQ2B,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;;;;AAELi9B,mBAAmB,CAACjlC,IAApB;EAAA,iBAAgHilC,mBAAhH;AAAA;;AACAA,mBAAmB,CAAC9kC,IAApB,kBA5miB0GjJ,EA4miB1G;EAAA,MAAoG+tC,mBAApG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WA5miB0G/tC,EA4miB1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA5miB0GA,EA6miBtG,yEADJ;MA5miB0GA,EAwniBtG,oEAZJ;IAAA;;IAAA;MA5miB0GA,EA8miBtF,mEAFpB;MA5miB0GA,EA0niBtF,aAdpB;MA5miB0GA,EA0niBtF,8DAdpB;IAAA;EAAA;EAAA,eA8B0CgsC,aA9B1C,EA8BmShrC,EAAE,CAACwQ,OA9BtS;EAAA;EAAA;AAAA;;AA+BA;EAAA,mDA3oiB0GxR,EA2oiB1G,mBAA2F+tC,mBAA3F,EAA4H,CAAC;IACjHjmC,IAAI,EAAE5H,SAD2G;IAEjH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,2BADX;MAECC,QAAQ,6zBAFT;MAiCCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAjC1C,CAAD;EAF2G,CAAD,CAA5H,QAqC4B;IAAE8B,IAAI,EAAE,CAAC;MACrBhJ,IAAI,EAAEzH;IADe,CAAD,CAAR;IAEZqU,IAAI,EAAE,CAAC;MACP5M,IAAI,EAAEzH;IADC,CAAD,CAFM;IAIZ8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CAJI;IAMZugC,YAAY,EAAE,CAAC;MACf94B,IAAI,EAAEzH;IADS,CAAD,CANF;IAQZmuC,SAAS,EAAE,CAAC;MACZ1mC,IAAI,EAAEzH;IADM,CAAD,CARC;IAUZktC,SAAS,EAAE,CAAC;MACZzlC,IAAI,EAAEzH;IADM,CAAD,CAVC;IAYZ2tC,UAAU,EAAE,CAAC;MACblmC,IAAI,EAAEzH;IADO,CAAD,CAZA;IAcZmtC,SAAS,EAAE,CAAC;MACZ1lC,IAAI,EAAEzH;IADM,CAAD,CAdC;IAgBZynB,eAAe,EAAE,CAAC;MAClBhgB,IAAI,EAAEzH;IADY,CAAD,CAhBL;IAkBZ4rB,eAAe,EAAE,CAAC;MAClBnkB,IAAI,EAAEzH;IADY,CAAD,CAlBL;IAoBZsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CApBA;IAsBZwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD;EAtBI,CArC5B;AAAA;;IA+DM6tC,mB;;;;;EACF,+BAAc;IAAA;;IAAA;;IACV,+BAASlqC,SAAT;IACA,QAAKypC,UAAL,GAAkB,kBAAlB;IACA,QAAKpN,YAAL,GAAoB,EAApB;IACA,QAAK3qB,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IAJU;EAKb;;;;SACD,eAAgB;MACZ,OAAO,CAAC,CAAC,KAAKpU,MAAL,CAAY6sC,SAAZ,CAAsB9jC,MAA/B;IACH;;;WACD,kBAAS;MACL;;MACA,KAAK8J,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX;MAHkB,CAAD,CAAnC;MAKA,KAAK6hB,WAAL;MACA,KAAK1pB,MAAL,GAAc,KAAKkwB,SAAL,EAAd;MACA,KAAKxL,SAAL;MACA,KAAK1c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,gBAAqD,KAAKzX,MAAL,CAAY,CAAZ,CAArD;MACA,IAAM+hB,IAAI,GAAGkQ,QAAQ,CAAC,KAAKxzB,IAAN,EAAY,KAAKF,OAAL,CAAa5J,MAAzB,EAAiC,GAAjC,CAArB;MACA,IAAMm2B,CAAC,GAAG/I,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAxB;MACA,IAAMlnB,IAAI,GAAG,KAAK0D,OAAL,CAAamC,KAAb,EAAb;;MACA,OAAO7F,IAAI,CAAClG,MAAL,GAAcm2B,CAArB,EAAwB;QACpBjwB,IAAI,CAACpF,IAAL,CAAU;UAAEnG,KAAK,EAAE;QAAT,CAAV;MACH;;MACD,KAAKuL,IAAL,GAAYy3B,UAAU,CAAC,KAAK7zB,IAAN,EAAY5D,IAAZ,EAAkB,GAAlB,EAAuB,KAAK03B,eAA5B,CAAtB;IACH;;;WACD,qBAAY;MACR,OAAO,KAAKh0B,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAAClC,KAAN;MAAA,CAAlB,CAAP;IACH;;;WACD,iBAAQ2B,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,KAAK3C,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6BnG,SAAS,CAACqG,OAAvC,EAAgD,KAAK9F,MAArD,EAA6D,KAAKyH,YAAlE,CAAd;IACH;;;;EArC6B/B,kB;;AAuClC26B,mBAAmB,CAAC3lC,IAApB;EAAA;EAAA;IAAA,gFAjviB0G9I,EAiviB1G,uBAAgHyuC,mBAAhH,SAAgHA,mBAAhH;EAAA;AAAA;;AACAA,mBAAmB,CAACxlC,IAApB,kBAlviB0GjJ,EAkviB1G;EAAA,MAAoGyuC,mBAApG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAlviB0GzuC,EAkviB1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAlviB0GA,EAmviBtG,yCADJ;MAlviB0GA,EAoviBpG,iBAFN;MAlviB0GA,EAoviBpG,qCAFN;MAlviB0GA,EAkwiBhG;QAAA,OAAU,mBAAV;MAAA,EAhBV;MAlviB0GA,EAqviBlG,mBAHR;IAAA;;IAAA;MAlviB0GA,EAmviBpF,oBAnviBoFA,EAmviBpF,qGADtB;MAlviB0GA,EAoviBtC,aAFpE;MAlviB0GA,EAoviBtC,wCAFpE;MAlviB0GA,EAoviB7F,wCAFb;MAlviB0GA,EAuviBhG,aALV;MAlviB0GA,EAuviBhG,uUALV;IAAA;EAAA;EAAA,eAoB+vEyR,cApB/vE,EAoBo+Es8B,mBApBp+E;EAAA;EAAA;EAAA;AAAA;;AAqBA;EAAA,mDAvwiB0G/tC,EAuwiB1G,mBAA2FyuC,mBAA3F,EAA4H,CAAC;IACjH3mC,IAAI,EAAE5H,SAD2G;IAEjH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,wBAAZ;MAAsCC,QAAQ,swBAA9C;MAoBdC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IApBnB;MAoByBuF,eAAe,EAAErO,uBAAuB,CAACsO,MApBlE;MAoB0EvF,MAAM,EAAE,CAAC,yvDAAD,EAA4vD,8cAA5vD;IApBlF,CAAD;EAF2G,CAAD,CAA5H,QAuB4B;IAAE+kC,SAAS,EAAE,CAAC;MAC1B1mC,IAAI,EAAEzH;IADoB,CAAD,CAAb;IAEZktC,SAAS,EAAE,CAAC;MACZzlC,IAAI,EAAEzH;IADM,CAAD,CAFC;IAIZ2tC,UAAU,EAAE,CAAC;MACblmC,IAAI,EAAEzH;IADO,CAAD,CAJA;IAMZugC,YAAY,EAAE,CAAC;MACf94B,IAAI,EAAEzH;IADS,CAAD,CANF;IAQZmtC,SAAS,EAAE,CAAC;MACZ1lC,IAAI,EAAEzH;IADM,CAAD,CARC;IAUZynB,eAAe,EAAE,CAAC;MAClBhgB,IAAI,EAAEzH;IADY,CAAD,CAVL;IAYZ4rB,eAAe,EAAE,CAAC;MAClBnkB,IAAI,EAAEzH;IADY,CAAD,CAZL;IAcZmoC,eAAe,EAAE,CAAC;MAClB1gC,IAAI,EAAEzH;IADY,CAAD;EAdL,CAvB5B;AAAA;;IAyCMsuC,gB;;;;AAENA,gBAAgB,CAAC7lC,IAAjB;EAAA,iBAA6G6lC,gBAA7G;AAAA;;AACAA,gBAAgB,CAACnxB,IAAjB,kBAnziB0Gxd,EAmziB1G;EAAA,MAA8G2uC;AAA9G;AACAA,gBAAgB,CAAClxB,IAAjB,kBApziB0Gzd,EAoziB1G;EAAA,UAA0I,CAAC+sB,iBAAD,CAA1I;AAAA;;AACA;EAAA,mDArziB0G/sB,EAqziB1G,mBAA2F2uC,gBAA3F,EAAyH,CAAC;IAC9G7mC,IAAI,EAAEhH,QADwG;IAE9G+C,IAAI,EAAE,CAAC;MACC6Z,OAAO,EAAE,CAACqP,iBAAD,CADV;MAECpP,YAAY,EAAE,CAACquB,aAAD,EAAgB+B,mBAAhB,EAAqCU,mBAArC,CAFf;MAGC7wB,OAAO,EAAE,CAACouB,aAAD,EAAgB+B,mBAAhB,EAAqCU,mBAArC;IAHV,CAAD;EAFwG,CAAD,CAAzH;AAAA;;IASMG,oB;EACF,8BAAYlnC,OAAZ,EAAqB;IAAA;;IACjB,KAAK4G,QAAL,GAAgB,KAAhB;IACA,KAAKqD,UAAL,GAAkB,IAAlB;IACA,KAAK9P,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAK+pB,WAAL,GAAmB,KAAnB;IACA,KAAKhQ,WAAL,GAAmB+G,cAAnB;IACA,KAAK/Z,OAAL,GAAeA,OAAO,CAACS,aAAvB;EACH;;;;WACD,uBAAc;MACV,KAAKuI,MAAL;;MACA,KAAKoX,eAAL,GAAuB,KAAKA,eAAL,IAAyB,UAAAviB,KAAK;QAAA,OAAIA,KAAK,CAAC8J,cAAN,EAAJ;MAAA,CAArD;;MACA,IAAM4c,eAAe,GAAG,KAAKA,eAAL,IAAyB,UAAAyU,IAAI;QAAA,OAAIpxB,WAAW,CAACkH,SAAS,CAACkqB,IAAI,CAACvxB,KAAN,EAAa,EAAb,CAAV,CAAf;MAAA,CAArD;;MACA,IAAM0/B,QAAQ,GAAG;QACb/9B,IAAI,EAAE,KAAKA,IADE;QAEb3B,KAAK,EAAE,KAAKA,KAFC;QAGb5J,KAAK,EAAE,KAAKA;MAHC,CAAjB;MAKA,KAAK+oB,cAAL,GAAsB,KAAKxG,eAAL,CAAqB+mB,QAAQ,CAACtpC,KAA9B,CAAtB;MACA,KAAKuK,cAAL,GAAsBmc,eAAe,CAAC4iB,QAAD,CAArC;MACA,KAAK9rB,UAAL,GAAkB,SAAS1B,EAAE,GAAG1N,QAAL,EAA3B;MACA,KAAKwsB,WAAL,kBAA2B,KAAKpd,UAAhC;MACA,KAAKc,aAAL,GAAqB,KAAKC,gBAAL,EAArB;IACH;;;WACD,kBAAS;MACL,IAAI,KAAK4G,WAAT,EAAsB;QAClB,KAAK0V,oBAAL;MACH,CAFD,MAGK;QACD,IAAI,KAAKzuB,UAAT,EAAqB;UACjB,KAAKyT,aAAL;QACH;;QACD,KAAKsF,WAAL,GAAmB,IAAnB;MACH;IACJ;;;WACD,yBAAgB;MACZ,IAAMjF,IAAI,GAAG5jB,MAAM,CAAC,KAAK6F,OAAN,CAAN,CAAqB7F,MAArB,CAA4B,OAA5B,CAAb;MACA4jB,IAAI,CAACC,IAAL,CAAU,SAAV,EAAqB,CAArB,EAAwBA,IAAxB,CAA6B,GAA7B,EAAkC,KAAK9Z,CAAvC,EAA0C8Z,IAA1C,CAA+C,GAA/C,EAAoD,KAAKpP,CAAzD;MACA,KAAK8pB,oBAAL;IACH;;;WACD,wBAAe;MACX,OAAOuN,WAAW,CAAC,KAAKpzB,IAAN,CAAlB;IACH;;;WACD,gCAAuB;MACnB,IAAMkL,IAAI,GAAG5jB,MAAM,CAAC,KAAK6F,OAAN,CAAN,CAAqB7F,MAArB,CAA4B,OAA5B,CAAb;;MACA,IAAI,KAAK8P,UAAT,EAAqB;QACjB8T,IAAI,CACC/jB,UADL,GAEKkD,QAFL,CAEc,GAFd,EAGK8gB,IAHL,CAGU,SAHV,EAGqB,CAHrB,EAIKA,IAJL,CAIU,GAJV,EAIe,KAAK9Z,CAJpB,EAKK8Z,IALL,CAKU,GALV,EAKe,KAAKpP,CALpB,EAMKoP,IANL,CAMU,OANV,EAMmB,KAAKlf,KANxB,EAOKkf,IAPL,CAOU,QAPV,EAOoB,KAAKzf,MAPzB;MAQH,CATD,MAUK;QACDwf,IAAI,CAACC,IAAL,CAAU,SAAV,EAAqB,CAArB,EAAwBA,IAAxB,CAA6B,GAA7B,EAAkC,KAAK9Z,CAAvC,EAA0C8Z,IAA1C,CAA+C,GAA/C,EAAoD,KAAKpP,CAAzD,EAA4DoP,IAA5D,CAAiE,OAAjE,EAA0E,KAAKlf,KAA/E,EAAsFkf,IAAtF,CAA2F,QAA3F,EAAqG,KAAKzf,MAA1G;MACH;IACJ;;;WACD,mBAAU;MACN,KAAKpE,MAAL,CAAYkO,IAAZ,CAAiB,KAAKe,IAAtB;IACH;;;WACD,4BAAmB;MACf,OAAO,CACH;QACIyF,MAAM,EAAE,CADZ;QAEItG,KAAK,EAAE,KAAKsK,IAFhB;QAGIqJ,OAAO,EAAE;MAHb,CADG,EAMH;QACIrN,MAAM,EAAE,GADZ;QAEItG,KAAK,EAAE,KAAKsK,IAFhB;QAGIqJ,OAAO,EAAE;MAHb,CANG,CAAP;IAYH;;;;;;AAELgrB,oBAAoB,CAAC9lC,IAArB;EAAA,iBAAiH8lC,oBAAjH,EA34iB0G5uC,EA24iB1G,mBAAuJA,EAAE,CAAC+I,UAA1J;AAAA;;AACA6lC,oBAAoB,CAAC3lC,IAArB,kBA54iB0GjJ,EA44iB1G;EAAA,MAAqG4uC,oBAArG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WA54iB0G5uC,EA44iB1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA54iB0GA,EA64iBtG,iBADJ;MA54iB0GA,EA64iBtG,uBADJ;MA54iB0GA,EA84iBpG,0EAFN;MA54iB0GA,EAs5iBpG,6BAVN;MA54iB0GA,EA65iBlG;QAAA,OAAS,aAAT;MAAA,EAjBR;MA54iB0GA,EAs5iBpG,eAVN;MA54iB0GA,EA+5iBpG,6FAnBN;MA54iB0GA,EAw7iBtG,eA5CJ;IAAA;;IAAA;MA54iB0GA,EA84iB7F,aAFb;MA54iB0GA,EA84iB7F,iCAFb;MA54iB0GA,EAu5iBlG,aAXR;MA54iB0GA,EAu5iBlG,iIAXR;MA54iB0GA,EAg6iBjG,aApBT;MA54iB0GA,EAg6iBjG,wDApBT;IAAA;EAAA;EAAA,eA6C0C0hB,0BA7C1C,EA6CyKwF,gBA7CzK,EA6CoZlmB,EAAE,CAACkI,IA7CvZ;EAAA;EAAA;AAAA;;AA8CA;EAAA,mDA17iB0GlJ,EA07iB1G,mBAA2F4uC,oBAA3F,EAA6H,CAAC;IAClH9mC,IAAI,EAAE5H,SAD4G;IAElH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,6BADX;MAECC,QAAQ,26CAFT;MAgDCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAhD1C,CAAD;EAF4G,CAAD,CAA7H,EAoD4B,YAAY;IAAE,OAAO,CAAC;MAAElH,IAAI,EAAE9H,EAAE,CAAC+I;IAAX,CAAD,CAAP;EAAmC,CApD7E,EAoD+F;IAAE+H,IAAI,EAAE,CAAC;MACxFhJ,IAAI,EAAEzH;IADkF,CAAD,CAAR;IAE/Eka,IAAI,EAAE,CAAC;MACPzS,IAAI,EAAEzH;IADC,CAAD,CAFyE;IAI/EuL,CAAC,EAAE,CAAC;MACJ9D,IAAI,EAAEzH;IADF,CAAD,CAJ4E;IAM/EiW,CAAC,EAAE,CAAC;MACJxO,IAAI,EAAEzH;IADF,CAAD,CAN4E;IAQ/EmG,KAAK,EAAE,CAAC;MACRsB,IAAI,EAAEzH;IADE,CAAD,CARwE;IAU/E4F,MAAM,EAAE,CAAC;MACT6B,IAAI,EAAEzH;IADG,CAAD,CAVuE;IAY/E8O,KAAK,EAAE,CAAC;MACRrH,IAAI,EAAEzH;IADE,CAAD,CAZwE;IAc/EkF,KAAK,EAAE,CAAC;MACRuC,IAAI,EAAEzH;IADE,CAAD,CAdwE;IAgB/EynB,eAAe,EAAE,CAAC;MAClBhgB,IAAI,EAAEzH;IADY,CAAD,CAhB8D;IAkB/E4rB,eAAe,EAAE,CAAC;MAClBnkB,IAAI,EAAEzH;IADY,CAAD,CAlB8D;IAoB/EiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CApBqE;IAsB/EsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CAtBmE;IAwB/EwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD;EAxBuE,CApD/F;AAAA;;IAgFMkuC,0B;EACF,sCAAc;IAAA;;IACV,KAAKxgC,QAAL,GAAgB,KAAhB;IACA,KAAK+P,eAAL,GAAuB,KAAvB;IACA,KAAK1M,UAAL,GAAkB,IAAlB;IACA,KAAK9P,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKkiB,UAAL,GAAkBhF,UAAlB;IACA,KAAK+E,cAAL,GAAsBpd,cAAtB;EACH;;;;WACD,qBAAYwI,OAAZ,EAAqB;MACjB,KAAKuyB,KAAL,GAAa,KAAKC,QAAL,EAAb;IACH;;;WACD,oBAAW;MAAA;;MACP,OAAO,KAAK1vB,IAAL,CAAUi+B,QAAV,CACF3jB,MADE,CACK,UAAA/Z,CAAC,EAAI;QACb,OAAOA,CAAC,CAACw8B,KAAF,KAAY,CAAnB;MACH,CAHM,EAIFnxB,GAJE,CAIE,UAACrL,CAAD,EAAIC,KAAJ,EAAc;QACnB,IAAMnC,KAAK,GAAGkC,CAAC,CAACgQ,EAAhB;QACA,OAAO;UACHvQ,IAAI,EAAEO,CAAC,CAACP,IADL;UAEHlF,CAAC,EAAEyF,CAAC,CAAC29B,EAFF;UAGH14B,CAAC,EAAEjF,CAAC,CAAC6f,EAHF;UAIH1qB,KAAK,EAAE6K,CAAC,CAACkL,EAAF,GAAOlL,CAAC,CAAC29B,EAJb;UAKH/oC,MAAM,EAAEoL,CAAC,CAAC+K,EAAF,GAAO/K,CAAC,CAAC6f,EALd;UAMH3W,IAAI,EAAE,OAAI,CAACpM,MAAL,CAAY6C,QAAZ,CAAqB7B,KAArB,CANH;UAOHA,KAAK,EAALA,KAPG;UAQH5J,KAAK,EAAE8L,CAAC,CAAC9L;QARN,CAAP;MAUH,CAhBM,CAAP;IAiBH;;;WACD,gCAAiC;MAAA,IAAhB4J,KAAgB,UAAhBA,KAAgB;MAAA,IAAT5J,KAAS,UAATA,KAAS;MAC7B,uDAC4B+J,WAAW,CAACH,KAAD,CADvC,wDAE0B5J,KAAK,CAAC8J,cAAN,EAF1B;IAIH;;;WACD,iBAAQyB,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,iBAAQQ,KAAR,EAAeH,IAAf,EAAqB;MACjB,OAAOA,IAAI,CAAChC,KAAZ;IACH;;;;;;AAEL2/B,0BAA0B,CAAChmC,IAA3B;EAAA,iBAAuHgmC,0BAAvH;AAAA;;AACAA,0BAA0B,CAAC7lC,IAA3B,kBAvjjB0GjJ,EAujjB1G;EAAA,MAA2G8uC,0BAA3G;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WAvjjB0G9uC,EAujjB1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAvjjB0GA,EAwjjBtG,2EADJ;IAAA;;IAAA;MAvjjB0GA,EA0jjBtF,8DAHpB;IAAA;EAAA;EAAA,eAyB0C4uC,oBAzB1C,EAyB+R5tC,EAAE,CAACwQ,OAzBlS,EAyByYuM,gBAzBzY;EAAA;EAAA;AAAA;;AA0BA;EAAA,mDAjljB0G/d,EAiljB1G,mBAA2F8uC,0BAA3F,EAAmI,CAAC;IACxHhnC,IAAI,EAAE5H,SADkH;IAExH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,oCADX;MAECC,QAAQ,mzBAFT;MA4BCyF,eAAe,EAAErO,uBAAuB,CAACsO;IA5B1C,CAAD;EAFkH,CAAD,CAAnI,QAgC4B;IAAE8B,IAAI,EAAE,CAAC;MACrBhJ,IAAI,EAAEzH;IADe,CAAD,CAAR;IAEZqU,IAAI,EAAE,CAAC;MACP5M,IAAI,EAAEzH;IADC,CAAD,CAFM;IAIZ8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CAJI;IAMZynB,eAAe,EAAE,CAAC;MAClBhgB,IAAI,EAAEzH;IADY,CAAD,CANL;IAQZ4rB,eAAe,EAAE,CAAC;MAClBnkB,IAAI,EAAEzH;IADY,CAAD,CARL;IAUZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CAVE;IAYZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAZL;IAcZugB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAEzH;IADY,CAAD,CAdL;IAgBZsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD;EAlBI,CAhC5B;AAAA;;IAsDMquC,gB;;;;;EACF,4BAAc;IAAA;;IAAA;;IACV,+BAAS1qC,SAAT;IACA,QAAK8Z,eAAL,GAAuB,KAAvB;IACA,QAAK/P,QAAL,GAAgB,KAAhB;IACA,QAAKzM,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,QAAKsV,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IALU;EAMb;;;;WACD,kBAAS;MACL;;MACA,KAAKvB,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX;MAHkB,CAAD,CAAnC;MAKA,KAAK7H,MAAL,GAAc,KAAKkwB,SAAL,EAAd;MACA,KAAKj7B,OAAL,GAAeA,OAAO,GAAG20B,IAAV,CAAe,CAAC,KAAKtjB,IAAL,CAAUlO,KAAX,EAAkB,KAAKkO,IAAL,CAAUzO,MAA5B,CAAf,CAAf;MACA,IAAMipC,QAAQ,GAAG;QACbl/B,IAAI,EAAE,MADO;QAEbzK,KAAK,EAAE,CAFM;QAGb4pC,MAAM,EAAE;MAHK,CAAjB;MAKA,IAAMpnB,IAAI,GAAGzkB,QAAQ,GAChB+d,EADQ,CACL,UAAAhQ,CAAC,EAAI;QACT,IAAIlC,KAAK,GAAGkC,CAAC,CAACrB,IAAd;;QACA,IAAIb,KAAK,CAACuJ,WAAN,CAAkB1I,IAAlB,KAA2B,MAA/B,EAAuC;UACnCb,KAAK,GAAGA,KAAK,CAACC,kBAAN,EAAR;QACH,CAFD,MAGK;UACDD,KAAK,GAAGA,KAAK,CAACE,cAAN,EAAR;QACH;;QACD,OAAOF,KAAP;MACH,CAVY,EAWRigC,QAXQ,CAWC,UAAA/9B,CAAC;QAAA,OAAKA,CAAC,CAAC89B,MAAF,GAAW,IAAX,GAAkB,MAAvB;MAAA,CAXF,GAWmCD,QAXnC,4BAWgD,KAAK16B,OAXrD,IAYR8X,GAZQ,CAYJ,UAAAjb,CAAC;QAAA,OAAIA,CAAC,CAAC9L,KAAN;MAAA,CAZG,CAAb;MAaA,KAAKuL,IAAL,GAAY,KAAKzN,OAAL,CAAa0kB,IAAb,CAAZ;MACA,KAAK+K,SAAL;MACA,KAAK1c,SAAL,uBAA8B,KAAK1B,IAAL,CAAUgZ,OAAxC,gBAAqD,KAAKzX,MAAL,CAAY,CAAZ,CAArD;IACH;;;WACD,qBAAY;MACR,OAAO,KAAKzB,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAACrB,IAAN;MAAA,CAAlB,CAAP;IACH;;;WACD,iBAAQc,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,qBAAY;MACR,KAAK3C,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6BnG,SAAS,CAACqG,OAAvC,EAAgD,KAAK9F,MAArD,EAA6D,KAAKyH,YAAlE,CAAd;IACH;;;;EA/C0B/B,kB;;AAiD/Bm7B,gBAAgB,CAACnmC,IAAjB;EAAA;EAAA;IAAA,0EAxrjB0G9I,EAwrjB1G,uBAA6GivC,gBAA7G,SAA6GA,gBAA7G;EAAA;AAAA;;AACAA,gBAAgB,CAAChmC,IAAjB,kBAzrjB0GjJ,EAyrjB1G;EAAA,MAAiGivC,gBAAjG;EAAA;EAAA;IAAA;MAzrjB0GjvC,EAyrjB1G;IAAA;;IAAA;MAAA;;MAzrjB0GA,EAyrjB1G,qBAzrjB0GA,EAyrjB1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WAzrjB0GA,EAyrjB1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAzrjB0GA,EA0rjBtG,yCADJ;MAzrjB0GA,EA2rjBpG,iBAFN;MAzrjB0GA,EA2rjBpG,qCAFN;MAzrjB0GA,EAusjBhG;QAAA,OAAU,mBAAV;MAAA,EAdV;MAzrjB0GA,EA4rjBlG,mBAHR;IAAA;;IAAA;MAzrjB0GA,EA0rjBpF,oBA1rjBoFA,EA0rjBpF,qGADtB;MAzrjB0GA,EA2rjB7F,aAFb;MAzrjB0GA,EA2rjB7F,wCAFb;MAzrjB0GA,EA8rjBhG,aALV;MAzrjB0GA,EA8rjBhG,6RALV;IAAA;EAAA;EAAA,eAkB8OyR,cAlB9O,EAkBmdq9B,0BAlBnd;EAAA;EAAA;EAAA;AAAA;;AAmBA;EAAA,mDA5sjB0G9uC,EA4sjB1G,mBAA2FivC,gBAA3F,EAAyH,CAAC;IAC9GnnC,IAAI,EAAE5H,SADwG;IAE9G2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,qBAAZ;MAAmCC,QAAQ,grBAA3C;MAkBdC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAlBnB;MAkByBuF,eAAe,EAAErO,uBAAuB,CAACsO,MAlBlE;MAkB0EvF,MAAM,EAAE,CAAC,wLAAD;IAlBlF,CAAD;EAFwG,CAAD,CAAzH,QAqB4B;IAAE+K,OAAO,EAAE,CAAC;MACxB1M,IAAI,EAAEzH;IADkB,CAAD,CAAX;IAEZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAFL;IAIZynB,eAAe,EAAE,CAAC;MAClBhgB,IAAI,EAAEzH;IADY,CAAD,CAJL;IAMZ4rB,eAAe,EAAE,CAAC;MAClBnkB,IAAI,EAAEzH;IADY,CAAD,CANL;IAQZiO,QAAQ,EAAE,CAAC;MACXxG,IAAI,EAAEzH;IADK,CAAD,CARE;IAUZwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CAVI;IAYZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD;EAZL,CArB5B;AAAA;;IAsCMwrC,a;;;;AAENA,aAAa,CAACvmC,IAAd;EAAA,iBAA0GumC,aAA1G;AAAA;;AACAA,aAAa,CAAC7xB,IAAd,kBArvjB0Gxd,EAqvjB1G;EAAA,MAA2GqvC;AAA3G;AACAA,aAAa,CAAC5xB,IAAd,kBAtvjB0Gzd,EAsvjB1G;EAAA,UAAoI,CAAC+sB,iBAAD,CAApI;AAAA;;AACA;EAAA,mDAvvjB0G/sB,EAuvjB1G,mBAA2FqvC,aAA3F,EAAsH,CAAC;IAC3GvnC,IAAI,EAAEhH,QADqG;IAE3G+C,IAAI,EAAE,CAAC;MACC6Z,OAAO,EAAE,CAACqP,iBAAD,CADV;MAECpP,YAAY,EAAE,CAACixB,oBAAD,EAAuBE,0BAAvB,EAAmDG,gBAAnD,CAFf;MAGCrxB,OAAO,EAAE,CAACgxB,oBAAD,EAAuBE,0BAAvB,EAAmDG,gBAAnD;IAHV,CAAD;EAFqG,CAAD,CAAtH;AAAA;;AASA,IAAIK,WAAJ;;AACA,CAAC,UAAUA,WAAV,EAAuB;EACpBA,WAAW,CAAC,OAAD,CAAX,GAAuB,OAAvB;EACAA,WAAW,CAAC,OAAD,CAAX,GAAuB,OAAvB;AACH,CAHD,EAGGA,WAAW,KAAKA,WAAW,GAAG,EAAnB,CAHd;;IAIMC,oB;;;;;EACF,gCAAc;IAAA;;IAAA;;IACV,+BAAShrC,SAAT;IACA,QAAK1B,GAAL,GAAW,CAAX;IACA,QAAKC,GAAL,GAAW,GAAX;IACA,QAAKyC,KAAL,GAAa,CAAb;IACA,QAAK0Q,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;IACA,QAAKu5B,gBAAL,GAAwB,CAAxB;IACA,QAAKC,gBAAL,GAAwB,CAAxB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,cAAL,GAAsB,EAAtB;IACA,QAAKC,kBAAL,GAA0B,EAA1B;IACA,QAAKC,cAAL,GAAsB,EAAtB;IACA,QAAKltB,cAAL,GAAsBlB,cAAtB;IAZU;EAab;;;;WACD,2BAAkB;MAAA;;MACd;;MACA/c,UAAU,CAAC,YAAM;QACb,OAAI,CAACooC,SAAL,CAAewC,WAAW,CAACQ,KAA3B;;QACA,OAAI,CAAChD,SAAL,CAAewC,WAAW,CAACS,KAA3B;MACH,CAHS,CAAV;IAIH;;;WACD,kBAAS;MAAA;;MACL;;MACA,KAAKC,gBAAL,GAAwB,KAAKC,aAAL,KAAuB9pC,SAA/C;MACA,KAAKrD,GAAL,GAAW8L,IAAI,CAAC9L,GAAL,CAAS,KAAKA,GAAd,EAAmB,KAAKyC,KAAxB,CAAX;MACA,KAAK1C,GAAL,GAAW+L,IAAI,CAAC/L,GAAL,CAAS,KAAKA,GAAd,EAAmB,KAAK0C,KAAxB,CAAX;;MACA,IAAI,KAAKyqC,gBAAT,EAA2B;QACvB,KAAKltC,GAAL,GAAW8L,IAAI,CAAC9L,GAAL,CAAS,KAAKA,GAAd,EAAmB,KAAKmtC,aAAxB,CAAX;QACA,KAAKptC,GAAL,GAAW+L,IAAI,CAAC/L,GAAL,CAAS,KAAKA,GAAd,EAAmB,KAAKotC,aAAxB,CAAX;MACH;;MACD,KAAKv7B,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX;MAHkB,CAAD,CAAnC;MAKA,KAAKuiB,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAKpK,UAAL,GAAkB,KAAKyK,aAAL,EAAlB;MACA,KAAKoX,YAAL,GAAoB,KAAKC,eAAL,EAApB;MACA,KAAKrd,SAAL;MACA,IAAMpF,OAAO,GAAG,KAAKzX,MAAL,CAAY,CAAZ,IAAiB,KAAKvB,IAAL,CAAUlO,KAAV,GAAkB,CAAnD;MACA,IAAMy+B,OAAO,GAAG,KAAKhvB,MAAL,CAAY,CAAZ,IAAiB,KAAKvB,IAAL,CAAUzO,MAAV,GAAmB,CAApD;MACA,KAAKmQ,SAAL,uBAA8BsX,OAA9B,eAA0CuX,OAA1C;MACA,KAAKmL,aAAL,uBAAkC,KAAKn6B,MAAL,CAAY,CAAZ,IAAiB,KAAKoY,UAAL,CAAgB,KAAK4hB,aAArB,CAAnD,eAA2FhL,OAA3F;MACA,KAAK0K,cAAL;MACA,KAAKE,cAAL;;MACA,IAAI3uC,gBAAgB,CAAC,KAAK0G,UAAN,CAApB,EAAuC;QACnC,KAAKykC,YAAL,CAAkB,OAAlB;QACA,KAAKA,YAAL,CAAkB,OAAlB;MACH,CAHD,MAIK;QACD3nC,UAAU,CAAC;UAAA,OAAM,OAAI,CAACooC,SAAL,CAAewC,WAAW,CAACQ,KAA3B,CAAN;QAAA,CAAD,EAA0C,EAA1C,CAAV;QACAprC,UAAU,CAAC;UAAA,OAAM,OAAI,CAACooC,SAAL,CAAewC,WAAW,CAACS,KAA3B,CAAN;QAAA,CAAD,EAA0C,EAA1C,CAAV;MACH;IACJ;;;WACD,0BAAiB;MACb,OAAO,CAAC,KAAKltC,GAAN,EAAW,KAAKC,GAAhB,CAAP;IACH;;;WACD,yBAAgB;MACZ,OAAOd,WAAW,GAAGY,KAAd,CAAoB,CAAC,CAAD,EAAI,KAAK8R,IAAL,CAAUlO,KAAd,CAApB,EAA0C4H,MAA1C,CAAiD,KAAKoqB,WAAtD,CAAP;IACH;;;WACD,2BAAkB;MACd,IAAI,KAAK1Q,eAAT,EAA0B;QACtB,OAAO,KAAKA,eAAL,CAAqB,KAAKviB,KAA1B,CAAP;MACH;;MACD,OAAO,KAAKA,KAAL,CAAW8J,cAAX,EAAP;IACH;;;WACD,mBAAU3H,OAAV,EAAkC;MAAA;;MAAA,IAAfulC,MAAe,uEAAN,IAAM;MAC9B,IAAIoD,EAAJ;MACA,IAAI/C,WAAJ;;MACA,IAAI5lC,OAAO,KAAK4nC,WAAW,CAACQ,KAA5B,EAAmC;QAC/BO,EAAE,GAAG,KAAKC,WAAV;QACAhD,WAAW,GAAG,KAAKkC,gBAAnB;MACH,CAHD,MAIK;QACDa,EAAE,GAAG,KAAKE,WAAV;QACAjD,WAAW,GAAG,KAAKmC,gBAAnB;MACH;;MACD,4BAA0BY,EAAE,CAACloC,aAAH,CAAiBE,qBAAjB,EAA1B;MAAA,IAAQ7B,KAAR,yBAAQA,KAAR;MAAA,IAAeP,MAAf,yBAAeA,MAAf;;MACA,IAAIO,KAAK,KAAK,CAAV,IAAeP,MAAM,KAAK,CAA9B,EACI;MACJ,IAAMuqC,QAAQ,GAAGlD,WAAjB;MACA,IAAMF,cAAc,GAAG,KAAK14B,IAAL,CAAUlO,KAAjC;MACA,IAAM6mC,eAAe,GAAGz+B,IAAI,CAAC9L,GAAL,CAAS,KAAK4R,IAAL,CAAUzO,MAAV,GAAmB,CAAnB,GAAuB,EAAhC,EAAoC,CAApC,CAAxB;MACA,IAAMwqC,gBAAgB,GAAG7hC,IAAI,CAAC0D,KAAL,CAAY86B,cAAc,IAAI5mC,KAAK,GAAG8mC,WAAZ,CAAf,GAA2C,GAAtD,IAA6D,GAAtF;MACA,IAAMoD,iBAAiB,GAAG9hC,IAAI,CAAC0D,KAAL,CAAY+6B,eAAe,IAAIpnC,MAAM,GAAGqnC,WAAb,CAAhB,GAA6C,GAAxD,IAA+D,GAAzF;MACAA,WAAW,GAAG1+B,IAAI,CAAC/L,GAAL,CAAS6tC,iBAAT,EAA4BD,gBAA5B,CAAd;;MACA,IAAInD,WAAW,KAAKkD,QAApB,EAA8B;QAC1B,IAAI9oC,OAAO,KAAK4nC,WAAW,CAACQ,KAA5B,EAAmC;UAC/B,KAAKN,gBAAL,GAAwBlC,WAAxB;UACA,KAAKoC,kBAAL,mBAAmCpC,WAAnC,eAAmDA,WAAnD;QACH,CAHD,MAIK;UACD,KAAKmC,gBAAL,GAAwBnC,WAAxB;UACA,KAAKsC,kBAAL,mBAAmCtC,WAAnC,eAAmDA,WAAnD;QACH;;QACD,KAAKj9B,EAAL,CAAQM,YAAR;;QACA,IAAIs8B,MAAM,IAAIhsC,iBAAiB,CAAC,KAAK2G,UAAN,CAA/B,EAAkD;UAC9ClD,UAAU,CAAC,YAAM;YACb,OAAI,CAACooC,SAAL,CAAeplC,OAAf,EAAwB,KAAxB;UACH,CAFS,EAEP,EAFO,CAAV;QAGH;MACJ;IACJ;;;WACD,sBAAaA,OAAb,EAAsB;MAClB,IAAI4lC,WAAW,GAAG,CAAlB;MACA,IAAM/nC,KAAK,GAAGmC,OAAO,KAAK,OAAZ,GAAsB,KAAKwoC,YAA3B,GAA0C,KAAKS,KAA7D;MACA,IAAMnqC,KAAK,GAAGijC,kBAAkB,CAACM,yBAAD,EAA4BxkC,KAA5B,EAAmC,EAAnC,CAAhC;MACA,IAAMU,MAAM,GAAG,EAAf;MACA,IAAMmnC,cAAc,GAAG,KAAK14B,IAAL,CAAUlO,KAAjC;MACA,IAAM6mC,eAAe,GAAGz+B,IAAI,CAAC9L,GAAL,CAAS,KAAK4R,IAAL,CAAUzO,MAAV,GAAmB,CAAnB,GAAuB,EAAhC,EAAoC,CAApC,CAAxB;MACA,IAAMwqC,gBAAgB,GAAG7hC,IAAI,CAAC0D,KAAL,CAAY86B,cAAc,IAAI5mC,KAAK,GAAG8mC,WAAZ,CAAf,GAA2C,GAAtD,IAA6D,GAAtF;MACA,IAAMoD,iBAAiB,GAAG9hC,IAAI,CAAC0D,KAAL,CAAY+6B,eAAe,IAAIpnC,MAAM,GAAGqnC,WAAb,CAAhB,GAA6C,GAAxD,IAA+D,GAAzF;MACAA,WAAW,GAAG1+B,IAAI,CAAC/L,GAAL,CAAS6tC,iBAAT,EAA4BD,gBAA5B,CAAd;;MACA,IAAI/oC,OAAO,KAAK,OAAhB,EAAyB;QACrB,KAAK8nC,gBAAL,GAAwBlC,WAAxB;QACA,KAAKoC,kBAAL,mBAAmCpC,WAAnC,eAAmDA,WAAnD;MACH,CAHD,MAIK;QACD,KAAKmC,gBAAL,GAAwBnC,WAAxB;QACA,KAAKsC,kBAAL,mBAAmCtC,WAAnC,eAAmDA,WAAnD;MACH;;MACD,KAAKj9B,EAAL,CAAQM,YAAR;IACH;;;WACD,mBAAU;MACN,KAAK9O,MAAL,CAAYkO,IAAZ,CAAiB;QACbC,IAAI,EAAE,OADO;QAEbzK,KAAK,EAAE,KAAKA;MAFC,CAAjB;IAIH;;;WACD,qBAAY;MACR,KAAK4I,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6BnG,SAAS,CAACqG,OAAvC,EAAgD,CAAC,KAAK3O,KAAN,CAAhD,EAA8D,KAAKsQ,YAAnE,CAAd;IACH;;;;EApI8B/B,kB;;AAsInCy7B,oBAAoB,CAACzmC,IAArB;EAAA;EAAA;IAAA,kFA34jB0G9I,EA24jB1G,uBAAiHuvC,oBAAjH,SAAiHA,oBAAjH;EAAA;AAAA;;AACAA,oBAAoB,CAACtmC,IAArB,kBA54jB0GjJ,EA44jB1G;EAAA,MAAqGuvC,oBAArG;EAAA;EAAA;IAAA;MA54jB0GvvC,EA44jB1G;MA54jB0GA,EA44jB1G;IAAA;;IAAA;MAAA;;MA54jB0GA,EA44jB1G,qBA54jB0GA,EA44jB1G;MA54jB0GA,EA44jB1G,qBA54jB0GA,EA44jB1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WA54jB0GA,EA44jB1G;EAAA;EAAA;EAAA;EAAA;IAAA;MA54jB0GA,EA64jBtG,yCADJ;MA54jB0GA,EA64jBZ;QAAA,OAAS,aAAT;MAAA,EAD9F;MA54jB0GA,EA84jBpG,iBAFN;MA54jB0GA,EA84jBpG,0BAFN;MA54jB0GA,EA+4jBlG,gCAHR;MA54jB0GA,EAw6jBlG,0EA5BR;MA54jB0GA,EAk7jBlG,0EAtCR;MA54jB0GA,EA47jBlG,gDAhDR;MA54jB0GA,EAq8jB5F,WAzDd;MA54jB0GA,EAs8jB9F,iBA1DZ;MA54jB0GA,EAy8jBhG,0CA7DV;MA54jB0GA,EAi9jB5F,WArEd;MA54jB0GA,EAk9jB9F,uBAtEZ;IAAA;;IAAA;MA54jB0GA,EA64jBpF,oBA74jBoFA,EA64jBpF,qGADtB;MA54jB0GA,EAk5jBhG,aANV;MA54jB0GA,EAk5jBhG,4HAl5jBgGA,EAk5jBhG,2HANV;MA54jB0GA,EA65jBhG,aAjBV;MA54jB0GA,EA65jBhG,+KA75jBgGA,EA65jBhG,2HAjBV;MA54jB0GA,EAy6jB/F,aA7BX;MA54jB0GA,EAy6jB/F,yCA7BX;MA54jB0GA,EAm7jB/F,aAvCX;MA54jB0GA,EAm7jB/F,yCAvCX;MA54jB0GA,EA47jB3F,aAhDf;MA54jB0GA,EA47jB3F,wCAhDf;MA54jB0GA,EA67jBzF,aAjDjB;MA54jB0GA,EA67jBzF,6CAjDjB;MA54jB0GA,EAi8jB5F,aArDd;MA54jB0GA,EAi8jB5F,qCArDd;MA54jB0GA,EAk8jB5F,iDAtDd;MA54jB0GA,EAq8jB5F,aAzDd;MA54jB0GA,EAq8jB5F,+CAzDd;MA54jB0GA,EAy8jBzF,aA7DjB;MA54jB0GA,EAy8jBzF,6CA7DjB;MA54jB0GA,EA68jB5F,aAjEd;MA54jB0GA,EA68jB5F,qCAjEd;MA54jB0GA,EA88jB5F,iDAlEd;MA54jB0GA,EAi9jB5F,aArEd;MA54jB0GA,EAi9jB5F,wCArEd;IAAA;EAAA;EAAA,eA2Em6DyR,cA3En6D,EA2EwoEojB,YA3ExoE,EA2Eu6E7zB,EAAE,CAACkI,IA3E16E;EAAA;EAAA;EAAA;AAAA;;AA4EA;EAAA,mDAx9jB0GlJ,EAw9jB1G,mBAA2FuvC,oBAA3F,EAA6H,CAAC;IAClHznC,IAAI,EAAE5H,SAD4G;IAElH2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,yBAAZ;MAAuCC,QAAQ,qyEAA/C;MA2EdC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IA3EnB;MA2EyBuF,eAAe,EAAErO,uBAAuB,CAACsO,MA3ElE;MA2E0EvF,MAAM,EAAE,CAAC,yvDAAD,EAA4vD,kHAA5vD;IA3ElF,CAAD;EAF4G,CAAD,CAA7H,QA8E4B;IAAE5G,GAAG,EAAE,CAAC;MACpBiF,IAAI,EAAEzH;IADc,CAAD,CAAP;IAEZyC,GAAG,EAAE,CAAC;MACNgF,IAAI,EAAEzH;IADA,CAAD,CAFO;IAIZkF,KAAK,EAAE,CAAC;MACRuC,IAAI,EAAEzH;IADE,CAAD,CAJK;IAMZswC,KAAK,EAAE,CAAC;MACR7oC,IAAI,EAAEzH;IADE,CAAD,CANK;IAQZ4vC,aAAa,EAAE,CAAC;MAChBnoC,IAAI,EAAEzH;IADU,CAAD,CARH;IAUZynB,eAAe,EAAE,CAAC;MAClBhgB,IAAI,EAAEzH;IADY,CAAD,CAVL;IAYZiwC,WAAW,EAAE,CAAC;MACdxoC,IAAI,EAAExH,SADQ;MAEduD,IAAI,EAAE,CAAC,aAAD;IAFQ,CAAD,CAZD;IAeZ0sC,WAAW,EAAE,CAAC;MACdzoC,IAAI,EAAExH,SADQ;MAEduD,IAAI,EAAE,CAAC,aAAD;IAFQ,CAAD;EAfD,CA9E5B;AAAA;;IAkGM+sC,iB;EACF,6BAAc;IAAA;;IACV,KAAKlhC,QAAL,GAAgB,KAAhB;IACA,KAAK2O,eAAL,GAAuB,KAAvB;IACA,KAAK1M,UAAL,GAAkB,IAAlB;IACA,KAAK9P,MAAL,GAAc,IAAIlB,YAAJ,EAAd;IACA,KAAKgP,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,KAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,KAAKiiB,cAAL,GAAsBpd,cAAtB;IACA,KAAKqd,UAAL,GAAkBhF,UAAlB;EACH;;;;WACD,qBAAYrb,GAAZ,EAAiB;MACb,IAAM2M,KAAK,GAAGD,WAAW,CAAC1M,GAAG,CAACsO,IAAJ,CAASd,IAAV,CAAzB;MACA,IAAIgX,GAAJ;;MACA,IAAI,KAAKc,eAAT,EAA0B;QACtBd,GAAG,GAAG,KAAKc,eAAL,CAAqBtlB,GAAG,CAACsO,IAAJ,CAASvL,KAA9B,CAAN;MACH,CAFD,MAGK;QACDyhB,GAAG,GAAG9X,WAAW,CAAC1M,GAAG,CAACsO,IAAJ,CAASvL,KAAV,CAAjB;MACH;;MACD,uDAC4B+J,WAAW,CAACH,KAAD,CADvC,wDAE0B6X,GAF1B;IAIH;;;;;;AAEL4pB,iBAAiB,CAAC9nC,IAAlB;EAAA,iBAA8G8nC,iBAA9G;AAAA;;AACAA,iBAAiB,CAAC3nC,IAAlB,kBArlkB0GjJ,EAqlkB1G;EAAA,MAAkG4wC,iBAAlG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MArlkB0G5wC,EAslkBtG,iBADJ;MArlkB0GA,EAslkBtG,qBADJ;MArlkB0GA,EAkmkBtG,0BAbJ;MArlkB0GA,EA6mkBpG;QAAA,OAAU,uBAAV;MAAA;QAAA,OACY,yBADZ;MAAA;QAAA,OAEc,2BAFd;MAAA,EAxBN;MArlkB0GA,EAunkBrG,eAlCL;IAAA;;IAAA;MArlkB0GA,EAylkBpG,4QAJN;MArlkB0GA,EAomkBpG,aAfN;MArlkB0GA,EAomkBpG,ilBAfN;IAAA;EAAA;EAAA,eAmC0C+lC,eAnC1C,EAmCwWhoB,gBAnCxW;EAAA;EAAA;AAAA;;AAoCA;EAAA,mDAznkB0G/d,EAynkB1G,mBAA2F4wC,iBAA3F,EAA0H,CAAC;IAC/G9oC,IAAI,EAAE5H,SADyG;IAE/G2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,yBADX;MAECC,QAAQ,uuCAFT;MAsCCyF,eAAe,EAAErO,uBAAuB,CAACsO;IAtC1C,CAAD;EAFyG,CAAD,CAA1H,QA0C4B;IAAE6hC,aAAa,EAAE,CAAC;MAC9B/oC,IAAI,EAAEzH;IADwB,CAAD,CAAjB;IAEZywC,QAAQ,EAAE,CAAC;MACXhpC,IAAI,EAAEzH;IADK,CAAD,CAFE;IAIZ2lC,YAAY,EAAE,CAAC;MACfl+B,IAAI,EAAEzH;IADS,CAAD,CAJF;IAMZ8N,MAAM,EAAE,CAAC;MACTrG,IAAI,EAAEzH;IADG,CAAD,CANI;IAQZqP,QAAQ,EAAE,CAAC;MACX5H,IAAI,EAAEzH;IADK,CAAD,CARE;IAUZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CAVL;IAYZynB,eAAe,EAAE,CAAC;MAClBhgB,IAAI,EAAEzH;IADY,CAAD,CAZL;IAcZugB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAEzH;IADY,CAAD,CAdL;IAgBZsR,UAAU,EAAE,CAAC;MACb7J,IAAI,EAAEzH;IADO,CAAD,CAhBA;IAkBZwB,MAAM,EAAE,CAAC;MACTiG,IAAI,EAAElH;IADG,CAAD,CAlBI;IAoBZ+O,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CApBE;IAsBZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD;EAtBA,CA1C5B;AAAA;;IAoEMmwC,kB;EACF,8BAAc;IAAA;;IACV,KAAKC,MAAL,GAAc,EAAd;EACH;;;;WACD,qBAAYhjC,OAAZ,EAAqB;MACjB,KAAK0C,MAAL;IACH;;;WACD,kBAAS;MACL,KAAKugC,aAAL,GAAqB,CAAC,EAAD,GAAM,KAAKnN,UAAhC;MACA,KAAKkN,MAAL,oBAAwB,KAAKC,aAA7B;MACA,KAAKp6B,KAAL,GAAa,KAAK0B,QAAL,EAAb;IACH;;;WACD,oBAAW;MACP,IAAM24B,cAAc,GAAG,KAAKC,SAAL,GAAiB,KAAKC,WAA7C;MACA,IAAMC,gBAAgB,GAAGH,cAAc,GAAG,KAAKI,aAA/C;MACA,IAAMp4B,UAAU,GAAG,EAAnB;MACA,IAAMrC,KAAK,GAAG;QACV06B,GAAG,EAAE,EADK;QAEVC,KAAK,EAAE;MAFG,CAAd;MAIA,IAAMC,aAAa,GAAG,KAAK9tB,MAAL,GAAc,EAApC;MACA,IAAM+tB,QAAQ,GAAGD,aAAa,GAAGv4B,UAAhB,GAA6B,EAA9C;;MACA,KAAK,IAAI/N,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,KAAKimC,WAA1B,EAAuCjmC,CAAC,EAAxC,EAA4C;QACxC,IAAMwmC,QAAQ,GAAGxmC,CAAC,GAAG+lC,cAArB;QACA,IAAMv4B,KAAK,GAAIg5B,QAAQ,GAAG/iC,IAAI,CAAC8K,EAAjB,GAAuB,GAArC;QACA,IAAMvD,UAAU,GAAG,KAAKy7B,aAAL,CAAmBD,QAAnB,CAAnB;QACA,IAAIE,IAAI,GAAG,KAAX;;QACA,IAAI1mC,CAAC,KAAK,CAAN,IAAW,KAAKgmC,SAAL,KAAmB,GAAlC,EAAuC;UACnCU,IAAI,GAAG,IAAP;QACH;;QACD,IAAI,CAACA,IAAL,EAAW;UACP,IAAIlI,IAAI,GAAGlmB,MAAM,CAACiE,UAAP,CAAkB,KAAK2G,UAAL,CAAgBzC,MAAhB,CAAuB+lB,QAAvB,EAAiCh+B,QAAjC,EAAlB,EAA+DtE,cAA/D,EAAX;;UACA,IAAI,KAAKmJ,cAAT,EAAyB;YACrBmxB,IAAI,GAAG,KAAKnxB,cAAL,CAAoBmxB,IAApB,CAAP;UACH;;UACD9yB,KAAK,CAAC06B,GAAN,CAAU7lC,IAAV,CAAe;YACXnJ,IAAI,EAAE,KAAKuvC,WAAL,CAAiBL,aAAjB,EAAgCv4B,UAAhC,EAA4CP,KAA5C,CADK;YAEXxC,UAAU,EAAVA,UAFW;YAGXwzB,IAAI,EAAJA,IAHW;YAIX5wB,aAAa,oCACT24B,QAAQ,GAAG9iC,IAAI,CAAC6K,GAAL,CAASd,KAAT,CADF,eACsB+4B,QAAQ,GAAG9iC,IAAI,CAACgL,GAAL,CAASjB,KAAT,CADjC,sBAC4D,CAAC,KAAKs4B,aADlE;UAJF,CAAf;QAQH;;QACD,IAAI9lC,CAAC,KAAK,KAAKimC,WAAf,EAA4B;UACxB;QACH;;QACD,KAAK,IAAIp8B,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,KAAKs8B,aAA1B,EAAyCt8B,CAAC,EAA1C,EAA8C;UAC1C,IAAM+8B,aAAa,GAAGJ,QAAQ,GAAG38B,CAAC,GAAGq8B,gBAArC;UACA,IAAMW,UAAU,GAAID,aAAa,GAAGnjC,IAAI,CAAC8K,EAAtB,GAA4B,GAA/C;UACA7C,KAAK,CAAC26B,KAAN,CAAY9lC,IAAZ,CAAiB;YACbnJ,IAAI,EAAE,KAAKuvC,WAAL,CAAiBL,aAAjB,EAAgCv4B,UAAU,GAAG,CAA7C,EAAgD84B,UAAhD;UADO,CAAjB;QAGH;MACJ;;MACD,OAAOn7B,KAAP;IACH;;;WACD,uBAAc8B,KAAd,EAAqB;MACjB;MACA;MACA;MACA;MACAA,KAAK,GAAG,CAAC,KAAKmrB,UAAL,GAAkBnrB,KAAnB,IAA4B,GAApC;MACA,IAAIxC,UAAU,GAAGc,UAAU,CAACc,MAA5B;;MACA,IAAIY,KAAK,GAAG,EAAR,IAAcA,KAAK,IAAI,GAA3B,EAAgC;QAC5BxC,UAAU,GAAGc,UAAU,CAACuF,KAAxB;MACH,CAFD,MAGK,IAAI7D,KAAK,GAAG,GAAR,IAAeA,KAAK,IAAI,GAA5B,EAAiC;QAClCxC,UAAU,GAAGc,UAAU,CAAC+B,GAAxB;MACH;;MACD,OAAO7C,UAAP;IACH;;;WACD,qBAAYs7B,aAAZ,EAA2Bv4B,UAA3B,EAAuCP,KAAvC,EAA8C;MAC1C,IAAMyD,EAAE,GAAGq1B,aAAa,GAAG7iC,IAAI,CAACgL,GAAL,CAASjB,KAAT,CAA3B;MACA,IAAMwD,EAAE,GAAG,CAACs1B,aAAa,GAAGv4B,UAAjB,IAA+BtK,IAAI,CAACgL,GAAL,CAASjB,KAAT,CAA1C;MACA,IAAM4D,EAAE,GAAGk1B,aAAa,GAAG7iC,IAAI,CAAC6K,GAAL,CAASd,KAAT,CAA3B;MACA,IAAM2D,EAAE,GAAG,CAACm1B,aAAa,GAAGv4B,UAAjB,IAA+BtK,IAAI,CAAC6K,GAAL,CAASd,KAAT,CAA1C;MACA,IAAMyV,MAAM,GAAG,CACX;QAAExiB,CAAC,EAAE2Q,EAAL;QAASjG,CAAC,EAAE8F;MAAZ,CADW,EAEX;QAAExQ,CAAC,EAAE0Q,EAAL;QAAShG,CAAC,EAAE6F;MAAZ,CAFW,CAAf;MAIA,IAAM81B,aAAa,GAAG1vC,IAAI,GACrBqJ,CADiB,CACf,UAAAyF,CAAC;QAAA,OAAIA,CAAC,CAACzF,CAAN;MAAA,CADc,EAEjB0K,CAFiB,CAEf,UAAAjF,CAAC;QAAA,OAAIA,CAAC,CAACiF,CAAN;MAAA,CAFc,CAAtB;MAGA,OAAO27B,aAAa,CAAC7jB,MAAD,CAApB;IACH;;;;;;AAEL2iB,kBAAkB,CAACjoC,IAAnB;EAAA,iBAA+GioC,kBAA/G;AAAA;;AACAA,kBAAkB,CAAC9nC,IAAnB,kBArxkB0GjJ,EAqxkB1G;EAAA,MAAmG+wC,kBAAnG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WArxkB0G/wC,EAqxkB1G;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MArxkB0GA,EAsxkBtG,iBADJ;MArxkB0GA,EAsxkBtG,uBADJ;MArxkB0GA,EAuxkBpG,kEAFN;MArxkB0GA,EA0xkBpG,kEALN;MArxkB0GA,EAmykBpG,kEAdN;MArxkB0GA,EAsykBtG,eAjBJ;IAAA;;IAAA;MArxkB0GA,EAsxkB/F,qCADX;MArxkB0GA,EAuxkB5E,aAF9B;MArxkB0GA,EAuxkB5E,qCAF9B;MArxkB0GA,EA0xkB5E,aAL9B;MArxkB0GA,EA0xkB5E,qCAL9B;MArxkB0GA,EAmykB5E,aAd9B;MArxkB0GA,EAmykB5E,uCAd9B;IAAA;EAAA;EAAA,eAkB0CgB,EAAE,CAACwQ,OAlB7C;EAAA;EAAA;AAAA;;AAmBA;EAAA,mDAxykB0GxR,EAwykB1G,mBAA2F+wC,kBAA3F,EAA2H,CAAC;IAChHjpC,IAAI,EAAE5H,SAD0G;IAEhH2D,IAAI,EAAE,CAAC;MACCwF,QAAQ,EAAE,0BADX;MAECC,QAAQ,0qBAFT;MAqBCyF,eAAe,EAAErO,uBAAuB,CAACsO;IArB1C,CAAD;EAF0G,CAAD,CAA3H,QAyB4B;IAAEoiC,WAAW,EAAE,CAAC;MAC5BtpC,IAAI,EAAEzH;IADsB,CAAD,CAAf;IAEZixC,aAAa,EAAE,CAAC;MAChBxpC,IAAI,EAAEzH;IADU,CAAD,CAFH;IAIZwC,GAAG,EAAE,CAAC;MACNiF,IAAI,EAAEzH;IADA,CAAD,CAJO;IAMZyC,GAAG,EAAE,CAAC;MACNgF,IAAI,EAAEzH;IADA,CAAD,CANO;IAQZ8wC,SAAS,EAAE,CAAC;MACZrpC,IAAI,EAAEzH;IADM,CAAD,CARC;IAUZyjC,UAAU,EAAE,CAAC;MACbh8B,IAAI,EAAEzH;IADO,CAAD,CAVA;IAYZsjB,MAAM,EAAE,CAAC;MACT7b,IAAI,EAAEzH;IADG,CAAD,CAZI;IAcZguB,UAAU,EAAE,CAAC;MACbvmB,IAAI,EAAEzH;IADO,CAAD,CAdA;IAgBZmY,cAAc,EAAE,CAAC;MACjB1Q,IAAI,EAAEzH;IADW,CAAD;EAhBJ,CAzB5B;AAAA;;IA6CM6xC,c;;;;;EACF,0BAAc;IAAA;;IAAA;;IACV,+BAAS3tC,SAAT;IACA,QAAKsnB,MAAL,GAAc,KAAd;IACA,QAAK2F,WAAL,GAAmB,QAAnB;IACA,QAAKhE,cAAL,GAAsB7f,cAAc,CAACpH,KAArC;IACA,QAAK1D,GAAL,GAAW,CAAX;IACA,QAAKC,GAAL,GAAW,GAAX;IACA,QAAKsuC,WAAL,GAAmB,EAAnB;IACA,QAAKE,aAAL,GAAqB,CAArB;IACA,QAAKa,QAAL,GAAgB,IAAhB;IACA,QAAKrO,UAAL,GAAkB,CAAC,GAAnB;IACA,QAAKqN,SAAL,GAAiB,GAAjB;IACA,QAAKjgC,aAAL,GAAqB,EAArB;IACA,QAAKmN,eAAL,GAAuB,KAAvB;IACA,QAAK+zB,QAAL,GAAgB,IAAhB;IACA,QAAKziC,QAAL,GAAgB,IAAIhP,YAAJ,EAAhB;IACA,QAAKiP,UAAL,GAAkB,IAAIjP,YAAJ,EAAlB;IACA,QAAK2sC,WAAL,GAAmB,CAAnB;IACA,QAAK+E,QAAL,GAAgB,EAAhB;IACA,QAAKt5B,aAAL,GAAqB,aAArB;IACA,QAAKitB,YAAL,GAAoB,EAApB;IApBU;EAqBb;;;;WACD,2BAAkB;MAAA;;MACd;;MACAthC,UAAU,CAAC;QAAA,OAAM,OAAI,CAACooC,SAAL,EAAN;MAAA,CAAD,CAAV;IACH;;;WACD,kBAAS;MAAA;;MACL;;MACA,IAAI,CAAC,KAAKqF,QAAV,EAAoB;QAChB,IAAI,CAAC,KAAKl8B,MAAV,EAAkB;UACd,KAAKA,MAAL,GAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAd;QACH;MACJ,CAJD,MAKK;QACD,IAAI,CAAC,KAAKA,MAAV,EAAkB;UACd,KAAKA,MAAL,GAAc,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,GAAd,CAAd;QACH;MACJ,CAXI,CAYL;;;MACA,IAAI,KAAK6tB,UAAL,GAAkB,CAAtB,EAAyB;QACrB,KAAKA,UAAL,GAAmB,KAAKA,UAAL,GAAkB,GAAnB,GAA0B,GAA5C;MACH;;MACD,KAAKqN,SAAL,GAAiBviC,IAAI,CAAC/L,GAAL,CAAS,KAAKsuC,SAAd,EAAyB,GAAzB,CAAjB;MACA,KAAKz8B,IAAL,GAAYsY,uBAAuB,CAAC;QAChCxmB,KAAK,EAAE,KAAKA,KADoB;QAEhCP,MAAM,EAAE,KAAKA,MAFmB;QAGhCgnB,OAAO,EAAE,KAAKhX,MAHkB;QAIhCvE,UAAU,EAAE,KAAKma,MAJe;QAKhC2B,cAAc,EAAE,KAAKA;MALW,CAAD,CAAnC;MAOA,KAAKpf,MAAL,GAAc,KAAKkwB,SAAL,EAAd;MACA,KAAK9F,WAAL,GAAmB,KAAKC,cAAL,EAAnB;MACA,KAAKpK,UAAL,GAAkB,KAAKyK,aAAL,EAAlB;MACA,KAAKoX,YAAL,GAAoB,KAAKC,eAAL,EAApB;MACA,KAAK3M,WAAL,GAAmB50B,IAAI,CAAC/L,GAAL,CAAS,KAAK6R,IAAL,CAAUlO,KAAnB,EAA0B,KAAKkO,IAAL,CAAUzO,MAApC,IAA8C,CAAjE;MACA,KAAK+iC,IAAL,GAAY,KAAKC,OAAL,EAAZ;MACA,KAAKnW,SAAL;MACA,KAAK5gB,aAAL,GAAqB,KAAK6gB,gBAAL,EAArB;MACA,IAAMrF,OAAO,GAAG,KAAKzX,MAAL,CAAY,CAAZ,IAAiB,KAAKvB,IAAL,CAAUlO,KAAV,GAAkB,CAAnD;MACA,IAAMy+B,OAAO,GAAG,KAAKhvB,MAAL,CAAY,CAAZ,IAAiB,KAAKvB,IAAL,CAAUzO,MAAV,GAAmB,CAApD;MACA,KAAKmQ,SAAL,uBAA8BsX,OAA9B,eAA0CuX,OAA1C;MACA,KAAKoN,QAAL,oBAA0B,KAAKvO,UAA/B;MACAp/B,UAAU,CAAC;QAAA,OAAM,OAAI,CAACooC,SAAL,EAAN;MAAA,CAAD,EAAyB,EAAzB,CAAV;IACH;;;WACD,mBAAU;MACN,IAAM9D,IAAI,GAAG,EAAb;MACA,IAAMsJ,eAAe,GAAG,KAAK9O,WAAL,GAAmB,GAA3C;MACA,IAAM+O,YAAY,GAAG3jC,IAAI,CAAC/L,GAAL,CAASyvC,eAAe,GAAG,KAAK99B,OAAL,CAAa5J,MAAxC,EAAgD,EAAhD,CAArB;MACA,IAAMm9B,QAAQ,GAAGwK,YAAY,GAAG,GAAhC;MACA,KAAKC,UAAL,GAAkB,KAAKhP,WAAL,GAAmB,KAAKhvB,OAAL,CAAa5J,MAAb,GAAsB2nC,YAA3D;MACA,KAAKvM,YAAL,GAAoBp3B,IAAI,CAAC0D,KAAL,CAAWy1B,QAAQ,GAAG,CAAtB,CAApB;MACA,IAAI58B,CAAC,GAAG,CAAR;;MAPM,6CAQU,KAAKqJ,OARf;MAAA;;MAAA;QAQN,0DAA8B;UAAA,IAAnBnD,CAAmB;UAC1B,IAAMmyB,WAAW,GAAG,KAAKA,WAAL,GAAmBr4B,CAAC,GAAGonC,YAA3C;UACA,IAAMhP,WAAW,GAAGC,WAAW,GAAGuE,QAAlC;UACA,IAAM8I,aAAa,GAAG;YAClB9M,QAAQ,EAAG,KAAKoN,SAAL,GAAiBviC,IAAI,CAAC8K,EAAvB,GAA6B,GADrB;YAElB6pB,WAAW,EAAXA,WAFkB;YAGlBC,WAAW,EAAXA,WAHkB;YAIlB1yB,IAAI,EAAE;cACFvL,KAAK,EAAE,KAAKzC,GADV;cAEFkN,IAAI,EAAEqB,CAAC,CAACrB;YAFN;UAJY,CAAtB;UASA,IAAM8gC,QAAQ,GAAG;YACb/M,QAAQ,EAAGn1B,IAAI,CAAC/L,GAAL,CAAS,KAAKwrB,UAAL,CAAgBhd,CAAC,CAAC9L,KAAlB,CAAT,EAAmC,KAAK4rC,SAAxC,IAAqDviC,IAAI,CAAC8K,EAA3D,GAAiE,GAD9D;YAEb6pB,WAAW,EAAXA,WAFa;YAGbC,WAAW,EAAXA,WAHa;YAIb1yB,IAAI,EAAE;cACFvL,KAAK,EAAE8L,CAAC,CAAC9L,KADP;cAEFyK,IAAI,EAAEqB,CAAC,CAACrB;YAFN;UAJO,CAAjB;UASA,IAAMxN,IAAG,GAAG;YACRquC,aAAa,EAAbA,aADQ;YAERC,QAAQ,EAARA;UAFQ,CAAZ;UAIA9H,IAAI,CAACt9B,IAAL,CAAUlJ,IAAV;UACA2I,CAAC;QACJ;MAnCK;QAAA;MAAA;QAAA;MAAA;;MAoCN,OAAO69B,IAAP;IACH;;;WACD,qBAAY;MACR,OAAO,KAAKx0B,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAACrB,IAAN;MAAA,CAAlB,CAAP;IACH;;;WACD,0BAAiB;MACb,IAAMqb,MAAM,GAAG,KAAK7W,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAAC9L,KAAN;MAAA,CAAlB,CAAf;MACA,IAAMktC,OAAO,GAAG7jC,IAAI,CAAC/L,GAAL,OAAA+L,IAAI,qBAAQyc,MAAR,EAApB;MACA,IAAMqnB,OAAO,GAAG9jC,IAAI,CAAC9L,GAAL,OAAA8L,IAAI,qBAAQyc,MAAR,EAApB;;MACA,IAAI,KAAKxoB,GAAL,KAAasD,SAAjB,EAA4B;QACxB,KAAKtD,GAAL,GAAW+L,IAAI,CAAC/L,GAAL,CAAS,KAAKA,GAAd,EAAmB4vC,OAAnB,CAAX;MACH,CAFD,MAGK;QACD,KAAK5vC,GAAL,GAAW4vC,OAAX;MACH;;MACD,IAAI,KAAK3vC,GAAL,KAAaqD,SAAjB,EAA4B;QACxB,KAAKrD,GAAL,GAAW8L,IAAI,CAAC9L,GAAL,CAAS,KAAKA,GAAd,EAAmB4vC,OAAnB,CAAX;MACH,CAFD,MAGK;QACD,KAAK5vC,GAAL,GAAW4vC,OAAX;MACH;;MACD,OAAO,CAAC,KAAK7vC,GAAN,EAAW,KAAKC,GAAhB,CAAP;IACH;;;WACD,yBAAgB;MACZ,OAAOd,WAAW,GAAGY,KAAd,CAAoB,CAAC,CAAD,EAAI,KAAKuuC,SAAT,CAApB,EAAyC1d,IAAzC,GAAgDrlB,MAAhD,CAAuD,KAAKoqB,WAA5D,CAAP;IACH;;;WACD,2BAAkB;MACd,IAAMjzB,KAAK,GAAG,KAAKiP,OAAL,CAAakI,GAAb,CAAiB,UAAArL,CAAC;QAAA,OAAIA,CAAC,CAAC9L,KAAN;MAAA,CAAlB,EAA+B8mB,MAA/B,CAAsC,UAACyD,CAAD,EAAIjK,CAAJ;QAAA,OAAUiK,CAAC,GAAGjK,CAAd;MAAA,CAAtC,EAAuD,CAAvD,CAAd;;MACA,IAAI,KAAK8sB,SAAL,IAAkB,MAAM,KAAKA,SAAL,CAAe/nC,MAA3C,EAAmD;QAC/C,OAAO,KAAK+nC,SAAL,CAAetjC,cAAf,EAAP;MACH;;MACD,IAAI,KAAKyY,eAAT,EAA0B;QACtB,OAAO,KAAKA,eAAL,CAAqBviB,KAArB,CAAP;MACH;;MACD,OAAOA,KAAK,CAAC8J,cAAN,EAAP;IACH;;;WACD,qBAAyB;MAAA;;MAAA,IAAf49B,MAAe,uEAAN,IAAM;;MACrB,IAAI,CAAC,KAAKmF,QAAV,EAAoB;QAChB;MACH;;MACD,4BAAkB,KAAKjF,MAAL,CAAYhlC,aAAZ,CAA0BE,qBAA1B,EAAlB;MAAA,IAAQ7B,KAAR,yBAAQA,KAAR;;MACA,IAAMgqC,QAAQ,GAAG,KAAKlD,WAAtB;;MACA,IAAI9mC,KAAK,KAAK,CAAd,EAAiB;QACb,KAAK8mC,WAAL,GAAmB,CAAnB;MACH,CAFD,MAGK;QACD,IAAMsF,cAAc,GAAG,KAAKJ,UAA5B;QACA,KAAKlF,WAAL,GAAmB1+B,IAAI,CAAC0D,KAAL,CAAYsgC,cAAc,IAAIpsC,KAAK,GAAG,KAAK8mC,WAAjB,CAAf,GAAgD,GAA3D,IAAkE,GAArF;MACH;;MACD,IAAI,KAAKA,WAAL,KAAqBkD,QAAzB,EAAmC;QAC/B,KAAKz3B,aAAL,mBAA8B,KAAKu0B,WAAnC,eAAmD,KAAKA,WAAxD;QACA,KAAKj9B,EAAL,CAAQM,YAAR;;QACA,IAAIs8B,MAAJ,EAAY;UACRvoC,UAAU,CAAC;YAAA,OAAM,OAAI,CAACooC,SAAL,CAAe,KAAf,CAAN;UAAA,CAAD,EAA8B,EAA9B,CAAV;QACH;MACJ;IACJ;;;WACD,iBAAQh8B,IAAR,EAAc;MACV,KAAKjP,MAAL,CAAYkO,IAAZ,CAAiBe,IAAjB;IACH;;;WACD,4BAAmB;MACf,OAAO;QACH2B,SAAS,EAAE5E,SAAS,CAACqG,OADlB;QAEH/F,MAAM,EAAE,KAAKA,MAFV;QAGHC,MAAM,EAAE,KAAKA,MAHV;QAIHzE,KAAK,EAAE,KAAK6nB,WAJT;QAKHxpB,QAAQ,EAAE,KAAKwlB;MALZ,CAAP;IAOH;;;WACD,qBAAY;MACR,KAAKrf,MAAL,GAAc,IAAI2f,WAAJ,CAAgB,KAAK9Z,MAArB,EAA6BnG,SAAS,CAACqG,OAAvC,EAAgD,KAAK9F,MAArD,EAA6D,KAAKyH,YAAlE,CAAd;IACH;;;WACD,oBAAW1E,IAAX,EAAiB;MACb,IAAMtG,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAhD;MACH,CAFW,CAAZ;;MAGA,IAAIsF,GAAG,GAAG,CAAC,CAAX,EAAc;QACV;MACH;;MACD,KAAKqG,aAAL,IAAsBC,IAAtB,4BAA+B,KAAKD,aAApC;MACA,KAAKvB,QAAL,CAAcI,IAAd,CAAmB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAAnB;IACH;;;WACD,sBAAaC,IAAb,EAAmB;MACf,IAAMtG,GAAG,GAAG,KAAKqG,aAAL,CAAmBH,SAAnB,CAA6B,UAAAM,CAAC,EAAI;QAC1C,OAAOA,CAAC,CAACrB,IAAF,KAAWmB,IAAI,CAACnB,IAAhB,IAAwBqB,CAAC,CAAC9L,KAAF,KAAY4L,IAAI,CAAC5L,KAAhD;MACH,CAFW,CAAZ;MAGA,KAAK2L,aAAL,CAAmBlG,MAAnB,CAA0BH,GAA1B,EAA+B,CAA/B;MACA,KAAKqG,aAAL,sBAAyB,KAAKA,aAA9B;MACA,KAAKtB,UAAL,CAAgBG,IAAhB,CAAqB;QAAExK,KAAK,EAAE4L,IAAT;QAAe4iB,OAAO,EAAE,KAAK7iB;MAA7B,CAArB;IACH;;;WACD,kBAASD,KAAT,EAAgB;MACZ,IAAI,CAAC,KAAKC,aAAV,EACI,OAAO,KAAP;MACJ,IAAMC,IAAI,GAAG,KAAKD,aAAL,CAAmBE,IAAnB,CAAwB,UAAAC,CAAC,EAAI;QACtC,OAAOJ,KAAK,CAACjB,IAAN,KAAeqB,CAAC,CAACrB,IAAjB,IAAyBiB,KAAK,CAAC8D,MAAN,KAAiB1D,CAAC,CAAC0D,MAAnD;MACH,CAFY,CAAb;MAGA,OAAO5D,IAAI,KAAKhL,SAAhB;IACH;;;WACD,iBAAQmL,KAAR,EAAeH,IAAf,EAAqB;MACjB,OAAOA,IAAI,CAAC2/B,QAAL,CAAchgC,IAAd,CAAmBd,IAA1B;IACH;;;;EAzMwB8D,kB;;AA2M7Bo+B,cAAc,CAACppC,IAAf;EAAA;EAAA;IAAA,sEAhilB0G9I,EAgilB1G,uBAA2GkyC,cAA3G,SAA2GA,cAA3G;EAAA;AAAA;;AACAA,cAAc,CAACjpC,IAAf,kBAjilB0GjJ,EAiilB1G;EAAA,MAA+FkyC,cAA/F;EAAA;EAAA;IAAA;MAjilB0GlyC,EAiilB1G;IAAA;;IAAA;MAAA;;MAjilB0GA,EAiilB1G,qBAjilB0GA,EAiilB1G;IAAA;EAAA;EAAA;IAAA;MAjilB0GA,EAiilB1G;IAAA;;IAAA;MAAA;;MAjilB0GA,EAiilB1G,qBAjilB0GA,EAiilB1G;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WAjilB0GA,EAiilB1G;EAAA;EAAA;EAAA;EAAA;IAAA;MAjilB0GA,EAkilBtG,yCADJ;MAjilB0GA,EAwilBpG;QAAA,OAAoB,mBAApB;MAAA;QAAA,OACuB,sBADvB;MAAA;QAAA,OAEyB,wBAFzB;MAAA,EAPN;MAjilB0GA,EA4ilBpG,iBAXN;MAjilB0GA,EA4ilBpG,0BAXN;MAjilB0GA,EA6ilBlG,+DAZR;MAjilB0GA,EA+jlBlG,8DA9BR;MAjilB0GA,EA6klBlG,oEA5CR;MAjilB0GA,EAullBpG,iBAtDN;IAAA;;IAAA;MAjilB0GA,EAmilBpG,oBAnilBoGA,EAmilBpG,kLAFN;MAjilB0GA,EA4ilB7F,aAXb;MAjilB0GA,EA4ilB7F,wCAXb;MAjilB0GA,EA6ilB3E,aAZ/B;MAjilB0GA,EA6ilB3E,6DAZ/B;MAjilB0GA,EAiklB/F,aAhCX;MAjilB0GA,EAiklB/F,iCAhCX;MAjilB0GA,EA+klB/F,aA9CX;MAjilB0GA,EA+klB/F,iCA9CX;IAAA;EAAA;EAAA,eAwDmiEyR,cAxDniE,EAwDwwEm/B,iBAxDxwE,EAwD6gFG,kBAxD7gF,EAwD4tF/vC,EAAE,CAACwQ,OAxD/tF,EAwDs0FxQ,EAAE,CAACkI,IAxDz0F;EAAA;EAAA;EAAA;AAAA;;AAyDA;EAAA,mDA1llB0GlJ,EA0llB1G,mBAA2FkyC,cAA3F,EAAuH,CAAC;IAC5GpqC,IAAI,EAAE5H,SADsG;IAE5G2D,IAAI,EAAE,CAAC;MAAEwF,QAAQ,EAAE,kBAAZ;MAAgCC,QAAQ,k+DAAxC;MAwDdC,aAAa,EAAEpJ,iBAAiB,CAACqJ,IAxDnB;MAwDyBuF,eAAe,EAAErO,uBAAuB,CAACsO,MAxDlE;MAwD0EvF,MAAM,EAAE,CAAC,yvDAAD,EAA4vD,kPAA5vD;IAxDlF,CAAD;EAFsG,CAAD,CAAvH,QA2D4B;IAAEoiB,MAAM,EAAE,CAAC;MACvB/jB,IAAI,EAAEzH;IADiB,CAAD,CAAV;IAEZmxB,WAAW,EAAE,CAAC;MACd1pB,IAAI,EAAEzH;IADQ,CAAD,CAFD;IAIZmtB,cAAc,EAAE,CAAC;MACjB1lB,IAAI,EAAEzH;IADW,CAAD,CAJJ;IAMZwC,GAAG,EAAE,CAAC;MACNiF,IAAI,EAAEzH;IADA,CAAD,CANO;IAQZyC,GAAG,EAAE,CAAC;MACNgF,IAAI,EAAEzH;IADA,CAAD,CARO;IAUZsyC,SAAS,EAAE,CAAC;MACZ7qC,IAAI,EAAEzH;IADM,CAAD,CAVC;IAYZswC,KAAK,EAAE,CAAC;MACR7oC,IAAI,EAAEzH;IADE,CAAD,CAZK;IAcZ+wC,WAAW,EAAE,CAAC;MACdtpC,IAAI,EAAEzH;IADQ,CAAD,CAdD;IAgBZixC,aAAa,EAAE,CAAC;MAChBxpC,IAAI,EAAEzH;IADU,CAAD,CAhBH;IAkBZmU,OAAO,EAAE,CAAC;MACV1M,IAAI,EAAEzH;IADI,CAAD,CAlBG;IAoBZ8xC,QAAQ,EAAE,CAAC;MACXrqC,IAAI,EAAEzH;IADK,CAAD,CApBE;IAsBZyjC,UAAU,EAAE,CAAC;MACbh8B,IAAI,EAAEzH;IADO,CAAD,CAtBA;IAwBZ8wC,SAAS,EAAE,CAAC;MACZrpC,IAAI,EAAEzH;IADM,CAAD,CAxBC;IA0BZ6Q,aAAa,EAAE,CAAC;MAChBpJ,IAAI,EAAEzH;IADU,CAAD,CA1BH;IA4BZwyC,kBAAkB,EAAE,CAAC;MACrB/qC,IAAI,EAAEzH;IADe,CAAD,CA5BR;IA8BZge,eAAe,EAAE,CAAC;MAClBvW,IAAI,EAAEzH;IADY,CAAD,CA9BL;IAgCZynB,eAAe,EAAE,CAAC;MAClBhgB,IAAI,EAAEzH;IADY,CAAD,CAhCL;IAkCZ+xC,QAAQ,EAAE,CAAC;MACXtqC,IAAI,EAAEzH;IADK,CAAD,CAlCE;IAoCZ4V,MAAM,EAAE,CAAC;MACTnO,IAAI,EAAEzH;IADG,CAAD,CApCI;IAsCZsP,QAAQ,EAAE,CAAC;MACX7H,IAAI,EAAElH;IADK,CAAD,CAtCE;IAwCZgP,UAAU,EAAE,CAAC;MACb9H,IAAI,EAAElH;IADO,CAAD,CAxCA;IA0CZggB,eAAe,EAAE,CAAC;MAClB9Y,IAAI,EAAE/G,YADY;MAElB8C,IAAI,EAAE,CAAC,iBAAD;IAFY,CAAD,CA1CL;IA6CZspC,MAAM,EAAE,CAAC;MACTrlC,IAAI,EAAExH,SADG;MAETuD,IAAI,EAAE,CAAC,QAAD;IAFG,CAAD;EA7CI,CA3D5B;AAAA;;IA6GMivC,W;;;;AAENA,WAAW,CAAChqC,IAAZ;EAAA,iBAAwGgqC,WAAxG;AAAA;;AACAA,WAAW,CAACt1B,IAAZ,kBA1slB0Gxd,EA0slB1G;EAAA,MAAyG8yC;AAAzG;AACAA,WAAW,CAACr1B,IAAZ,kBA3slB0Gzd,EA2slB1G;EAAA,UAAgI,CAAC+sB,iBAAD,EAAoBwc,cAApB,EAAoCrP,cAApC,CAAhI;AAAA;;AACA;EAAA,mDA5slB0Gl6B,EA4slB1G,mBAA2F8yC,WAA3F,EAAoH,CAAC;IACzGhrC,IAAI,EAAEhH,QADmG;IAEzG+C,IAAI,EAAE,CAAC;MACC6Z,OAAO,EAAE,CAACqP,iBAAD,EAAoBwc,cAApB,EAAoCrP,cAApC,CADV;MAECvc,YAAY,EAAE,CAAC4xB,oBAAD,EAAuB2C,cAAvB,EAAuCtB,iBAAvC,EAA0DG,kBAA1D,CAFf;MAGCnzB,OAAO,EAAE,CAAC2xB,oBAAD,EAAuB2C,cAAvB,EAAuCtB,iBAAvC,EAA0DG,kBAA1D;IAHV,CAAD;EAFmG,CAAD,CAApH;AAAA,K,CASA;;;AACA,SAASgC,kBAAT,GAA8B;EAC1B;EACA;EACA,IAAI,OAAOC,UAAP,KAAsB,WAAtB,IAAqC,OAAOA,UAAU,CAAC5pC,SAAX,CAAqBuW,QAA5B,KAAyC,WAAlF,EAA+F;IAC3FqzB,UAAU,CAAC5pC,SAAX,CAAqBuW,QAArB,GAAgCszB,cAAc,CAAC7pC,SAAf,CAAyBuW,QAAzD;EACH;AACJ;;IAEKuzB,e,6BACF,2BAAc;EAAA;;EACVH,kBAAkB;AACrB,C;;AAELG,eAAe,CAACpqC,IAAhB;EAAA,iBAA4GoqC,eAA5G;AAAA;;AACAA,eAAe,CAAC11B,IAAhB,kBApulB0Gxd,EAoulB1G;EAAA,MAA6GkzC;AAA7G;AAYAA,eAAe,CAACz1B,IAAhB,kBAhvlB0Gzd,EAgvlB1G;EAAA,UAAwI+sB,iBAAxI,EACQ6H,eADR,EAEQsF,cAFR,EAGQmE,cAHR,EAIQ4B,iBAJR,EAKQqB,aALR,EAMQkB,eANR,EAOQgH,gBAPR,EAQQmF,gBARR,EASQpF,cATR,EAUQ8F,aAVR,EAWQyD,WAXR;AAAA;;AAYA;EAAA,mDA5vlB0G9yC,EA4vlB1G,mBAA2FkzC,eAA3F,EAAwH,CAAC;IAC7GprC,IAAI,EAAEhH,QADuG;IAE7G+C,IAAI,EAAE,CAAC;MACC+Z,OAAO,EAAE,CACLmP,iBADK,EAEL6H,eAFK,EAGLsF,cAHK,EAILmE,cAJK,EAKL4B,iBALK,EAMLqB,aANK,EAOLkB,eAPK,EAQLgH,gBARK,EASLmF,gBATK,EAULpF,cAVK,EAWL8F,aAXK,EAYLyD,WAZK;IADV,CAAD;EAFuG,CAAD,CAAxH,EAkB4B,YAAY;IAAE,OAAO,EAAP;EAAY,CAlBtD;AAAA;;AAoBA,SAASr6B,UAAT,CAAoB06B,SAApB,EAA+BC,WAA/B,EAA4C;EACxC,OAAO,UAAUjkC,KAAV,EAAiB;IACpB,IAAIA,KAAK,KAAK,UAAV,IAAwBA,KAAK,KAAK,OAAtC,EAA+C;MAC3C,OAAOA,KAAP;IACH;;IACD,IAAIgkC,SAAS,KAAK,MAAd,IAAwBC,WAAW,KAAK,SAA5C,EAAuD;MACnD,IAAMC,SAAS,GAAG9vC,UAAU,CAAC,YAAD,CAA5B;MACA,OAAO8vC,SAAS,CAAClkC,KAAD,CAAhB;IACH;;IACD,OAAOA,KAAK,CAACwE,QAAN,EAAP;EACH,CATD;AAUH;AAED;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAEA,SAASoY,uBAAT,EAAkC2b,yBAAlC,EAA6DnW,kBAA7D,EAAiFqD,eAAjF,EAAkGJ,4BAAlG,EAAgIG,yBAAhI,EAA2J1P,aAA3J,EAA0KyL,mBAA1K,EAA+LnT,UAA/L,EAA2MxH,kBAA3M,EAA+NmkB,cAA/N,EAA+O1E,YAA/O,EAA6PX,YAA7P,EAA2QqD,wBAA3Q,EAAqSP,sBAArS,EAA6TuB,gCAA7T,EAA+VE,6BAA/V,EAA8X1D,iBAA9X,EAAiZjU,cAAjZ,EAAiasY,sBAAja,EAAybJ,oBAAzb,EAA+cK,8BAA/c,EAA+eC,2BAA/e,EAA4gBnmB,kBAA5gB,EAAgiBkqB,iBAAhiB,EAAmjBK,cAAnjB,EAAmkBjE,YAAnkB,EAAilBsC,kBAAjlB,EAAqmB0C,oBAArmB,EAA2nBa,iBAA3nB,EAA8oBvB,qBAA9oB,EAAqqBsN,aAArqB,EAAorB+B,mBAAprB,EAAysBhhB,iBAAzsB,EAA4tBtb,cAA5tB,EAA4uBqQ,eAA5uB,EAA6vBU,qBAA7vB,EAAoxBsL,WAApxB,EAAiyB5G,gBAAjyB,EAAmzBuO,OAAnzB,EAA4zBmb,iBAA5zB,EAA+0BG,kBAA/0B,EAAm2BmB,cAAn2B,EAAm3BY,WAAn3B,EAAg4B9uB,kBAAh4B,EAAo5BE,wBAAp5B,EAA86Bmc,uBAA96B,EAAu8BH,oBAAv8B,EAA69BS,gBAA79B,EAA++BW,aAA/+B,EAA8/BlxB,eAA9/B,EAA+gCX,oBAA/gC,EAAqiC9B,cAAriC,EAAqjCC,UAArjC,EAAikC20B,kBAAjkC,EAAqlCC,eAArlC,EAAsmCjB,aAAtmC,EAAqnCI,mBAArnC,EAA0oC4N,oBAA1oC,EAAgqC2D,eAAhqC,EAAirCzE,mBAAjrC,EAAssCE,gBAAtsC,EAAwtC74B,WAAxtC,EAAquCiwB,eAAruC,EAAsvC6B,iBAAtvC,EAAywC2B,cAAzwC,EAAyxCJ,gBAAzxC,EAA2yCL,sBAA3yC,EAAm0CrG,iBAAn0C,EAAs1CoE,kBAAt1C,EAA02CrhC,cAA12C,EAA03Ck/B,mBAA13C,EAA+4C8E,gBAA/4C,EAAi6CxF,oBAAj6C,EAAu7Cl2B,oBAAv7C,EAA68CD,SAA78C,EAAw9CuoB,gBAAx9C,EAA0+C7T,UAA1+C,EAAs/CkX,uBAAt/C,EAA+gD3b,SAA/gD,EAA0hDD,UAA1hD,EAAsiD6D,0BAAtiD,EAAkkDkD,0BAAlkD,EAA8lD3N,UAA9lD,EAA0mDuT,QAA1mD,EAAonDhC,WAApnD,EAAioD/gB,uBAAjoD,EAA0pDsW,gBAA1pD,EAA4qDmD,aAA5qD,EAA2rDxT,cAA3rD,EAA2sDkhC,oBAA3sD,EAAiuDE,0BAAjuD,EAA6vDG,gBAA7vD,EAA+wDI,aAA/wD,EAA8xDx8B,kBAA9xD,EAAkzDqH,cAAlzD,EAAk0DhD,mBAAl0D,EAAu1D+F,cAAv1D,EAAu2DvB,mBAAv2D,EAA43DsR,uBAA53D,EAAq5DY,SAAr5D,EAAg6D9H,KAAh6D,EAAu6DmB,cAAv6D,EAAu7D3X,WAAv7D,EAAo8DJ,WAAp8D,EAAi9DovB,SAAj9D,EAA49DG,QAA59D,EAAs+DrP,YAAt+D,EAAo/DL,sBAAp/D,EAA4gEU,eAA5gE,EAA6hE8Y,UAA7hE,EAAyiEL,QAAziE,EAAmjEuF,QAAnjE,EAA6jEpsB,EAA7jE,EAAikEssB,WAAjkE,EAA8kE/2B,WAA9kE,EAA2lEk3B,aAA3lE,EAA0mE1d,YAA1mE,EAAwnEK,UAAxnE,EAAooEP,UAApoE,EAAgpE1sB,QAAhpE,EAA0pEmB,YAA1pE,EAAwqE8T,UAAxqE,EAAorEjC,SAAprE"},"metadata":{},"sourceType":"module"}