{"ast":null,"code":"import _toConsumableArray from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _get from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _createForOfIteratorHelper from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/scrolling';\nvar _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nvar _c1 = [\"caption\", \"colgroup, col\"];\n\nfunction CdkTextColumn_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n  }\n}\n\nfunction CdkTextColumn_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var data_r2 = ctx.$implicit;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n  }\n}\n\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, Injectable, NgZone, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, ChangeDetectorRef, Attribute, SkipSelf, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\n\nfunction mixinHasStickyInput(base) {\n  return /*#__PURE__*/function (_base) {\n    _inherits(_class, _base);\n\n    var _super = _createSuper(_class);\n\n    function _class() {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this._sticky = false;\n      /** Whether the sticky input has changed since it was last checked. */\n\n      _this._hasStickyChanged = false;\n      return _this;\n    }\n    /** Whether sticky positioning should be applied. */\n\n\n    _createClass(_class, [{\n      key: \"sticky\",\n      get: function get() {\n        return this._sticky;\n      },\n      set: function set(v) {\n        var prevValue = this._sticky;\n        this._sticky = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._sticky;\n      }\n      /** Whether the sticky value has changed since this was last called. */\n\n    }, {\n      key: \"hasStickyChanged\",\n      value: function hasStickyChanged() {\n        var hasStickyChanged = this._hasStickyChanged;\n        this._hasStickyChanged = false;\n        return hasStickyChanged;\n      }\n      /** Resets the dirty check for cases where the sticky state has been used without checking. */\n\n    }, {\n      key: \"resetStickyChanged\",\n      value: function resetStickyChanged() {\n        this._hasStickyChanged = false;\n      }\n    }]);\n\n    return _class;\n  }(base);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\n\n\nvar CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\n\nvar TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n\nvar CdkCellDef = /*#__PURE__*/_createClass(function CdkCellDef(\n/** @docs-private */\ntemplate) {\n  _classCallCheck(this, CdkCellDef);\n\n  this.template = template;\n});\n\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) {\n  return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nCdkCellDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkCellDef,\n  selectors: [[\"\", \"cdkCellDef\", \"\"]]\n});\n\nCdkCellDef.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkCellDef]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n\n\nvar CdkHeaderCellDef = /*#__PURE__*/_createClass(function CdkHeaderCellDef(\n/** @docs-private */\ntemplate) {\n  _classCallCheck(this, CdkHeaderCellDef);\n\n  this.template = template;\n});\n\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) {\n  return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nCdkHeaderCellDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkHeaderCellDef,\n  selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]]\n});\n\nCdkHeaderCellDef.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkHeaderCellDef]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n\n\nvar CdkFooterCellDef = /*#__PURE__*/_createClass(function CdkFooterCellDef(\n/** @docs-private */\ntemplate) {\n  _classCallCheck(this, CdkFooterCellDef);\n\n  this.template = template;\n});\n\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) {\n  return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nCdkFooterCellDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkFooterCellDef,\n  selectors: [[\"\", \"cdkFooterCellDef\", \"\"]]\n});\n\nCdkFooterCellDef.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkFooterCellDef]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})(); // Boilerplate for applying mixins to CdkColumnDef.\n\n/** @docs-private */\n\n\nvar CdkColumnDefBase = /*#__PURE__*/_createClass(function CdkColumnDefBase() {\n  _classCallCheck(this, CdkColumnDefBase);\n});\n\nvar _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\n\n\nvar CdkColumnDef = /*#__PURE__*/function (_CdkColumnDefBase2) {\n  _inherits(CdkColumnDef, _CdkColumnDefBase2);\n\n  var _super2 = _createSuper(CdkColumnDef);\n\n  function CdkColumnDef(_table) {\n    var _this2;\n\n    _classCallCheck(this, CdkColumnDef);\n\n    _this2 = _super2.call(this);\n    _this2._table = _table;\n    _this2._stickyEnd = false;\n    return _this2;\n  }\n  /** Unique name for this column. */\n\n\n  _createClass(CdkColumnDef, [{\n    key: \"name\",\n    get: function get() {\n      return this._name;\n    },\n    set: function set(name) {\n      this._setNameInput(name);\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n\n  }, {\n    key: \"stickyEnd\",\n    get: function get() {\n      return this._stickyEnd;\n    },\n    set: function set(v) {\n      var prevValue = this._stickyEnd;\n      this._stickyEnd = coerceBooleanProperty(v);\n      this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n\n  }, {\n    key: \"_updateColumnCssClassName\",\n    value: function _updateColumnCssClassName() {\n      this._columnCssClassName = [\"cdk-column-\".concat(this.cssClassFriendlyName)];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n\n  }, {\n    key: \"_setNameInput\",\n    value: function _setNameInput(value) {\n      // If the directive is set without a name (updated programmatically), then this setter will\n      // trigger with an empty string and should not overwrite the programmatically set value.\n      if (value) {\n        this._name = value;\n        this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\n\n        this._updateColumnCssClassName();\n      }\n    }\n  }]);\n\n  return CdkColumnDef;\n}(_CdkColumnDefBase);\n\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) {\n  return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8));\n};\n\nCdkColumnDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkColumnDef,\n  selectors: [[\"\", \"cdkColumnDef\", \"\"]],\n  contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    }\n  },\n  inputs: {\n    sticky: \"sticky\",\n    name: [\"cdkColumnDef\", \"name\"],\n    stickyEnd: \"stickyEnd\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n    useExisting: CdkColumnDef\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nCdkColumnDef.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CDK_TABLE]\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nCdkColumnDef.propDecorators = {\n  name: [{\n    type: Input,\n    args: ['cdkColumnDef']\n  }],\n  stickyEnd: [{\n    type: Input,\n    args: ['stickyEnd']\n  }],\n  cell: [{\n    type: ContentChild,\n    args: [CdkCellDef]\n  }],\n  headerCell: [{\n    type: ContentChild,\n    args: [CdkHeaderCellDef]\n  }],\n  footerCell: [{\n    type: ContentChild,\n    args: [CdkFooterCellDef]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkColumnDef]',\n      inputs: ['sticky'],\n      providers: [{\n        provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n        useExisting: CdkColumnDef\n      }]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CDK_TABLE]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    name: [{\n      type: Input,\n      args: ['cdkColumnDef']\n    }],\n    stickyEnd: [{\n      type: Input,\n      args: ['stickyEnd']\n    }],\n    cell: [{\n      type: ContentChild,\n      args: [CdkCellDef]\n    }],\n    headerCell: [{\n      type: ContentChild,\n      args: [CdkHeaderCellDef]\n    }],\n    footerCell: [{\n      type: ContentChild,\n      args: [CdkFooterCellDef]\n    }]\n  });\n})();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\n\n\nvar BaseCdkCell = /*#__PURE__*/_createClass(function BaseCdkCell(columnDef, elementRef) {\n  _classCallCheck(this, BaseCdkCell);\n\n  // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n  // with destructuring.\n  var classList = elementRef.nativeElement.classList;\n\n  var _iterator = _createForOfIteratorHelper(columnDef._columnCssClassName),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var className = _step.value;\n      classList.add(className);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n});\n/** Header cell template container that adds the right classes and role. */\n\n\nvar CdkHeaderCell = /*#__PURE__*/function (_BaseCdkCell) {\n  _inherits(CdkHeaderCell, _BaseCdkCell);\n\n  var _super3 = _createSuper(CdkHeaderCell);\n\n  function CdkHeaderCell(columnDef, elementRef) {\n    _classCallCheck(this, CdkHeaderCell);\n\n    return _super3.call(this, columnDef, elementRef);\n  }\n\n  return _createClass(CdkHeaderCell);\n}(BaseCdkCell);\n\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) {\n  return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nCdkHeaderCell.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkHeaderCell,\n  selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]],\n  hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nCdkHeaderCell.ctorParameters = function () {\n  return [{\n    type: CdkColumnDef\n  }, {\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-header-cell, th[cdk-header-cell]',\n      host: {\n        'class': 'cdk-header-cell',\n        'role': 'columnheader'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkColumnDef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/** Footer cell template container that adds the right classes and role. */\n\n\nvar CdkFooterCell = /*#__PURE__*/function (_BaseCdkCell2) {\n  _inherits(CdkFooterCell, _BaseCdkCell2);\n\n  var _super4 = _createSuper(CdkFooterCell);\n\n  function CdkFooterCell(columnDef, elementRef) {\n    _classCallCheck(this, CdkFooterCell);\n\n    return _super4.call(this, columnDef, elementRef);\n  }\n\n  return _createClass(CdkFooterCell);\n}(BaseCdkCell);\n\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) {\n  return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nCdkFooterCell.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkFooterCell,\n  selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]],\n  hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nCdkFooterCell.ctorParameters = function () {\n  return [{\n    type: CdkColumnDef\n  }, {\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n      host: {\n        'class': 'cdk-footer-cell',\n        'role': 'gridcell'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkColumnDef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/** Cell template container that adds the right classes and role. */\n\n\nvar CdkCell = /*#__PURE__*/function (_BaseCdkCell3) {\n  _inherits(CdkCell, _BaseCdkCell3);\n\n  var _super5 = _createSuper(CdkCell);\n\n  function CdkCell(columnDef, elementRef) {\n    _classCallCheck(this, CdkCell);\n\n    return _super5.call(this, columnDef, elementRef);\n  }\n\n  return _createClass(CdkCell);\n}(BaseCdkCell);\n\nCdkCell.ɵfac = function CdkCell_Factory(t) {\n  return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nCdkCell.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkCell,\n  selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]],\n  hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nCdkCell.ctorParameters = function () {\n  return [{\n    type: CdkColumnDef\n  }, {\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-cell, td[cdk-cell]',\n      host: {\n        'class': 'cdk-cell',\n        'role': 'gridcell'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkColumnDef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @docs-private\n */\n\n\nvar _Schedule = /*#__PURE__*/_createClass(function _Schedule() {\n  _classCallCheck(this, _Schedule);\n\n  this.tasks = [];\n  this.endTasks = [];\n});\n/** Injection token used to provide a coalesced style scheduler. */\n\n\nvar _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\n\n\nvar _CoalescedStyleScheduler = /*#__PURE__*/function () {\n  function _CoalescedStyleScheduler(_ngZone) {\n    _classCallCheck(this, _CoalescedStyleScheduler);\n\n    this._ngZone = _ngZone;\n    this._currentSchedule = null;\n    this._destroyed = new Subject();\n  }\n  /**\n   * Schedules the specified task to run at the end of the current VM turn.\n   */\n\n\n  _createClass(_CoalescedStyleScheduler, [{\n    key: \"schedule\",\n    value: function schedule(task) {\n      this._createScheduleIfNeeded();\n\n      this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n\n  }, {\n    key: \"scheduleEnd\",\n    value: function scheduleEnd(task) {\n      this._createScheduleIfNeeded();\n\n      this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyed.next();\n\n      this._destroyed.complete();\n    }\n  }, {\n    key: \"_createScheduleIfNeeded\",\n    value: function _createScheduleIfNeeded() {\n      var _this3 = this;\n\n      if (this._currentSchedule) {\n        return;\n      }\n\n      this._currentSchedule = new _Schedule();\n\n      this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(function () {\n        while (_this3._currentSchedule.tasks.length || _this3._currentSchedule.endTasks.length) {\n          var schedule = _this3._currentSchedule; // Capture new tasks scheduled by the current set of tasks.\n\n          _this3._currentSchedule = new _Schedule();\n\n          var _iterator2 = _createForOfIteratorHelper(schedule.tasks),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var task = _step2.value;\n              task();\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          var _iterator3 = _createForOfIteratorHelper(schedule.endTasks),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var _task = _step3.value;\n\n              _task();\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        }\n\n        _this3._currentSchedule = null;\n      });\n    }\n  }, {\n    key: \"_getScheduleObservable\",\n    value: function _getScheduleObservable() {\n      // Use onStable when in the context of an ongoing change detection cycle so that we\n      // do not accidentally trigger additional cycles.\n      return this._ngZone.isStable ? from(Promise.resolve(undefined)) : this._ngZone.onStable.pipe(take(1));\n    }\n  }]);\n\n  return _CoalescedStyleScheduler;\n}();\n\n_CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) {\n  return new (t || _CoalescedStyleScheduler)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\n_CoalescedStyleScheduler.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: _CoalescedStyleScheduler,\n  factory: _CoalescedStyleScheduler.ɵfac\n});\n\n_CoalescedStyleScheduler.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\n\n\nvar CDK_ROW_TEMPLATE = \"<ng-container cdkCellOutlet></ng-container>\";\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\n\nvar BaseRowDef = /*#__PURE__*/function () {\n  function BaseRowDef(\n  /** @docs-private */\n  template, _differs) {\n    _classCallCheck(this, BaseRowDef);\n\n    this.template = template;\n    this._differs = _differs;\n  }\n\n  _createClass(BaseRowDef, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n      // of the columns property or an empty array if none is provided.\n      if (!this._columnsDiffer) {\n        var columns = changes['columns'] && changes['columns'].currentValue || [];\n        this._columnsDiffer = this._differs.find(columns).create();\n\n        this._columnsDiffer.diff(columns);\n      }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n\n  }, {\n    key: \"getColumnsDiff\",\n    value: function getColumnsDiff() {\n      return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n\n  }, {\n    key: \"extractCellTemplate\",\n    value: function extractCellTemplate(column) {\n      if (this instanceof CdkHeaderRowDef) {\n        return column.headerCell.template;\n      }\n\n      if (this instanceof CdkFooterRowDef) {\n        return column.footerCell.template;\n      } else {\n        return column.cell.template;\n      }\n    }\n  }]);\n\n  return BaseRowDef;\n}();\n\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) {\n  return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers));\n};\n\nBaseRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: BaseRowDef,\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nBaseRowDef.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }, {\n    type: IterableDiffers\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.IterableDiffers\n    }];\n  }, null);\n})(); // Boilerplate for applying mixins to CdkHeaderRowDef.\n\n/** @docs-private */\n\n\nvar CdkHeaderRowDefBase = /*#__PURE__*/function (_BaseRowDef) {\n  _inherits(CdkHeaderRowDefBase, _BaseRowDef);\n\n  var _super6 = _createSuper(CdkHeaderRowDefBase);\n\n  function CdkHeaderRowDefBase() {\n    _classCallCheck(this, CdkHeaderRowDefBase);\n\n    return _super6.apply(this, arguments);\n  }\n\n  return _createClass(CdkHeaderRowDefBase);\n}(BaseRowDef);\n\nvar _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\n\n\nvar CdkHeaderRowDef = /*#__PURE__*/function (_CdkHeaderRowDefBase2) {\n  _inherits(CdkHeaderRowDef, _CdkHeaderRowDefBase2);\n\n  var _super7 = _createSuper(CdkHeaderRowDef);\n\n  function CdkHeaderRowDef(template, _differs, _table) {\n    var _this4;\n\n    _classCallCheck(this, CdkHeaderRowDef);\n\n    _this4 = _super7.call(this, template, _differs);\n    _this4._table = _table;\n    return _this4;\n  } // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n  // Explicitly define it so that the method is called as part of the Angular lifecycle.\n\n\n  _createClass(CdkHeaderRowDef, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      _get(_getPrototypeOf(CdkHeaderRowDef.prototype), \"ngOnChanges\", this).call(this, changes);\n    }\n  }]);\n\n  return CdkHeaderRowDef;\n}(_CdkHeaderRowDefBase);\n\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) {\n  return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8));\n};\n\nCdkHeaderRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkHeaderRowDef,\n  selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]],\n  inputs: {\n    columns: [\"cdkHeaderRowDef\", \"columns\"],\n    sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"]\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nCdkHeaderRowDef.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }, {\n    type: IterableDiffers\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CDK_TABLE]\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkHeaderRowDef]',\n      inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.IterableDiffers\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CDK_TABLE]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})(); // Boilerplate for applying mixins to CdkFooterRowDef.\n\n/** @docs-private */\n\n\nvar CdkFooterRowDefBase = /*#__PURE__*/function (_BaseRowDef2) {\n  _inherits(CdkFooterRowDefBase, _BaseRowDef2);\n\n  var _super8 = _createSuper(CdkFooterRowDefBase);\n\n  function CdkFooterRowDefBase() {\n    _classCallCheck(this, CdkFooterRowDefBase);\n\n    return _super8.apply(this, arguments);\n  }\n\n  return _createClass(CdkFooterRowDefBase);\n}(BaseRowDef);\n\nvar _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\n\n\nvar CdkFooterRowDef = /*#__PURE__*/function (_CdkFooterRowDefBase2) {\n  _inherits(CdkFooterRowDef, _CdkFooterRowDefBase2);\n\n  var _super9 = _createSuper(CdkFooterRowDef);\n\n  function CdkFooterRowDef(template, _differs, _table) {\n    var _this5;\n\n    _classCallCheck(this, CdkFooterRowDef);\n\n    _this5 = _super9.call(this, template, _differs);\n    _this5._table = _table;\n    return _this5;\n  } // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n  // Explicitly define it so that the method is called as part of the Angular lifecycle.\n\n\n  _createClass(CdkFooterRowDef, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      _get(_getPrototypeOf(CdkFooterRowDef.prototype), \"ngOnChanges\", this).call(this, changes);\n    }\n  }]);\n\n  return CdkFooterRowDef;\n}(_CdkFooterRowDefBase);\n\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) {\n  return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8));\n};\n\nCdkFooterRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkFooterRowDef,\n  selectors: [[\"\", \"cdkFooterRowDef\", \"\"]],\n  inputs: {\n    columns: [\"cdkFooterRowDef\", \"columns\"],\n    sticky: [\"cdkFooterRowDefSticky\", \"sticky\"]\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nCdkFooterRowDef.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }, {\n    type: IterableDiffers\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CDK_TABLE]\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkFooterRowDef]',\n      inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.IterableDiffers\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CDK_TABLE]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n\n\nvar CdkRowDef = /*#__PURE__*/function (_BaseRowDef3) {\n  _inherits(CdkRowDef, _BaseRowDef3);\n\n  var _super10 = _createSuper(CdkRowDef);\n\n  // TODO(andrewseguin): Add an input for providing a switch function to determine\n  //   if this template should be used.\n  function CdkRowDef(template, _differs, _table) {\n    var _this6;\n\n    _classCallCheck(this, CdkRowDef);\n\n    _this6 = _super10.call(this, template, _differs);\n    _this6._table = _table;\n    return _this6;\n  }\n\n  return _createClass(CdkRowDef);\n}(BaseRowDef);\n\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) {\n  return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8));\n};\n\nCdkRowDef.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkRowDef,\n  selectors: [[\"\", \"cdkRowDef\", \"\"]],\n  inputs: {\n    columns: [\"cdkRowDefColumns\", \"columns\"],\n    when: [\"cdkRowDefWhen\", \"when\"]\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nCdkRowDef.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }, {\n    type: IterableDiffers\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CDK_TABLE]\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkRowDef]',\n      inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.IterableDiffers\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CDK_TABLE]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\n\n\nvar CdkCellOutlet = /*#__PURE__*/function () {\n  function CdkCellOutlet(_viewContainer) {\n    _classCallCheck(this, CdkCellOutlet);\n\n    this._viewContainer = _viewContainer;\n    CdkCellOutlet.mostRecentCellOutlet = this;\n  }\n\n  _createClass(CdkCellOutlet, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      // If this was the last outlet being rendered in the view, remove the reference\n      // from the static property after it has been destroyed to avoid leaking memory.\n      if (CdkCellOutlet.mostRecentCellOutlet === this) {\n        CdkCellOutlet.mostRecentCellOutlet = null;\n      }\n    }\n  }]);\n\n  return CdkCellOutlet;\n}();\n\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) {\n  return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n};\n\nCdkCellOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkCellOutlet,\n  selectors: [[\"\", \"cdkCellOutlet\", \"\"]]\n});\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\n\nCdkCellOutlet.mostRecentCellOutlet = null;\n\nCdkCellOutlet.ctorParameters = function () {\n  return [{\n    type: ViewContainerRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkCellOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }];\n  }, null);\n})();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\n\n\nvar CdkHeaderRow = /*#__PURE__*/_createClass(function CdkHeaderRow() {\n  _classCallCheck(this, CdkHeaderRow);\n});\n\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) {\n  return new (t || CdkHeaderRow)();\n};\n\nCdkHeaderRow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CdkHeaderRow,\n  selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]],\n  hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkCellOutlet\", \"\"]],\n  template: function CdkHeaderRow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n    }\n  },\n  dependencies: [CdkCellOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-header-row, tr[cdk-header-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'cdk-header-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, null);\n})();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\n\n\nvar CdkFooterRow = /*#__PURE__*/_createClass(function CdkFooterRow() {\n  _classCallCheck(this, CdkFooterRow);\n});\n\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) {\n  return new (t || CdkFooterRow)();\n};\n\nCdkFooterRow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CdkFooterRow,\n  selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]],\n  hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkCellOutlet\", \"\"]],\n  template: function CdkFooterRow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n    }\n  },\n  dependencies: [CdkCellOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-footer-row, tr[cdk-footer-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'cdk-footer-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, null);\n})();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\n\n\nvar CdkRow = /*#__PURE__*/_createClass(function CdkRow() {\n  _classCallCheck(this, CdkRow);\n});\n\nCdkRow.ɵfac = function CdkRow_Factory(t) {\n  return new (t || CdkRow)();\n};\n\nCdkRow.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CdkRow,\n  selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]],\n  hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkCellOutlet\", \"\"]],\n  template: function CdkRow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, 0);\n    }\n  },\n  dependencies: [CdkCellOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-row, tr[cdk-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'cdk-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, null);\n})();\n/** Row that can be used to display a message when no data is shown in the table. */\n\n\nvar CdkNoDataRow = /*#__PURE__*/_createClass(function CdkNoDataRow(templateRef) {\n  _classCallCheck(this, CdkNoDataRow);\n\n  this.templateRef = templateRef;\n});\n\nCdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) {\n  return new (t || CdkNoDataRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nCdkNoDataRow.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkNoDataRow,\n  selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]]\n});\n\nCdkNoDataRow.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkNoDataRow, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[cdkNoDataRow]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\n\n\nvar STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\n\nvar StickyStyler = /*#__PURE__*/function () {\n  /**\n   * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n   *     that uses the native `<table>` element.\n   * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n   *     sticky positioning applied.\n   * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n   *     by reversing left/right positions.\n   * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n   * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n   *     using inline styles. If false, it is assumed that position: sticky is included in\n   *     the component stylesheet for _stickCellCss.\n   * @param _positionListener A listener that is notified of changes to sticky rows/columns\n   *     and their dimensions.\n   */\n  function StickyStyler(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler) {\n    var _isBrowser = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n\n    var _needsPositionStickyOnElement = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n\n    var _positionListener = arguments.length > 6 ? arguments[6] : undefined;\n\n    _classCallCheck(this, StickyStyler);\n\n    this._isNativeHtmlTable = _isNativeHtmlTable;\n    this._stickCellCss = _stickCellCss;\n    this.direction = direction;\n    this._coalescedStyleScheduler = _coalescedStyleScheduler;\n    this._isBrowser = _isBrowser;\n    this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n    this._positionListener = _positionListener;\n    this._cachedCellWidths = [];\n    this._borderCellCss = {\n      'top': \"\".concat(_stickCellCss, \"-border-elem-top\"),\n      'bottom': \"\".concat(_stickCellCss, \"-border-elem-bottom\"),\n      'left': \"\".concat(_stickCellCss, \"-border-elem-left\"),\n      'right': \"\".concat(_stickCellCss, \"-border-elem-right\")\n    };\n  }\n  /**\n   * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n   * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n   * @param rows The list of rows that should be cleared from sticking in the provided directions\n   * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n   */\n\n\n  _createClass(StickyStyler, [{\n    key: \"clearStickyPositioning\",\n    value: function clearStickyPositioning(rows, stickyDirections) {\n      var _this7 = this;\n\n      var elementsToClear = [];\n\n      var _iterator4 = _createForOfIteratorHelper(rows),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var row = _step4.value;\n\n          // If the row isn't an element (e.g. if it's an `ng-container`),\n          // it won't have inline styles or `children` so we skip it.\n          if (row.nodeType !== row.ELEMENT_NODE) {\n            continue;\n          }\n\n          elementsToClear.push(row);\n\n          for (var i = 0; i < row.children.length; i++) {\n            elementsToClear.push(row.children[i]);\n          }\n        } // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      this._coalescedStyleScheduler.schedule(function () {\n        for (var _i2 = 0, _elementsToClear = elementsToClear; _i2 < _elementsToClear.length; _i2++) {\n          var element = _elementsToClear[_i2];\n\n          _this7._removeStickyStyle(element, stickyDirections);\n        }\n      });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n\n  }, {\n    key: \"updateStickyColumns\",\n    value: function updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n      var _this8 = this;\n\n      var recalculateCellWidths = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n      if (!rows.length || !this._isBrowser || !(stickyStartStates.some(function (state) {\n        return state;\n      }) || stickyEndStates.some(function (state) {\n        return state;\n      }))) {\n        if (this._positionListener) {\n          this._positionListener.stickyColumnsUpdated({\n            sizes: []\n          });\n\n          this._positionListener.stickyEndColumnsUpdated({\n            sizes: []\n          });\n        }\n\n        return;\n      }\n\n      var firstRow = rows[0];\n      var numCells = firstRow.children.length;\n\n      var cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n\n      var startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n\n      var endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n\n      var lastStickyStart = stickyStartStates.lastIndexOf(true);\n      var firstStickyEnd = stickyEndStates.indexOf(true); // Coalesce with sticky row updates (and potentially other changes like column resize).\n\n      this._coalescedStyleScheduler.schedule(function () {\n        var isRtl = _this8.direction === 'rtl';\n        var start = isRtl ? 'right' : 'left';\n        var end = isRtl ? 'left' : 'right';\n\n        var _iterator5 = _createForOfIteratorHelper(rows),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var row = _step5.value;\n\n            for (var i = 0; i < numCells; i++) {\n              var cell = row.children[i];\n\n              if (stickyStartStates[i]) {\n                _this8._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n              }\n\n              if (stickyEndStates[i]) {\n                _this8._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n              }\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n\n        if (_this8._positionListener) {\n          _this8._positionListener.stickyColumnsUpdated({\n            sizes: lastStickyStart === -1 ? [] : cellWidths.slice(0, lastStickyStart + 1).map(function (width, index) {\n              return stickyStartStates[index] ? width : null;\n            })\n          });\n\n          _this8._positionListener.stickyEndColumnsUpdated({\n            sizes: firstStickyEnd === -1 ? [] : cellWidths.slice(firstStickyEnd).map(function (width, index) {\n              return stickyEndStates[index + firstStickyEnd] ? width : null;\n            }).reverse()\n          });\n        }\n      });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n\n  }, {\n    key: \"stickRows\",\n    value: function stickRows(rowsToStick, stickyStates, position) {\n      var _this9 = this;\n\n      // Since we can't measure the rows on the server, we can't stick the rows properly.\n      if (!this._isBrowser) {\n        return;\n      } // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n      // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n      // sticky states need to be reversed as well.\n\n\n      var rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n      var states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates; // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n\n      var stickyOffsets = [];\n      var stickyCellHeights = [];\n      var elementsToStick = [];\n\n      for (var rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n        if (!states[rowIndex]) {\n          continue;\n        }\n\n        stickyOffsets[rowIndex] = stickyOffset;\n        var row = rows[rowIndex];\n        elementsToStick[rowIndex] = this._isNativeHtmlTable ? Array.from(row.children) : [row];\n        var height = row.getBoundingClientRect().height;\n        stickyOffset += height;\n        stickyCellHeights[rowIndex] = height;\n      }\n\n      var borderedRowIndex = states.lastIndexOf(true); // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n      // (and potentially other changes like column resize).\n\n      this._coalescedStyleScheduler.schedule(function () {\n        var _a, _b;\n\n        for (var _rowIndex = 0; _rowIndex < rows.length; _rowIndex++) {\n          if (!states[_rowIndex]) {\n            continue;\n          }\n\n          var offset = stickyOffsets[_rowIndex];\n          var isBorderedRowIndex = _rowIndex === borderedRowIndex;\n\n          var _iterator6 = _createForOfIteratorHelper(elementsToStick[_rowIndex]),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var element = _step6.value;\n\n              _this9._addStickyStyle(element, position, offset, isBorderedRowIndex);\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n        }\n\n        if (position === 'top') {\n          (_a = _this9._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({\n            sizes: stickyCellHeights,\n            offsets: stickyOffsets,\n            elements: elementsToStick\n          });\n        } else {\n          (_b = _this9._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({\n            sizes: stickyCellHeights,\n            offsets: stickyOffsets,\n            elements: elementsToStick\n          });\n        }\n      });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n\n  }, {\n    key: \"updateStickyFooterContainer\",\n    value: function updateStickyFooterContainer(tableElement, stickyStates) {\n      var _this10 = this;\n\n      if (!this._isNativeHtmlTable) {\n        return;\n      }\n\n      var tfoot = tableElement.querySelector('tfoot'); // Coalesce with other sticky updates (and potentially other changes like column resize).\n\n      this._coalescedStyleScheduler.schedule(function () {\n        if (stickyStates.some(function (state) {\n          return !state;\n        })) {\n          _this10._removeStickyStyle(tfoot, ['bottom']);\n        } else {\n          _this10._addStickyStyle(tfoot, 'bottom', 0, false);\n        }\n      });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n\n  }, {\n    key: \"_removeStickyStyle\",\n    value: function _removeStickyStyle(element, stickyDirections) {\n      var _iterator7 = _createForOfIteratorHelper(stickyDirections),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var dir = _step7.value;\n          element.style[dir] = '';\n          element.classList.remove(this._borderCellCss[dir]);\n        } // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      var hasDirection = STICKY_DIRECTIONS.some(function (dir) {\n        return stickyDirections.indexOf(dir) === -1 && element.style[dir];\n      });\n\n      if (hasDirection) {\n        element.style.zIndex = this._getCalculatedZIndex(element);\n      } else {\n        // When not hasDirection, _getCalculatedZIndex will always return ''.\n        element.style.zIndex = '';\n\n        if (this._needsPositionStickyOnElement) {\n          element.style.position = '';\n        }\n\n        element.classList.remove(this._stickCellCss);\n      }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n\n  }, {\n    key: \"_addStickyStyle\",\n    value: function _addStickyStyle(element, dir, dirValue, isBorderElement) {\n      element.classList.add(this._stickCellCss);\n\n      if (isBorderElement) {\n        element.classList.add(this._borderCellCss[dir]);\n      }\n\n      element.style[dir] = \"\".concat(dirValue, \"px\");\n      element.style.zIndex = this._getCalculatedZIndex(element);\n\n      if (this._needsPositionStickyOnElement) {\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n      }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n\n  }, {\n    key: \"_getCalculatedZIndex\",\n    value: function _getCalculatedZIndex(element) {\n      var zIndexIncrements = {\n        top: 100,\n        bottom: 10,\n        left: 1,\n        right: 1\n      };\n      var zIndex = 0; // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n      // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n      // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n\n      for (var _i3 = 0, _STICKY_DIRECTIONS = STICKY_DIRECTIONS; _i3 < _STICKY_DIRECTIONS.length; _i3++) {\n        var dir = _STICKY_DIRECTIONS[_i3];\n\n        if (element.style[dir]) {\n          zIndex += zIndexIncrements[dir];\n        }\n      }\n\n      return zIndex ? \"\".concat(zIndex) : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n\n  }, {\n    key: \"_getCellWidths\",\n    value: function _getCellWidths(row) {\n      var recalculateCellWidths = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (!recalculateCellWidths && this._cachedCellWidths.length) {\n        return this._cachedCellWidths;\n      }\n\n      var cellWidths = [];\n      var firstRowCells = row.children;\n\n      for (var i = 0; i < firstRowCells.length; i++) {\n        var cell = firstRowCells[i];\n        cellWidths.push(cell.getBoundingClientRect().width);\n      }\n\n      this._cachedCellWidths = cellWidths;\n      return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n\n  }, {\n    key: \"_getStickyStartColumnPositions\",\n    value: function _getStickyStartColumnPositions(widths, stickyStates) {\n      var positions = [];\n      var nextPosition = 0;\n\n      for (var i = 0; i < widths.length; i++) {\n        if (stickyStates[i]) {\n          positions[i] = nextPosition;\n          nextPosition += widths[i];\n        }\n      }\n\n      return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n\n  }, {\n    key: \"_getStickyEndColumnPositions\",\n    value: function _getStickyEndColumnPositions(widths, stickyStates) {\n      var positions = [];\n      var nextPosition = 0;\n\n      for (var i = widths.length; i > 0; i--) {\n        if (stickyStates[i]) {\n          positions[i] = nextPosition;\n          nextPosition += widths[i];\n        }\n      }\n\n      return positions;\n    }\n  }]);\n\n  return StickyStyler;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\n\n\nfunction getTableUnknownColumnError(id) {\n  return Error(\"Could not find column with id \\\"\".concat(id, \"\\\".\"));\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\n\n\nfunction getTableDuplicateColumnNameError(name) {\n  return Error(\"Duplicate column definition name provided: \\\"\".concat(name, \"\\\".\"));\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\n\n\nfunction getTableMultipleDefaultRowDefsError() {\n  return Error(\"There can only be one default row without a when predicate function.\");\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\n\n\nfunction getTableMissingMatchingRowDefError(data) {\n  return Error(\"Could not find a matching row definition for the\" + \"provided row data: \".concat(JSON.stringify(data)));\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\n\n\nfunction getTableMissingRowDefsError() {\n  return Error('Missing definitions for header, footer, and row; ' + 'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\n\n\nfunction getTableUnknownDataSourceError() {\n  return Error(\"Provided data source did not match an array, Observable, or DataSource\");\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\n\n\nfunction getTableTextColumnMissingParentTableError() {\n  return Error(\"Text column could not find a parent table for registration.\");\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\n\n\nfunction getTableTextColumnMissingNameError() {\n  return Error(\"Table text column must have a name.\");\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** The injection token used to specify the StickyPositioningListener. */\n\n\nvar STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\n\nvar CdkRecycleRows = /*#__PURE__*/_createClass(function CdkRecycleRows() {\n  _classCallCheck(this, CdkRecycleRows);\n});\n\nCdkRecycleRows.ɵfac = function CdkRecycleRows_Factory(t) {\n  return new (t || CdkRecycleRows)();\n};\n\nCdkRecycleRows.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkRecycleRows,\n  selectors: [[\"cdk-table\", \"recycleRows\", \"\"], [\"table\", \"cdk-table\", \"\", \"recycleRows\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: _VIEW_REPEATER_STRATEGY,\n    useClass: _RecycleViewRepeaterStrategy\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRecycleRows, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n      providers: [{\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _RecycleViewRepeaterStrategy\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\n\n\nvar DataRowOutlet = /*#__PURE__*/_createClass(function DataRowOutlet(viewContainer, elementRef) {\n  _classCallCheck(this, DataRowOutlet);\n\n  this.viewContainer = viewContainer;\n  this.elementRef = elementRef;\n});\n\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) {\n  return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nDataRowOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DataRowOutlet,\n  selectors: [[\"\", \"rowOutlet\", \"\"]]\n});\n\nDataRowOutlet.ctorParameters = function () {\n  return [{\n    type: ViewContainerRef\n  }, {\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[rowOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\n\n\nvar HeaderRowOutlet = /*#__PURE__*/_createClass(function HeaderRowOutlet(viewContainer, elementRef) {\n  _classCallCheck(this, HeaderRowOutlet);\n\n  this.viewContainer = viewContainer;\n  this.elementRef = elementRef;\n});\n\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) {\n  return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nHeaderRowOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: HeaderRowOutlet,\n  selectors: [[\"\", \"headerRowOutlet\", \"\"]]\n});\n\nHeaderRowOutlet.ctorParameters = function () {\n  return [{\n    type: ViewContainerRef\n  }, {\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[headerRowOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\n\n\nvar FooterRowOutlet = /*#__PURE__*/_createClass(function FooterRowOutlet(viewContainer, elementRef) {\n  _classCallCheck(this, FooterRowOutlet);\n\n  this.viewContainer = viewContainer;\n  this.elementRef = elementRef;\n});\n\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) {\n  return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nFooterRowOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: FooterRowOutlet,\n  selectors: [[\"\", \"footerRowOutlet\", \"\"]]\n});\n\nFooterRowOutlet.ctorParameters = function () {\n  return [{\n    type: ViewContainerRef\n  }, {\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[footerRowOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\n\n\nvar NoDataRowOutlet = /*#__PURE__*/_createClass(function NoDataRowOutlet(viewContainer, elementRef) {\n  _classCallCheck(this, NoDataRowOutlet);\n\n  this.viewContainer = viewContainer;\n  this.elementRef = elementRef;\n});\n\nNoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) {\n  return new (t || NoDataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNoDataRowOutlet.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: NoDataRowOutlet,\n  selectors: [[\"\", \"noDataRowOutlet\", \"\"]]\n});\n\nNoDataRowOutlet.ctorParameters = function () {\n  return [{\n    type: ViewContainerRef\n  }, {\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NoDataRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[noDataRowOutlet]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\n\n\nvar CDK_TABLE_TEMPLATE = // Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n\"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\";\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\n\nvar RowViewRef = /*#__PURE__*/function (_EmbeddedViewRef) {\n  _inherits(RowViewRef, _EmbeddedViewRef);\n\n  var _super11 = _createSuper(RowViewRef);\n\n  function RowViewRef() {\n    _classCallCheck(this, RowViewRef);\n\n    return _super11.apply(this, arguments);\n  }\n\n  return _createClass(RowViewRef);\n}(EmbeddedViewRef);\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\n\n\nvar CdkTable = /*#__PURE__*/function () {\n  function CdkTable(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler,\n  /**\n   * @deprecated `_stickyPositioningListener` parameter to become required.\n   * @breaking-change 13.0.0\n   */\n  _stickyPositioningListener) {\n    _classCallCheck(this, CdkTable);\n\n    this._differs = _differs;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    this._platform = _platform;\n    this._viewRepeater = _viewRepeater;\n    this._coalescedStyleScheduler = _coalescedStyleScheduler;\n    this._viewportRuler = _viewportRuler;\n    this._stickyPositioningListener = _stickyPositioningListener;\n    /** Subject that emits when the component has been destroyed. */\n\n    this._onDestroy = new Subject();\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     */\n\n    this._columnDefsByName = new Map();\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     */\n\n    this._customColumnDefs = new Set();\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     */\n\n    this._customRowDefs = new Set();\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     */\n\n    this._customHeaderRowDefs = new Set();\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     */\n\n    this._customFooterRowDefs = new Set();\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     */\n\n    this._headerRowDefChanged = true;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     */\n\n    this._footerRowDefChanged = true;\n    /**\n     * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n     * change.\n     */\n\n    this._stickyColumnStylesNeedReset = true;\n    /**\n     * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n     * `false`, cached values will be used instead. This is only applicable to tables with\n     * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n     */\n\n    this._forceRecalculateCellWidths = true;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     */\n\n    this._cachedRenderRowsMap = new Map();\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n     * table subclasses.\n     */\n\n    this.stickyCssClass = 'cdk-table-sticky';\n    /**\n     * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n     * the position is set in a selector associated with the value of stickyCssClass. May be\n     * overridden by table subclasses\n     */\n\n    this.needsPositionStickyOnElement = true;\n    /** Whether the no data row is currently showing anything. */\n\n    this._isShowingNoDataRow = false;\n    this._multiTemplateDataRows = false;\n    this._fixedLayout = false; // TODO(andrewseguin): Remove max value as the end index\n    //   and instead calculate the view on init and scroll.\n\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * @docs-private\n     */\n\n    this.viewChange = new BehaviorSubject({\n      start: 0,\n      end: Number.MAX_VALUE\n    });\n\n    if (!role) {\n      this._elementRef.nativeElement.setAttribute('role', 'grid');\n    }\n\n    this._document = _document;\n    this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n  }\n  /**\n   * Tracking function that will be used to check the differences in data changes. Used similarly\n   * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n   * relative to the function to know if a row should be added/removed/moved.\n   * Accepts a function that takes two parameters, `index` and `item`.\n   */\n\n\n  _createClass(CdkTable, [{\n    key: \"trackBy\",\n    get: function get() {\n      return this._trackByFn;\n    },\n    set: function set(fn) {\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n        console.warn(\"trackBy must be a function, but received \".concat(JSON.stringify(fn), \".\"));\n      }\n\n      this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n\n  }, {\n    key: \"dataSource\",\n    get: function get() {\n      return this._dataSource;\n    },\n    set: function set(dataSource) {\n      if (this._dataSource !== dataSource) {\n        this._switchDataSource(dataSource);\n      }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n\n  }, {\n    key: \"multiTemplateDataRows\",\n    get: function get() {\n      return this._multiTemplateDataRows;\n    },\n    set: function set(v) {\n      this._multiTemplateDataRows = coerceBooleanProperty(v); // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n      // this setter will be invoked before the row outlet has been defined hence the null check.\n\n      if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n        this._forceRenderDataRows();\n\n        this.updateStickyColumnStyles();\n      }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n\n  }, {\n    key: \"fixedLayout\",\n    get: function get() {\n      return this._fixedLayout;\n    },\n    set: function set(v) {\n      this._fixedLayout = coerceBooleanProperty(v); // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n\n      this._forceRecalculateCellWidths = true;\n      this._stickyColumnStylesNeedReset = true;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this11 = this;\n\n      this._setupStickyStyler();\n\n      if (this._isNativeHtmlTable) {\n        this._applyNativeTableSections();\n      } // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n      // the user has provided a custom trackBy, return the result of that function as evaluated\n      // with the values of the `RenderRow`'s data and index.\n\n\n      this._dataDiffer = this._differs.find([]).create(function (_i, dataRow) {\n        return _this11.trackBy ? _this11.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n      });\n\n      this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(function () {\n        _this11._forceRecalculateCellWidths = true;\n      });\n    }\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n      this._cacheRowDefs();\n\n      this._cacheColumnDefs(); // Make sure that the user has at least added header, footer, or data row def.\n\n\n      if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableMissingRowDefsError();\n      } // Render updates if the list of columns have been changed for the header, row, or footer defs.\n\n\n      var columnsChanged = this._renderUpdatedColumns();\n\n      var rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged; // Ensure sticky column styles are reset if set to `true` elsewhere.\n\n      this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n      this._forceRecalculateCellWidths = rowDefsChanged; // If the header row definition has been changed, trigger a render to the header row.\n\n      if (this._headerRowDefChanged) {\n        this._forceRenderHeaderRows();\n\n        this._headerRowDefChanged = false;\n      } // If the footer row definition has been changed, trigger a render to the footer row.\n\n\n      if (this._footerRowDefChanged) {\n        this._forceRenderFooterRows();\n\n        this._footerRowDefChanged = false;\n      } // If there is a data source and row definitions, connect to the data source unless a\n      // connection has already been made.\n\n\n      if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n        this._observeRenderChanges();\n      } else if (this._stickyColumnStylesNeedReset) {\n        // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n        // called when it row data arrives. Otherwise, we need to call it proactively.\n        this.updateStickyColumnStyles();\n      }\n\n      this._checkStickyStates();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._rowOutlet.viewContainer.clear();\n\n      this._noDataRowOutlet.viewContainer.clear();\n\n      this._headerRowOutlet.viewContainer.clear();\n\n      this._footerRowOutlet.viewContainer.clear();\n\n      this._cachedRenderRowsMap.clear();\n\n      this._onDestroy.next();\n\n      this._onDestroy.complete();\n\n      if (isDataSource(this.dataSource)) {\n        this.dataSource.disconnect(this);\n      }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      var _this12 = this;\n\n      this._renderRows = this._getAllRenderRows();\n\n      var changes = this._dataDiffer.diff(this._renderRows);\n\n      if (!changes) {\n        this._updateNoDataRow();\n\n        return;\n      }\n\n      var viewContainer = this._rowOutlet.viewContainer;\n\n      this._viewRepeater.applyChanges(changes, viewContainer, function (record, _adjustedPreviousIndex, currentIndex) {\n        return _this12._getEmbeddedViewArgs(record.item, currentIndex);\n      }, function (record) {\n        return record.item.data;\n      }, function (change) {\n        if (change.operation === 1\n        /* INSERTED */\n        && change.context) {\n          _this12._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n        }\n      }); // Update the meta context of a row's context data (index, count, first, last, ...)\n\n\n      this._updateRowIndexContext(); // Update rows that did not get added/removed/moved but may have had their identity changed,\n      // e.g. if trackBy matched data on some property but the actual data reference changed.\n\n\n      changes.forEachIdentityChange(function (record) {\n        var rowView = viewContainer.get(record.currentIndex);\n        rowView.context.$implicit = record.item.data;\n      });\n\n      this._updateNoDataRow();\n\n      this.updateStickyColumnStyles();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n\n  }, {\n    key: \"addColumnDef\",\n    value: function addColumnDef(columnDef) {\n      this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n\n  }, {\n    key: \"removeColumnDef\",\n    value: function removeColumnDef(columnDef) {\n      this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n\n  }, {\n    key: \"addRowDef\",\n    value: function addRowDef(rowDef) {\n      this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n\n  }, {\n    key: \"removeRowDef\",\n    value: function removeRowDef(rowDef) {\n      this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n\n  }, {\n    key: \"addHeaderRowDef\",\n    value: function addHeaderRowDef(headerRowDef) {\n      this._customHeaderRowDefs.add(headerRowDef);\n\n      this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n\n  }, {\n    key: \"removeHeaderRowDef\",\n    value: function removeHeaderRowDef(headerRowDef) {\n      this._customHeaderRowDefs.delete(headerRowDef);\n\n      this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n\n  }, {\n    key: \"addFooterRowDef\",\n    value: function addFooterRowDef(footerRowDef) {\n      this._customFooterRowDefs.add(footerRowDef);\n\n      this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n\n  }, {\n    key: \"removeFooterRowDef\",\n    value: function removeFooterRowDef(footerRowDef) {\n      this._customFooterRowDefs.delete(footerRowDef);\n\n      this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n\n  }, {\n    key: \"setNoDataRow\",\n    value: function setNoDataRow(noDataRow) {\n      this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n\n  }, {\n    key: \"updateStickyHeaderRowStyles\",\n    value: function updateStickyHeaderRowStyles() {\n      var headerRows = this._getRenderedRows(this._headerRowOutlet);\n\n      var tableElement = this._elementRef.nativeElement; // Hide the thead element if there are no header rows. This is necessary to satisfy\n      // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n      // required child `row`.\n\n      var thead = tableElement.querySelector('thead');\n\n      if (thead) {\n        thead.style.display = headerRows.length ? '' : 'none';\n      }\n\n      var stickyStates = this._headerRowDefs.map(function (def) {\n        return def.sticky;\n      });\n\n      this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n\n      this._stickyStyler.stickRows(headerRows, stickyStates, 'top'); // Reset the dirty state of the sticky input change since it has been used.\n\n\n      this._headerRowDefs.forEach(function (def) {\n        return def.resetStickyChanged();\n      });\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n\n  }, {\n    key: \"updateStickyFooterRowStyles\",\n    value: function updateStickyFooterRowStyles() {\n      var footerRows = this._getRenderedRows(this._footerRowOutlet);\n\n      var tableElement = this._elementRef.nativeElement; // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n      // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n      // required child `row`.\n\n      var tfoot = tableElement.querySelector('tfoot');\n\n      if (tfoot) {\n        tfoot.style.display = footerRows.length ? '' : 'none';\n      }\n\n      var stickyStates = this._footerRowDefs.map(function (def) {\n        return def.sticky;\n      });\n\n      this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n\n      this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n\n      this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates); // Reset the dirty state of the sticky input change since it has been used.\n\n\n      this._footerRowDefs.forEach(function (def) {\n        return def.resetStickyChanged();\n      });\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n\n  }, {\n    key: \"updateStickyColumnStyles\",\n    value: function updateStickyColumnStyles() {\n      var _this13 = this;\n\n      var headerRows = this._getRenderedRows(this._headerRowOutlet);\n\n      var dataRows = this._getRenderedRows(this._rowOutlet);\n\n      var footerRows = this._getRenderedRows(this._footerRowOutlet); // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n      // In a table using a fixed layout, row content won't affect column width, so sticky styles\n      // don't need to be cleared unless either the sticky column config changes or one of the row\n      // defs change.\n\n\n      if (this._isNativeHtmlTable && !this._fixedLayout || this._stickyColumnStylesNeedReset) {\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([].concat(_toConsumableArray(headerRows), _toConsumableArray(dataRows), _toConsumableArray(footerRows)), ['left', 'right']);\n\n        this._stickyColumnStylesNeedReset = false;\n      } // Update the sticky styles for each header row depending on the def's sticky state\n\n\n      headerRows.forEach(function (headerRow, i) {\n        _this13._addStickyColumnStyles([headerRow], _this13._headerRowDefs[i]);\n      }); // Update the sticky styles for each data row depending on its def's sticky state\n\n      this._rowDefs.forEach(function (rowDef) {\n        // Collect all the rows rendered with this row definition.\n        var rows = [];\n\n        for (var i = 0; i < dataRows.length; i++) {\n          if (_this13._renderRows[i].rowDef === rowDef) {\n            rows.push(dataRows[i]);\n          }\n        }\n\n        _this13._addStickyColumnStyles(rows, rowDef);\n      }); // Update the sticky styles for each footer row depending on the def's sticky state\n\n\n      footerRows.forEach(function (footerRow, i) {\n        _this13._addStickyColumnStyles([footerRow], _this13._footerRowDefs[i]);\n      }); // Reset the dirty state of the sticky input change since it has been used.\n\n      Array.from(this._columnDefsByName.values()).forEach(function (def) {\n        return def.resetStickyChanged();\n      });\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n\n  }, {\n    key: \"_getAllRenderRows\",\n    value: function _getAllRenderRows() {\n      var renderRows = []; // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n      // new cache while unused ones can be picked up by garbage collection.\n\n      var prevCachedRenderRows = this._cachedRenderRowsMap;\n      this._cachedRenderRowsMap = new Map(); // For each data object, get the list of rows that should be rendered, represented by the\n      // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n\n      for (var i = 0; i < this._data.length; i++) {\n        var data = this._data[i];\n\n        var renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n\n        if (!this._cachedRenderRowsMap.has(data)) {\n          this._cachedRenderRowsMap.set(data, new WeakMap());\n        }\n\n        for (var j = 0; j < renderRowsForData.length; j++) {\n          var renderRow = renderRowsForData[j];\n\n          var cache = this._cachedRenderRowsMap.get(renderRow.data);\n\n          if (cache.has(renderRow.rowDef)) {\n            cache.get(renderRow.rowDef).push(renderRow);\n          } else {\n            cache.set(renderRow.rowDef, [renderRow]);\n          }\n\n          renderRows.push(renderRow);\n        }\n      }\n\n      return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n\n  }, {\n    key: \"_getRenderRowsForData\",\n    value: function _getRenderRowsForData(data, dataIndex, cache) {\n      var rowDefs = this._getRowDefs(data, dataIndex);\n\n      return rowDefs.map(function (rowDef) {\n        var cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n\n        if (cachedRenderRows.length) {\n          var dataRow = cachedRenderRows.shift();\n          dataRow.dataIndex = dataIndex;\n          return dataRow;\n        } else {\n          return {\n            data: data,\n            rowDef: rowDef,\n            dataIndex: dataIndex\n          };\n        }\n      });\n    }\n    /** Update the map containing the content's column definitions. */\n\n  }, {\n    key: \"_cacheColumnDefs\",\n    value: function _cacheColumnDefs() {\n      var _this14 = this;\n\n      this._columnDefsByName.clear();\n\n      var columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n      columnDefs.forEach(function (columnDef) {\n        if (_this14._columnDefsByName.has(columnDef.name) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw getTableDuplicateColumnNameError(columnDef.name);\n        }\n\n        _this14._columnDefsByName.set(columnDef.name, columnDef);\n      });\n    }\n    /** Update the list of all available row definitions that can be used. */\n\n  }, {\n    key: \"_cacheRowDefs\",\n    value: function _cacheRowDefs() {\n      this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n      this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n      this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs); // After all row definitions are determined, find the row definition to be considered default.\n\n      var defaultRowDefs = this._rowDefs.filter(function (def) {\n        return !def.when;\n      });\n\n      if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableMultipleDefaultRowDefsError();\n      }\n\n      this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n\n  }, {\n    key: \"_renderUpdatedColumns\",\n    value: function _renderUpdatedColumns() {\n      var columnsDiffReducer = function columnsDiffReducer(acc, def) {\n        return acc || !!def.getColumnsDiff();\n      }; // Force re-render data rows if the list of column definitions have changed.\n\n\n      var dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n\n      if (dataColumnsChanged) {\n        this._forceRenderDataRows();\n      } // Force re-render header/footer rows if the list of column definitions have changed.\n\n\n      var headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n\n      if (headerColumnsChanged) {\n        this._forceRenderHeaderRows();\n      }\n\n      var footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n\n      if (footerColumnsChanged) {\n        this._forceRenderFooterRows();\n      }\n\n      return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n\n  }, {\n    key: \"_switchDataSource\",\n    value: function _switchDataSource(dataSource) {\n      this._data = [];\n\n      if (isDataSource(this.dataSource)) {\n        this.dataSource.disconnect(this);\n      } // Stop listening for data from the previous data source.\n\n\n      if (this._renderChangeSubscription) {\n        this._renderChangeSubscription.unsubscribe();\n\n        this._renderChangeSubscription = null;\n      }\n\n      if (!dataSource) {\n        if (this._dataDiffer) {\n          this._dataDiffer.diff([]);\n        }\n\n        this._rowOutlet.viewContainer.clear();\n      }\n\n      this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n\n  }, {\n    key: \"_observeRenderChanges\",\n    value: function _observeRenderChanges() {\n      var _this15 = this;\n\n      // If no data source has been set, there is nothing to observe for changes.\n      if (!this.dataSource) {\n        return;\n      }\n\n      var dataStream;\n\n      if (isDataSource(this.dataSource)) {\n        dataStream = this.dataSource.connect(this);\n      } else if (isObservable(this.dataSource)) {\n        dataStream = this.dataSource;\n      } else if (Array.isArray(this.dataSource)) {\n        dataStream = of(this.dataSource);\n      }\n\n      if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableUnknownDataSourceError();\n      }\n\n      this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe(function (data) {\n        _this15._data = data || [];\n\n        _this15.renderRows();\n      });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n\n  }, {\n    key: \"_forceRenderHeaderRows\",\n    value: function _forceRenderHeaderRows() {\n      var _this16 = this;\n\n      // Clear the header row outlet if any content exists.\n      if (this._headerRowOutlet.viewContainer.length > 0) {\n        this._headerRowOutlet.viewContainer.clear();\n      }\n\n      this._headerRowDefs.forEach(function (def, i) {\n        return _this16._renderRow(_this16._headerRowOutlet, def, i);\n      });\n\n      this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n\n  }, {\n    key: \"_forceRenderFooterRows\",\n    value: function _forceRenderFooterRows() {\n      var _this17 = this;\n\n      // Clear the footer row outlet if any content exists.\n      if (this._footerRowOutlet.viewContainer.length > 0) {\n        this._footerRowOutlet.viewContainer.clear();\n      }\n\n      this._footerRowDefs.forEach(function (def, i) {\n        return _this17._renderRow(_this17._footerRowOutlet, def, i);\n      });\n\n      this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n\n  }, {\n    key: \"_addStickyColumnStyles\",\n    value: function _addStickyColumnStyles(rows, rowDef) {\n      var _this18 = this;\n\n      var columnDefs = Array.from(rowDef.columns || []).map(function (columnName) {\n        var columnDef = _this18._columnDefsByName.get(columnName);\n\n        if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw getTableUnknownColumnError(columnName);\n        }\n\n        return columnDef;\n      });\n      var stickyStartStates = columnDefs.map(function (columnDef) {\n        return columnDef.sticky;\n      });\n      var stickyEndStates = columnDefs.map(function (columnDef) {\n        return columnDef.stickyEnd;\n      });\n\n      this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n\n  }, {\n    key: \"_getRenderedRows\",\n    value: function _getRenderedRows(rowOutlet) {\n      var renderedRows = [];\n\n      for (var i = 0; i < rowOutlet.viewContainer.length; i++) {\n        var viewRef = rowOutlet.viewContainer.get(i);\n        renderedRows.push(viewRef.rootNodes[0]);\n      }\n\n      return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n\n  }, {\n    key: \"_getRowDefs\",\n    value: function _getRowDefs(data, dataIndex) {\n      if (this._rowDefs.length == 1) {\n        return [this._rowDefs[0]];\n      }\n\n      var rowDefs = [];\n\n      if (this.multiTemplateDataRows) {\n        rowDefs = this._rowDefs.filter(function (def) {\n          return !def.when || def.when(dataIndex, data);\n        });\n      } else {\n        var rowDef = this._rowDefs.find(function (def) {\n          return def.when && def.when(dataIndex, data);\n        }) || this._defaultRowDef;\n\n        if (rowDef) {\n          rowDefs.push(rowDef);\n        }\n      }\n\n      if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableMissingMatchingRowDefError(data);\n      }\n\n      return rowDefs;\n    }\n  }, {\n    key: \"_getEmbeddedViewArgs\",\n    value: function _getEmbeddedViewArgs(renderRow, index) {\n      var rowDef = renderRow.rowDef;\n      var context = {\n        $implicit: renderRow.data\n      };\n      return {\n        templateRef: rowDef.template,\n        context: context,\n        index: index\n      };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n\n  }, {\n    key: \"_renderRow\",\n    value: function _renderRow(outlet, rowDef, index) {\n      var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n      var view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n\n      this._renderCellTemplateForItem(rowDef, context);\n\n      return view;\n    }\n  }, {\n    key: \"_renderCellTemplateForItem\",\n    value: function _renderCellTemplateForItem(rowDef, context) {\n      var _iterator8 = _createForOfIteratorHelper(this._getCellTemplates(rowDef)),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var cellTemplate = _step8.value;\n\n          if (CdkCellOutlet.mostRecentCellOutlet) {\n            CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n\n  }, {\n    key: \"_updateRowIndexContext\",\n    value: function _updateRowIndexContext() {\n      var viewContainer = this._rowOutlet.viewContainer;\n\n      for (var renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n        var viewRef = viewContainer.get(renderIndex);\n        var context = viewRef.context;\n        context.count = count;\n        context.first = renderIndex === 0;\n        context.last = renderIndex === count - 1;\n        context.even = renderIndex % 2 === 0;\n        context.odd = !context.even;\n\n        if (this.multiTemplateDataRows) {\n          context.dataIndex = this._renderRows[renderIndex].dataIndex;\n          context.renderIndex = renderIndex;\n        } else {\n          context.index = this._renderRows[renderIndex].dataIndex;\n        }\n      }\n    }\n    /** Gets the column definitions for the provided row def. */\n\n  }, {\n    key: \"_getCellTemplates\",\n    value: function _getCellTemplates(rowDef) {\n      var _this19 = this;\n\n      if (!rowDef || !rowDef.columns) {\n        return [];\n      }\n\n      return Array.from(rowDef.columns, function (columnId) {\n        var column = _this19._columnDefsByName.get(columnId);\n\n        if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw getTableUnknownColumnError(columnId);\n        }\n\n        return rowDef.extractCellTemplate(column);\n      });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n\n  }, {\n    key: \"_applyNativeTableSections\",\n    value: function _applyNativeTableSections() {\n      var documentFragment = this._document.createDocumentFragment();\n\n      var sections = [{\n        tag: 'thead',\n        outlets: [this._headerRowOutlet]\n      }, {\n        tag: 'tbody',\n        outlets: [this._rowOutlet, this._noDataRowOutlet]\n      }, {\n        tag: 'tfoot',\n        outlets: [this._footerRowOutlet]\n      }];\n\n      for (var _i4 = 0, _sections = sections; _i4 < _sections.length; _i4++) {\n        var section = _sections[_i4];\n\n        var element = this._document.createElement(section.tag);\n\n        element.setAttribute('role', 'rowgroup');\n\n        var _iterator9 = _createForOfIteratorHelper(section.outlets),\n            _step9;\n\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var outlet = _step9.value;\n            element.appendChild(outlet.elementRef.nativeElement);\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n\n        documentFragment.appendChild(element);\n      } // Use a DocumentFragment so we don't hit the DOM on each iteration.\n\n\n      this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n\n  }, {\n    key: \"_forceRenderDataRows\",\n    value: function _forceRenderDataRows() {\n      this._dataDiffer.diff([]);\n\n      this._rowOutlet.viewContainer.clear();\n\n      this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n\n  }, {\n    key: \"_checkStickyStates\",\n    value: function _checkStickyStates() {\n      var stickyCheckReducer = function stickyCheckReducer(acc, d) {\n        return acc || d.hasStickyChanged();\n      }; // Note that the check needs to occur for every definition since it notifies the definition\n      // that it can reset its dirty state. Using another operator like `some` may short-circuit\n      // remaining definitions and leave them in an unchecked state.\n\n\n      if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n        this.updateStickyHeaderRowStyles();\n      }\n\n      if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n        this.updateStickyFooterRowStyles();\n      }\n\n      if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n        this._stickyColumnStylesNeedReset = true;\n        this.updateStickyColumnStyles();\n      }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n\n  }, {\n    key: \"_setupStickyStyler\",\n    value: function _setupStickyStyler() {\n      var _this20 = this;\n\n      var direction = this._dir ? this._dir.value : 'ltr';\n      this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n      (this._dir ? this._dir.change : of()).pipe(takeUntil(this._onDestroy)).subscribe(function (value) {\n        _this20._stickyStyler.direction = value;\n\n        _this20.updateStickyColumnStyles();\n      });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n\n  }, {\n    key: \"_getOwnDefs\",\n    value: function _getOwnDefs(items) {\n      var _this21 = this;\n\n      return items.filter(function (item) {\n        return !item._table || item._table === _this21;\n      });\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n\n  }, {\n    key: \"_updateNoDataRow\",\n    value: function _updateNoDataRow() {\n      var noDataRow = this._customNoDataRow || this._noDataRow;\n\n      if (noDataRow) {\n        var shouldShow = this._rowOutlet.viewContainer.length === 0;\n\n        if (shouldShow !== this._isShowingNoDataRow) {\n          var container = this._noDataRowOutlet.viewContainer;\n          shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\n          this._isShowingNoDataRow = shouldShow;\n        }\n      }\n    }\n  }]);\n\n  return CdkTable;\n}();\n\nCdkTable.ɵfac = function CdkTable_Factory(t) {\n  return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), ɵngcc0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(STICKY_POSITIONING_LISTENER, 12));\n};\n\nCdkTable.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CdkTable,\n  selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]],\n  contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    }\n  },\n  viewQuery: function CdkTable_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(DataRowOutlet, 7);\n      ɵngcc0.ɵɵviewQuery(HeaderRowOutlet, 7);\n      ɵngcc0.ɵɵviewQuery(FooterRowOutlet, 7);\n      ɵngcc0.ɵɵviewQuery(NoDataRowOutlet, 7);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRowOutlet = _t.first);\n    }\n  },\n  hostAttrs: [1, \"cdk-table\"],\n  hostVars: 2,\n  hostBindings: function CdkTable_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\n    }\n  },\n  inputs: {\n    trackBy: \"trackBy\",\n    dataSource: \"dataSource\",\n    multiTemplateDataRows: \"multiTemplateDataRows\",\n    fixedLayout: \"fixedLayout\"\n  },\n  exportAs: [\"cdkTable\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CDK_TABLE,\n    useExisting: CdkTable\n  }, {\n    provide: _VIEW_REPEATER_STRATEGY,\n    useClass: _DisposeViewRepeaterStrategy\n  }, {\n    provide: _COALESCED_STYLE_SCHEDULER,\n    useClass: _CoalescedStyleScheduler\n  }, // Prevent nested tables from seeing this table's StickyPositioningListener.\n  {\n    provide: STICKY_POSITIONING_LISTENER,\n    useValue: null\n  }])],\n  ngContentSelectors: _c1,\n  decls: 6,\n  vars: 0,\n  consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]],\n  template: function CdkTable_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵprojection(1, 1);\n      ɵngcc0.ɵɵelementContainer(2, 0)(3, 1)(4, 2)(5, 3);\n    }\n  },\n  dependencies: [DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, NoDataRowOutlet],\n  styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"],\n  encapsulation: 2\n});\n\nCdkTable.ctorParameters = function () {\n  return [{\n    type: IterableDiffers\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['role']\n    }]\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [_VIEW_REPEATER_STRATEGY]\n    }]\n  }, {\n    type: _CoalescedStyleScheduler,\n    decorators: [{\n      type: Inject,\n      args: [_COALESCED_STYLE_SCHEDULER]\n    }]\n  }, {\n    type: ViewportRuler\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }, {\n      type: Inject,\n      args: [STICKY_POSITIONING_LISTENER]\n    }]\n  }];\n};\n\nCdkTable.propDecorators = {\n  trackBy: [{\n    type: Input\n  }],\n  dataSource: [{\n    type: Input\n  }],\n  multiTemplateDataRows: [{\n    type: Input\n  }],\n  fixedLayout: [{\n    type: Input\n  }],\n  _rowOutlet: [{\n    type: ViewChild,\n    args: [DataRowOutlet, {\n      static: true\n    }]\n  }],\n  _headerRowOutlet: [{\n    type: ViewChild,\n    args: [HeaderRowOutlet, {\n      static: true\n    }]\n  }],\n  _footerRowOutlet: [{\n    type: ViewChild,\n    args: [FooterRowOutlet, {\n      static: true\n    }]\n  }],\n  _noDataRowOutlet: [{\n    type: ViewChild,\n    args: [NoDataRowOutlet, {\n      static: true\n    }]\n  }],\n  _contentColumnDefs: [{\n    type: ContentChildren,\n    args: [CdkColumnDef, {\n      descendants: true\n    }]\n  }],\n  _contentRowDefs: [{\n    type: ContentChildren,\n    args: [CdkRowDef, {\n      descendants: true\n    }]\n  }],\n  _contentHeaderRowDefs: [{\n    type: ContentChildren,\n    args: [CdkHeaderRowDef, {\n      descendants: true\n    }]\n  }],\n  _contentFooterRowDefs: [{\n    type: ContentChildren,\n    args: [CdkFooterRowDef, {\n      descendants: true\n    }]\n  }],\n  _noDataRow: [{\n    type: ContentChild,\n    args: [CdkNoDataRow]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-table, table[cdk-table]',\n      exportAs: 'cdkTable',\n      template: CDK_TABLE_TEMPLATE,\n      host: {\n        'class': 'cdk-table',\n        '[class.cdk-table-fixed-layout]': 'fixedLayout'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      providers: [{\n        provide: CDK_TABLE,\n        useExisting: CdkTable\n      }, {\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _DisposeViewRepeaterStrategy\n      }, {\n        provide: _COALESCED_STYLE_SCHEDULER,\n        useClass: _CoalescedStyleScheduler\n      }, // Prevent nested tables from seeing this table's StickyPositioningListener.\n      {\n        provide: STICKY_POSITIONING_LISTENER,\n        useValue: null\n      }],\n      styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.IterableDiffers\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc2.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [_VIEW_REPEATER_STRATEGY]\n      }]\n    }, {\n      type: _CoalescedStyleScheduler,\n      decorators: [{\n        type: Inject,\n        args: [_COALESCED_STYLE_SCHEDULER]\n      }]\n    }, {\n      type: ɵngcc3.ViewportRuler\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [STICKY_POSITIONING_LISTENER]\n      }]\n    }];\n  }, {\n    trackBy: [{\n      type: Input\n    }],\n    dataSource: [{\n      type: Input\n    }],\n    multiTemplateDataRows: [{\n      type: Input\n    }],\n    fixedLayout: [{\n      type: Input\n    }],\n    _rowOutlet: [{\n      type: ViewChild,\n      args: [DataRowOutlet, {\n        static: true\n      }]\n    }],\n    _headerRowOutlet: [{\n      type: ViewChild,\n      args: [HeaderRowOutlet, {\n        static: true\n      }]\n    }],\n    _footerRowOutlet: [{\n      type: ViewChild,\n      args: [FooterRowOutlet, {\n        static: true\n      }]\n    }],\n    _noDataRowOutlet: [{\n      type: ViewChild,\n      args: [NoDataRowOutlet, {\n        static: true\n      }]\n    }],\n    _contentColumnDefs: [{\n      type: ContentChildren,\n      args: [CdkColumnDef, {\n        descendants: true\n      }]\n    }],\n    _contentRowDefs: [{\n      type: ContentChildren,\n      args: [CdkRowDef, {\n        descendants: true\n      }]\n    }],\n    _contentHeaderRowDefs: [{\n      type: ContentChildren,\n      args: [CdkHeaderRowDef, {\n        descendants: true\n      }]\n    }],\n    _contentFooterRowDefs: [{\n      type: ContentChildren,\n      args: [CdkFooterRowDef, {\n        descendants: true\n      }]\n    }],\n    _noDataRow: [{\n      type: ContentChild,\n      args: [CdkNoDataRow]\n    }]\n  });\n})();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\n\n\nfunction mergeArrayAndSet(array, set) {\n  return array.concat(Array.from(set));\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\n\n\nvar CdkTextColumn = /*#__PURE__*/function () {\n  function CdkTextColumn( // `CdkTextColumn` is always requiring a table, but we just assert it manually\n  // for better error reporting.\n  // tslint:disable-next-line: lightweight-tokens\n  _table, _options) {\n    _classCallCheck(this, CdkTextColumn);\n\n    this._table = _table;\n    this._options = _options;\n    /** Alignment of the cell values. */\n\n    this.justify = 'start';\n    this._options = _options || {};\n  }\n  /** Column name that should be used to reference this column. */\n\n\n  _createClass(CdkTextColumn, [{\n    key: \"name\",\n    get: function get() {\n      return this._name;\n    },\n    set: function set(name) {\n      this._name = name; // With Ivy, inputs can be initialized before static query results are\n      // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n\n      this._syncColumnDefName();\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._syncColumnDefName();\n\n      if (this.headerText === undefined) {\n        this.headerText = this._createDefaultHeaderText();\n      }\n\n      if (!this.dataAccessor) {\n        this.dataAccessor = this._options.defaultDataAccessor || function (data, name) {\n          return data[name];\n        };\n      }\n\n      if (this._table) {\n        // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n        // since the columnDef will not pick up its content by the time the table finishes checking\n        // its content and initializing the rows.\n        this.columnDef.cell = this.cell;\n        this.columnDef.headerCell = this.headerCell;\n\n        this._table.addColumnDef(this.columnDef);\n      } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        throw getTableTextColumnMissingParentTableError();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this._table) {\n        this._table.removeColumnDef(this.columnDef);\n      }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n\n  }, {\n    key: \"_createDefaultHeaderText\",\n    value: function _createDefaultHeaderText() {\n      var name = this.name;\n\n      if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableTextColumnMissingNameError();\n      }\n\n      if (this._options && this._options.defaultHeaderTextTransform) {\n        return this._options.defaultHeaderTextTransform(name);\n      }\n\n      return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n\n  }, {\n    key: \"_syncColumnDefName\",\n    value: function _syncColumnDefName() {\n      if (this.columnDef) {\n        this.columnDef.name = this.name;\n      }\n    }\n  }]);\n\n  return CdkTextColumn;\n}();\n\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) {\n  return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8));\n};\n\nCdkTextColumn.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: CdkTextColumn,\n  selectors: [[\"cdk-text-column\"]],\n  viewQuery: function CdkTextColumn_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(CdkColumnDef, 7);\n      ɵngcc0.ɵɵviewQuery(CdkCellDef, 7);\n      ɵngcc0.ɵɵviewQuery(CdkHeaderCellDef, 7);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    }\n  },\n  inputs: {\n    justify: \"justify\",\n    name: \"name\",\n    headerText: \"headerText\",\n    dataAccessor: \"dataAccessor\"\n  },\n  decls: 3,\n  vars: 0,\n  consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]],\n  template: function CdkTextColumn_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n      ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n      ɵngcc0.ɵɵelementContainerEnd();\n    }\n  },\n  dependencies: [CdkCellDef, CdkHeaderCellDef, CdkColumnDef, CdkCell, CdkHeaderCell],\n  encapsulation: 2\n});\n\nCdkTextColumn.ctorParameters = function () {\n  return [{\n    type: CdkTable,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [TEXT_COLUMN_OPTIONS]\n    }]\n  }];\n};\n\nCdkTextColumn.propDecorators = {\n  name: [{\n    type: Input\n  }],\n  headerText: [{\n    type: Input\n  }],\n  dataAccessor: [{\n    type: Input\n  }],\n  justify: [{\n    type: Input\n  }],\n  columnDef: [{\n    type: ViewChild,\n    args: [CdkColumnDef, {\n      static: true\n    }]\n  }],\n  cell: [{\n    type: ViewChild,\n    args: [CdkCellDef, {\n      static: true\n    }]\n  }],\n  headerCell: [{\n    type: ViewChild,\n    args: [CdkHeaderCellDef, {\n      static: true\n    }]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-text-column',\n      template: \"\\n    <ng-container cdkColumnDef>\\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\\\"justify\\\">\\n        {{headerText}}\\n      </th>\\n      <td cdk-cell *cdkCellDef=\\\"let data\\\" [style.text-align]=\\\"justify\\\">\\n        {{dataAccessor(data, name)}}\\n      </td>\\n    </ng-container>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      // Change detection is intentionally not set to OnPush. This component's template will be provided\n      // to the table to be inserted into its view. This is problematic when change detection runs since\n      // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n      // mean's the template in the table's view will not have the updated value (and in fact will cause\n      // an ExpressionChangedAfterItHasBeenCheckedError).\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default\n    }]\n  }], function () {\n    return [{\n      type: CdkTable,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TEXT_COLUMN_OPTIONS]\n      }]\n    }];\n  }, {\n    justify: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    headerText: [{\n      type: Input\n    }],\n    dataAccessor: [{\n      type: Input\n    }],\n    columnDef: [{\n      type: ViewChild,\n      args: [CdkColumnDef, {\n        static: true\n      }]\n    }],\n    cell: [{\n      type: ViewChild,\n      args: [CdkCellDef, {\n        static: true\n      }]\n    }],\n    headerCell: [{\n      type: ViewChild,\n      args: [CdkHeaderCellDef, {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar EXPORTED_DECLARATIONS = [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet];\n\nvar CdkTableModule = /*#__PURE__*/_createClass(function CdkTableModule() {\n  _classCallCheck(this, CdkTableModule);\n});\n\nCdkTableModule.ɵfac = function CdkTableModule_Factory(t) {\n  return new (t || CdkTableModule)();\n};\n\nCdkTableModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: CdkTableModule\n});\nCdkTableModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [ScrollingModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n    type: NgModule,\n    args: [{\n      exports: EXPORTED_DECLARATIONS,\n      declarations: EXPORTED_DECLARATIONS,\n      imports: [ScrollingModule]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, {\n    declarations: function declarations() {\n      return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet];\n    },\n    imports: function imports() {\n      return [ScrollingModule];\n    },\n    exports: function exports() {\n      return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };","map":{"version":3,"names":["Directionality","coerceBooleanProperty","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","isDataSource","_DisposeViewRepeaterStrategy","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵstyleProp","justify","ɵɵadvance","ɵɵtextInterpolate1","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","DataSource","Platform","ViewportRuler","ScrollingModule","DOCUMENT","InjectionToken","Directive","TemplateRef","Inject","Optional","Input","ContentChild","ElementRef","Injectable","NgZone","IterableDiffers","ViewContainerRef","Component","ChangeDetectionStrategy","ViewEncapsulation","EmbeddedViewRef","ChangeDetectorRef","Attribute","SkipSelf","ViewChild","ContentChildren","NgModule","Subject","from","BehaviorSubject","isObservable","of","takeUntil","take","mixinHasStickyInput","base","args","_sticky","_hasStickyChanged","v","prevValue","hasStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","template","ɵfac","CdkCellDef_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","ctorParameters","ngDevMode","ɵsetClassMetadata","selector","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","_setNameInput","_columnCssClassName","cssClassFriendlyName","value","replace","_updateColumnCssClassName","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","cell","first","headerCell","footerCell","inputs","sticky","stickyEnd","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","undefined","decorators","propDecorators","providers","BaseCdkCell","columnDef","elementRef","classList","nativeElement","className","add","CdkHeaderCell","CdkHeaderCell_Factory","hostAttrs","host","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","task","_createScheduleIfNeeded","push","next","complete","_getScheduleObservable","pipe","subscribe","length","schedule","isStable","Promise","resolve","onStable","_CoalescedStyleScheduler_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","changes","_columnsDiffer","columns","currentValue","find","create","diff","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","ɵɵNgOnChangesFeature","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","ɵɵdefineComponent","decls","vars","consts","CdkHeaderRow_Template","ɵɵelementContainer","dependencies","encapsulation","changeDetection","Default","None","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","CdkNoDataRow","templateRef","CdkNoDataRow_Factory","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","rows","stickyDirections","elementsToClear","row","nodeType","ELEMENT_NODE","i","children","element","_removeStickyStyle","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","map","width","index","reverse","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","Array","height","getBoundingClientRect","borderedRowIndex","_a","_b","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","elements","stickyFooterRowsUpdated","tableElement","tfoot","querySelector","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","CdkRecycleRows","CdkRecycleRows_Factory","useClass","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","NoDataRowOutlet","NoDataRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_viewRepeater","_viewportRuler","_stickyPositioningListener","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","viewChange","Number","MAX_VALUE","setAttribute","nodeName","_trackByFn","fn","console","warn","_dataSource","dataSource","_switchDataSource","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","change","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","clear","_noDataRowOutlet","_headerRowOutlet","_footerRowOutlet","disconnect","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","forEachIdentityChange","rowView","get","delete","headerRowDef","footerRowDef","noDataRow","_customNoDataRow","headerRows","_getRenderedRows","thead","display","def","_stickyStyler","clearStickyPositioning","stickRows","forEach","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","renderRows","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","unsubscribe","dataStream","connect","isArray","_renderRow","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnName","updateStickyColumns","rowOutlet","renderedRows","viewRef","rootNodes","outlet","view","createEmbeddedView","_getCellTemplates","cellTemplate","markForCheck","renderIndex","count","last","even","odd","columnId","extractCellTemplate","documentFragment","createDocumentFragment","sections","tag","outlets","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","CdkTable_Factory","ɵɵinjectAttribute","CdkTable_ContentQueries","viewQuery","CdkTable_Query","ɵɵviewQuery","hostVars","hostBindings","CdkTable_HostBindings","ɵɵclassProp","fixedLayout","exportAs","useValue","ngContentSelectors","CdkTable_Template","ɵɵprojectionDef","ɵɵprojection","styles","String","static","descendants","array","concat","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","toUpperCase","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Users/disic/Programming/Playwrite/automation_course/git_repo/pw-practice-app/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js"],"sourcesContent":["import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/scrolling';\n\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, Injectable, NgZone, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, ChangeDetectorRef, Attribute, SkipSelf, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() { return this._sticky; }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() { return this._name; }\n    set name(name) { this._setNameInput(name); }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n        // with destructuring.\n        const classList = elementRef.nativeElement.classList;\n        for (const className of columnDef._columnCssClassName) {\n            classList.add(className);\n        }\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable ?\n            from(Promise.resolve(undefined)) :\n            this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) { return new (t || _CoalescedStyleScheduler)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n_CoalescedStyleScheduler.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: _CoalescedStyleScheduler, factory: _CoalescedStyleScheduler.ɵfac });\n_CoalescedStyleScheduler.ctorParameters = () => [\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nBaseRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nBaseRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, dependencies: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, dependencies: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, dependencies: [CdkCellOutlet], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) { return new (t || CdkNoDataRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkNoDataRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkNoDataRow, selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]] });\nCdkNoDataRow.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkNoDataRow, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkNoDataRow]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) ||\n            stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => stickyStartStates[index] ? width : null)\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null)\n                            .reverse()\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            stickyOffsets[rowIndex] = stickyOffset;\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable ?\n                Array.from(row.children) : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            var _a, _b;\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({ sizes: stickyCellHeights, offsets: stickyOffsets, elements: elementsToStick });\n            }\n            else {\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({ sizes: stickyCellHeights, offsets: stickyOffsets, elements: elementsToStick });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n}\nCdkRecycleRows.ɵfac = function CdkRecycleRows_Factory(t) { return new (t || CdkRecycleRows)(); };\nCdkRecycleRows.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkRecycleRows, selectors: [[\"cdk-table\", \"recycleRows\", \"\"], [\"table\", \"cdk-table\", \"\", \"recycleRows\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n        ])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRecycleRows, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                providers: [\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) { return new (t || NoDataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNoDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NoDataRowOutlet, selectors: [[\"\", \"noDataRowOutlet\", \"\"]] });\nNoDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NoDataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[noDataRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._noDataRowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), (record) => record.item.data, (change) => {\n            if (change.operation === 1 /* INSERTED */ && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        this.updateStickyColumnStyles();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout)\n            || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (noDataRow) {\n            const shouldShow = this._rowOutlet.viewContainer.length === 0;\n            if (shouldShow !== this._isShowingNoDataRow) {\n                const container = this._noDataRowOutlet.viewContainer;\n                shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\n                this._isShowingNoDataRow = shouldShow;\n            }\n        }\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), ɵngcc0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(STICKY_POSITIONING_LISTENER, 12)); };\nCdkTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(DataRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(HeaderRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(FooterRowOutlet, 7);\n        ɵngcc0.ɵɵviewQuery(NoDataRowOutlet, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], hostVars: 2, hostBindings: function CdkTable_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\n    } }, inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CDK_TABLE, useExisting: CdkTable },\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ])], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 0)(3, 1)(4, 2)(5, 3);\n    } }, dependencies: [DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, NoDataRowOutlet], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\n    { type: _CoalescedStyleScheduler, decorators: [{ type: Inject, args: [_COALESCED_STYLE_SCHEDULER,] }] },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [STICKY_POSITIONING_LISTENER,] }] }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    fixedLayout: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _noDataRowOutlet: [{ type: ViewChild, args: [NoDataRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }],\n    _noDataRow: [{ type: ContentChild, args: [CdkNoDataRow,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                    'class': 'cdk-table',\n                    '[class.cdk-table-fixed-layout]': 'fixedLayout'\n                }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                    { provide: CDK_TABLE, useExisting: CdkTable },\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                    // Prevent nested tables from seeing this table's StickyPositioningListener.\n                    { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                ], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"] }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_VIEW_REPEATER_STRATEGY]\n            }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                type: Inject,\n                args: [_COALESCED_STYLE_SCHEDULER]\n            }] }, { type: ɵngcc3.ViewportRuler }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [STICKY_POSITIONING_LISTENER]\n            }] }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], fixedLayout: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _noDataRowOutlet: [{\n            type: ViewChild,\n            args: [NoDataRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }], _noDataRow: [{\n            type: ContentChild,\n            args: [CdkNoDataRow]\n        }] }); })();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkColumnDef, 7);\n        ɵngcc0.ɵɵviewQuery(CdkCellDef, 7);\n        ɵngcc0.ɵɵviewQuery(CdkHeaderCellDef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, dependencies: [CdkCellDef, CdkHeaderCellDef, CdkColumnDef, CdkCell, CdkHeaderCell], encapsulation: 2 });\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵfac = function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); };\nCdkTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [ScrollingModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS,\n                imports: [ScrollingModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet]; }, imports: function () { return [ScrollingModule]; }, exports: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}